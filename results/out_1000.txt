# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.125)

# Run progress: 0.00% complete, ETA 00:00:05
# Fork: 1 of 2
# Warmup Iteration   1: 3042.455 us/op
# Warmup Iteration   2: 2486.847 us/op
# Warmup Iteration   3: 2004.512 us/op
# Warmup Iteration   4: 1925.772 us/op
# Warmup Iteration   5: 1736.214 us/op
Iteration   1: 234.353 us/op
Iteration   2: 194.528 us/op
Iteration   3: 126.135 us/op
Iteration   4: 185.905 us/op
Iteration   5: 196.218 us/op

# Run progress: 0.19% complete, ETA 00:46:18
# Fork: 2 of 2
# Warmup Iteration   1: 3087.772 us/op
# Warmup Iteration   2: 2433.079 us/op
# Warmup Iteration   3: 1927.758 us/op
# Warmup Iteration   4: 2023.194 us/op
# Warmup Iteration   5: 1771.020 us/op
Iteration   1: 296.063 us/op
Iteration   2: 175.196 us/op
Iteration   3: 127.835 us/op
Iteration   4: 143.433 us/op
Iteration   5: 128.292 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    180.796 ±(99.9%) 82.168 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 0 
    [125.000, 137.500) = 3 
    [137.500, 150.000) = 1 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 0 
    [175.000, 187.500) = 2 
    [187.500, 200.000) = 2 
    [200.000, 212.500) = 0 
    [212.500, 225.000) = 0 
    [225.000, 237.500) = 1 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    126.135 us/op
     p(50.0000) =    180.551 us/op
     p(90.0000) =    289.892 us/op
     p(95.0000) =    296.063 us/op
     p(99.0000) =    296.063 us/op
     p(99.9000) =    296.063 us/op
     p(99.9900) =    296.063 us/op
     p(99.9990) =    296.063 us/op
     p(99.9999) =    296.063 us/op
    p(100.0000) =    296.063 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.250)

# Run progress: 0.38% complete, ETA 00:46:12
# Fork: 1 of 2
# Warmup Iteration   1: 2809.138 us/op
# Warmup Iteration   2: 1983.201 us/op
# Warmup Iteration   3: 1767.636 us/op
# Warmup Iteration   4: 1584.010 us/op
# Warmup Iteration   5: 1603.702 us/op
Iteration   1: 138.853 us/op
Iteration   2: 217.336 us/op
Iteration   3: 228.479 us/op
Iteration   4: 204.400 us/op
Iteration   5: 217.291 us/op

# Run progress: 0.57% complete, ETA 00:46:10
# Fork: 2 of 2
# Warmup Iteration   1: 2898.649 us/op
# Warmup Iteration   2: 1974.742 us/op
# Warmup Iteration   3: 1615.957 us/op
# Warmup Iteration   4: 1564.097 us/op
# Warmup Iteration   5: 1691.831 us/op
Iteration   1: 204.109 us/op
Iteration   2: 214.202 us/op
Iteration   3: 145.413 us/op
Iteration   4: 226.401 us/op
Iteration   5: 158.126 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    195.461 ±(99.9%) 51.914 us/op

  Histogram, us/op:
    [130.000, 140.000) = 1 
    [140.000, 150.000) = 1 
    [150.000, 160.000) = 1 
    [160.000, 170.000) = 0 
    [170.000, 180.000) = 0 
    [180.000, 190.000) = 0 
    [190.000, 200.000) = 0 
    [200.000, 210.000) = 2 
    [210.000, 220.000) = 3 

  Percentiles, us/op:
      p(0.0000) =    138.853 us/op
     p(50.0000) =    209.301 us/op
     p(90.0000) =    228.271 us/op
     p(95.0000) =    228.479 us/op
     p(99.0000) =    228.479 us/op
     p(99.9000) =    228.479 us/op
     p(99.9900) =    228.479 us/op
     p(99.9990) =    228.479 us/op
     p(99.9999) =    228.479 us/op
    p(100.0000) =    228.479 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.375)

# Run progress: 0.76% complete, ETA 00:46:01
# Fork: 1 of 2
# Warmup Iteration   1: 3045.070 us/op
# Warmup Iteration   2: 1804.672 us/op
# Warmup Iteration   3: 1510.144 us/op
# Warmup Iteration   4: 1391.442 us/op
# Warmup Iteration   5: 1334.847 us/op
Iteration   1: 143.276 us/op
Iteration   2: 213.422 us/op
Iteration   3: 156.372 us/op
Iteration   4: 272.436 us/op
Iteration   5: 146.946 us/op

# Run progress: 0.95% complete, ETA 00:45:55
# Fork: 2 of 2
# Warmup Iteration   1: 3120.903 us/op
# Warmup Iteration   2: 1728.638 us/op
# Warmup Iteration   3: 1416.829 us/op
# Warmup Iteration   4: 1289.747 us/op
# Warmup Iteration   5: 1307.017 us/op
Iteration   1: 151.437 us/op
Iteration   2: 279.951 us/op
Iteration   3: 225.862 us/op
Iteration   4: 264.416 us/op
Iteration   5: 205.540 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    205.966 ±(99.9%) 82.202 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 0 
    [125.000, 137.500) = 0 
    [137.500, 150.000) = 2 
    [150.000, 162.500) = 2 
    [162.500, 175.000) = 0 
    [175.000, 187.500) = 0 
    [187.500, 200.000) = 0 
    [200.000, 212.500) = 1 
    [212.500, 225.000) = 1 
    [225.000, 237.500) = 1 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 2 
    [275.000, 287.500) = 1 

  Percentiles, us/op:
      p(0.0000) =    143.276 us/op
     p(50.0000) =    209.481 us/op
     p(90.0000) =    279.200 us/op
     p(95.0000) =    279.951 us/op
     p(99.0000) =    279.951 us/op
     p(99.9000) =    279.951 us/op
     p(99.9900) =    279.951 us/op
     p(99.9990) =    279.951 us/op
     p(99.9999) =    279.951 us/op
    p(100.0000) =    279.951 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.5)

# Run progress: 1.14% complete, ETA 00:45:49
# Fork: 1 of 2
# Warmup Iteration   1: 2630.952 us/op
# Warmup Iteration   2: 1895.244 us/op
# Warmup Iteration   3: 1563.459 us/op
# Warmup Iteration   4: 1478.535 us/op
# Warmup Iteration   5: 1476.391 us/op
Iteration   1: 113.724 us/op
Iteration   2: 161.874 us/op
Iteration   3: 220.666 us/op
Iteration   4: 206.477 us/op
Iteration   5: 152.013 us/op

# Run progress: 1.33% complete, ETA 00:45:43
# Fork: 2 of 2
# Warmup Iteration   1: 2803.076 us/op
# Warmup Iteration   2: 1825.576 us/op
# Warmup Iteration   3: 1550.087 us/op
# Warmup Iteration   4: 1458.823 us/op
# Warmup Iteration   5: 1342.295 us/op
Iteration   1: 162.282 us/op
Iteration   2: 159.107 us/op
Iteration   3: 295.067 us/op
Iteration   4: 163.243 us/op
Iteration   5: 184.037 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    181.849 ±(99.9%) 74.940 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 1 
    [125.000, 137.500) = 0 
    [137.500, 150.000) = 0 
    [150.000, 162.500) = 4 
    [162.500, 175.000) = 1 
    [175.000, 187.500) = 1 
    [187.500, 200.000) = 0 
    [200.000, 212.500) = 1 
    [212.500, 225.000) = 1 
    [225.000, 237.500) = 0 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    113.724 us/op
     p(50.0000) =    162.763 us/op
     p(90.0000) =    287.627 us/op
     p(95.0000) =    295.067 us/op
     p(99.0000) =    295.067 us/op
     p(99.9000) =    295.067 us/op
     p(99.9900) =    295.067 us/op
     p(99.9990) =    295.067 us/op
     p(99.9999) =    295.067 us/op
    p(100.0000) =    295.067 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.625)

# Run progress: 1.52% complete, ETA 00:45:37
# Fork: 1 of 2
# Warmup Iteration   1: 2396.369 us/op
# Warmup Iteration   2: 1574.261 us/op
# Warmup Iteration   3: 1489.860 us/op
# Warmup Iteration   4: 1210.630 us/op
# Warmup Iteration   5: 1246.413 us/op
Iteration   1: 224.513 us/op
Iteration   2: 198.083 us/op
Iteration   3: 161.036 us/op
Iteration   4: 191.061 us/op
Iteration   5: 331.459 us/op

# Run progress: 1.70% complete, ETA 00:45:32
# Fork: 2 of 2
# Warmup Iteration   1: 2399.374 us/op
# Warmup Iteration   2: 1512.854 us/op
# Warmup Iteration   3: 1468.218 us/op
# Warmup Iteration   4: 1314.893 us/op
# Warmup Iteration   5: 1170.041 us/op
Iteration   1: 139.119 us/op
Iteration   2: 138.189 us/op
Iteration   3: 179.294 us/op
Iteration   4: 149.174 us/op
Iteration   5: 192.548 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    190.448 ±(99.9%) 86.066 us/op

  Histogram, us/op:
    [100.000, 125.000) = 0 
    [125.000, 150.000) = 3 
    [150.000, 175.000) = 1 
    [175.000, 200.000) = 4 
    [200.000, 225.000) = 1 
    [225.000, 250.000) = 0 
    [250.000, 275.000) = 0 
    [275.000, 300.000) = 0 
    [300.000, 325.000) = 0 
    [325.000, 350.000) = 1 
    [350.000, 375.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    138.189 us/op
     p(50.0000) =    185.178 us/op
     p(90.0000) =    320.764 us/op
     p(95.0000) =    331.459 us/op
     p(99.0000) =    331.459 us/op
     p(99.9000) =    331.459 us/op
     p(99.9900) =    331.459 us/op
     p(99.9990) =    331.459 us/op
     p(99.9999) =    331.459 us/op
    p(100.0000) =    331.459 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.75)

# Run progress: 1.89% complete, ETA 00:45:26
# Fork: 1 of 2
# Warmup Iteration   1: 2543.114 us/op
# Warmup Iteration   2: 1615.262 us/op
# Warmup Iteration   3: 1529.515 us/op
# Warmup Iteration   4: 1378.948 us/op
# Warmup Iteration   5: 1206.844 us/op
Iteration   1: 128.054 us/op
Iteration   2: 235.327 us/op
Iteration   3: 203.280 us/op
Iteration   4: 164.161 us/op
Iteration   5: 192.850 us/op

# Run progress: 2.08% complete, ETA 00:45:20
# Fork: 2 of 2
# Warmup Iteration   1: 2559.033 us/op
# Warmup Iteration   2: 1669.260 us/op
# Warmup Iteration   3: 1534.323 us/op
# Warmup Iteration   4: 1292.131 us/op
# Warmup Iteration   5: 1215.129 us/op
Iteration   1: 168.719 us/op
Iteration   2: 145.840 us/op
Iteration   3: 200.493 us/op
Iteration   4: 153.841 us/op
Iteration   5: 150.166 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    174.273 ±(99.9%) 49.577 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 0 
    [125.000, 137.500) = 1 
    [137.500, 150.000) = 1 
    [150.000, 162.500) = 2 
    [162.500, 175.000) = 2 
    [175.000, 187.500) = 0 
    [187.500, 200.000) = 1 
    [200.000, 212.500) = 2 
    [212.500, 225.000) = 0 
    [225.000, 237.500) = 1 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    128.054 us/op
     p(50.0000) =    166.440 us/op
     p(90.0000) =    232.122 us/op
     p(95.0000) =    235.327 us/op
     p(99.0000) =    235.327 us/op
     p(99.9000) =    235.327 us/op
     p(99.9900) =    235.327 us/op
     p(99.9990) =    235.327 us/op
     p(99.9999) =    235.327 us/op
    p(100.0000) =    235.327 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.875)

# Run progress: 2.27% complete, ETA 00:45:15
# Fork: 1 of 2
# Warmup Iteration   1: 2890.247 us/op
# Warmup Iteration   2: 1664.354 us/op
# Warmup Iteration   3: 1573.965 us/op
# Warmup Iteration   4: 1283.320 us/op
# Warmup Iteration   5: 1301.475 us/op
Iteration   1: 137.265 us/op
Iteration   2: 257.504 us/op
Iteration   3: 181.110 us/op
Iteration   4: 230.543 us/op
Iteration   5: 202.759 us/op

# Run progress: 2.46% complete, ETA 00:45:10
# Fork: 2 of 2
# Warmup Iteration   1: 2659.427 us/op
# Warmup Iteration   2: 1633.316 us/op
# Warmup Iteration   3: 1611.636 us/op
# Warmup Iteration   4: 1349.643 us/op
# Warmup Iteration   5: 1346.676 us/op
Iteration   1: 138.029 us/op
Iteration   2: 195.297 us/op
Iteration   3: 163.920 us/op
Iteration   4: 151.120 us/op
Iteration   5: 150.053 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    180.760 ±(99.9%) 61.487 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 0 
    [125.000, 137.500) = 1 
    [137.500, 150.000) = 1 
    [150.000, 162.500) = 2 
    [162.500, 175.000) = 1 
    [175.000, 187.500) = 1 
    [187.500, 200.000) = 1 
    [200.000, 212.500) = 1 
    [212.500, 225.000) = 0 
    [225.000, 237.500) = 1 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 1 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    137.265 us/op
     p(50.0000) =    172.515 us/op
     p(90.0000) =    254.808 us/op
     p(95.0000) =    257.504 us/op
     p(99.0000) =    257.504 us/op
     p(99.9000) =    257.504 us/op
     p(99.9900) =    257.504 us/op
     p(99.9990) =    257.504 us/op
     p(99.9999) =    257.504 us/op
    p(100.0000) =    257.504 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 1)

# Run progress: 2.65% complete, ETA 00:45:04
# Fork: 1 of 2
# Warmup Iteration   1: 2723.937 us/op
# Warmup Iteration   2: 1665.377 us/op
# Warmup Iteration   3: 1489.157 us/op
# Warmup Iteration   4: 1308.098 us/op
# Warmup Iteration   5: 1350.060 us/op
Iteration   1: 124.303 us/op
Iteration   2: 136.758 us/op
Iteration   3: 164.402 us/op
Iteration   4: 143.985 us/op
Iteration   5: 131.194 us/op

# Run progress: 2.84% complete, ETA 00:44:59
# Fork: 2 of 2
# Warmup Iteration   1: 2615.524 us/op
# Warmup Iteration   2: 1850.939 us/op
# Warmup Iteration   3: 1549.682 us/op
# Warmup Iteration   4: 1350.740 us/op
# Warmup Iteration   5: 1291.298 us/op
Iteration   1: 128.990 us/op
Iteration   2: 177.669 us/op
Iteration   3: 195.041 us/op
Iteration   4: 139.178 us/op
Iteration   5: 225.202 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    156.672 ±(99.9%) 50.385 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 1 
    [125.000, 137.500) = 3 
    [137.500, 150.000) = 2 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 1 
    [175.000, 187.500) = 1 
    [187.500, 200.000) = 1 
    [200.000, 212.500) = 0 
    [212.500, 225.000) = 0 
    [225.000, 237.500) = 1 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    124.303 us/op
     p(50.0000) =    141.582 us/op
     p(90.0000) =    222.186 us/op
     p(95.0000) =    225.202 us/op
     p(99.0000) =    225.202 us/op
     p(99.9000) =    225.202 us/op
     p(99.9900) =    225.202 us/op
     p(99.9990) =    225.202 us/op
     p(99.9999) =    225.202 us/op
    p(100.0000) =    225.202 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.125)

# Run progress: 3.03% complete, ETA 00:44:53
# Fork: 1 of 2
# Warmup Iteration   1: 2969.248 us/op
# Warmup Iteration   2: 2465.686 us/op
# Warmup Iteration   3: 2199.053 us/op
# Warmup Iteration   4: 2007.356 us/op
# Warmup Iteration   5: 2005.024 us/op
Iteration   1: 156.405 us/op
Iteration   2: 217.651 us/op
Iteration   3: 204.087 us/op
Iteration   4: 213.420 us/op
Iteration   5: 230.153 us/op

# Run progress: 3.22% complete, ETA 00:44:48
# Fork: 2 of 2
# Warmup Iteration   1: 2956.700 us/op
# Warmup Iteration   2: 2453.287 us/op
# Warmup Iteration   3: 2112.480 us/op
# Warmup Iteration   4: 2082.586 us/op
# Warmup Iteration   5: 1921.784 us/op
Iteration   1: 152.478 us/op
Iteration   2: 210.114 us/op
Iteration   3: 188.683 us/op
Iteration   4: 219.302 us/op
Iteration   5: 173.313 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    196.561 ±(99.9%) 41.475 us/op

  Histogram, us/op:
    [150.000, 155.000) = 1 
    [155.000, 160.000) = 1 
    [160.000, 165.000) = 0 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 1 
    [175.000, 180.000) = 0 
    [180.000, 185.000) = 0 
    [185.000, 190.000) = 1 
    [190.000, 195.000) = 0 
    [195.000, 200.000) = 0 
    [200.000, 205.000) = 1 
    [205.000, 210.000) = 0 
    [210.000, 215.000) = 2 
    [215.000, 220.000) = 2 
    [220.000, 225.000) = 0 
    [225.000, 230.000) = 0 
    [230.000, 235.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    152.478 us/op
     p(50.0000) =    207.101 us/op
     p(90.0000) =    229.068 us/op
     p(95.0000) =    230.153 us/op
     p(99.0000) =    230.153 us/op
     p(99.9000) =    230.153 us/op
     p(99.9900) =    230.153 us/op
     p(99.9990) =    230.153 us/op
     p(99.9999) =    230.153 us/op
    p(100.0000) =    230.153 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.250)

# Run progress: 3.41% complete, ETA 00:44:42
# Fork: 1 of 2
# Warmup Iteration   1: 2916.290 us/op
# Warmup Iteration   2: 1914.304 us/op
# Warmup Iteration   3: 1633.329 us/op
# Warmup Iteration   4: 1503.465 us/op
# Warmup Iteration   5: 1550.004 us/op
Iteration   1: 244.798 us/op
Iteration   2: 184.738 us/op
Iteration   3: 143.675 us/op
Iteration   4: 225.917 us/op
Iteration   5: 161.174 us/op

# Run progress: 3.60% complete, ETA 00:44:37
# Fork: 2 of 2
# Warmup Iteration   1: 2748.490 us/op
# Warmup Iteration   2: 1941.585 us/op
# Warmup Iteration   3: 1865.660 us/op
# Warmup Iteration   4: 1517.140 us/op
# Warmup Iteration   5: 1545.029 us/op
Iteration   1: 125.990 us/op
Iteration   2: 215.716 us/op
Iteration   3: 202.657 us/op
Iteration   4: 178.623 us/op
Iteration   5: 165.566 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    184.885 ±(99.9%) 56.750 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 0 
    [125.000, 137.500) = 1 
    [137.500, 150.000) = 1 
    [150.000, 162.500) = 1 
    [162.500, 175.000) = 1 
    [175.000, 187.500) = 2 
    [187.500, 200.000) = 0 
    [200.000, 212.500) = 1 
    [212.500, 225.000) = 1 
    [225.000, 237.500) = 1 
    [237.500, 250.000) = 1 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    125.990 us/op
     p(50.0000) =    181.681 us/op
     p(90.0000) =    242.910 us/op
     p(95.0000) =    244.798 us/op
     p(99.0000) =    244.798 us/op
     p(99.9000) =    244.798 us/op
     p(99.9900) =    244.798 us/op
     p(99.9990) =    244.798 us/op
     p(99.9999) =    244.798 us/op
    p(100.0000) =    244.798 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.375)

# Run progress: 3.79% complete, ETA 00:44:31
# Fork: 1 of 2
# Warmup Iteration   1: 2794.922 us/op
# Warmup Iteration   2: 1668.041 us/op
# Warmup Iteration   3: 1485.067 us/op
# Warmup Iteration   4: 1313.479 us/op
# Warmup Iteration   5: 1241.773 us/op
Iteration   1: 162.465 us/op
Iteration   2: 278.193 us/op
Iteration   3: 206.111 us/op
Iteration   4: 322.324 us/op
Iteration   5: 198.094 us/op

# Run progress: 3.98% complete, ETA 00:44:26
# Fork: 2 of 2
# Warmup Iteration   1: 2738.219 us/op
# Warmup Iteration   2: 1723.110 us/op
# Warmup Iteration   3: 1484.243 us/op
# Warmup Iteration   4: 1337.622 us/op
# Warmup Iteration   5: 1326.873 us/op
Iteration   1: 139.463 us/op
Iteration   2: 318.111 us/op
Iteration   3: 151.030 us/op
Iteration   4: 268.171 us/op
Iteration   5: 174.304 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    221.827 ±(99.9%) 104.603 us/op

  Histogram, us/op:
    [100.000, 125.000) = 0 
    [125.000, 150.000) = 1 
    [150.000, 175.000) = 3 
    [175.000, 200.000) = 1 
    [200.000, 225.000) = 1 
    [225.000, 250.000) = 0 
    [250.000, 275.000) = 1 
    [275.000, 300.000) = 1 
    [300.000, 325.000) = 2 
    [325.000, 350.000) = 0 
    [350.000, 375.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    139.463 us/op
     p(50.0000) =    202.103 us/op
     p(90.0000) =    321.903 us/op
     p(95.0000) =    322.324 us/op
     p(99.0000) =    322.324 us/op
     p(99.9000) =    322.324 us/op
     p(99.9900) =    322.324 us/op
     p(99.9990) =    322.324 us/op
     p(99.9999) =    322.324 us/op
    p(100.0000) =    322.324 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.5)

# Run progress: 4.17% complete, ETA 00:44:20
# Fork: 1 of 2
# Warmup Iteration   1: 2620.793 us/op
# Warmup Iteration   2: 2068.213 us/op
# Warmup Iteration   3: 1421.368 us/op
# Warmup Iteration   4: 1424.409 us/op
# Warmup Iteration   5: 1392.823 us/op
Iteration   1: 162.507 us/op
Iteration   2: 179.257 us/op
Iteration   3: 139.743 us/op
Iteration   4: 271.916 us/op
Iteration   5: 152.239 us/op

# Run progress: 4.36% complete, ETA 00:44:15
# Fork: 2 of 2
# Warmup Iteration   1: 2631.199 us/op
# Warmup Iteration   2: 1863.519 us/op
# Warmup Iteration   3: 1594.871 us/op
# Warmup Iteration   4: 1405.591 us/op
# Warmup Iteration   5: 1366.350 us/op
Iteration   1: 113.615 us/op
Iteration   2: 175.242 us/op
Iteration   3: 114.787 us/op
Iteration   4: 313.312 us/op
Iteration   5: 157.106 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    177.972 ±(99.9%) 98.347 us/op

  Histogram, us/op:
    [100.000, 125.000) = 2 
    [125.000, 150.000) = 1 
    [150.000, 175.000) = 3 
    [175.000, 200.000) = 2 
    [200.000, 225.000) = 0 
    [225.000, 250.000) = 0 
    [250.000, 275.000) = 1 
    [275.000, 300.000) = 0 
    [300.000, 325.000) = 1 
    [325.000, 350.000) = 0 
    [350.000, 375.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    113.615 us/op
     p(50.0000) =    159.807 us/op
     p(90.0000) =    309.172 us/op
     p(95.0000) =    313.312 us/op
     p(99.0000) =    313.312 us/op
     p(99.9000) =    313.312 us/op
     p(99.9900) =    313.312 us/op
     p(99.9990) =    313.312 us/op
     p(99.9999) =    313.312 us/op
    p(100.0000) =    313.312 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.625)

# Run progress: 4.55% complete, ETA 00:44:10
# Fork: 1 of 2
# Warmup Iteration   1: 2408.114 us/op
# Warmup Iteration   2: 1554.280 us/op
# Warmup Iteration   3: 1380.657 us/op
# Warmup Iteration   4: 1232.675 us/op
# Warmup Iteration   5: 1212.363 us/op
Iteration   1: 133.970 us/op
Iteration   2: 157.755 us/op
Iteration   3: 155.357 us/op
Iteration   4: 172.326 us/op
Iteration   5: 151.264 us/op

# Run progress: 4.73% complete, ETA 00:44:04
# Fork: 2 of 2
# Warmup Iteration   1: 2681.431 us/op
# Warmup Iteration   2: 1687.156 us/op
# Warmup Iteration   3: 1222.617 us/op
# Warmup Iteration   4: 1153.880 us/op
# Warmup Iteration   5: 1141.854 us/op
Iteration   1: 187.734 us/op
Iteration   2: 138.342 us/op
Iteration   3: 186.980 us/op
Iteration   4: 200.891 us/op
Iteration   5: 202.301 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    168.692 ±(99.9%) 37.728 us/op

  Histogram, us/op:
    [130.000, 135.000) = 1 
    [135.000, 140.000) = 1 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 1 
    [155.000, 160.000) = 2 
    [160.000, 165.000) = 0 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 1 
    [175.000, 180.000) = 0 
    [180.000, 185.000) = 0 
    [185.000, 190.000) = 2 
    [190.000, 195.000) = 0 
    [195.000, 200.000) = 0 
    [200.000, 205.000) = 2 

  Percentiles, us/op:
      p(0.0000) =    133.970 us/op
     p(50.0000) =    165.041 us/op
     p(90.0000) =    202.160 us/op
     p(95.0000) =    202.301 us/op
     p(99.0000) =    202.301 us/op
     p(99.9000) =    202.301 us/op
     p(99.9900) =    202.301 us/op
     p(99.9990) =    202.301 us/op
     p(99.9999) =    202.301 us/op
    p(100.0000) =    202.301 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.75)

# Run progress: 4.92% complete, ETA 00:43:59
# Fork: 1 of 2
# Warmup Iteration   1: 2422.479 us/op
# Warmup Iteration   2: 1572.961 us/op
# Warmup Iteration   3: 1497.656 us/op
# Warmup Iteration   4: 1311.374 us/op
# Warmup Iteration   5: 1212.368 us/op
Iteration   1: 125.466 us/op
Iteration   2: 141.838 us/op
Iteration   3: 145.155 us/op
Iteration   4: 187.231 us/op
Iteration   5: 194.207 us/op

# Run progress: 5.11% complete, ETA 00:43:54
# Fork: 2 of 2
# Warmup Iteration   1: 2641.914 us/op
# Warmup Iteration   2: 1641.774 us/op
# Warmup Iteration   3: 1533.454 us/op
# Warmup Iteration   4: 1305.608 us/op
# Warmup Iteration   5: 1234.940 us/op
Iteration   1: 129.568 us/op
Iteration   2: 174.668 us/op
Iteration   3: 132.419 us/op
Iteration   4: 189.861 us/op
Iteration   5: 131.507 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    155.192 ±(99.9%) 42.250 us/op

  Histogram, us/op:
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 2 
    [130.000, 135.000) = 2 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 1 
    [145.000, 150.000) = 1 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 0 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 1 
    [175.000, 180.000) = 0 
    [180.000, 185.000) = 0 
    [185.000, 190.000) = 2 
    [190.000, 195.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    125.466 us/op
     p(50.0000) =    143.497 us/op
     p(90.0000) =    193.772 us/op
     p(95.0000) =    194.207 us/op
     p(99.0000) =    194.207 us/op
     p(99.9000) =    194.207 us/op
     p(99.9900) =    194.207 us/op
     p(99.9990) =    194.207 us/op
     p(99.9999) =    194.207 us/op
    p(100.0000) =    194.207 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.875)

# Run progress: 5.30% complete, ETA 00:43:49
# Fork: 1 of 2
# Warmup Iteration   1: 2511.159 us/op
# Warmup Iteration   2: 1626.642 us/op
# Warmup Iteration   3: 1583.758 us/op
# Warmup Iteration   4: 1337.508 us/op
# Warmup Iteration   5: 1241.990 us/op
Iteration   1: 162.113 us/op
Iteration   2: 209.155 us/op
Iteration   3: 196.571 us/op
Iteration   4: 215.642 us/op
Iteration   5: 163.245 us/op

# Run progress: 5.49% complete, ETA 00:43:44
# Fork: 2 of 2
# Warmup Iteration   1: 2754.937 us/op
# Warmup Iteration   2: 1642.985 us/op
# Warmup Iteration   3: 1725.217 us/op
# Warmup Iteration   4: 1366.146 us/op
# Warmup Iteration   5: 1275.834 us/op
Iteration   1: 131.996 us/op
Iteration   2: 163.517 us/op
Iteration   3: 135.922 us/op
Iteration   4: 203.839 us/op
Iteration   5: 132.787 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    171.479 ±(99.9%) 49.341 us/op

  Histogram, us/op:
    [130.000, 135.000) = 2 
    [135.000, 140.000) = 1 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 3 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 0 
    [180.000, 185.000) = 0 
    [185.000, 190.000) = 0 
    [190.000, 195.000) = 0 
    [195.000, 200.000) = 1 
    [200.000, 205.000) = 1 
    [205.000, 210.000) = 1 
    [210.000, 215.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    131.996 us/op
     p(50.0000) =    163.381 us/op
     p(90.0000) =    214.993 us/op
     p(95.0000) =    215.642 us/op
     p(99.0000) =    215.642 us/op
     p(99.9000) =    215.642 us/op
     p(99.9900) =    215.642 us/op
     p(99.9990) =    215.642 us/op
     p(99.9999) =    215.642 us/op
    p(100.0000) =    215.642 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 1)

# Run progress: 5.68% complete, ETA 00:43:38
# Fork: 1 of 2
# Warmup Iteration   1: 2599.869 us/op
# Warmup Iteration   2: 1720.721 us/op
# Warmup Iteration   3: 1585.458 us/op
# Warmup Iteration   4: 1357.314 us/op
# Warmup Iteration   5: 1305.690 us/op
Iteration   1: 110.077 us/op
Iteration   2: 131.071 us/op
Iteration   3: 146.917 us/op
Iteration   4: 139.303 us/op
Iteration   5: 125.662 us/op

# Run progress: 5.87% complete, ETA 00:43:33
# Fork: 2 of 2
# Warmup Iteration   1: 2416.280 us/op
# Warmup Iteration   2: 1736.310 us/op
# Warmup Iteration   3: 1566.552 us/op
# Warmup Iteration   4: 1351.629 us/op
# Warmup Iteration   5: 1313.880 us/op
Iteration   1: 176.098 us/op
Iteration   2: 152.770 us/op
Iteration   3: 169.809 us/op
Iteration   4: 152.653 us/op
Iteration   5: 152.554 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    145.691 ±(99.9%) 30.143 us/op

  Histogram, us/op:
    [110.000, 115.000) = 1 
    [115.000, 120.000) = 0 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 1 
    [130.000, 135.000) = 1 
    [135.000, 140.000) = 1 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 1 
    [150.000, 155.000) = 3 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 0 
    [165.000, 170.000) = 1 
    [170.000, 175.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    110.077 us/op
     p(50.0000) =    149.736 us/op
     p(90.0000) =    175.469 us/op
     p(95.0000) =    176.098 us/op
     p(99.0000) =    176.098 us/op
     p(99.9000) =    176.098 us/op
     p(99.9900) =    176.098 us/op
     p(99.9990) =    176.098 us/op
     p(99.9999) =    176.098 us/op
    p(100.0000) =    176.098 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.125)

# Run progress: 6.06% complete, ETA 00:43:28
# Fork: 1 of 2
# Warmup Iteration   1: 2963.035 us/op
# Warmup Iteration   2: 2343.573 us/op
# Warmup Iteration   3: 1989.087 us/op
# Warmup Iteration   4: 1711.244 us/op
# Warmup Iteration   5: 1634.647 us/op
Iteration   1: 178.257 us/op
Iteration   2: 162.229 us/op
Iteration   3: 156.340 us/op
Iteration   4: 175.558 us/op
Iteration   5: 115.739 us/op

# Run progress: 6.25% complete, ETA 00:43:22
# Fork: 2 of 2
# Warmup Iteration   1: 2856.704 us/op
# Warmup Iteration   2: 2452.022 us/op
# Warmup Iteration   3: 1853.208 us/op
# Warmup Iteration   4: 1768.420 us/op
# Warmup Iteration   5: 1730.183 us/op
Iteration   1: 162.167 us/op
Iteration   2: 168.510 us/op
Iteration   3: 151.361 us/op
Iteration   4: 172.319 us/op
Iteration   5: 187.673 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    163.015 ±(99.9%) 29.947 us/op

  Histogram, us/op:
    [110.000, 115.000) = 0 
    [115.000, 120.000) = 1 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 1 
    [155.000, 160.000) = 1 
    [160.000, 165.000) = 2 
    [165.000, 170.000) = 1 
    [170.000, 175.000) = 1 
    [175.000, 180.000) = 2 
    [180.000, 185.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    115.739 us/op
     p(50.0000) =    165.370 us/op
     p(90.0000) =    186.731 us/op
     p(95.0000) =    187.673 us/op
     p(99.0000) =    187.673 us/op
     p(99.9000) =    187.673 us/op
     p(99.9900) =    187.673 us/op
     p(99.9990) =    187.673 us/op
     p(99.9999) =    187.673 us/op
    p(100.0000) =    187.673 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.250)

# Run progress: 6.44% complete, ETA 00:43:17
# Fork: 1 of 2
# Warmup Iteration   1: 2645.474 us/op
# Warmup Iteration   2: 1880.179 us/op
# Warmup Iteration   3: 1587.016 us/op
# Warmup Iteration   4: 1484.400 us/op
# Warmup Iteration   5: 1494.697 us/op
Iteration   1: 267.708 us/op
Iteration   2: 130.065 us/op
Iteration   3: 167.563 us/op
Iteration   4: 147.780 us/op
Iteration   5: 218.767 us/op

# Run progress: 6.63% complete, ETA 00:43:12
# Fork: 2 of 2
# Warmup Iteration   1: 2799.223 us/op
# Warmup Iteration   2: 1898.085 us/op
# Warmup Iteration   3: 1577.002 us/op
# Warmup Iteration   4: 1495.688 us/op
# Warmup Iteration   5: 1532.230 us/op
Iteration   1: 116.280 us/op
Iteration   2: 185.970 us/op
Iteration   3: 184.473 us/op
Iteration   4: 190.033 us/op
Iteration   5: 195.570 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    180.421 ±(99.9%) 66.359 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 1 
    [125.000, 137.500) = 1 
    [137.500, 150.000) = 1 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 1 
    [175.000, 187.500) = 2 
    [187.500, 200.000) = 2 
    [200.000, 212.500) = 0 
    [212.500, 225.000) = 1 
    [225.000, 237.500) = 0 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 1 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    116.280 us/op
     p(50.0000) =    185.222 us/op
     p(90.0000) =    262.814 us/op
     p(95.0000) =    267.708 us/op
     p(99.0000) =    267.708 us/op
     p(99.9000) =    267.708 us/op
     p(99.9900) =    267.708 us/op
     p(99.9990) =    267.708 us/op
     p(99.9999) =    267.708 us/op
    p(100.0000) =    267.708 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.375)

# Run progress: 6.82% complete, ETA 00:43:06
# Fork: 1 of 2
# Warmup Iteration   1: 2546.584 us/op
# Warmup Iteration   2: 1619.575 us/op
# Warmup Iteration   3: 1523.287 us/op
# Warmup Iteration   4: 1404.682 us/op
# Warmup Iteration   5: 1332.168 us/op
Iteration   1: 178.425 us/op
Iteration   2: 159.262 us/op
Iteration   3: 169.779 us/op
Iteration   4: 313.686 us/op
Iteration   5: 156.765 us/op

# Run progress: 7.01% complete, ETA 00:43:01
# Fork: 2 of 2
# Warmup Iteration   1: 2648.407 us/op
# Warmup Iteration   2: 1667.045 us/op
# Warmup Iteration   3: 1484.477 us/op
# Warmup Iteration   4: 1465.946 us/op
# Warmup Iteration   5: 1248.803 us/op
Iteration   1: 142.015 us/op
Iteration   2: 148.510 us/op
Iteration   3: 121.079 us/op
Iteration   4: 191.756 us/op
Iteration   5: 130.495 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    171.177 ±(99.9%) 82.293 us/op

  Histogram, us/op:
    [100.000, 125.000) = 1 
    [125.000, 150.000) = 3 
    [150.000, 175.000) = 3 
    [175.000, 200.000) = 2 
    [200.000, 225.000) = 0 
    [225.000, 250.000) = 0 
    [250.000, 275.000) = 0 
    [275.000, 300.000) = 0 
    [300.000, 325.000) = 1 
    [325.000, 350.000) = 0 
    [350.000, 375.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    121.079 us/op
     p(50.0000) =    158.014 us/op
     p(90.0000) =    301.493 us/op
     p(95.0000) =    313.686 us/op
     p(99.0000) =    313.686 us/op
     p(99.9000) =    313.686 us/op
     p(99.9900) =    313.686 us/op
     p(99.9990) =    313.686 us/op
     p(99.9999) =    313.686 us/op
    p(100.0000) =    313.686 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.5)

# Run progress: 7.20% complete, ETA 00:42:56
# Fork: 1 of 2
# Warmup Iteration   1: 2627.120 us/op
# Warmup Iteration   2: 1734.461 us/op
# Warmup Iteration   3: 1452.156 us/op
# Warmup Iteration   4: 1330.444 us/op
# Warmup Iteration   5: 1387.401 us/op
Iteration   1: 134.779 us/op
Iteration   2: 133.679 us/op
Iteration   3: 122.620 us/op
Iteration   4: 285.039 us/op
Iteration   5: 166.482 us/op

# Run progress: 7.39% complete, ETA 00:42:50
# Fork: 2 of 2
# Warmup Iteration   1: 3059.657 us/op
# Warmup Iteration   2: 1767.158 us/op
# Warmup Iteration   3: 1601.520 us/op
# Warmup Iteration   4: 1475.933 us/op
# Warmup Iteration   5: 1331.608 us/op
Iteration   1: 114.592 us/op
Iteration   2: 131.333 us/op
Iteration   3: 192.888 us/op
Iteration   4: 337.620 us/op
Iteration   5: 158.909 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    177.794 ±(99.9%) 113.531 us/op

  Histogram, us/op:
    [100.000, 125.000) = 2 
    [125.000, 150.000) = 3 
    [150.000, 175.000) = 2 
    [175.000, 200.000) = 1 
    [200.000, 225.000) = 0 
    [225.000, 250.000) = 0 
    [250.000, 275.000) = 0 
    [275.000, 300.000) = 1 
    [300.000, 325.000) = 0 
    [325.000, 350.000) = 1 
    [350.000, 375.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    114.592 us/op
     p(50.0000) =    146.844 us/op
     p(90.0000) =    332.362 us/op
     p(95.0000) =    337.620 us/op
     p(99.0000) =    337.620 us/op
     p(99.9000) =    337.620 us/op
     p(99.9900) =    337.620 us/op
     p(99.9990) =    337.620 us/op
     p(99.9999) =    337.620 us/op
    p(100.0000) =    337.620 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.625)

# Run progress: 7.58% complete, ETA 00:42:45
# Fork: 1 of 2
# Warmup Iteration   1: 2484.144 us/op
# Warmup Iteration   2: 1429.734 us/op
# Warmup Iteration   3: 1260.947 us/op
# Warmup Iteration   4: 1260.674 us/op
# Warmup Iteration   5: 1146.463 us/op
Iteration   1: 103.634 us/op
Iteration   2: 144.415 us/op
Iteration   3: 151.050 us/op
Iteration   4: 136.828 us/op
Iteration   5: 122.261 us/op

# Run progress: 7.77% complete, ETA 00:42:40
# Fork: 2 of 2
# Warmup Iteration   1: 2362.148 us/op
# Warmup Iteration   2: 1552.508 us/op
# Warmup Iteration   3: 1457.647 us/op
# Warmup Iteration   4: 1201.569 us/op
# Warmup Iteration   5: 1149.210 us/op
Iteration   1: 107.910 us/op
Iteration   2: 130.465 us/op
Iteration   3: 136.706 us/op
Iteration   4: 138.257 us/op
Iteration   5: 121.365 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    129.289 ±(99.9%) 23.222 us/op

  Histogram, us/op:
    [100.000, 105.000) = 1 
    [105.000, 110.000) = 1 
    [110.000, 115.000) = 0 
    [115.000, 120.000) = 0 
    [120.000, 125.000) = 2 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 1 
    [135.000, 140.000) = 3 
    [140.000, 145.000) = 1 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    103.634 us/op
     p(50.0000) =    133.586 us/op
     p(90.0000) =    150.387 us/op
     p(95.0000) =    151.050 us/op
     p(99.0000) =    151.050 us/op
     p(99.9000) =    151.050 us/op
     p(99.9900) =    151.050 us/op
     p(99.9990) =    151.050 us/op
     p(99.9999) =    151.050 us/op
    p(100.0000) =    151.050 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.75)

# Run progress: 7.95% complete, ETA 00:42:34
# Fork: 1 of 2
# Warmup Iteration   1: 2600.620 us/op
# Warmup Iteration   2: 1639.832 us/op
# Warmup Iteration   3: 1581.301 us/op
# Warmup Iteration   4: 1332.745 us/op
# Warmup Iteration   5: 1193.143 us/op
Iteration   1: 110.480 us/op
Iteration   2: 137.282 us/op
Iteration   3: 152.691 us/op
Iteration   4: 177.390 us/op
Iteration   5: 111.448 us/op

# Run progress: 8.14% complete, ETA 00:42:29
# Fork: 2 of 2
# Warmup Iteration   1: 2495.071 us/op
# Warmup Iteration   2: 1780.932 us/op
# Warmup Iteration   3: 1459.660 us/op
# Warmup Iteration   4: 1252.788 us/op
# Warmup Iteration   5: 1182.526 us/op
Iteration   1: 104.871 us/op
Iteration   2: 121.144 us/op
Iteration   3: 197.534 us/op
Iteration   4: 173.297 us/op
Iteration   5: 110.150 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    139.629 ±(99.9%) 50.775 us/op

  Histogram, us/op:
    [100.000, 110.000) = 1 
    [110.000, 120.000) = 3 
    [120.000, 130.000) = 1 
    [130.000, 140.000) = 1 
    [140.000, 150.000) = 0 
    [150.000, 160.000) = 1 
    [160.000, 170.000) = 0 
    [170.000, 180.000) = 2 
    [180.000, 190.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    104.871 us/op
     p(50.0000) =    129.213 us/op
     p(90.0000) =    195.520 us/op
     p(95.0000) =    197.534 us/op
     p(99.0000) =    197.534 us/op
     p(99.9000) =    197.534 us/op
     p(99.9900) =    197.534 us/op
     p(99.9990) =    197.534 us/op
     p(99.9999) =    197.534 us/op
    p(100.0000) =    197.534 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.875)

# Run progress: 8.33% complete, ETA 00:42:24
# Fork: 1 of 2
# Warmup Iteration   1: 2735.282 us/op
# Warmup Iteration   2: 1547.509 us/op
# Warmup Iteration   3: 1579.933 us/op
# Warmup Iteration   4: 1273.090 us/op
# Warmup Iteration   5: 1248.100 us/op
Iteration   1: 110.018 us/op
Iteration   2: 133.248 us/op
Iteration   3: 113.273 us/op
Iteration   4: 112.458 us/op
Iteration   5: 114.870 us/op

# Run progress: 8.52% complete, ETA 00:42:19
# Fork: 2 of 2
# Warmup Iteration   1: 2587.057 us/op
# Warmup Iteration   2: 1691.817 us/op
# Warmup Iteration   3: 1469.715 us/op
# Warmup Iteration   4: 1346.466 us/op
# Warmup Iteration   5: 1211.738 us/op
Iteration   1: 120.243 us/op
Iteration   2: 161.529 us/op
Iteration   3: 157.401 us/op
Iteration   4: 179.129 us/op
Iteration   5: 146.355 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    134.852 ±(99.9%) 37.415 us/op

  Histogram, us/op:
    [110.000, 115.000) = 4 
    [115.000, 120.000) = 0 
    [120.000, 125.000) = 1 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 1 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 1 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 1 
    [160.000, 165.000) = 1 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    110.018 us/op
     p(50.0000) =    126.745 us/op
     p(90.0000) =    177.369 us/op
     p(95.0000) =    179.129 us/op
     p(99.0000) =    179.129 us/op
     p(99.9000) =    179.129 us/op
     p(99.9900) =    179.129 us/op
     p(99.9990) =    179.129 us/op
     p(99.9999) =    179.129 us/op
    p(100.0000) =    179.129 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 1)

# Run progress: 8.71% complete, ETA 00:42:13
# Fork: 1 of 2
# Warmup Iteration   1: 2704.194 us/op
# Warmup Iteration   2: 1659.535 us/op
# Warmup Iteration   3: 1533.895 us/op
# Warmup Iteration   4: 1294.659 us/op
# Warmup Iteration   5: 1271.082 us/op
Iteration   1: 180.366 us/op
Iteration   2: 134.809 us/op
Iteration   3: 92.932 us/op
Iteration   4: 139.484 us/op
Iteration   5: 87.856 us/op

# Run progress: 8.90% complete, ETA 00:42:08
# Fork: 2 of 2
# Warmup Iteration   1: 2744.322 us/op
# Warmup Iteration   2: 1651.983 us/op
# Warmup Iteration   3: 1539.552 us/op
# Warmup Iteration   4: 1288.804 us/op
# Warmup Iteration   5: 1271.279 us/op
Iteration   1: 105.183 us/op
Iteration   2: 144.767 us/op
Iteration   3: 92.197 us/op
Iteration   4: 92.501 us/op
Iteration   5: 90.109 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    116.020 ±(99.9%) 48.090 us/op

  Histogram, us/op:
    [ 80.000,  90.000) = 1 
    [ 90.000, 100.000) = 4 
    [100.000, 110.000) = 1 
    [110.000, 120.000) = 0 
    [120.000, 130.000) = 0 
    [130.000, 140.000) = 2 
    [140.000, 150.000) = 1 
    [150.000, 160.000) = 0 
    [160.000, 170.000) = 0 
    [170.000, 180.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     87.856 us/op
     p(50.0000) =     99.058 us/op
     p(90.0000) =    176.806 us/op
     p(95.0000) =    180.366 us/op
     p(99.0000) =    180.366 us/op
     p(99.9000) =    180.366 us/op
     p(99.9900) =    180.366 us/op
     p(99.9990) =    180.366 us/op
     p(99.9999) =    180.366 us/op
    p(100.0000) =    180.366 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.125)

# Run progress: 9.09% complete, ETA 00:42:03
# Fork: 1 of 2
# Warmup Iteration   1: 3022.096 us/op
# Warmup Iteration   2: 2500.156 us/op
# Warmup Iteration   3: 1766.432 us/op
# Warmup Iteration   4: 1703.991 us/op
# Warmup Iteration   5: 1670.089 us/op
Iteration   1: 171.830 us/op
Iteration   2: 174.872 us/op
Iteration   3: 125.928 us/op
Iteration   4: 152.965 us/op
Iteration   5: 116.175 us/op

# Run progress: 9.28% complete, ETA 00:41:58
# Fork: 2 of 2
# Warmup Iteration   1: 3578.220 us/op
# Warmup Iteration   2: 2103.550 us/op
# Warmup Iteration   3: 1714.712 us/op
# Warmup Iteration   4: 1795.634 us/op
# Warmup Iteration   5: 1706.193 us/op
Iteration   1: 158.415 us/op
Iteration   2: 189.226 us/op
Iteration   3: 126.912 us/op
Iteration   4: 128.612 us/op
Iteration   5: 121.961 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    146.690 ±(99.9%) 39.373 us/op

  Histogram, us/op:
    [110.000, 115.000) = 0 
    [115.000, 120.000) = 1 
    [120.000, 125.000) = 1 
    [125.000, 130.000) = 3 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 1 
    [155.000, 160.000) = 1 
    [160.000, 165.000) = 0 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 2 
    [175.000, 180.000) = 0 
    [180.000, 185.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    116.175 us/op
     p(50.0000) =    140.789 us/op
     p(90.0000) =    187.791 us/op
     p(95.0000) =    189.226 us/op
     p(99.0000) =    189.226 us/op
     p(99.9000) =    189.226 us/op
     p(99.9900) =    189.226 us/op
     p(99.9990) =    189.226 us/op
     p(99.9999) =    189.226 us/op
    p(100.0000) =    189.226 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.250)

# Run progress: 9.47% complete, ETA 00:41:52
# Fork: 1 of 2
# Warmup Iteration   1: 2760.581 us/op
# Warmup Iteration   2: 1994.270 us/op
# Warmup Iteration   3: 1634.650 us/op
# Warmup Iteration   4: 1450.035 us/op
# Warmup Iteration   5: 1494.757 us/op
Iteration   1: 115.649 us/op
Iteration   2: 131.506 us/op
Iteration   3: 172.983 us/op
Iteration   4: 158.952 us/op
Iteration   5: 170.286 us/op

# Run progress: 9.66% complete, ETA 00:41:47
# Fork: 2 of 2
# Warmup Iteration   1: 2756.263 us/op
# Warmup Iteration   2: 1872.337 us/op
# Warmup Iteration   3: 1817.886 us/op
# Warmup Iteration   4: 1469.359 us/op
# Warmup Iteration   5: 1540.276 us/op
Iteration   1: 124.502 us/op
Iteration   2: 121.026 us/op
Iteration   3: 161.404 us/op
Iteration   4: 136.051 us/op
Iteration   5: 158.799 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    145.116 ±(99.9%) 32.641 us/op

  Histogram, us/op:
    [110.000, 115.000) = 0 
    [115.000, 120.000) = 1 
    [120.000, 125.000) = 2 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 1 
    [135.000, 140.000) = 1 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 2 
    [160.000, 165.000) = 1 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 2 

  Percentiles, us/op:
      p(0.0000) =    115.649 us/op
     p(50.0000) =    147.425 us/op
     p(90.0000) =    172.713 us/op
     p(95.0000) =    172.983 us/op
     p(99.0000) =    172.983 us/op
     p(99.9000) =    172.983 us/op
     p(99.9900) =    172.983 us/op
     p(99.9990) =    172.983 us/op
     p(99.9999) =    172.983 us/op
    p(100.0000) =    172.983 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.375)

# Run progress: 9.85% complete, ETA 00:41:42
# Fork: 1 of 2
# Warmup Iteration   1: 2683.305 us/op
# Warmup Iteration   2: 1842.186 us/op
# Warmup Iteration   3: 1817.746 us/op
# Warmup Iteration   4: 1298.112 us/op
# Warmup Iteration   5: 1291.632 us/op
Iteration   1: 254.616 us/op
Iteration   2: 140.347 us/op
Iteration   3: 153.834 us/op
Iteration   4: 183.083 us/op
Iteration   5: 149.284 us/op

# Run progress: 10.04% complete, ETA 00:41:37
# Fork: 2 of 2
# Warmup Iteration   1: 3184.924 us/op
# Warmup Iteration   2: 1592.628 us/op
# Warmup Iteration   3: 1518.965 us/op
# Warmup Iteration   4: 1273.807 us/op
# Warmup Iteration   5: 1253.407 us/op
Iteration   1: 238.716 us/op
Iteration   2: 154.388 us/op
Iteration   3: 152.840 us/op
Iteration   4: 181.048 us/op
Iteration   5: 127.714 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    173.587 ±(99.9%) 63.631 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 0 
    [125.000, 137.500) = 1 
    [137.500, 150.000) = 2 
    [150.000, 162.500) = 3 
    [162.500, 175.000) = 0 
    [175.000, 187.500) = 2 
    [187.500, 200.000) = 0 
    [200.000, 212.500) = 0 
    [212.500, 225.000) = 0 
    [225.000, 237.500) = 0 
    [237.500, 250.000) = 1 
    [250.000, 262.500) = 1 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    127.714 us/op
     p(50.0000) =    154.111 us/op
     p(90.0000) =    253.026 us/op
     p(95.0000) =    254.616 us/op
     p(99.0000) =    254.616 us/op
     p(99.9000) =    254.616 us/op
     p(99.9900) =    254.616 us/op
     p(99.9990) =    254.616 us/op
     p(99.9999) =    254.616 us/op
    p(100.0000) =    254.616 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.5)

# Run progress: 10.23% complete, ETA 00:41:31
# Fork: 1 of 2
# Warmup Iteration   1: 2633.415 us/op
# Warmup Iteration   2: 1782.061 us/op
# Warmup Iteration   3: 1535.149 us/op
# Warmup Iteration   4: 1342.171 us/op
# Warmup Iteration   5: 1317.504 us/op
Iteration   1: 100.177 us/op
Iteration   2: 117.079 us/op
Iteration   3: 121.651 us/op
Iteration   4: 283.130 us/op
Iteration   5: 115.200 us/op

# Run progress: 10.42% complete, ETA 00:41:26
# Fork: 2 of 2
# Warmup Iteration   1: 2559.054 us/op
# Warmup Iteration   2: 1721.487 us/op
# Warmup Iteration   3: 1609.190 us/op
# Warmup Iteration   4: 1431.276 us/op
# Warmup Iteration   5: 1335.157 us/op
Iteration   1: 168.743 us/op
Iteration   2: 152.463 us/op
Iteration   3: 104.676 us/op
Iteration   4: 259.442 us/op
Iteration   5: 116.803 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    153.936 ±(99.9%) 99.063 us/op

  Histogram, us/op:
    [100.000, 112.500) = 2 
    [112.500, 125.000) = 4 
    [125.000, 137.500) = 0 
    [137.500, 150.000) = 0 
    [150.000, 162.500) = 1 
    [162.500, 175.000) = 1 
    [175.000, 187.500) = 0 
    [187.500, 200.000) = 0 
    [200.000, 212.500) = 0 
    [212.500, 225.000) = 0 
    [225.000, 237.500) = 0 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 1 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 1 

  Percentiles, us/op:
      p(0.0000) =    100.177 us/op
     p(50.0000) =    119.365 us/op
     p(90.0000) =    280.761 us/op
     p(95.0000) =    283.130 us/op
     p(99.0000) =    283.130 us/op
     p(99.9000) =    283.130 us/op
     p(99.9900) =    283.130 us/op
     p(99.9990) =    283.130 us/op
     p(99.9999) =    283.130 us/op
    p(100.0000) =    283.130 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.625)

# Run progress: 10.61% complete, ETA 00:41:21
# Fork: 1 of 2
# Warmup Iteration   1: 2600.866 us/op
# Warmup Iteration   2: 1570.883 us/op
# Warmup Iteration   3: 1280.117 us/op
# Warmup Iteration   4: 1208.126 us/op
# Warmup Iteration   5: 1260.047 us/op
Iteration   1: 111.170 us/op
Iteration   2: 152.291 us/op
Iteration   3: 128.082 us/op
Iteration   4: 131.145 us/op
Iteration   5: 109.538 us/op

# Run progress: 10.80% complete, ETA 00:41:16
# Fork: 2 of 2
# Warmup Iteration   1: 3228.358 us/op
# Warmup Iteration   2: 1543.171 us/op
# Warmup Iteration   3: 1272.241 us/op
# Warmup Iteration   4: 1247.999 us/op
# Warmup Iteration   5: 1195.693 us/op
Iteration   1: 121.709 us/op
Iteration   2: 144.719 us/op
Iteration   3: 138.843 us/op
Iteration   4: 114.320 us/op
Iteration   5: 112.525 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    126.434 ±(99.9%) 22.889 us/op

  Histogram, us/op:
    [100.000, 105.000) = 0 
    [105.000, 110.000) = 1 
    [110.000, 115.000) = 3 
    [115.000, 120.000) = 0 
    [120.000, 125.000) = 1 
    [125.000, 130.000) = 1 
    [130.000, 135.000) = 1 
    [135.000, 140.000) = 1 
    [140.000, 145.000) = 1 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    109.538 us/op
     p(50.0000) =    124.896 us/op
     p(90.0000) =    151.534 us/op
     p(95.0000) =    152.291 us/op
     p(99.0000) =    152.291 us/op
     p(99.9000) =    152.291 us/op
     p(99.9900) =    152.291 us/op
     p(99.9990) =    152.291 us/op
     p(99.9999) =    152.291 us/op
    p(100.0000) =    152.291 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.75)

# Run progress: 10.98% complete, ETA 00:41:10
# Fork: 1 of 2
# Warmup Iteration   1: 2447.284 us/op
# Warmup Iteration   2: 1587.791 us/op
# Warmup Iteration   3: 1587.530 us/op
# Warmup Iteration   4: 1287.043 us/op
# Warmup Iteration   5: 1182.916 us/op
Iteration   1: 105.403 us/op
Iteration   2: 139.093 us/op
Iteration   3: 113.155 us/op
Iteration   4: 110.638 us/op
Iteration   5: 124.612 us/op

# Run progress: 11.17% complete, ETA 00:41:05
# Fork: 2 of 2
# Warmup Iteration   1: 2594.751 us/op
# Warmup Iteration   2: 1508.388 us/op
# Warmup Iteration   3: 1471.936 us/op
# Warmup Iteration   4: 1323.443 us/op
# Warmup Iteration   5: 1177.217 us/op
Iteration   1: 139.084 us/op
Iteration   2: 153.135 us/op
Iteration   3: 127.341 us/op
Iteration   4: 138.957 us/op
Iteration   5: 151.026 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    130.244 ±(99.9%) 25.308 us/op

  Histogram, us/op:
    [100.000, 105.000) = 0 
    [105.000, 110.000) = 1 
    [110.000, 115.000) = 2 
    [115.000, 120.000) = 0 
    [120.000, 125.000) = 1 
    [125.000, 130.000) = 1 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 3 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 2 

  Percentiles, us/op:
      p(0.0000) =    105.403 us/op
     p(50.0000) =    133.149 us/op
     p(90.0000) =    152.924 us/op
     p(95.0000) =    153.135 us/op
     p(99.0000) =    153.135 us/op
     p(99.9000) =    153.135 us/op
     p(99.9900) =    153.135 us/op
     p(99.9990) =    153.135 us/op
     p(99.9999) =    153.135 us/op
    p(100.0000) =    153.135 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.875)

# Run progress: 11.36% complete, ETA 00:41:00
# Fork: 1 of 2
# Warmup Iteration   1: 2861.676 us/op
# Warmup Iteration   2: 1623.216 us/op
# Warmup Iteration   3: 1699.741 us/op
# Warmup Iteration   4: 1308.155 us/op
# Warmup Iteration   5: 1250.701 us/op
Iteration   1: 129.944 us/op
Iteration   2: 127.703 us/op
Iteration   3: 148.171 us/op
Iteration   4: 114.809 us/op
Iteration   5: 120.885 us/op

# Run progress: 11.55% complete, ETA 00:40:54
# Fork: 2 of 2
# Warmup Iteration   1: 2525.579 us/op
# Warmup Iteration   2: 1713.242 us/op
# Warmup Iteration   3: 1508.687 us/op
# Warmup Iteration   4: 1243.279 us/op
# Warmup Iteration   5: 1223.186 us/op
Iteration   1: 125.554 us/op
Iteration   2: 113.106 us/op
Iteration   3: 124.561 us/op
Iteration   4: 147.664 us/op
Iteration   5: 114.076 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    126.647 ±(99.9%) 19.105 us/op

  Histogram, us/op:
    [110.000, 112.500) = 0 
    [112.500, 115.000) = 3 
    [115.000, 117.500) = 0 
    [117.500, 120.000) = 0 
    [120.000, 122.500) = 1 
    [122.500, 125.000) = 1 
    [125.000, 127.500) = 1 
    [127.500, 130.000) = 2 
    [130.000, 132.500) = 0 
    [132.500, 135.000) = 0 
    [135.000, 137.500) = 0 
    [137.500, 140.000) = 0 
    [140.000, 142.500) = 0 
    [142.500, 145.000) = 0 
    [145.000, 147.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    113.106 us/op
     p(50.0000) =    125.058 us/op
     p(90.0000) =    148.120 us/op
     p(95.0000) =    148.171 us/op
     p(99.0000) =    148.171 us/op
     p(99.9000) =    148.171 us/op
     p(99.9900) =    148.171 us/op
     p(99.9990) =    148.171 us/op
     p(99.9999) =    148.171 us/op
    p(100.0000) =    148.171 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 1)

# Run progress: 11.74% complete, ETA 00:40:49
# Fork: 1 of 2
# Warmup Iteration   1: 2687.863 us/op
# Warmup Iteration   2: 1709.419 us/op
# Warmup Iteration   3: 1525.935 us/op
# Warmup Iteration   4: 1338.919 us/op
# Warmup Iteration   5: 1284.942 us/op
Iteration   1: 85.810 us/op
Iteration   2: 132.063 us/op
Iteration   3: 93.431 us/op
Iteration   4: 89.996 us/op
Iteration   5: 89.839 us/op

# Run progress: 11.93% complete, ETA 00:40:44
# Fork: 2 of 2
# Warmup Iteration   1: 2779.404 us/op
# Warmup Iteration   2: 1740.058 us/op
# Warmup Iteration   3: 1520.212 us/op
# Warmup Iteration   4: 1287.555 us/op
# Warmup Iteration   5: 1255.244 us/op
Iteration   1: 116.140 us/op
Iteration   2: 128.403 us/op
Iteration   3: 104.194 us/op
Iteration   4: 119.912 us/op
Iteration   5: 87.291 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    104.708 ±(99.9%) 27.125 us/op

  Histogram, us/op:
    [ 80.000,  85.000) = 0 
    [ 85.000,  90.000) = 4 
    [ 90.000,  95.000) = 1 
    [ 95.000, 100.000) = 0 
    [100.000, 105.000) = 1 
    [105.000, 110.000) = 0 
    [110.000, 115.000) = 0 
    [115.000, 120.000) = 2 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 1 
    [130.000, 135.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     85.810 us/op
     p(50.0000) =     98.813 us/op
     p(90.0000) =    131.697 us/op
     p(95.0000) =    132.063 us/op
     p(99.0000) =    132.063 us/op
     p(99.9000) =    132.063 us/op
     p(99.9900) =    132.063 us/op
     p(99.9990) =    132.063 us/op
     p(99.9999) =    132.063 us/op
    p(100.0000) =    132.063 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.125)

# Run progress: 12.12% complete, ETA 00:40:39
# Fork: 1 of 2
# Warmup Iteration   1: 3153.793 us/op
# Warmup Iteration   2: 2020.117 us/op
# Warmup Iteration   3: 1540.443 us/op
# Warmup Iteration   4: 1592.518 us/op
# Warmup Iteration   5: 1526.884 us/op
Iteration   1: 103.265 us/op
Iteration   2: 120.952 us/op
Iteration   3: 170.356 us/op
Iteration   4: 108.044 us/op
Iteration   5: 111.659 us/op

# Run progress: 12.31% complete, ETA 00:40:33
# Fork: 2 of 2
# Warmup Iteration   1: 3279.425 us/op
# Warmup Iteration   2: 2169.874 us/op
# Warmup Iteration   3: 1749.419 us/op
# Warmup Iteration   4: 1603.996 us/op
# Warmup Iteration   5: 1524.425 us/op
Iteration   1: 148.328 us/op
Iteration   2: 138.265 us/op
Iteration   3: 122.801 us/op
Iteration   4: 154.924 us/op
Iteration   5: 107.927 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    128.652 ±(99.9%) 34.878 us/op

  Histogram, us/op:
    [100.000, 105.000) = 1 
    [105.000, 110.000) = 2 
    [110.000, 115.000) = 1 
    [115.000, 120.000) = 0 
    [120.000, 125.000) = 2 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 1 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 1 
    [150.000, 155.000) = 1 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 0 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    103.265 us/op
     p(50.0000) =    121.877 us/op
     p(90.0000) =    168.813 us/op
     p(95.0000) =    170.356 us/op
     p(99.0000) =    170.356 us/op
     p(99.9000) =    170.356 us/op
     p(99.9900) =    170.356 us/op
     p(99.9990) =    170.356 us/op
     p(99.9999) =    170.356 us/op
    p(100.0000) =    170.356 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.250)

# Run progress: 12.50% complete, ETA 00:40:28
# Fork: 1 of 2
# Warmup Iteration   1: 3089.982 us/op
# Warmup Iteration   2: 1720.675 us/op
# Warmup Iteration   3: 1585.760 us/op
# Warmup Iteration   4: 1406.792 us/op
# Warmup Iteration   5: 1360.096 us/op
Iteration   1: 132.207 us/op
Iteration   2: 132.408 us/op
Iteration   3: 118.564 us/op
Iteration   4: 131.856 us/op
Iteration   5: 106.090 us/op

# Run progress: 12.69% complete, ETA 00:40:23
# Fork: 2 of 2
# Warmup Iteration   1: 2929.868 us/op
# Warmup Iteration   2: 1734.715 us/op
# Warmup Iteration   3: 1559.753 us/op
# Warmup Iteration   4: 1380.832 us/op
# Warmup Iteration   5: 1383.203 us/op
Iteration   1: 110.919 us/op
Iteration   2: 148.409 us/op
Iteration   3: 120.523 us/op
Iteration   4: 119.799 us/op
Iteration   5: 124.164 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    124.494 ±(99.9%) 18.477 us/op

  Histogram, us/op:
    [100.000, 105.000) = 0 
    [105.000, 110.000) = 1 
    [110.000, 115.000) = 1 
    [115.000, 120.000) = 2 
    [120.000, 125.000) = 2 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 3 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    106.090 us/op
     p(50.0000) =    122.344 us/op
     p(90.0000) =    146.809 us/op
     p(95.0000) =    148.409 us/op
     p(99.0000) =    148.409 us/op
     p(99.9000) =    148.409 us/op
     p(99.9900) =    148.409 us/op
     p(99.9990) =    148.409 us/op
     p(99.9999) =    148.409 us/op
    p(100.0000) =    148.409 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.375)

# Run progress: 12.88% complete, ETA 00:40:17
# Fork: 1 of 2
# Warmup Iteration   1: 2066.259 us/op
# Warmup Iteration   2: 1354.261 us/op
# Warmup Iteration   3: 1331.401 us/op
# Warmup Iteration   4: 1132.660 us/op
# Warmup Iteration   5: 1065.525 us/op
Iteration   1: 116.983 us/op
Iteration   2: 165.661 us/op
Iteration   3: 143.774 us/op
Iteration   4: 111.910 us/op
Iteration   5: 106.358 us/op

# Run progress: 13.07% complete, ETA 00:40:12
# Fork: 2 of 2
# Warmup Iteration   1: 2258.831 us/op
# Warmup Iteration   2: 1567.962 us/op
# Warmup Iteration   3: 1389.818 us/op
# Warmup Iteration   4: 1162.128 us/op
# Warmup Iteration   5: 1082.808 us/op
Iteration   1: 135.633 us/op
Iteration   2: 148.594 us/op
Iteration   3: 143.708 us/op
Iteration   4: 147.009 us/op
Iteration   5: 140.285 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    135.992 ±(99.9%) 28.143 us/op

  Histogram, us/op:
    [100.000, 105.000) = 0 
    [105.000, 110.000) = 1 
    [110.000, 115.000) = 1 
    [115.000, 120.000) = 1 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 1 
    [140.000, 145.000) = 3 
    [145.000, 150.000) = 2 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    106.358 us/op
     p(50.0000) =    141.997 us/op
     p(90.0000) =    163.954 us/op
     p(95.0000) =    165.661 us/op
     p(99.0000) =    165.661 us/op
     p(99.9000) =    165.661 us/op
     p(99.9900) =    165.661 us/op
     p(99.9990) =    165.661 us/op
     p(99.9999) =    165.661 us/op
    p(100.0000) =    165.661 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.5)

# Run progress: 13.26% complete, ETA 00:40:07
# Fork: 1 of 2
# Warmup Iteration   1: 2325.762 us/op
# Warmup Iteration   2: 1493.648 us/op
# Warmup Iteration   3: 1365.929 us/op
# Warmup Iteration   4: 1151.544 us/op
# Warmup Iteration   5: 1114.675 us/op
Iteration   1: 116.215 us/op
Iteration   2: 119.321 us/op
Iteration   3: 117.915 us/op
Iteration   4: 166.047 us/op
Iteration   5: 119.122 us/op

# Run progress: 13.45% complete, ETA 00:40:02
# Fork: 2 of 2
# Warmup Iteration   1: 2494.640 us/op
# Warmup Iteration   2: 1593.329 us/op
# Warmup Iteration   3: 1355.003 us/op
# Warmup Iteration   4: 1174.340 us/op
# Warmup Iteration   5: 1134.905 us/op
Iteration   1: 102.034 us/op
Iteration   2: 125.685 us/op
Iteration   3: 120.508 us/op
Iteration   4: 106.073 us/op
Iteration   5: 137.042 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    122.996 ±(99.9%) 27.093 us/op

  Histogram, us/op:
    [100.000, 105.000) = 1 
    [105.000, 110.000) = 1 
    [110.000, 115.000) = 0 
    [115.000, 120.000) = 4 
    [120.000, 125.000) = 1 
    [125.000, 130.000) = 1 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 1 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    102.034 us/op
     p(50.0000) =    119.221 us/op
     p(90.0000) =    163.147 us/op
     p(95.0000) =    166.047 us/op
     p(99.0000) =    166.047 us/op
     p(99.9000) =    166.047 us/op
     p(99.9900) =    166.047 us/op
     p(99.9990) =    166.047 us/op
     p(99.9999) =    166.047 us/op
    p(100.0000) =    166.047 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.625)

# Run progress: 13.64% complete, ETA 00:39:56
# Fork: 1 of 2
# Warmup Iteration   1: 1858.568 us/op
# Warmup Iteration   2: 1199.514 us/op
# Warmup Iteration   3: 1108.144 us/op
# Warmup Iteration   4: 1021.540 us/op
# Warmup Iteration   5: 902.403 us/op
Iteration   1: 105.061 us/op
Iteration   2: 138.715 us/op
Iteration   3: 123.933 us/op
Iteration   4: 105.921 us/op
Iteration   5: 105.203 us/op

# Run progress: 13.83% complete, ETA 00:39:51
# Fork: 2 of 2
# Warmup Iteration   1: 1682.998 us/op
# Warmup Iteration   2: 1211.071 us/op
# Warmup Iteration   3: 1085.680 us/op
# Warmup Iteration   4: 1038.563 us/op
# Warmup Iteration   5: 895.984 us/op
Iteration   1: 107.416 us/op
Iteration   2: 156.274 us/op
Iteration   3: 125.847 us/op
Iteration   4: 108.436 us/op
Iteration   5: 111.562 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    118.837 ±(99.9%) 26.214 us/op

  Histogram, us/op:
    [100.000, 105.000) = 0 
    [105.000, 110.000) = 5 
    [110.000, 115.000) = 1 
    [115.000, 120.000) = 0 
    [120.000, 125.000) = 1 
    [125.000, 130.000) = 1 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 1 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    105.061 us/op
     p(50.0000) =    109.999 us/op
     p(90.0000) =    154.518 us/op
     p(95.0000) =    156.274 us/op
     p(99.0000) =    156.274 us/op
     p(99.9000) =    156.274 us/op
     p(99.9900) =    156.274 us/op
     p(99.9990) =    156.274 us/op
     p(99.9999) =    156.274 us/op
    p(100.0000) =    156.274 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.75)

# Run progress: 14.02% complete, ETA 00:39:46
# Fork: 1 of 2
# Warmup Iteration   1: 1716.613 us/op
# Warmup Iteration   2: 1390.730 us/op
# Warmup Iteration   3: 1058.531 us/op
# Warmup Iteration   4: 894.821 us/op
# Warmup Iteration   5: 855.295 us/op
Iteration   1: 110.672 us/op
Iteration   2: 151.731 us/op
Iteration   3: 141.845 us/op
Iteration   4: 132.608 us/op
Iteration   5: 109.585 us/op

# Run progress: 14.20% complete, ETA 00:39:41
# Fork: 2 of 2
# Warmup Iteration   1: 1830.121 us/op
# Warmup Iteration   2: 1233.983 us/op
# Warmup Iteration   3: 1087.292 us/op
# Warmup Iteration   4: 991.912 us/op
# Warmup Iteration   5: 934.916 us/op
Iteration   1: 107.213 us/op
Iteration   2: 113.186 us/op
Iteration   3: 117.196 us/op
Iteration   4: 121.777 us/op
Iteration   5: 110.294 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    121.611 ±(99.9%) 23.246 us/op

  Histogram, us/op:
    [100.000, 105.000) = 0 
    [105.000, 110.000) = 2 
    [110.000, 115.000) = 3 
    [115.000, 120.000) = 1 
    [120.000, 125.000) = 1 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 1 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 1 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    107.213 us/op
     p(50.0000) =    115.191 us/op
     p(90.0000) =    150.742 us/op
     p(95.0000) =    151.731 us/op
     p(99.0000) =    151.731 us/op
     p(99.9000) =    151.731 us/op
     p(99.9900) =    151.731 us/op
     p(99.9990) =    151.731 us/op
     p(99.9999) =    151.731 us/op
    p(100.0000) =    151.731 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.875)

# Run progress: 14.39% complete, ETA 00:39:35
# Fork: 1 of 2
# Warmup Iteration   1: 1726.847 us/op
# Warmup Iteration   2: 1415.254 us/op
# Warmup Iteration   3: 906.971 us/op
# Warmup Iteration   4: 890.451 us/op
# Warmup Iteration   5: 873.711 us/op
Iteration   1: 149.673 us/op
Iteration   2: 151.012 us/op
Iteration   3: 143.975 us/op
Iteration   4: 181.597 us/op
Iteration   5: 105.139 us/op

# Run progress: 14.58% complete, ETA 00:39:30
# Fork: 2 of 2
# Warmup Iteration   1: 1699.326 us/op
# Warmup Iteration   2: 1236.449 us/op
# Warmup Iteration   3: 1134.694 us/op
# Warmup Iteration   4: 1066.241 us/op
# Warmup Iteration   5: 940.866 us/op
Iteration   1: 109.436 us/op
Iteration   2: 114.366 us/op
Iteration   3: 115.495 us/op
Iteration   4: 113.755 us/op
Iteration   5: 118.658 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    130.311 ±(99.9%) 37.623 us/op

  Histogram, us/op:
    [100.000, 105.000) = 0 
    [105.000, 110.000) = 2 
    [110.000, 115.000) = 2 
    [115.000, 120.000) = 2 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 1 
    [145.000, 150.000) = 1 
    [150.000, 155.000) = 1 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 0 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 0 
    [180.000, 185.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    105.139 us/op
     p(50.0000) =    117.077 us/op
     p(90.0000) =    178.539 us/op
     p(95.0000) =    181.597 us/op
     p(99.0000) =    181.597 us/op
     p(99.9000) =    181.597 us/op
     p(99.9900) =    181.597 us/op
     p(99.9990) =    181.597 us/op
     p(99.9999) =    181.597 us/op
    p(100.0000) =    181.597 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 1)

# Run progress: 14.77% complete, ETA 00:39:25
# Fork: 1 of 2
# Warmup Iteration   1: 1927.456 us/op
# Warmup Iteration   2: 1260.010 us/op
# Warmup Iteration   3: 1111.842 us/op
# Warmup Iteration   4: 905.150 us/op
# Warmup Iteration   5: 855.051 us/op
Iteration   1: 120.951 us/op
Iteration   2: 167.736 us/op
Iteration   3: 133.882 us/op
Iteration   4: 104.125 us/op
Iteration   5: 135.375 us/op

# Run progress: 14.96% complete, ETA 00:39:19
# Fork: 2 of 2
# Warmup Iteration   1: 1689.855 us/op
# Warmup Iteration   2: 1368.300 us/op
# Warmup Iteration   3: 1108.115 us/op
# Warmup Iteration   4: 1028.191 us/op
# Warmup Iteration   5: 862.554 us/op
Iteration   1: 102.232 us/op
Iteration   2: 147.948 us/op
Iteration   3: 106.718 us/op
Iteration   4: 111.268 us/op
Iteration   5: 125.652 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    125.589 ±(99.9%) 31.991 us/op

  Histogram, us/op:
    [100.000, 105.000) = 2 
    [105.000, 110.000) = 1 
    [110.000, 115.000) = 1 
    [115.000, 120.000) = 0 
    [120.000, 125.000) = 1 
    [125.000, 130.000) = 1 
    [130.000, 135.000) = 1 
    [135.000, 140.000) = 1 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 1 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    102.232 us/op
     p(50.0000) =    123.302 us/op
     p(90.0000) =    165.757 us/op
     p(95.0000) =    167.736 us/op
     p(99.0000) =    167.736 us/op
     p(99.9000) =    167.736 us/op
     p(99.9900) =    167.736 us/op
     p(99.9990) =    167.736 us/op
     p(99.9999) =    167.736 us/op
    p(100.0000) =    167.736 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.125)

# Run progress: 15.15% complete, ETA 00:39:14
# Fork: 1 of 2
# Warmup Iteration   1: 3635.136 us/op
# Warmup Iteration   2: 1745.087 us/op
# Warmup Iteration   3: 1370.010 us/op
# Warmup Iteration   4: 1263.385 us/op
# Warmup Iteration   5: 1324.658 us/op
Iteration   1: 179.720 us/op
Iteration   2: 225.444 us/op
Iteration   3: 174.703 us/op
Iteration   4: 218.213 us/op
Iteration   5: 173.914 us/op

# Run progress: 15.34% complete, ETA 00:39:09
# Fork: 2 of 2
# Warmup Iteration   1: 3262.336 us/op
# Warmup Iteration   2: 1629.352 us/op
# Warmup Iteration   3: 1484.033 us/op
# Warmup Iteration   4: 1310.662 us/op
# Warmup Iteration   5: 1282.951 us/op
Iteration   1: 184.149 us/op
Iteration   2: 207.164 us/op
Iteration   3: 188.368 us/op
Iteration   4: 195.195 us/op
Iteration   5: 171.926 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    191.880 ±(99.9%) 28.952 us/op

  Histogram, us/op:
    [170.000, 175.000) = 3 
    [175.000, 180.000) = 1 
    [180.000, 185.000) = 1 
    [185.000, 190.000) = 1 
    [190.000, 195.000) = 0 
    [195.000, 200.000) = 1 
    [200.000, 205.000) = 0 
    [205.000, 210.000) = 1 
    [210.000, 215.000) = 0 
    [215.000, 220.000) = 1 
    [220.000, 225.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    171.926 us/op
     p(50.0000) =    186.259 us/op
     p(90.0000) =    224.721 us/op
     p(95.0000) =    225.444 us/op
     p(99.0000) =    225.444 us/op
     p(99.9000) =    225.444 us/op
     p(99.9900) =    225.444 us/op
     p(99.9990) =    225.444 us/op
     p(99.9999) =    225.444 us/op
    p(100.0000) =    225.444 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.250)

# Run progress: 15.53% complete, ETA 00:39:03
# Fork: 1 of 2
# Warmup Iteration   1: 1724.634 us/op
# Warmup Iteration   2: 1287.530 us/op
# Warmup Iteration   3: 1155.837 us/op
# Warmup Iteration   4: 1143.048 us/op
# Warmup Iteration   5: 1082.313 us/op
Iteration   1: 181.203 us/op
Iteration   2: 229.247 us/op
Iteration   3: 217.584 us/op
Iteration   4: 174.803 us/op
Iteration   5: 247.609 us/op

# Run progress: 15.72% complete, ETA 00:38:58
# Fork: 2 of 2
# Warmup Iteration   1: 1910.601 us/op
# Warmup Iteration   2: 1293.067 us/op
# Warmup Iteration   3: 981.171 us/op
# Warmup Iteration   4: 943.932 us/op
# Warmup Iteration   5: 928.885 us/op
Iteration   1: 173.409 us/op
Iteration   2: 217.645 us/op
Iteration   3: 180.169 us/op
Iteration   4: 176.060 us/op
Iteration   5: 177.932 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    197.566 ±(99.9%) 41.655 us/op

  Histogram, us/op:
    [170.000, 175.000) = 2 
    [175.000, 180.000) = 2 
    [180.000, 185.000) = 2 
    [185.000, 190.000) = 0 
    [190.000, 195.000) = 0 
    [195.000, 200.000) = 0 
    [200.000, 205.000) = 0 
    [205.000, 210.000) = 0 
    [210.000, 215.000) = 0 
    [215.000, 220.000) = 2 
    [220.000, 225.000) = 0 
    [225.000, 230.000) = 1 
    [230.000, 235.000) = 0 
    [235.000, 240.000) = 0 
    [240.000, 245.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    173.409 us/op
     p(50.0000) =    180.686 us/op
     p(90.0000) =    245.773 us/op
     p(95.0000) =    247.609 us/op
     p(99.0000) =    247.609 us/op
     p(99.9000) =    247.609 us/op
     p(99.9900) =    247.609 us/op
     p(99.9990) =    247.609 us/op
     p(99.9999) =    247.609 us/op
    p(100.0000) =    247.609 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.375)

# Run progress: 15.91% complete, ETA 00:38:53
# Fork: 1 of 2
# Warmup Iteration   1: 1726.948 us/op
# Warmup Iteration   2: 1474.221 us/op
# Warmup Iteration   3: 977.821 us/op
# Warmup Iteration   4: 1024.595 us/op
# Warmup Iteration   5: 915.019 us/op
Iteration   1: 167.861 us/op
Iteration   2: 240.851 us/op
Iteration   3: 252.473 us/op
Iteration   4: 191.316 us/op
Iteration   5: 190.164 us/op

# Run progress: 16.10% complete, ETA 00:38:48
# Fork: 2 of 2
# Warmup Iteration   1: 1977.061 us/op
# Warmup Iteration   2: 1254.627 us/op
# Warmup Iteration   3: 1192.474 us/op
# Warmup Iteration   4: 1050.380 us/op
# Warmup Iteration   5: 915.413 us/op
Iteration   1: 172.031 us/op
Iteration   2: 210.544 us/op
Iteration   3: 257.606 us/op
Iteration   4: 233.660 us/op
Iteration   5: 198.906 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    211.541 ±(99.9%) 49.483 us/op

  Histogram, us/op:
    [160.000, 170.000) = 1 
    [170.000, 180.000) = 1 
    [180.000, 190.000) = 0 
    [190.000, 200.000) = 3 
    [200.000, 210.000) = 0 
    [210.000, 220.000) = 1 
    [220.000, 230.000) = 0 
    [230.000, 240.000) = 1 
    [240.000, 250.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    167.861 us/op
     p(50.0000) =    204.725 us/op
     p(90.0000) =    257.093 us/op
     p(95.0000) =    257.606 us/op
     p(99.0000) =    257.606 us/op
     p(99.9000) =    257.606 us/op
     p(99.9900) =    257.606 us/op
     p(99.9990) =    257.606 us/op
     p(99.9999) =    257.606 us/op
    p(100.0000) =    257.606 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.5)

# Run progress: 16.29% complete, ETA 00:38:42
# Fork: 1 of 2
# Warmup Iteration   1: 1631.441 us/op
# Warmup Iteration   2: 1275.630 us/op
# Warmup Iteration   3: 1165.899 us/op
# Warmup Iteration   4: 1046.945 us/op
# Warmup Iteration   5: 938.811 us/op
Iteration   1: 166.800 us/op
Iteration   2: 236.426 us/op
Iteration   3: 178.451 us/op
Iteration   4: 186.622 us/op
Iteration   5: 222.112 us/op

# Run progress: 16.48% complete, ETA 00:38:37
# Fork: 2 of 2
# Warmup Iteration   1: 1716.950 us/op
# Warmup Iteration   2: 1379.529 us/op
# Warmup Iteration   3: 1219.744 us/op
# Warmup Iteration   4: 1004.590 us/op
# Warmup Iteration   5: 917.274 us/op
Iteration   1: 260.101 us/op
Iteration   2: 282.765 us/op
Iteration   3: 192.140 us/op
Iteration   4: 171.082 us/op
Iteration   5: 199.128 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    209.563 ±(99.9%) 59.645 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 0 
    [125.000, 137.500) = 0 
    [137.500, 150.000) = 0 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 2 
    [175.000, 187.500) = 2 
    [187.500, 200.000) = 2 
    [200.000, 212.500) = 0 
    [212.500, 225.000) = 1 
    [225.000, 237.500) = 1 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 1 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 1 

  Percentiles, us/op:
      p(0.0000) =    166.800 us/op
     p(50.0000) =    195.634 us/op
     p(90.0000) =    280.499 us/op
     p(95.0000) =    282.765 us/op
     p(99.0000) =    282.765 us/op
     p(99.9000) =    282.765 us/op
     p(99.9900) =    282.765 us/op
     p(99.9990) =    282.765 us/op
     p(99.9999) =    282.765 us/op
    p(100.0000) =    282.765 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.625)

# Run progress: 16.67% complete, ETA 00:38:32
# Fork: 1 of 2
# Warmup Iteration   1: 2200.539 us/op
# Warmup Iteration   2: 1202.510 us/op
# Warmup Iteration   3: 1099.439 us/op
# Warmup Iteration   4: 1057.435 us/op
# Warmup Iteration   5: 902.023 us/op
Iteration   1: 183.197 us/op
Iteration   2: 235.134 us/op
Iteration   3: 202.337 us/op
Iteration   4: 169.896 us/op
Iteration   5: 179.469 us/op

# Run progress: 16.86% complete, ETA 00:38:27
# Fork: 2 of 2
# Warmup Iteration   1: 1776.422 us/op
# Warmup Iteration   2: 1306.039 us/op
# Warmup Iteration   3: 1215.313 us/op
# Warmup Iteration   4: 1124.691 us/op
# Warmup Iteration   5: 909.060 us/op
Iteration   1: 167.581 us/op
Iteration   2: 210.675 us/op
Iteration   3: 177.579 us/op
Iteration   4: 176.353 us/op
Iteration   5: 174.050 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    187.627 ±(99.9%) 32.735 us/op

  Histogram, us/op:
    [160.000, 165.000) = 0 
    [165.000, 170.000) = 2 
    [170.000, 175.000) = 1 
    [175.000, 180.000) = 3 
    [180.000, 185.000) = 1 
    [185.000, 190.000) = 0 
    [190.000, 195.000) = 0 
    [195.000, 200.000) = 0 
    [200.000, 205.000) = 1 
    [205.000, 210.000) = 0 
    [210.000, 215.000) = 1 
    [215.000, 220.000) = 0 
    [220.000, 225.000) = 0 
    [225.000, 230.000) = 0 
    [230.000, 235.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    167.581 us/op
     p(50.0000) =    178.524 us/op
     p(90.0000) =    232.688 us/op
     p(95.0000) =    235.134 us/op
     p(99.0000) =    235.134 us/op
     p(99.9000) =    235.134 us/op
     p(99.9900) =    235.134 us/op
     p(99.9990) =    235.134 us/op
     p(99.9999) =    235.134 us/op
    p(100.0000) =    235.134 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.75)

# Run progress: 17.05% complete, ETA 00:38:21
# Fork: 1 of 2
# Warmup Iteration   1: 1803.773 us/op
# Warmup Iteration   2: 1410.088 us/op
# Warmup Iteration   3: 1146.020 us/op
# Warmup Iteration   4: 1109.179 us/op
# Warmup Iteration   5: 896.513 us/op
Iteration   1: 168.363 us/op
Iteration   2: 229.942 us/op
Iteration   3: 210.789 us/op
Iteration   4: 210.801 us/op
Iteration   5: 207.009 us/op

# Run progress: 17.23% complete, ETA 00:38:16
# Fork: 2 of 2
# Warmup Iteration   1: 1874.437 us/op
# Warmup Iteration   2: 1377.870 us/op
# Warmup Iteration   3: 998.433 us/op
# Warmup Iteration   4: 931.487 us/op
# Warmup Iteration   5: 902.052 us/op
Iteration   1: 209.327 us/op
Iteration   2: 285.050 us/op
Iteration   3: 188.978 us/op
Iteration   4: 169.277 us/op
Iteration   5: 173.370 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    205.291 ±(99.9%) 52.842 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 0 
    [125.000, 137.500) = 0 
    [137.500, 150.000) = 0 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 3 
    [175.000, 187.500) = 0 
    [187.500, 200.000) = 1 
    [200.000, 212.500) = 4 
    [212.500, 225.000) = 0 
    [225.000, 237.500) = 1 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 1 

  Percentiles, us/op:
      p(0.0000) =    168.363 us/op
     p(50.0000) =    208.168 us/op
     p(90.0000) =    279.539 us/op
     p(95.0000) =    285.050 us/op
     p(99.0000) =    285.050 us/op
     p(99.9000) =    285.050 us/op
     p(99.9900) =    285.050 us/op
     p(99.9990) =    285.050 us/op
     p(99.9999) =    285.050 us/op
    p(100.0000) =    285.050 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.875)

# Run progress: 17.42% complete, ETA 00:38:11
# Fork: 1 of 2
# Warmup Iteration   1: 1717.390 us/op
# Warmup Iteration   2: 1448.905 us/op
# Warmup Iteration   3: 1226.311 us/op
# Warmup Iteration   4: 1087.060 us/op
# Warmup Iteration   5: 917.137 us/op
Iteration   1: 166.683 us/op
Iteration   2: 321.099 us/op
Iteration   3: 216.225 us/op
Iteration   4: 175.053 us/op
Iteration   5: 205.486 us/op

# Run progress: 17.61% complete, ETA 00:38:05
# Fork: 2 of 2
# Warmup Iteration   1: 1746.260 us/op
# Warmup Iteration   2: 1275.474 us/op
# Warmup Iteration   3: 1246.336 us/op
# Warmup Iteration   4: 1097.466 us/op
# Warmup Iteration   5: 919.667 us/op
Iteration   1: 182.467 us/op
Iteration   2: 216.859 us/op
Iteration   3: 202.631 us/op
Iteration   4: 248.535 us/op
Iteration   5: 179.054 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    211.409 ±(99.9%) 69.065 us/op

  Histogram, us/op:
    [100.000, 125.000) = 0 
    [125.000, 150.000) = 0 
    [150.000, 175.000) = 1 
    [175.000, 200.000) = 3 
    [200.000, 225.000) = 4 
    [225.000, 250.000) = 1 
    [250.000, 275.000) = 0 
    [275.000, 300.000) = 0 
    [300.000, 325.000) = 1 
    [325.000, 350.000) = 0 
    [350.000, 375.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    166.683 us/op
     p(50.0000) =    204.058 us/op
     p(90.0000) =    313.843 us/op
     p(95.0000) =    321.099 us/op
     p(99.0000) =    321.099 us/op
     p(99.9000) =    321.099 us/op
     p(99.9900) =    321.099 us/op
     p(99.9990) =    321.099 us/op
     p(99.9999) =    321.099 us/op
    p(100.0000) =    321.099 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 1)

# Run progress: 17.80% complete, ETA 00:38:00
# Fork: 1 of 2
# Warmup Iteration   1: 1988.526 us/op
# Warmup Iteration   2: 1355.921 us/op
# Warmup Iteration   3: 1142.399 us/op
# Warmup Iteration   4: 945.172 us/op
# Warmup Iteration   5: 905.284 us/op
Iteration   1: 184.098 us/op
Iteration   2: 198.249 us/op
Iteration   3: 240.875 us/op
Iteration   4: 174.222 us/op
Iteration   5: 193.105 us/op

# Run progress: 17.99% complete, ETA 00:37:55
# Fork: 2 of 2
# Warmup Iteration   1: 1982.264 us/op
# Warmup Iteration   2: 1557.214 us/op
# Warmup Iteration   3: 1292.305 us/op
# Warmup Iteration   4: 995.726 us/op
# Warmup Iteration   5: 983.304 us/op
Iteration   1: 182.775 us/op
Iteration   2: 180.266 us/op
Iteration   3: 188.815 us/op
Iteration   4: 184.690 us/op
Iteration   5: 189.035 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    191.613 ±(99.9%) 28.064 us/op

  Histogram, us/op:
    [170.000, 175.000) = 1 
    [175.000, 180.000) = 0 
    [180.000, 185.000) = 4 
    [185.000, 190.000) = 2 
    [190.000, 195.000) = 1 
    [195.000, 200.000) = 1 
    [200.000, 205.000) = 0 
    [205.000, 210.000) = 0 
    [210.000, 215.000) = 0 
    [215.000, 220.000) = 0 
    [220.000, 225.000) = 0 
    [225.000, 230.000) = 0 
    [230.000, 235.000) = 0 
    [235.000, 240.000) = 0 
    [240.000, 245.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    174.222 us/op
     p(50.0000) =    186.753 us/op
     p(90.0000) =    236.612 us/op
     p(95.0000) =    240.875 us/op
     p(99.0000) =    240.875 us/op
     p(99.9000) =    240.875 us/op
     p(99.9900) =    240.875 us/op
     p(99.9990) =    240.875 us/op
     p(99.9999) =    240.875 us/op
    p(100.0000) =    240.875 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.125)

# Run progress: 18.18% complete, ETA 00:37:50
# Fork: 1 of 2
# Warmup Iteration   1: 1745.297 us/op
# Warmup Iteration   2: 1391.110 us/op
# Warmup Iteration   3: 1247.195 us/op
# Warmup Iteration   4: 1117.311 us/op
# Warmup Iteration   5: 990.245 us/op
Iteration   1: 327.022 us/op
Iteration   2: 315.188 us/op
Iteration   3: 266.789 us/op
Iteration   4: 308.445 us/op
Iteration   5: 264.315 us/op

# Run progress: 18.37% complete, ETA 00:37:44
# Fork: 2 of 2
# Warmup Iteration   1: 1804.634 us/op
# Warmup Iteration   2: 1386.036 us/op
# Warmup Iteration   3: 1255.978 us/op
# Warmup Iteration   4: 1106.770 us/op
# Warmup Iteration   5: 1026.407 us/op
Iteration   1: 262.845 us/op
Iteration   2: 339.695 us/op
Iteration   3: 270.295 us/op
Iteration   4: 265.042 us/op
Iteration   5: 286.141 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    290.578 ±(99.9%) 44.432 us/op

  Histogram, us/op:
    [260.000, 265.000) = 2 
    [265.000, 270.000) = 2 
    [270.000, 275.000) = 1 
    [275.000, 280.000) = 0 
    [280.000, 285.000) = 0 
    [285.000, 290.000) = 1 
    [290.000, 295.000) = 0 
    [295.000, 300.000) = 0 
    [300.000, 305.000) = 0 
    [305.000, 310.000) = 1 
    [310.000, 315.000) = 0 
    [315.000, 320.000) = 1 
    [320.000, 325.000) = 0 
    [325.000, 330.000) = 1 
    [330.000, 335.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    262.845 us/op
     p(50.0000) =    278.218 us/op
     p(90.0000) =    338.428 us/op
     p(95.0000) =    339.695 us/op
     p(99.0000) =    339.695 us/op
     p(99.9000) =    339.695 us/op
     p(99.9900) =    339.695 us/op
     p(99.9990) =    339.695 us/op
     p(99.9999) =    339.695 us/op
    p(100.0000) =    339.695 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.250)

# Run progress: 18.56% complete, ETA 00:37:39
# Fork: 1 of 2
# Warmup Iteration   1: 1885.457 us/op
# Warmup Iteration   2: 1380.674 us/op
# Warmup Iteration   3: 1353.187 us/op
# Warmup Iteration   4: 1063.565 us/op
# Warmup Iteration   5: 1023.383 us/op
Iteration   1: 253.700 us/op
Iteration   2: 346.351 us/op
Iteration   3: 254.916 us/op
Iteration   4: 304.329 us/op
Iteration   5: 267.132 us/op

# Run progress: 18.75% complete, ETA 00:37:34
# Fork: 2 of 2
# Warmup Iteration   1: 1695.707 us/op
# Warmup Iteration   2: 1326.451 us/op
# Warmup Iteration   3: 1190.135 us/op
# Warmup Iteration   4: 1145.402 us/op
# Warmup Iteration   5: 1013.021 us/op
Iteration   1: 261.685 us/op
Iteration   2: 303.619 us/op
Iteration   3: 255.242 us/op
Iteration   4: 298.248 us/op
Iteration   5: 261.682 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    280.690 ±(99.9%) 46.873 us/op

  Histogram, us/op:
    [250.000, 260.000) = 3 
    [260.000, 270.000) = 3 
    [270.000, 280.000) = 0 
    [280.000, 290.000) = 0 
    [290.000, 300.000) = 1 
    [300.000, 310.000) = 2 
    [310.000, 320.000) = 0 
    [320.000, 330.000) = 0 
    [330.000, 340.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    253.700 us/op
     p(50.0000) =    264.409 us/op
     p(90.0000) =    342.149 us/op
     p(95.0000) =    346.351 us/op
     p(99.0000) =    346.351 us/op
     p(99.9000) =    346.351 us/op
     p(99.9900) =    346.351 us/op
     p(99.9990) =    346.351 us/op
     p(99.9999) =    346.351 us/op
    p(100.0000) =    346.351 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.375)

# Run progress: 18.94% complete, ETA 00:37:29
# Fork: 1 of 2
# Warmup Iteration   1: 1817.817 us/op
# Warmup Iteration   2: 1351.162 us/op
# Warmup Iteration   3: 1221.008 us/op
# Warmup Iteration   4: 1168.138 us/op
# Warmup Iteration   5: 989.697 us/op
Iteration   1: 251.061 us/op
Iteration   2: 323.074 us/op
Iteration   3: 289.079 us/op
Iteration   4: 270.648 us/op
Iteration   5: 258.105 us/op

# Run progress: 19.13% complete, ETA 00:37:23
# Fork: 2 of 2
# Warmup Iteration   1: 1792.797 us/op
# Warmup Iteration   2: 1484.029 us/op
# Warmup Iteration   3: 1361.952 us/op
# Warmup Iteration   4: 1099.222 us/op
# Warmup Iteration   5: 1024.523 us/op
Iteration   1: 267.900 us/op
Iteration   2: 328.700 us/op
Iteration   3: 270.491 us/op
Iteration   4: 276.545 us/op
Iteration   5: 265.536 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    280.114 ±(99.9%) 39.590 us/op

  Histogram, us/op:
    [250.000, 255.000) = 1 
    [255.000, 260.000) = 1 
    [260.000, 265.000) = 0 
    [265.000, 270.000) = 2 
    [270.000, 275.000) = 2 
    [275.000, 280.000) = 1 
    [280.000, 285.000) = 0 
    [285.000, 290.000) = 1 
    [290.000, 295.000) = 0 
    [295.000, 300.000) = 0 
    [300.000, 305.000) = 0 
    [305.000, 310.000) = 0 
    [310.000, 315.000) = 0 
    [315.000, 320.000) = 0 
    [320.000, 325.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    251.061 us/op
     p(50.0000) =    270.570 us/op
     p(90.0000) =    328.137 us/op
     p(95.0000) =    328.700 us/op
     p(99.0000) =    328.700 us/op
     p(99.9000) =    328.700 us/op
     p(99.9900) =    328.700 us/op
     p(99.9990) =    328.700 us/op
     p(99.9999) =    328.700 us/op
    p(100.0000) =    328.700 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.5)

# Run progress: 19.32% complete, ETA 00:37:18
# Fork: 1 of 2
# Warmup Iteration   1: 1813.988 us/op
# Warmup Iteration   2: 1355.873 us/op
# Warmup Iteration   3: 1265.806 us/op
# Warmup Iteration   4: 1248.054 us/op
# Warmup Iteration   5: 992.280 us/op
Iteration   1: 333.938 us/op
Iteration   2: 308.400 us/op
Iteration   3: 327.394 us/op
Iteration   4: 325.127 us/op
Iteration   5: 287.016 us/op

# Run progress: 19.51% complete, ETA 00:37:13
# Fork: 2 of 2
# Warmup Iteration   1: 1915.490 us/op
# Warmup Iteration   2: 1425.597 us/op
# Warmup Iteration   3: 1254.122 us/op
# Warmup Iteration   4: 1105.380 us/op
# Warmup Iteration   5: 1027.543 us/op
Iteration   1: 254.065 us/op
Iteration   2: 334.438 us/op
Iteration   3: 309.483 us/op
Iteration   4: 271.303 us/op
Iteration   5: 283.002 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    303.417 ±(99.9%) 42.626 us/op

  Histogram, us/op:
    [250.000, 255.000) = 1 
    [255.000, 260.000) = 0 
    [260.000, 265.000) = 0 
    [265.000, 270.000) = 0 
    [270.000, 275.000) = 1 
    [275.000, 280.000) = 0 
    [280.000, 285.000) = 1 
    [285.000, 290.000) = 1 
    [290.000, 295.000) = 0 
    [295.000, 300.000) = 0 
    [300.000, 305.000) = 0 
    [305.000, 310.000) = 2 
    [310.000, 315.000) = 0 
    [315.000, 320.000) = 0 
    [320.000, 325.000) = 0 
    [325.000, 330.000) = 2 
    [330.000, 335.000) = 2 

  Percentiles, us/op:
      p(0.0000) =    254.065 us/op
     p(50.0000) =    308.942 us/op
     p(90.0000) =    334.388 us/op
     p(95.0000) =    334.438 us/op
     p(99.0000) =    334.438 us/op
     p(99.9000) =    334.438 us/op
     p(99.9900) =    334.438 us/op
     p(99.9990) =    334.438 us/op
     p(99.9999) =    334.438 us/op
    p(100.0000) =    334.438 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.625)

# Run progress: 19.70% complete, ETA 00:37:07
# Fork: 1 of 2
# Warmup Iteration   1: 1732.844 us/op
# Warmup Iteration   2: 1487.294 us/op
# Warmup Iteration   3: 1320.341 us/op
# Warmup Iteration   4: 1037.996 us/op
# Warmup Iteration   5: 1000.135 us/op
Iteration   1: 256.165 us/op
Iteration   2: 327.898 us/op
Iteration   3: 269.641 us/op
Iteration   4: 273.260 us/op
Iteration   5: 284.631 us/op

# Run progress: 19.89% complete, ETA 00:37:02
# Fork: 2 of 2
# Warmup Iteration   1: 1722.667 us/op
# Warmup Iteration   2: 1373.424 us/op
# Warmup Iteration   3: 1255.187 us/op
# Warmup Iteration   4: 984.705 us/op
# Warmup Iteration   5: 980.258 us/op
Iteration   1: 255.759 us/op
Iteration   2: 317.901 us/op
Iteration   3: 284.151 us/op
Iteration   4: 282.059 us/op
Iteration   5: 271.185 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    282.265 ±(99.9%) 36.019 us/op

  Histogram, us/op:
    [250.000, 255.000) = 0 
    [255.000, 260.000) = 2 
    [260.000, 265.000) = 0 
    [265.000, 270.000) = 1 
    [270.000, 275.000) = 2 
    [275.000, 280.000) = 0 
    [280.000, 285.000) = 3 
    [285.000, 290.000) = 0 
    [290.000, 295.000) = 0 
    [295.000, 300.000) = 0 
    [300.000, 305.000) = 0 
    [305.000, 310.000) = 0 
    [310.000, 315.000) = 0 
    [315.000, 320.000) = 1 
    [320.000, 325.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    255.759 us/op
     p(50.0000) =    277.660 us/op
     p(90.0000) =    326.898 us/op
     p(95.0000) =    327.898 us/op
     p(99.0000) =    327.898 us/op
     p(99.9000) =    327.898 us/op
     p(99.9900) =    327.898 us/op
     p(99.9990) =    327.898 us/op
     p(99.9999) =    327.898 us/op
    p(100.0000) =    327.898 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.75)

# Run progress: 20.08% complete, ETA 00:36:57
# Fork: 1 of 2
# Warmup Iteration   1: 1900.763 us/op
# Warmup Iteration   2: 1385.010 us/op
# Warmup Iteration   3: 1254.039 us/op
# Warmup Iteration   4: 977.313 us/op
# Warmup Iteration   5: 988.274 us/op
Iteration   1: 247.062 us/op
Iteration   2: 317.443 us/op
Iteration   3: 270.256 us/op
Iteration   4: 285.366 us/op
Iteration   5: 292.103 us/op

# Run progress: 20.27% complete, ETA 00:36:52
# Fork: 2 of 2
# Warmup Iteration   1: 1853.077 us/op
# Warmup Iteration   2: 1457.945 us/op
# Warmup Iteration   3: 1256.583 us/op
# Warmup Iteration   4: 1171.452 us/op
# Warmup Iteration   5: 1007.851 us/op
Iteration   1: 255.661 us/op
Iteration   2: 310.404 us/op
Iteration   3: 307.526 us/op
Iteration   4: 264.460 us/op
Iteration   5: 257.628 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    280.791 ±(99.9%) 38.272 us/op

  Histogram, us/op:
    [240.000, 245.000) = 0 
    [245.000, 250.000) = 1 
    [250.000, 255.000) = 0 
    [255.000, 260.000) = 2 
    [260.000, 265.000) = 1 
    [265.000, 270.000) = 0 
    [270.000, 275.000) = 1 
    [275.000, 280.000) = 0 
    [280.000, 285.000) = 0 
    [285.000, 290.000) = 1 
    [290.000, 295.000) = 1 
    [295.000, 300.000) = 0 
    [300.000, 305.000) = 0 
    [305.000, 310.000) = 1 
    [310.000, 315.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    247.062 us/op
     p(50.0000) =    277.811 us/op
     p(90.0000) =    316.739 us/op
     p(95.0000) =    317.443 us/op
     p(99.0000) =    317.443 us/op
     p(99.9000) =    317.443 us/op
     p(99.9900) =    317.443 us/op
     p(99.9990) =    317.443 us/op
     p(99.9999) =    317.443 us/op
    p(100.0000) =    317.443 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.875)

# Run progress: 20.45% complete, ETA 00:36:46
# Fork: 1 of 2
# Warmup Iteration   1: 1880.292 us/op
# Warmup Iteration   2: 1488.064 us/op
# Warmup Iteration   3: 1275.931 us/op
# Warmup Iteration   4: 1073.970 us/op
# Warmup Iteration   5: 1043.540 us/op
Iteration   1: 258.417 us/op
Iteration   2: 307.663 us/op
Iteration   3: 295.942 us/op
Iteration   4: 255.419 us/op
Iteration   5: 257.523 us/op

# Run progress: 20.64% complete, ETA 00:36:41
# Fork: 2 of 2
# Warmup Iteration   1: 1800.329 us/op
# Warmup Iteration   2: 1427.637 us/op
# Warmup Iteration   3: 1224.208 us/op
# Warmup Iteration   4: 1197.246 us/op
# Warmup Iteration   5: 1029.953 us/op
Iteration   1: 263.984 us/op
Iteration   2: 304.111 us/op
Iteration   3: 260.467 us/op
Iteration   4: 277.719 us/op
Iteration   5: 276.145 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    275.739 ±(99.9%) 30.457 us/op

  Histogram, us/op:
    [250.000, 255.000) = 0 
    [255.000, 260.000) = 3 
    [260.000, 265.000) = 2 
    [265.000, 270.000) = 0 
    [270.000, 275.000) = 0 
    [275.000, 280.000) = 2 
    [280.000, 285.000) = 0 
    [285.000, 290.000) = 0 
    [290.000, 295.000) = 0 
    [295.000, 300.000) = 1 
    [300.000, 305.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    255.419 us/op
     p(50.0000) =    270.064 us/op
     p(90.0000) =    307.308 us/op
     p(95.0000) =    307.663 us/op
     p(99.0000) =    307.663 us/op
     p(99.9000) =    307.663 us/op
     p(99.9900) =    307.663 us/op
     p(99.9990) =    307.663 us/op
     p(99.9999) =    307.663 us/op
    p(100.0000) =    307.663 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 1)

# Run progress: 20.83% complete, ETA 00:36:36
# Fork: 1 of 2
# Warmup Iteration   1: 1821.045 us/op
# Warmup Iteration   2: 1399.640 us/op
# Warmup Iteration   3: 1323.457 us/op
# Warmup Iteration   4: 1125.443 us/op
# Warmup Iteration   5: 1031.311 us/op
Iteration   1: 257.938 us/op
Iteration   2: 327.608 us/op
Iteration   3: 306.280 us/op
Iteration   4: 263.057 us/op
Iteration   5: 265.580 us/op

# Run progress: 21.02% complete, ETA 00:36:31
# Fork: 2 of 2
# Warmup Iteration   1: 1876.675 us/op
# Warmup Iteration   2: 1428.381 us/op
# Warmup Iteration   3: 1389.811 us/op
# Warmup Iteration   4: 1077.770 us/op
# Warmup Iteration   5: 1017.594 us/op
Iteration   1: 291.217 us/op
Iteration   2: 349.494 us/op
Iteration   3: 314.297 us/op
Iteration   4: 277.287 us/op
Iteration   5: 265.586 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    291.834 ±(99.9%) 47.503 us/op

  Histogram, us/op:
    [250.000, 260.000) = 1 
    [260.000, 270.000) = 3 
    [270.000, 280.000) = 1 
    [280.000, 290.000) = 0 
    [290.000, 300.000) = 1 
    [300.000, 310.000) = 1 
    [310.000, 320.000) = 1 
    [320.000, 330.000) = 1 
    [330.000, 340.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    257.938 us/op
     p(50.0000) =    284.252 us/op
     p(90.0000) =    347.305 us/op
     p(95.0000) =    349.494 us/op
     p(99.0000) =    349.494 us/op
     p(99.9000) =    349.494 us/op
     p(99.9900) =    349.494 us/op
     p(99.9990) =    349.494 us/op
     p(99.9999) =    349.494 us/op
    p(100.0000) =    349.494 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.125)

# Run progress: 21.21% complete, ETA 00:36:25
# Fork: 1 of 2
# Warmup Iteration   1: 2597.841 us/op
# Warmup Iteration   2: 2243.701 us/op
# Warmup Iteration   3: 2297.588 us/op
# Warmup Iteration   4: 1605.478 us/op
# Warmup Iteration   5: 1758.984 us/op
Iteration   1: 777.458 us/op
Iteration   2: 847.726 us/op
Iteration   3: 790.748 us/op
Iteration   4: 851.009 us/op
Iteration   5: 811.247 us/op

# Run progress: 21.40% complete, ETA 00:36:20
# Fork: 2 of 2
# Warmup Iteration   1: 2492.275 us/op
# Warmup Iteration   2: 2239.359 us/op
# Warmup Iteration   3: 2316.057 us/op
# Warmup Iteration   4: 1627.011 us/op
# Warmup Iteration   5: 1794.014 us/op
Iteration   1: 800.079 us/op
Iteration   2: 861.274 us/op
Iteration   3: 821.502 us/op
Iteration   4: 809.469 us/op
Iteration   5: 805.996 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    817.651 ±(99.9%) 41.639 us/op

  Histogram, us/op:
    [770.000, 780.000) = 1 
    [780.000, 790.000) = 0 
    [790.000, 800.000) = 1 
    [800.000, 810.000) = 3 
    [810.000, 820.000) = 1 
    [820.000, 830.000) = 1 
    [830.000, 840.000) = 0 
    [840.000, 850.000) = 1 
    [850.000, 860.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    777.458 us/op
     p(50.0000) =    810.358 us/op
     p(90.0000) =    860.248 us/op
     p(95.0000) =    861.274 us/op
     p(99.0000) =    861.274 us/op
     p(99.9000) =    861.274 us/op
     p(99.9900) =    861.274 us/op
     p(99.9990) =    861.274 us/op
     p(99.9999) =    861.274 us/op
    p(100.0000) =    861.274 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.250)

# Run progress: 21.59% complete, ETA 00:36:15
# Fork: 1 of 2
# Warmup Iteration   1: 2446.983 us/op
# Warmup Iteration   2: 2152.335 us/op
# Warmup Iteration   3: 2030.345 us/op
# Warmup Iteration   4: 1600.722 us/op
# Warmup Iteration   5: 1723.037 us/op
Iteration   1: 799.030 us/op
Iteration   2: 827.859 us/op
Iteration   3: 779.905 us/op
Iteration   4: 781.500 us/op
Iteration   5: 793.965 us/op

# Run progress: 21.78% complete, ETA 00:36:10
# Fork: 2 of 2
# Warmup Iteration   1: 2612.330 us/op
# Warmup Iteration   2: 2119.403 us/op
# Warmup Iteration   3: 2405.050 us/op
# Warmup Iteration   4: 1616.253 us/op
# Warmup Iteration   5: 1774.131 us/op
Iteration   1: 781.375 us/op
Iteration   2: 846.337 us/op
Iteration   3: 819.841 us/op
Iteration   4: 784.517 us/op
Iteration   5: 1060.466 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    827.480 ±(99.9%) 128.462 us/op

  Histogram, us/op:
    [ 700.000,  725.000) = 0 
    [ 725.000,  750.000) = 0 
    [ 750.000,  775.000) = 0 
    [ 775.000,  800.000) = 6 
    [ 800.000,  825.000) = 1 
    [ 825.000,  850.000) = 2 
    [ 850.000,  875.000) = 0 
    [ 875.000,  900.000) = 0 
    [ 900.000,  925.000) = 0 
    [ 925.000,  950.000) = 0 
    [ 950.000,  975.000) = 0 
    [ 975.000, 1000.000) = 0 
    [1000.000, 1025.000) = 0 
    [1025.000, 1050.000) = 0 
    [1050.000, 1075.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    779.905 us/op
     p(50.0000) =    796.498 us/op
     p(90.0000) =   1039.053 us/op
     p(95.0000) =   1060.466 us/op
     p(99.0000) =   1060.466 us/op
     p(99.9000) =   1060.466 us/op
     p(99.9900) =   1060.466 us/op
     p(99.9990) =   1060.466 us/op
     p(99.9999) =   1060.466 us/op
    p(100.0000) =   1060.466 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.375)

# Run progress: 21.97% complete, ETA 00:36:04
# Fork: 1 of 2
# Warmup Iteration   1: 2440.990 us/op
# Warmup Iteration   2: 2101.611 us/op
# Warmup Iteration   3: 2078.963 us/op
# Warmup Iteration   4: 1629.943 us/op
# Warmup Iteration   5: 1789.053 us/op
Iteration   1: 769.201 us/op
Iteration   2: 841.558 us/op
Iteration   3: 811.624 us/op
Iteration   4: 802.861 us/op
Iteration   5: 803.063 us/op

# Run progress: 22.16% complete, ETA 00:35:59
# Fork: 2 of 2
# Warmup Iteration   1: 2538.253 us/op
# Warmup Iteration   2: 2067.408 us/op
# Warmup Iteration   3: 2151.370 us/op
# Warmup Iteration   4: 1621.978 us/op
# Warmup Iteration   5: 1765.099 us/op
Iteration   1: 800.033 us/op
Iteration   2: 847.680 us/op
Iteration   3: 787.178 us/op
Iteration   4: 788.132 us/op
Iteration   5: 821.257 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    807.259 ±(99.9%) 36.799 us/op

  Histogram, us/op:
    [760.000, 765.000) = 0 
    [765.000, 770.000) = 1 
    [770.000, 775.000) = 0 
    [775.000, 780.000) = 0 
    [780.000, 785.000) = 0 
    [785.000, 790.000) = 2 
    [790.000, 795.000) = 0 
    [795.000, 800.000) = 0 
    [800.000, 805.000) = 3 
    [805.000, 810.000) = 0 
    [810.000, 815.000) = 1 
    [815.000, 820.000) = 0 
    [820.000, 825.000) = 1 
    [825.000, 830.000) = 0 
    [830.000, 835.000) = 0 
    [835.000, 840.000) = 0 
    [840.000, 845.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    769.201 us/op
     p(50.0000) =    802.962 us/op
     p(90.0000) =    847.068 us/op
     p(95.0000) =    847.680 us/op
     p(99.0000) =    847.680 us/op
     p(99.9000) =    847.680 us/op
     p(99.9900) =    847.680 us/op
     p(99.9990) =    847.680 us/op
     p(99.9999) =    847.680 us/op
    p(100.0000) =    847.680 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.5)

# Run progress: 22.35% complete, ETA 00:35:54
# Fork: 1 of 2
# Warmup Iteration   1: 2719.457 us/op
# Warmup Iteration   2: 2804.877 us/op
# Warmup Iteration   3: 2009.908 us/op
# Warmup Iteration   4: 2335.254 us/op
# Warmup Iteration   5: 2220.076 us/op
Iteration   1: 833.023 us/op
Iteration   2: 836.412 us/op
Iteration   3: 867.438 us/op
Iteration   4: 823.967 us/op
Iteration   5: 880.983 us/op

# Run progress: 22.54% complete, ETA 00:35:49
# Fork: 2 of 2
# Warmup Iteration   1: 2547.110 us/op
# Warmup Iteration   2: 1982.708 us/op
# Warmup Iteration   3: 2423.587 us/op
# Warmup Iteration   4: 1637.858 us/op
# Warmup Iteration   5: 1797.371 us/op
Iteration   1: 783.192 us/op
Iteration   2: 819.179 us/op
Iteration   3: 794.228 us/op
Iteration   4: 802.314 us/op
Iteration   5: 824.488 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    826.522 ±(99.9%) 46.054 us/op

  Histogram, us/op:
    [780.000, 790.000) = 1 
    [790.000, 800.000) = 1 
    [800.000, 810.000) = 1 
    [810.000, 820.000) = 1 
    [820.000, 830.000) = 2 
    [830.000, 840.000) = 2 
    [840.000, 850.000) = 0 
    [850.000, 860.000) = 0 
    [860.000, 870.000) = 1 
    [870.000, 880.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    783.192 us/op
     p(50.0000) =    824.228 us/op
     p(90.0000) =    879.628 us/op
     p(95.0000) =    880.983 us/op
     p(99.0000) =    880.983 us/op
     p(99.9000) =    880.983 us/op
     p(99.9900) =    880.983 us/op
     p(99.9990) =    880.983 us/op
     p(99.9999) =    880.983 us/op
    p(100.0000) =    880.983 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.625)

# Run progress: 22.73% complete, ETA 00:35:43
# Fork: 1 of 2
# Warmup Iteration   1: 2375.194 us/op
# Warmup Iteration   2: 2065.599 us/op
# Warmup Iteration   3: 2364.258 us/op
# Warmup Iteration   4: 1594.093 us/op
# Warmup Iteration   5: 1901.647 us/op
Iteration   1: 786.249 us/op
Iteration   2: 852.493 us/op
Iteration   3: 835.272 us/op
Iteration   4: 839.180 us/op
Iteration   5: 837.745 us/op

# Run progress: 22.92% complete, ETA 00:35:38
# Fork: 2 of 2
# Warmup Iteration   1: 2454.428 us/op
# Warmup Iteration   2: 2039.124 us/op
# Warmup Iteration   3: 2177.086 us/op
# Warmup Iteration   4: 1609.072 us/op
# Warmup Iteration   5: 1778.119 us/op
Iteration   1: 786.926 us/op
Iteration   2: 852.167 us/op
Iteration   3: 829.796 us/op
Iteration   4: 791.529 us/op
Iteration   5: 814.523 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    822.588 ±(99.9%) 39.389 us/op

  Histogram, us/op:
    [780.000, 785.000) = 0 
    [785.000, 790.000) = 2 
    [790.000, 795.000) = 1 
    [795.000, 800.000) = 0 
    [800.000, 805.000) = 0 
    [805.000, 810.000) = 0 
    [810.000, 815.000) = 1 
    [815.000, 820.000) = 0 
    [820.000, 825.000) = 0 
    [825.000, 830.000) = 1 
    [830.000, 835.000) = 0 
    [835.000, 840.000) = 3 
    [840.000, 845.000) = 0 
    [845.000, 850.000) = 0 
    [850.000, 855.000) = 2 

  Percentiles, us/op:
      p(0.0000) =    786.249 us/op
     p(50.0000) =    832.534 us/op
     p(90.0000) =    852.460 us/op
     p(95.0000) =    852.493 us/op
     p(99.0000) =    852.493 us/op
     p(99.9000) =    852.493 us/op
     p(99.9900) =    852.493 us/op
     p(99.9990) =    852.493 us/op
     p(99.9999) =    852.493 us/op
    p(100.0000) =    852.493 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.75)

# Run progress: 23.11% complete, ETA 00:35:33
# Fork: 1 of 2
# Warmup Iteration   1: 2538.613 us/op
# Warmup Iteration   2: 2089.316 us/op
# Warmup Iteration   3: 2419.363 us/op
# Warmup Iteration   4: 1657.685 us/op
# Warmup Iteration   5: 1760.545 us/op
Iteration   1: 795.545 us/op
Iteration   2: 888.863 us/op
Iteration   3: 825.455 us/op
Iteration   4: 819.264 us/op
Iteration   5: 812.121 us/op

# Run progress: 23.30% complete, ETA 00:35:28
# Fork: 2 of 2
# Warmup Iteration   1: 2915.045 us/op
# Warmup Iteration   2: 2144.363 us/op
# Warmup Iteration   3: 2204.518 us/op
# Warmup Iteration   4: 1643.209 us/op
# Warmup Iteration   5: 1783.168 us/op
Iteration   1: 794.807 us/op
Iteration   2: 933.904 us/op
Iteration   3: 856.893 us/op
Iteration   4: 878.942 us/op
Iteration   5: 869.913 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    847.571 ±(99.9%) 69.037 us/op

  Histogram, us/op:
    [ 700.000,  725.000) = 0 
    [ 725.000,  750.000) = 0 
    [ 750.000,  775.000) = 0 
    [ 775.000,  800.000) = 2 
    [ 800.000,  825.000) = 2 
    [ 825.000,  850.000) = 1 
    [ 850.000,  875.000) = 2 
    [ 875.000,  900.000) = 2 
    [ 900.000,  925.000) = 0 
    [ 925.000,  950.000) = 1 
    [ 950.000,  975.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    794.807 us/op
     p(50.0000) =    841.174 us/op
     p(90.0000) =    929.400 us/op
     p(95.0000) =    933.904 us/op
     p(99.0000) =    933.904 us/op
     p(99.9000) =    933.904 us/op
     p(99.9900) =    933.904 us/op
     p(99.9990) =    933.904 us/op
     p(99.9999) =    933.904 us/op
    p(100.0000) =    933.904 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.875)

# Run progress: 23.48% complete, ETA 00:35:23
# Fork: 1 of 2
# Warmup Iteration   1: 2479.336 us/op
# Warmup Iteration   2: 2203.788 us/op
# Warmup Iteration   3: 2274.656 us/op
# Warmup Iteration   4: 1648.088 us/op
# Warmup Iteration   5: 1765.864 us/op
Iteration   1: 798.865 us/op
Iteration   2: 889.500 us/op
Iteration   3: 809.329 us/op
Iteration   4: 811.351 us/op
Iteration   5: 811.681 us/op

# Run progress: 23.67% complete, ETA 00:35:17
# Fork: 2 of 2
# Warmup Iteration   1: 2505.728 us/op
# Warmup Iteration   2: 2038.748 us/op
# Warmup Iteration   3: 2363.031 us/op
# Warmup Iteration   4: 1596.493 us/op
# Warmup Iteration   5: 1790.508 us/op
Iteration   1: 954.737 us/op
Iteration   2: 850.033 us/op
Iteration   3: 877.799 us/op
Iteration   4: 807.632 us/op
Iteration   5: 816.632 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    842.756 ±(99.9%) 76.291 us/op

  Histogram, us/op:
    [ 700.000,  725.000) = 0 
    [ 725.000,  750.000) = 0 
    [ 750.000,  775.000) = 0 
    [ 775.000,  800.000) = 1 
    [ 800.000,  825.000) = 5 
    [ 825.000,  850.000) = 0 
    [ 850.000,  875.000) = 1 
    [ 875.000,  900.000) = 2 
    [ 900.000,  925.000) = 0 
    [ 925.000,  950.000) = 0 
    [ 950.000,  975.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    798.865 us/op
     p(50.0000) =    814.157 us/op
     p(90.0000) =    948.213 us/op
     p(95.0000) =    954.737 us/op
     p(99.0000) =    954.737 us/op
     p(99.9000) =    954.737 us/op
     p(99.9900) =    954.737 us/op
     p(99.9990) =    954.737 us/op
     p(99.9999) =    954.737 us/op
    p(100.0000) =    954.737 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 1)

# Run progress: 23.86% complete, ETA 00:35:12
# Fork: 1 of 2
# Warmup Iteration   1: 2407.764 us/op
# Warmup Iteration   2: 2255.867 us/op
# Warmup Iteration   3: 2332.586 us/op
# Warmup Iteration   4: 1611.167 us/op
# Warmup Iteration   5: 1783.240 us/op
Iteration   1: 774.187 us/op
Iteration   2: 831.045 us/op
Iteration   3: 811.882 us/op
Iteration   4: 828.748 us/op
Iteration   5: 820.946 us/op

# Run progress: 24.05% complete, ETA 00:35:07
# Fork: 2 of 2
# Warmup Iteration   1: 2699.478 us/op
# Warmup Iteration   2: 2064.006 us/op
# Warmup Iteration   3: 1952.570 us/op
# Warmup Iteration   4: 1622.527 us/op
# Warmup Iteration   5: 1785.731 us/op
Iteration   1: 781.318 us/op
Iteration   2: 827.180 us/op
Iteration   3: 804.972 us/op
Iteration   4: 803.288 us/op
Iteration   5: 856.542 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    814.011 ±(99.9%) 37.011 us/op

  Histogram, us/op:
    [770.000, 775.000) = 1 
    [775.000, 780.000) = 0 
    [780.000, 785.000) = 1 
    [785.000, 790.000) = 0 
    [790.000, 795.000) = 0 
    [795.000, 800.000) = 0 
    [800.000, 805.000) = 2 
    [805.000, 810.000) = 0 
    [810.000, 815.000) = 1 
    [815.000, 820.000) = 0 
    [820.000, 825.000) = 1 
    [825.000, 830.000) = 2 
    [830.000, 835.000) = 1 
    [835.000, 840.000) = 0 
    [840.000, 845.000) = 0 
    [845.000, 850.000) = 0 
    [850.000, 855.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    774.187 us/op
     p(50.0000) =    816.414 us/op
     p(90.0000) =    853.992 us/op
     p(95.0000) =    856.542 us/op
     p(99.0000) =    856.542 us/op
     p(99.9000) =    856.542 us/op
     p(99.9900) =    856.542 us/op
     p(99.9990) =    856.542 us/op
     p(99.9999) =    856.542 us/op
    p(100.0000) =    856.542 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.125)

# Run progress: 24.24% complete, ETA 00:35:02
# Fork: 1 of 2
# Warmup Iteration   1: 3758.906 us/op
# Warmup Iteration   2: 3289.334 us/op
# Warmup Iteration   3: 2662.271 us/op
# Warmup Iteration   4: 2383.042 us/op
# Warmup Iteration   5: 2363.395 us/op
Iteration   1: 1733.438 us/op
Iteration   2: 1558.928 us/op
Iteration   3: 1576.358 us/op
Iteration   4: 1497.894 us/op
Iteration   5: 1522.454 us/op

# Run progress: 24.43% complete, ETA 00:34:56
# Fork: 2 of 2
# Warmup Iteration   1: 3493.018 us/op
# Warmup Iteration   2: 3146.414 us/op
# Warmup Iteration   3: 2538.690 us/op
# Warmup Iteration   4: 2356.756 us/op
# Warmup Iteration   5: 2386.920 us/op
Iteration   1: 1483.956 us/op
Iteration   2: 1566.718 us/op
Iteration   3: 1483.029 us/op
Iteration   4: 1501.813 us/op
Iteration   5: 1514.771 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1543.936 ±(99.9%) 112.934 us/op

  Histogram, us/op:
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 0 
    [1475.000, 1500.000) = 3 
    [1500.000, 1525.000) = 3 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 2 
    [1575.000, 1600.000) = 1 
    [1600.000, 1625.000) = 0 
    [1625.000, 1650.000) = 0 
    [1650.000, 1675.000) = 0 
    [1675.000, 1700.000) = 0 
    [1700.000, 1725.000) = 0 
    [1725.000, 1750.000) = 1 
    [1750.000, 1775.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1483.029 us/op
     p(50.0000) =   1518.613 us/op
     p(90.0000) =   1717.730 us/op
     p(95.0000) =   1733.438 us/op
     p(99.0000) =   1733.438 us/op
     p(99.9000) =   1733.438 us/op
     p(99.9900) =   1733.438 us/op
     p(99.9990) =   1733.438 us/op
     p(99.9999) =   1733.438 us/op
    p(100.0000) =   1733.438 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.250)

# Run progress: 24.62% complete, ETA 00:34:51
# Fork: 1 of 2
# Warmup Iteration   1: 3544.503 us/op
# Warmup Iteration   2: 3108.433 us/op
# Warmup Iteration   3: 2590.989 us/op
# Warmup Iteration   4: 2369.866 us/op
# Warmup Iteration   5: 2440.060 us/op
Iteration   1: 1502.145 us/op
Iteration   2: 1546.448 us/op
Iteration   3: 1476.429 us/op
Iteration   4: 1462.300 us/op
Iteration   5: 1497.120 us/op

# Run progress: 24.81% complete, ETA 00:34:46
# Fork: 2 of 2
# Warmup Iteration   1: 3098.766 us/op
# Warmup Iteration   2: 3284.994 us/op
# Warmup Iteration   3: 2673.925 us/op
# Warmup Iteration   4: 2375.901 us/op
# Warmup Iteration   5: 2643.069 us/op
Iteration   1: 1456.931 us/op
Iteration   2: 1499.507 us/op
Iteration   3: 1444.164 us/op
Iteration   4: 1499.491 us/op
Iteration   5: 1501.921 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1488.646 ±(99.9%) 44.607 us/op

  Histogram, us/op:
    [1400.000, 1412.500) = 0 
    [1412.500, 1425.000) = 0 
    [1425.000, 1437.500) = 0 
    [1437.500, 1450.000) = 1 
    [1450.000, 1462.500) = 2 
    [1462.500, 1475.000) = 0 
    [1475.000, 1487.500) = 1 
    [1487.500, 1500.000) = 3 
    [1500.000, 1512.500) = 2 
    [1512.500, 1525.000) = 0 
    [1525.000, 1537.500) = 0 
    [1537.500, 1550.000) = 1 
    [1550.000, 1562.500) = 0 
    [1562.500, 1575.000) = 0 
    [1575.000, 1587.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1444.164 us/op
     p(50.0000) =   1498.306 us/op
     p(90.0000) =   1542.018 us/op
     p(95.0000) =   1546.448 us/op
     p(99.0000) =   1546.448 us/op
     p(99.9000) =   1546.448 us/op
     p(99.9900) =   1546.448 us/op
     p(99.9990) =   1546.448 us/op
     p(99.9999) =   1546.448 us/op
    p(100.0000) =   1546.448 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.375)

# Run progress: 25.00% complete, ETA 00:34:41
# Fork: 1 of 2
# Warmup Iteration   1: 3210.154 us/op
# Warmup Iteration   2: 3219.667 us/op
# Warmup Iteration   3: 2730.519 us/op
# Warmup Iteration   4: 2358.732 us/op
# Warmup Iteration   5: 2442.099 us/op
Iteration   1: 1449.035 us/op
Iteration   2: 1485.362 us/op
Iteration   3: 1436.633 us/op
Iteration   4: 1460.438 us/op
Iteration   5: 1430.665 us/op

# Run progress: 25.19% complete, ETA 00:34:36
# Fork: 2 of 2
# Warmup Iteration   1: 3254.094 us/op
# Warmup Iteration   2: 3122.791 us/op
# Warmup Iteration   3: 2763.439 us/op
# Warmup Iteration   4: 2374.865 us/op
# Warmup Iteration   5: 2394.737 us/op
Iteration   1: 1509.231 us/op
Iteration   2: 1547.560 us/op
Iteration   3: 1501.197 us/op
Iteration   4: 1527.665 us/op
Iteration   5: 1560.172 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1490.796 ±(99.9%) 69.624 us/op

  Histogram, us/op:
    [1400.000, 1412.500) = 0 
    [1412.500, 1425.000) = 0 
    [1425.000, 1437.500) = 2 
    [1437.500, 1450.000) = 1 
    [1450.000, 1462.500) = 1 
    [1462.500, 1475.000) = 0 
    [1475.000, 1487.500) = 1 
    [1487.500, 1500.000) = 0 
    [1500.000, 1512.500) = 2 
    [1512.500, 1525.000) = 0 
    [1525.000, 1537.500) = 1 
    [1537.500, 1550.000) = 1 
    [1550.000, 1562.500) = 1 
    [1562.500, 1575.000) = 0 
    [1575.000, 1587.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1430.665 us/op
     p(50.0000) =   1493.280 us/op
     p(90.0000) =   1558.911 us/op
     p(95.0000) =   1560.172 us/op
     p(99.0000) =   1560.172 us/op
     p(99.9000) =   1560.172 us/op
     p(99.9900) =   1560.172 us/op
     p(99.9990) =   1560.172 us/op
     p(99.9999) =   1560.172 us/op
    p(100.0000) =   1560.172 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.5)

# Run progress: 25.38% complete, ETA 00:34:30
# Fork: 1 of 2
# Warmup Iteration   1: 3364.154 us/op
# Warmup Iteration   2: 3319.049 us/op
# Warmup Iteration   3: 2604.693 us/op
# Warmup Iteration   4: 2345.011 us/op
# Warmup Iteration   5: 2392.078 us/op
Iteration   1: 1491.118 us/op
Iteration   2: 1530.768 us/op
Iteration   3: 1477.100 us/op
Iteration   4: 1470.291 us/op
Iteration   5: 1492.326 us/op

# Run progress: 25.57% complete, ETA 00:34:25
# Fork: 2 of 2
# Warmup Iteration   1: 3671.568 us/op
# Warmup Iteration   2: 3304.395 us/op
# Warmup Iteration   3: 2664.024 us/op
# Warmup Iteration   4: 2462.561 us/op
# Warmup Iteration   5: 2462.729 us/op
Iteration   1: 1651.881 us/op
Iteration   2: 1516.391 us/op
Iteration   3: 1473.439 us/op
Iteration   4: 1465.907 us/op
Iteration   5: 1602.982 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1517.220 ±(99.9%) 94.732 us/op

  Histogram, us/op:
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 3 
    [1475.000, 1500.000) = 3 
    [1500.000, 1525.000) = 1 
    [1525.000, 1550.000) = 1 
    [1550.000, 1575.000) = 0 
    [1575.000, 1600.000) = 0 
    [1600.000, 1625.000) = 1 
    [1625.000, 1650.000) = 0 
    [1650.000, 1675.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1465.907 us/op
     p(50.0000) =   1491.722 us/op
     p(90.0000) =   1646.991 us/op
     p(95.0000) =   1651.881 us/op
     p(99.0000) =   1651.881 us/op
     p(99.9000) =   1651.881 us/op
     p(99.9900) =   1651.881 us/op
     p(99.9990) =   1651.881 us/op
     p(99.9999) =   1651.881 us/op
    p(100.0000) =   1651.881 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.625)

# Run progress: 25.76% complete, ETA 00:34:20
# Fork: 1 of 2
# Warmup Iteration   1: 3494.956 us/op
# Warmup Iteration   2: 3168.772 us/op
# Warmup Iteration   3: 2632.680 us/op
# Warmup Iteration   4: 2427.048 us/op
# Warmup Iteration   5: 2351.954 us/op
Iteration   1: 1463.536 us/op
Iteration   2: 1495.736 us/op
Iteration   3: 1452.260 us/op
Iteration   4: 1427.360 us/op
Iteration   5: 1491.058 us/op

# Run progress: 25.95% complete, ETA 00:34:15
# Fork: 2 of 2
# Warmup Iteration   1: 3184.619 us/op
# Warmup Iteration   2: 3392.321 us/op
# Warmup Iteration   3: 2750.619 us/op
# Warmup Iteration   4: 2377.219 us/op
# Warmup Iteration   5: 2382.018 us/op
Iteration   1: 1467.732 us/op
Iteration   2: 1517.697 us/op
Iteration   3: 1482.511 us/op
Iteration   4: 1470.480 us/op
Iteration   5: 1656.488 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1492.486 ±(99.9%) 94.870 us/op

  Histogram, us/op:
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 1 
    [1450.000, 1475.000) = 4 
    [1475.000, 1500.000) = 3 
    [1500.000, 1525.000) = 1 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 0 
    [1575.000, 1600.000) = 0 
    [1600.000, 1625.000) = 0 
    [1625.000, 1650.000) = 0 
    [1650.000, 1675.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1427.360 us/op
     p(50.0000) =   1476.496 us/op
     p(90.0000) =   1642.609 us/op
     p(95.0000) =   1656.488 us/op
     p(99.0000) =   1656.488 us/op
     p(99.9000) =   1656.488 us/op
     p(99.9900) =   1656.488 us/op
     p(99.9990) =   1656.488 us/op
     p(99.9999) =   1656.488 us/op
    p(100.0000) =   1656.488 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.75)

# Run progress: 26.14% complete, ETA 00:34:09
# Fork: 1 of 2
# Warmup Iteration   1: 3356.615 us/op
# Warmup Iteration   2: 3070.722 us/op
# Warmup Iteration   3: 2702.617 us/op
# Warmup Iteration   4: 2437.484 us/op
# Warmup Iteration   5: 2418.917 us/op
Iteration   1: 1528.181 us/op
Iteration   2: 1538.715 us/op
Iteration   3: 1495.168 us/op
Iteration   4: 1510.134 us/op
Iteration   5: 1511.241 us/op

# Run progress: 26.33% complete, ETA 00:34:04
# Fork: 2 of 2
# Warmup Iteration   1: 3307.808 us/op
# Warmup Iteration   2: 3081.814 us/op
# Warmup Iteration   3: 2491.886 us/op
# Warmup Iteration   4: 2330.869 us/op
# Warmup Iteration   5: 2311.583 us/op
Iteration   1: 1504.014 us/op
Iteration   2: 1502.154 us/op
Iteration   3: 1424.492 us/op
Iteration   4: 1462.646 us/op
Iteration   5: 1460.738 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1493.748 ±(99.9%) 52.405 us/op

  Histogram, us/op:
    [1400.000, 1412.500) = 0 
    [1412.500, 1425.000) = 1 
    [1425.000, 1437.500) = 0 
    [1437.500, 1450.000) = 0 
    [1450.000, 1462.500) = 1 
    [1462.500, 1475.000) = 1 
    [1475.000, 1487.500) = 0 
    [1487.500, 1500.000) = 1 
    [1500.000, 1512.500) = 4 
    [1512.500, 1525.000) = 0 
    [1525.000, 1537.500) = 1 
    [1537.500, 1550.000) = 1 
    [1550.000, 1562.500) = 0 
    [1562.500, 1575.000) = 0 
    [1575.000, 1587.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1424.492 us/op
     p(50.0000) =   1503.084 us/op
     p(90.0000) =   1537.662 us/op
     p(95.0000) =   1538.715 us/op
     p(99.0000) =   1538.715 us/op
     p(99.9000) =   1538.715 us/op
     p(99.9900) =   1538.715 us/op
     p(99.9990) =   1538.715 us/op
     p(99.9999) =   1538.715 us/op
    p(100.0000) =   1538.715 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.875)

# Run progress: 26.52% complete, ETA 00:33:59
# Fork: 1 of 2
# Warmup Iteration   1: 3366.591 us/op
# Warmup Iteration   2: 3114.371 us/op
# Warmup Iteration   3: 2477.663 us/op
# Warmup Iteration   4: 2358.051 us/op
# Warmup Iteration   5: 2351.005 us/op
Iteration   1: 1506.145 us/op
Iteration   2: 1555.276 us/op
Iteration   3: 1511.701 us/op
Iteration   4: 1516.056 us/op
Iteration   5: 1437.250 us/op

# Run progress: 26.70% complete, ETA 00:33:54
# Fork: 2 of 2
# Warmup Iteration   1: 3154.421 us/op
# Warmup Iteration   2: 3199.259 us/op
# Warmup Iteration   3: 2718.094 us/op
# Warmup Iteration   4: 2417.237 us/op
# Warmup Iteration   5: 2461.685 us/op
Iteration   1: 1503.846 us/op
Iteration   2: 1659.876 us/op
Iteration   3: 1521.168 us/op
Iteration   4: 1524.299 us/op
Iteration   5: 1554.176 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1528.979 ±(99.9%) 85.191 us/op

  Histogram, us/op:
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 1 
    [1450.000, 1475.000) = 0 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 6 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 2 
    [1575.000, 1600.000) = 0 
    [1600.000, 1625.000) = 0 
    [1625.000, 1650.000) = 0 
    [1650.000, 1675.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1437.250 us/op
     p(50.0000) =   1518.612 us/op
     p(90.0000) =   1649.416 us/op
     p(95.0000) =   1659.876 us/op
     p(99.0000) =   1659.876 us/op
     p(99.9000) =   1659.876 us/op
     p(99.9900) =   1659.876 us/op
     p(99.9990) =   1659.876 us/op
     p(99.9999) =   1659.876 us/op
    p(100.0000) =   1659.876 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 1)

# Run progress: 26.89% complete, ETA 00:33:49
# Fork: 1 of 2
# Warmup Iteration   1: 3311.172 us/op
# Warmup Iteration   2: 3080.553 us/op
# Warmup Iteration   3: 2483.334 us/op
# Warmup Iteration   4: 2392.447 us/op
# Warmup Iteration   5: 2415.731 us/op
Iteration   1: 1698.486 us/op
Iteration   2: 1520.844 us/op
Iteration   3: 1515.488 us/op
Iteration   4: 1581.671 us/op
Iteration   5: 1460.079 us/op

# Run progress: 27.08% complete, ETA 00:33:43
# Fork: 2 of 2
# Warmup Iteration   1: 3291.336 us/op
# Warmup Iteration   2: 3201.210 us/op
# Warmup Iteration   3: 2619.886 us/op
# Warmup Iteration   4: 2392.199 us/op
# Warmup Iteration   5: 2421.277 us/op
Iteration   1: 1493.211 us/op
Iteration   2: 1517.257 us/op
Iteration   3: 1491.952 us/op
Iteration   4: 1481.320 us/op
Iteration   5: 1486.054 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1524.636 ±(99.9%) 104.766 us/op

  Histogram, us/op:
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 1 
    [1475.000, 1500.000) = 4 
    [1500.000, 1525.000) = 3 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 0 
    [1575.000, 1600.000) = 1 
    [1600.000, 1625.000) = 0 
    [1625.000, 1650.000) = 0 
    [1650.000, 1675.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1460.079 us/op
     p(50.0000) =   1504.350 us/op
     p(90.0000) =   1686.805 us/op
     p(95.0000) =   1698.486 us/op
     p(99.0000) =   1698.486 us/op
     p(99.9000) =   1698.486 us/op
     p(99.9900) =   1698.486 us/op
     p(99.9990) =   1698.486 us/op
     p(99.9999) =   1698.486 us/op
    p(100.0000) =   1698.486 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.125)

# Run progress: 27.27% complete, ETA 00:33:38
# Fork: 1 of 2
# Warmup Iteration   1: 3189.955 us/op
# Warmup Iteration   2: 3148.874 us/op
# Warmup Iteration   3: 2655.748 us/op
# Warmup Iteration   4: 2430.812 us/op
# Warmup Iteration   5: 2387.507 us/op
Iteration   1: 1477.613 us/op
Iteration   2: 1495.326 us/op
Iteration   3: 1476.646 us/op
Iteration   4: 1495.031 us/op
Iteration   5: 1500.436 us/op

# Run progress: 27.46% complete, ETA 00:33:33
# Fork: 2 of 2
# Warmup Iteration   1: 3311.980 us/op
# Warmup Iteration   2: 3139.758 us/op
# Warmup Iteration   3: 2669.114 us/op
# Warmup Iteration   4: 2343.821 us/op
# Warmup Iteration   5: 2365.911 us/op
Iteration   1: 1485.297 us/op
Iteration   2: 1523.191 us/op
Iteration   3: 1502.498 us/op
Iteration   4: 1531.036 us/op
Iteration   5: 1533.030 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1502.010 ±(99.9%) 31.340 us/op

  Histogram, us/op:
    [1470.000, 1475.000) = 0 
    [1475.000, 1480.000) = 2 
    [1480.000, 1485.000) = 0 
    [1485.000, 1490.000) = 1 
    [1490.000, 1495.000) = 0 
    [1495.000, 1500.000) = 2 
    [1500.000, 1505.000) = 2 
    [1505.000, 1510.000) = 0 
    [1510.000, 1515.000) = 0 
    [1515.000, 1520.000) = 0 
    [1520.000, 1525.000) = 1 
    [1525.000, 1530.000) = 0 
    [1530.000, 1535.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   1476.646 us/op
     p(50.0000) =   1497.881 us/op
     p(90.0000) =   1532.831 us/op
     p(95.0000) =   1533.030 us/op
     p(99.0000) =   1533.030 us/op
     p(99.9000) =   1533.030 us/op
     p(99.9900) =   1533.030 us/op
     p(99.9990) =   1533.030 us/op
     p(99.9999) =   1533.030 us/op
    p(100.0000) =   1533.030 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.250)

# Run progress: 27.65% complete, ETA 00:33:28
# Fork: 1 of 2
# Warmup Iteration   1: 3228.725 us/op
# Warmup Iteration   2: 2974.549 us/op
# Warmup Iteration   3: 2493.196 us/op
# Warmup Iteration   4: 2441.027 us/op
# Warmup Iteration   5: 2387.788 us/op
Iteration   1: 1457.905 us/op
Iteration   2: 1522.056 us/op
Iteration   3: 1466.864 us/op
Iteration   4: 1534.699 us/op
Iteration   5: 1552.833 us/op

# Run progress: 27.84% complete, ETA 00:33:22
# Fork: 2 of 2
# Warmup Iteration   1: 3110.564 us/op
# Warmup Iteration   2: 3129.964 us/op
# Warmup Iteration   3: 2496.353 us/op
# Warmup Iteration   4: 2407.507 us/op
# Warmup Iteration   5: 2339.705 us/op
Iteration   1: 1491.349 us/op
Iteration   2: 1500.673 us/op
Iteration   3: 1503.616 us/op
Iteration   4: 1472.690 us/op
Iteration   5: 1472.259 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1497.494 ±(99.9%) 47.524 us/op

  Histogram, us/op:
    [1450.000, 1460.000) = 1 
    [1460.000, 1470.000) = 1 
    [1470.000, 1480.000) = 2 
    [1480.000, 1490.000) = 0 
    [1490.000, 1500.000) = 1 
    [1500.000, 1510.000) = 2 
    [1510.000, 1520.000) = 0 
    [1520.000, 1530.000) = 1 
    [1530.000, 1540.000) = 1 
    [1540.000, 1550.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1457.905 us/op
     p(50.0000) =   1496.011 us/op
     p(90.0000) =   1551.020 us/op
     p(95.0000) =   1552.833 us/op
     p(99.0000) =   1552.833 us/op
     p(99.9000) =   1552.833 us/op
     p(99.9900) =   1552.833 us/op
     p(99.9990) =   1552.833 us/op
     p(99.9999) =   1552.833 us/op
    p(100.0000) =   1552.833 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.375)

# Run progress: 28.03% complete, ETA 00:33:17
# Fork: 1 of 2
# Warmup Iteration   1: 3203.692 us/op
# Warmup Iteration   2: 3089.170 us/op
# Warmup Iteration   3: 2533.250 us/op
# Warmup Iteration   4: 2520.694 us/op
# Warmup Iteration   5: 2443.078 us/op
Iteration   1: 1515.999 us/op
Iteration   2: 1529.588 us/op
Iteration   3: 1500.065 us/op
Iteration   4: 1535.207 us/op
Iteration   5: 1533.435 us/op

# Run progress: 28.22% complete, ETA 00:33:12
# Fork: 2 of 2
# Warmup Iteration   1: 3138.394 us/op
# Warmup Iteration   2: 3300.365 us/op
# Warmup Iteration   3: 2785.300 us/op
# Warmup Iteration   4: 2373.891 us/op
# Warmup Iteration   5: 2351.933 us/op
Iteration   1: 1498.682 us/op
Iteration   2: 1564.076 us/op
Iteration   3: 1461.256 us/op
Iteration   4: 1487.875 us/op
Iteration   5: 1518.310 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1514.449 ±(99.9%) 43.620 us/op

  Histogram, us/op:
    [1400.000, 1412.500) = 0 
    [1412.500, 1425.000) = 0 
    [1425.000, 1437.500) = 0 
    [1437.500, 1450.000) = 0 
    [1450.000, 1462.500) = 1 
    [1462.500, 1475.000) = 0 
    [1475.000, 1487.500) = 0 
    [1487.500, 1500.000) = 2 
    [1500.000, 1512.500) = 1 
    [1512.500, 1525.000) = 2 
    [1525.000, 1537.500) = 3 
    [1537.500, 1550.000) = 0 
    [1550.000, 1562.500) = 0 
    [1562.500, 1575.000) = 1 
    [1575.000, 1587.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1461.256 us/op
     p(50.0000) =   1517.155 us/op
     p(90.0000) =   1561.189 us/op
     p(95.0000) =   1564.076 us/op
     p(99.0000) =   1564.076 us/op
     p(99.9000) =   1564.076 us/op
     p(99.9900) =   1564.076 us/op
     p(99.9990) =   1564.076 us/op
     p(99.9999) =   1564.076 us/op
    p(100.0000) =   1564.076 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.5)

# Run progress: 28.41% complete, ETA 00:33:07
# Fork: 1 of 2
# Warmup Iteration   1: 3262.368 us/op
# Warmup Iteration   2: 3256.685 us/op
# Warmup Iteration   3: 2685.914 us/op
# Warmup Iteration   4: 2490.972 us/op
# Warmup Iteration   5: 2427.201 us/op
Iteration   1: 1519.546 us/op
Iteration   2: 1547.303 us/op
Iteration   3: 1519.631 us/op
Iteration   4: 1545.529 us/op
Iteration   5: 1508.583 us/op

# Run progress: 28.60% complete, ETA 00:33:02
# Fork: 2 of 2
# Warmup Iteration   1: 3189.076 us/op
# Warmup Iteration   2: 3170.692 us/op
# Warmup Iteration   3: 2746.666 us/op
# Warmup Iteration   4: 2393.182 us/op
# Warmup Iteration   5: 2325.171 us/op
Iteration   1: 1489.864 us/op
Iteration   2: 1506.111 us/op
Iteration   3: 1492.459 us/op
Iteration   4: 1495.677 us/op
Iteration   5: 1480.349 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1510.505 ±(99.9%) 34.364 us/op

  Histogram, us/op:
    [1480.000, 1485.000) = 1 
    [1485.000, 1490.000) = 1 
    [1490.000, 1495.000) = 1 
    [1495.000, 1500.000) = 1 
    [1500.000, 1505.000) = 0 
    [1505.000, 1510.000) = 2 
    [1510.000, 1515.000) = 0 
    [1515.000, 1520.000) = 2 
    [1520.000, 1525.000) = 0 
    [1525.000, 1530.000) = 0 
    [1530.000, 1535.000) = 0 
    [1535.000, 1540.000) = 0 
    [1540.000, 1545.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1480.349 us/op
     p(50.0000) =   1507.347 us/op
     p(90.0000) =   1547.126 us/op
     p(95.0000) =   1547.303 us/op
     p(99.0000) =   1547.303 us/op
     p(99.9000) =   1547.303 us/op
     p(99.9900) =   1547.303 us/op
     p(99.9990) =   1547.303 us/op
     p(99.9999) =   1547.303 us/op
    p(100.0000) =   1547.303 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.625)

# Run progress: 28.79% complete, ETA 00:32:56
# Fork: 1 of 2
# Warmup Iteration   1: 3224.608 us/op
# Warmup Iteration   2: 3168.859 us/op
# Warmup Iteration   3: 2695.967 us/op
# Warmup Iteration   4: 2557.985 us/op
# Warmup Iteration   5: 2384.903 us/op
Iteration   1: 1528.628 us/op
Iteration   2: 1545.469 us/op
Iteration   3: 1528.563 us/op
Iteration   4: 1504.277 us/op
Iteration   5: 1484.421 us/op

# Run progress: 28.98% complete, ETA 00:32:51
# Fork: 2 of 2
# Warmup Iteration   1: 3201.970 us/op
# Warmup Iteration   2: 3134.371 us/op
# Warmup Iteration   3: 2676.076 us/op
# Warmup Iteration   4: 2377.122 us/op
# Warmup Iteration   5: 2413.527 us/op
Iteration   1: 1469.924 us/op
Iteration   2: 1544.347 us/op
Iteration   3: 1492.108 us/op
Iteration   4: 1491.454 us/op
Iteration   5: 1504.608 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1509.380 ±(99.9%) 39.398 us/op

  Histogram, us/op:
    [1460.000, 1465.000) = 0 
    [1465.000, 1470.000) = 1 
    [1470.000, 1475.000) = 0 
    [1475.000, 1480.000) = 0 
    [1480.000, 1485.000) = 1 
    [1485.000, 1490.000) = 0 
    [1490.000, 1495.000) = 2 
    [1495.000, 1500.000) = 0 
    [1500.000, 1505.000) = 2 
    [1505.000, 1510.000) = 0 
    [1510.000, 1515.000) = 0 
    [1515.000, 1520.000) = 0 
    [1520.000, 1525.000) = 0 
    [1525.000, 1530.000) = 2 
    [1530.000, 1535.000) = 0 
    [1535.000, 1540.000) = 0 
    [1540.000, 1545.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1469.924 us/op
     p(50.0000) =   1504.443 us/op
     p(90.0000) =   1545.357 us/op
     p(95.0000) =   1545.469 us/op
     p(99.0000) =   1545.469 us/op
     p(99.9000) =   1545.469 us/op
     p(99.9900) =   1545.469 us/op
     p(99.9990) =   1545.469 us/op
     p(99.9999) =   1545.469 us/op
    p(100.0000) =   1545.469 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.75)

# Run progress: 29.17% complete, ETA 00:32:46
# Fork: 1 of 2
# Warmup Iteration   1: 3041.534 us/op
# Warmup Iteration   2: 3247.993 us/op
# Warmup Iteration   3: 2800.896 us/op
# Warmup Iteration   4: 2426.234 us/op
# Warmup Iteration   5: 2495.423 us/op
Iteration   1: 1487.339 us/op
Iteration   2: 1581.955 us/op
Iteration   3: 1479.489 us/op
Iteration   4: 1473.706 us/op
Iteration   5: 1504.754 us/op

# Run progress: 29.36% complete, ETA 00:32:41
# Fork: 2 of 2
# Warmup Iteration   1: 3253.544 us/op
# Warmup Iteration   2: 3191.928 us/op
# Warmup Iteration   3: 2541.058 us/op
# Warmup Iteration   4: 2522.239 us/op
# Warmup Iteration   5: 2378.622 us/op
Iteration   1: 1598.180 us/op
Iteration   2: 1493.478 us/op
Iteration   3: 1447.466 us/op
Iteration   4: 1490.001 us/op
Iteration   5: 1472.976 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1502.934 ±(99.9%) 73.372 us/op

  Histogram, us/op:
    [1400.000, 1412.500) = 0 
    [1412.500, 1425.000) = 0 
    [1425.000, 1437.500) = 0 
    [1437.500, 1450.000) = 1 
    [1450.000, 1462.500) = 0 
    [1462.500, 1475.000) = 2 
    [1475.000, 1487.500) = 2 
    [1487.500, 1500.000) = 2 
    [1500.000, 1512.500) = 1 
    [1512.500, 1525.000) = 0 
    [1525.000, 1537.500) = 0 
    [1537.500, 1550.000) = 0 
    [1550.000, 1562.500) = 0 
    [1562.500, 1575.000) = 0 
    [1575.000, 1587.500) = 1 

  Percentiles, us/op:
      p(0.0000) =   1447.466 us/op
     p(50.0000) =   1488.670 us/op
     p(90.0000) =   1596.558 us/op
     p(95.0000) =   1598.180 us/op
     p(99.0000) =   1598.180 us/op
     p(99.9000) =   1598.180 us/op
     p(99.9900) =   1598.180 us/op
     p(99.9990) =   1598.180 us/op
     p(99.9999) =   1598.180 us/op
    p(100.0000) =   1598.180 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.875)

# Run progress: 29.55% complete, ETA 00:32:35
# Fork: 1 of 2
# Warmup Iteration   1: 3062.340 us/op
# Warmup Iteration   2: 3366.064 us/op
# Warmup Iteration   3: 2703.330 us/op
# Warmup Iteration   4: 2328.112 us/op
# Warmup Iteration   5: 2285.983 us/op
Iteration   1: 1447.994 us/op
Iteration   2: 1487.871 us/op
Iteration   3: 1529.520 us/op
Iteration   4: 1559.650 us/op
Iteration   5: 1662.518 us/op

# Run progress: 29.73% complete, ETA 00:32:30
# Fork: 2 of 2
# Warmup Iteration   1: 3264.374 us/op
# Warmup Iteration   2: 3270.261 us/op
# Warmup Iteration   3: 2589.313 us/op
# Warmup Iteration   4: 2488.053 us/op
# Warmup Iteration   5: 2400.157 us/op
Iteration   1: 1499.010 us/op
Iteration   2: 1542.396 us/op
Iteration   3: 1461.322 us/op
Iteration   4: 1537.117 us/op
Iteration   5: 1581.746 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1530.914 ±(99.9%) 94.940 us/op

  Histogram, us/op:
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 1 
    [1450.000, 1475.000) = 1 
    [1475.000, 1500.000) = 2 
    [1500.000, 1525.000) = 0 
    [1525.000, 1550.000) = 3 
    [1550.000, 1575.000) = 1 
    [1575.000, 1600.000) = 1 
    [1600.000, 1625.000) = 0 
    [1625.000, 1650.000) = 0 
    [1650.000, 1675.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1447.994 us/op
     p(50.0000) =   1533.318 us/op
     p(90.0000) =   1654.441 us/op
     p(95.0000) =   1662.518 us/op
     p(99.0000) =   1662.518 us/op
     p(99.9000) =   1662.518 us/op
     p(99.9900) =   1662.518 us/op
     p(99.9990) =   1662.518 us/op
     p(99.9999) =   1662.518 us/op
    p(100.0000) =   1662.518 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 1)

# Run progress: 29.92% complete, ETA 00:32:25
# Fork: 1 of 2
# Warmup Iteration   1: 3222.346 us/op
# Warmup Iteration   2: 3227.233 us/op
# Warmup Iteration   3: 2710.843 us/op
# Warmup Iteration   4: 2451.325 us/op
# Warmup Iteration   5: 2356.339 us/op
Iteration   1: 1470.209 us/op
Iteration   2: 1592.477 us/op
Iteration   3: 1546.059 us/op
Iteration   4: 1533.633 us/op
Iteration   5: 1571.528 us/op

# Run progress: 30.11% complete, ETA 00:32:20
# Fork: 2 of 2
# Warmup Iteration   1: 3298.825 us/op
# Warmup Iteration   2: 3031.702 us/op
# Warmup Iteration   3: 2644.852 us/op
# Warmup Iteration   4: 2409.350 us/op
# Warmup Iteration   5: 2361.642 us/op
Iteration   1: 1546.578 us/op
Iteration   2: 1560.213 us/op
Iteration   3: 1506.879 us/op
Iteration   4: 1475.168 us/op
Iteration   5: 1474.775 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1527.752 ±(99.9%) 66.097 us/op

  Histogram, us/op:
    [1400.000, 1412.500) = 0 
    [1412.500, 1425.000) = 0 
    [1425.000, 1437.500) = 0 
    [1437.500, 1450.000) = 0 
    [1450.000, 1462.500) = 0 
    [1462.500, 1475.000) = 2 
    [1475.000, 1487.500) = 1 
    [1487.500, 1500.000) = 0 
    [1500.000, 1512.500) = 1 
    [1512.500, 1525.000) = 0 
    [1525.000, 1537.500) = 1 
    [1537.500, 1550.000) = 2 
    [1550.000, 1562.500) = 1 
    [1562.500, 1575.000) = 1 
    [1575.000, 1587.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1470.209 us/op
     p(50.0000) =   1539.846 us/op
     p(90.0000) =   1590.382 us/op
     p(95.0000) =   1592.477 us/op
     p(99.0000) =   1592.477 us/op
     p(99.9000) =   1592.477 us/op
     p(99.9900) =   1592.477 us/op
     p(99.9990) =   1592.477 us/op
     p(99.9999) =   1592.477 us/op
    p(100.0000) =   1592.477 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.125)

# Run progress: 30.30% complete, ETA 00:32:15
# Fork: 1 of 2
# Warmup Iteration   1: 4777.535 us/op
# Warmup Iteration   2: 5185.159 us/op
# Warmup Iteration   3: 3958.090 us/op
# Warmup Iteration   4: 3844.941 us/op
# Warmup Iteration   5: 3911.977 us/op
Iteration   1: 2874.411 us/op
Iteration   2: 2921.810 us/op
Iteration   3: 2914.434 us/op
Iteration   4: 2831.623 us/op
Iteration   5: 2900.210 us/op

# Run progress: 30.49% complete, ETA 00:32:09
# Fork: 2 of 2
# Warmup Iteration   1: 4895.715 us/op
# Warmup Iteration   2: 4703.312 us/op
# Warmup Iteration   3: 4112.756 us/op
# Warmup Iteration   4: 3866.653 us/op
# Warmup Iteration   5: 3791.022 us/op
Iteration   1: 2815.181 us/op
Iteration   2: 2839.849 us/op
Iteration   3: 2860.816 us/op
Iteration   4: 2879.237 us/op
Iteration   5: 2880.190 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2871.776 ±(99.9%) 53.380 us/op

  Histogram, us/op:
    [2800.000, 2812.500) = 0 
    [2812.500, 2825.000) = 1 
    [2825.000, 2837.500) = 1 
    [2837.500, 2850.000) = 1 
    [2850.000, 2862.500) = 1 
    [2862.500, 2875.000) = 1 
    [2875.000, 2887.500) = 2 
    [2887.500, 2900.000) = 0 
    [2900.000, 2912.500) = 1 
    [2912.500, 2925.000) = 2 
    [2925.000, 2937.500) = 0 
    [2937.500, 2950.000) = 0 
    [2950.000, 2962.500) = 0 
    [2962.500, 2975.000) = 0 
    [2975.000, 2987.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   2815.181 us/op
     p(50.0000) =   2876.824 us/op
     p(90.0000) =   2921.072 us/op
     p(95.0000) =   2921.810 us/op
     p(99.0000) =   2921.810 us/op
     p(99.9000) =   2921.810 us/op
     p(99.9900) =   2921.810 us/op
     p(99.9990) =   2921.810 us/op
     p(99.9999) =   2921.810 us/op
    p(100.0000) =   2921.810 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.250)

# Run progress: 30.68% complete, ETA 00:32:04
# Fork: 1 of 2
# Warmup Iteration   1: 4938.112 us/op
# Warmup Iteration   2: 4575.021 us/op
# Warmup Iteration   3: 3910.782 us/op
# Warmup Iteration   4: 3945.423 us/op
# Warmup Iteration   5: 3973.007 us/op
Iteration   1: 2983.592 us/op
Iteration   2: 2901.305 us/op
Iteration   3: 2924.661 us/op
Iteration   4: 2910.128 us/op
Iteration   5: 2917.040 us/op

# Run progress: 30.87% complete, ETA 00:31:59
# Fork: 2 of 2
# Warmup Iteration   1: 4712.365 us/op
# Warmup Iteration   2: 4534.453 us/op
# Warmup Iteration   3: 3965.299 us/op
# Warmup Iteration   4: 3990.666 us/op
# Warmup Iteration   5: 4008.924 us/op
Iteration   1: 2971.253 us/op
Iteration   2: 2951.509 us/op
Iteration   3: 2890.680 us/op
Iteration   4: 2856.827 us/op
Iteration   5: 2847.958 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2915.495 ±(99.9%) 67.572 us/op

  Histogram, us/op:
    [2800.000, 2812.500) = 0 
    [2812.500, 2825.000) = 0 
    [2825.000, 2837.500) = 0 
    [2837.500, 2850.000) = 1 
    [2850.000, 2862.500) = 1 
    [2862.500, 2875.000) = 0 
    [2875.000, 2887.500) = 0 
    [2887.500, 2900.000) = 1 
    [2900.000, 2912.500) = 2 
    [2912.500, 2925.000) = 2 
    [2925.000, 2937.500) = 0 
    [2937.500, 2950.000) = 0 
    [2950.000, 2962.500) = 1 
    [2962.500, 2975.000) = 1 
    [2975.000, 2987.500) = 1 

  Percentiles, us/op:
      p(0.0000) =   2847.958 us/op
     p(50.0000) =   2913.584 us/op
     p(90.0000) =   2982.358 us/op
     p(95.0000) =   2983.592 us/op
     p(99.0000) =   2983.592 us/op
     p(99.9000) =   2983.592 us/op
     p(99.9900) =   2983.592 us/op
     p(99.9990) =   2983.592 us/op
     p(99.9999) =   2983.592 us/op
    p(100.0000) =   2983.592 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.375)

# Run progress: 31.06% complete, ETA 00:31:54
# Fork: 1 of 2
# Warmup Iteration   1: 5980.765 us/op
# Warmup Iteration   2: 4760.237 us/op
# Warmup Iteration   3: 3966.202 us/op
# Warmup Iteration   4: 4045.401 us/op
# Warmup Iteration   5: 4257.231 us/op
Iteration   1: 2951.618 us/op
Iteration   2: 2973.721 us/op
Iteration   3: 2917.548 us/op
Iteration   4: 3116.820 us/op
Iteration   5: 3061.989 us/op

# Run progress: 31.25% complete, ETA 00:31:49
# Fork: 2 of 2
# Warmup Iteration   1: 4702.005 us/op
# Warmup Iteration   2: 4522.702 us/op
# Warmup Iteration   3: 3885.373 us/op
# Warmup Iteration   4: 3966.068 us/op
# Warmup Iteration   5: 3926.814 us/op
Iteration   1: 2939.789 us/op
Iteration   2: 2963.829 us/op
Iteration   3: 2855.331 us/op
Iteration   4: 3054.760 us/op
Iteration   5: 2993.094 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2982.850 ±(99.9%) 116.332 us/op

  Histogram, us/op:
    [2800.000, 2825.000) = 0 
    [2825.000, 2850.000) = 0 
    [2850.000, 2875.000) = 1 
    [2875.000, 2900.000) = 0 
    [2900.000, 2925.000) = 1 
    [2925.000, 2950.000) = 1 
    [2950.000, 2975.000) = 3 
    [2975.000, 3000.000) = 1 
    [3000.000, 3025.000) = 0 
    [3025.000, 3050.000) = 0 
    [3050.000, 3075.000) = 2 
    [3075.000, 3100.000) = 0 
    [3100.000, 3125.000) = 1 
    [3125.000, 3150.000) = 0 
    [3150.000, 3175.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2855.331 us/op
     p(50.0000) =   2968.775 us/op
     p(90.0000) =   3111.337 us/op
     p(95.0000) =   3116.820 us/op
     p(99.0000) =   3116.820 us/op
     p(99.9000) =   3116.820 us/op
     p(99.9900) =   3116.820 us/op
     p(99.9990) =   3116.820 us/op
     p(99.9999) =   3116.820 us/op
    p(100.0000) =   3116.820 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.5)

# Run progress: 31.44% complete, ETA 00:31:43
# Fork: 1 of 2
# Warmup Iteration   1: 4745.402 us/op
# Warmup Iteration   2: 4784.447 us/op
# Warmup Iteration   3: 4192.820 us/op
# Warmup Iteration   4: 4081.776 us/op
# Warmup Iteration   5: 3881.438 us/op
Iteration   1: 2858.949 us/op
Iteration   2: 2908.239 us/op
Iteration   3: 2853.240 us/op
Iteration   4: 2895.912 us/op
Iteration   5: 2884.109 us/op

# Run progress: 31.63% complete, ETA 00:31:38
# Fork: 2 of 2
# Warmup Iteration   1: 4629.777 us/op
# Warmup Iteration   2: 4714.472 us/op
# Warmup Iteration   3: 4080.066 us/op
# Warmup Iteration   4: 3906.860 us/op
# Warmup Iteration   5: 3883.234 us/op
Iteration   1: 2944.752 us/op
Iteration   2: 2909.304 us/op
Iteration   3: 2891.790 us/op
Iteration   4: 2970.106 us/op
Iteration   5: 3030.391 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2914.679 ±(99.9%) 81.459 us/op

  Histogram, us/op:
    [2800.000, 2825.000) = 0 
    [2825.000, 2850.000) = 0 
    [2850.000, 2875.000) = 2 
    [2875.000, 2900.000) = 3 
    [2900.000, 2925.000) = 2 
    [2925.000, 2950.000) = 1 
    [2950.000, 2975.000) = 1 
    [2975.000, 3000.000) = 0 
    [3000.000, 3025.000) = 0 
    [3025.000, 3050.000) = 1 
    [3050.000, 3075.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2853.240 us/op
     p(50.0000) =   2902.076 us/op
     p(90.0000) =   3024.363 us/op
     p(95.0000) =   3030.391 us/op
     p(99.0000) =   3030.391 us/op
     p(99.9000) =   3030.391 us/op
     p(99.9900) =   3030.391 us/op
     p(99.9990) =   3030.391 us/op
     p(99.9999) =   3030.391 us/op
    p(100.0000) =   3030.391 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.625)

# Run progress: 31.82% complete, ETA 00:31:33
# Fork: 1 of 2
# Warmup Iteration   1: 5595.646 us/op
# Warmup Iteration   2: 4670.711 us/op
# Warmup Iteration   3: 4267.148 us/op
# Warmup Iteration   4: 4151.711 us/op
# Warmup Iteration   5: 4373.815 us/op
Iteration   1: 3730.722 us/op
Iteration   2: 3879.534 us/op
Iteration   3: 3860.692 us/op
Iteration   4: 3794.873 us/op
Iteration   5: 3812.678 us/op

# Run progress: 32.01% complete, ETA 00:31:28
# Fork: 2 of 2
# Warmup Iteration   1: 4512.490 us/op
# Warmup Iteration   2: 4643.627 us/op
# Warmup Iteration   3: 4246.060 us/op
# Warmup Iteration   4: 3871.512 us/op
# Warmup Iteration   5: 3976.554 us/op
Iteration   1: 2938.835 us/op
Iteration   2: 3003.496 us/op
Iteration   3: 2962.274 us/op
Iteration   4: 2907.348 us/op
Iteration   5: 2863.043 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   3375.349 ±(99.9%) 706.296 us/op

  Histogram, us/op:
    [2000.000, 2125.000) = 0 
    [2125.000, 2250.000) = 0 
    [2250.000, 2375.000) = 0 
    [2375.000, 2500.000) = 0 
    [2500.000, 2625.000) = 0 
    [2625.000, 2750.000) = 0 
    [2750.000, 2875.000) = 1 
    [2875.000, 3000.000) = 3 
    [3000.000, 3125.000) = 1 
    [3125.000, 3250.000) = 0 
    [3250.000, 3375.000) = 0 
    [3375.000, 3500.000) = 0 
    [3500.000, 3625.000) = 0 
    [3625.000, 3750.000) = 1 
    [3750.000, 3875.000) = 3 

  Percentiles, us/op:
      p(0.0000) =   2863.043 us/op
     p(50.0000) =   3367.109 us/op
     p(90.0000) =   3877.650 us/op
     p(95.0000) =   3879.534 us/op
     p(99.0000) =   3879.534 us/op
     p(99.9000) =   3879.534 us/op
     p(99.9900) =   3879.534 us/op
     p(99.9990) =   3879.534 us/op
     p(99.9999) =   3879.534 us/op
    p(100.0000) =   3879.534 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.75)

# Run progress: 32.20% complete, ETA 00:31:23
# Fork: 1 of 2
# Warmup Iteration   1: 4831.500 us/op
# Warmup Iteration   2: 4705.257 us/op
# Warmup Iteration   3: 4030.616 us/op
# Warmup Iteration   4: 4000.268 us/op
# Warmup Iteration   5: 3962.022 us/op
Iteration   1: 2870.398 us/op
Iteration   2: 2908.379 us/op
Iteration   3: 2930.713 us/op
Iteration   4: 2908.814 us/op
Iteration   5: 2982.665 us/op

# Run progress: 32.39% complete, ETA 00:31:17
# Fork: 2 of 2
# Warmup Iteration   1: 4621.089 us/op
# Warmup Iteration   2: 4808.269 us/op
# Warmup Iteration   3: 4098.847 us/op
# Warmup Iteration   4: 3892.748 us/op
# Warmup Iteration   5: 3937.693 us/op
Iteration   1: 2914.118 us/op
Iteration   2: 3024.970 us/op
Iteration   3: 2952.518 us/op
Iteration   4: 2902.657 us/op
Iteration   5: 2909.128 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2930.436 ±(99.9%) 67.992 us/op

  Histogram, us/op:
    [2800.000, 2825.000) = 0 
    [2825.000, 2850.000) = 0 
    [2850.000, 2875.000) = 1 
    [2875.000, 2900.000) = 0 
    [2900.000, 2925.000) = 5 
    [2925.000, 2950.000) = 1 
    [2950.000, 2975.000) = 1 
    [2975.000, 3000.000) = 1 
    [3000.000, 3025.000) = 1 
    [3025.000, 3050.000) = 0 
    [3050.000, 3075.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2870.398 us/op
     p(50.0000) =   2911.623 us/op
     p(90.0000) =   3020.739 us/op
     p(95.0000) =   3024.970 us/op
     p(99.0000) =   3024.970 us/op
     p(99.9000) =   3024.970 us/op
     p(99.9900) =   3024.970 us/op
     p(99.9990) =   3024.970 us/op
     p(99.9999) =   3024.970 us/op
    p(100.0000) =   3024.970 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.875)

# Run progress: 32.58% complete, ETA 00:31:12
# Fork: 1 of 2
# Warmup Iteration   1: 4868.058 us/op
# Warmup Iteration   2: 4617.842 us/op
# Warmup Iteration   3: 3967.231 us/op
# Warmup Iteration   4: 3942.606 us/op
# Warmup Iteration   5: 3903.537 us/op
Iteration   1: 2785.282 us/op
Iteration   2: 2855.597 us/op
Iteration   3: 2831.794 us/op
Iteration   4: 2924.305 us/op
Iteration   5: 2858.639 us/op

# Run progress: 32.77% complete, ETA 00:31:07
# Fork: 2 of 2
# Warmup Iteration   1: 4774.117 us/op
# Warmup Iteration   2: 4778.399 us/op
# Warmup Iteration   3: 3864.373 us/op
# Warmup Iteration   4: 3840.135 us/op
# Warmup Iteration   5: 3819.382 us/op
Iteration   1: 2796.120 us/op
Iteration   2: 2897.117 us/op
Iteration   3: 2853.741 us/op
Iteration   4: 2865.907 us/op
Iteration   5: 2806.682 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2847.518 ±(99.9%) 66.384 us/op

  Histogram, us/op:
    [2700.000, 2725.000) = 0 
    [2725.000, 2750.000) = 0 
    [2750.000, 2775.000) = 0 
    [2775.000, 2800.000) = 2 
    [2800.000, 2825.000) = 1 
    [2825.000, 2850.000) = 1 
    [2850.000, 2875.000) = 4 
    [2875.000, 2900.000) = 1 
    [2900.000, 2925.000) = 1 
    [2925.000, 2950.000) = 0 
    [2950.000, 2975.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2785.282 us/op
     p(50.0000) =   2854.669 us/op
     p(90.0000) =   2921.586 us/op
     p(95.0000) =   2924.305 us/op
     p(99.0000) =   2924.305 us/op
     p(99.9000) =   2924.305 us/op
     p(99.9900) =   2924.305 us/op
     p(99.9990) =   2924.305 us/op
     p(99.9999) =   2924.305 us/op
    p(100.0000) =   2924.305 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 1)

# Run progress: 32.95% complete, ETA 00:31:02
# Fork: 1 of 2
# Warmup Iteration   1: 4806.748 us/op
# Warmup Iteration   2: 4676.408 us/op
# Warmup Iteration   3: 4106.333 us/op
# Warmup Iteration   4: 4028.425 us/op
# Warmup Iteration   5: 3846.076 us/op
Iteration   1: 2880.247 us/op
Iteration   2: 2940.391 us/op
Iteration   3: 2840.858 us/op
Iteration   4: 2879.532 us/op
Iteration   5: 2916.666 us/op

# Run progress: 33.14% complete, ETA 00:30:56
# Fork: 2 of 2
# Warmup Iteration   1: 4890.275 us/op
# Warmup Iteration   2: 4949.193 us/op
# Warmup Iteration   3: 4126.872 us/op
# Warmup Iteration   4: 3904.146 us/op
# Warmup Iteration   5: 3879.383 us/op
Iteration   1: 2854.367 us/op
Iteration   2: 2914.775 us/op
Iteration   3: 2870.194 us/op
Iteration   4: 2888.407 us/op
Iteration   5: 2875.655 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2886.109 ±(99.9%) 45.642 us/op

  Histogram, us/op:
    [2840.000, 2850.000) = 1 
    [2850.000, 2860.000) = 1 
    [2860.000, 2870.000) = 0 
    [2870.000, 2880.000) = 3 
    [2880.000, 2890.000) = 2 
    [2890.000, 2900.000) = 0 
    [2900.000, 2910.000) = 0 
    [2910.000, 2920.000) = 2 
    [2920.000, 2930.000) = 0 
    [2930.000, 2940.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2840.858 us/op
     p(50.0000) =   2879.890 us/op
     p(90.0000) =   2938.019 us/op
     p(95.0000) =   2940.391 us/op
     p(99.0000) =   2940.391 us/op
     p(99.9000) =   2940.391 us/op
     p(99.9900) =   2940.391 us/op
     p(99.9990) =   2940.391 us/op
     p(99.9999) =   2940.391 us/op
    p(100.0000) =   2940.391 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.125)

# Run progress: 33.33% complete, ETA 00:30:51
# Fork: 1 of 2
# Warmup Iteration   1: 3356.397 us/op
# Warmup Iteration   2: 2499.955 us/op
# Warmup Iteration   3: 2132.777 us/op
# Warmup Iteration   4: 1842.827 us/op
# Warmup Iteration   5: 1779.719 us/op
Iteration   1: 213.636 us/op
Iteration   2: 163.128 us/op
Iteration   3: 132.227 us/op
Iteration   4: 139.906 us/op
Iteration   5: 135.705 us/op

# Run progress: 33.52% complete, ETA 00:30:46
# Fork: 2 of 2
# Warmup Iteration   1: 3303.246 us/op
# Warmup Iteration   2: 2363.693 us/op
# Warmup Iteration   3: 2079.556 us/op
# Warmup Iteration   4: 1839.378 us/op
# Warmup Iteration   5: 1751.913 us/op
Iteration   1: 198.478 us/op
Iteration   2: 175.880 us/op
Iteration   3: 148.446 us/op
Iteration   4: 151.266 us/op
Iteration   5: 127.671 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    158.634 ±(99.9%) 43.994 us/op

  Histogram, us/op:
    [120.000, 130.000) = 1 
    [130.000, 140.000) = 3 
    [140.000, 150.000) = 1 
    [150.000, 160.000) = 1 
    [160.000, 170.000) = 1 
    [170.000, 180.000) = 1 
    [180.000, 190.000) = 0 
    [190.000, 200.000) = 1 
    [200.000, 210.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    127.671 us/op
     p(50.0000) =    149.856 us/op
     p(90.0000) =    212.120 us/op
     p(95.0000) =    213.636 us/op
     p(99.0000) =    213.636 us/op
     p(99.9000) =    213.636 us/op
     p(99.9900) =    213.636 us/op
     p(99.9990) =    213.636 us/op
     p(99.9999) =    213.636 us/op
    p(100.0000) =    213.636 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.250)

# Run progress: 33.71% complete, ETA 00:30:41
# Fork: 1 of 2
# Warmup Iteration   1: 3132.929 us/op
# Warmup Iteration   2: 2297.988 us/op
# Warmup Iteration   3: 1721.806 us/op
# Warmup Iteration   4: 1564.218 us/op
# Warmup Iteration   5: 1595.064 us/op
Iteration   1: 131.037 us/op
Iteration   2: 210.431 us/op
Iteration   3: 162.427 us/op
Iteration   4: 225.960 us/op
Iteration   5: 157.473 us/op

# Run progress: 33.90% complete, ETA 00:30:35
# Fork: 2 of 2
# Warmup Iteration   1: 3158.218 us/op
# Warmup Iteration   2: 2081.601 us/op
# Warmup Iteration   3: 1883.563 us/op
# Warmup Iteration   4: 1520.485 us/op
# Warmup Iteration   5: 1604.366 us/op
Iteration   1: 142.686 us/op
Iteration   2: 220.805 us/op
Iteration   3: 161.043 us/op
Iteration   4: 198.420 us/op
Iteration   5: 224.716 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    183.500 ±(99.9%) 54.940 us/op

  Histogram, us/op:
    [130.000, 140.000) = 1 
    [140.000, 150.000) = 1 
    [150.000, 160.000) = 1 
    [160.000, 170.000) = 2 
    [170.000, 180.000) = 0 
    [180.000, 190.000) = 0 
    [190.000, 200.000) = 1 
    [200.000, 210.000) = 0 
    [210.000, 220.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    131.037 us/op
     p(50.0000) =    180.424 us/op
     p(90.0000) =    225.836 us/op
     p(95.0000) =    225.960 us/op
     p(99.0000) =    225.960 us/op
     p(99.9000) =    225.960 us/op
     p(99.9900) =    225.960 us/op
     p(99.9990) =    225.960 us/op
     p(99.9999) =    225.960 us/op
    p(100.0000) =    225.960 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.375)

# Run progress: 34.09% complete, ETA 00:30:30
# Fork: 1 of 2
# Warmup Iteration   1: 2885.806 us/op
# Warmup Iteration   2: 1685.278 us/op
# Warmup Iteration   3: 1762.689 us/op
# Warmup Iteration   4: 1314.660 us/op
# Warmup Iteration   5: 1302.615 us/op
Iteration   1: 145.067 us/op
Iteration   2: 271.178 us/op
Iteration   3: 191.123 us/op
Iteration   4: 201.045 us/op
Iteration   5: 169.645 us/op

# Run progress: 34.28% complete, ETA 00:30:25
# Fork: 2 of 2
# Warmup Iteration   1: 2943.339 us/op
# Warmup Iteration   2: 1732.864 us/op
# Warmup Iteration   3: 1549.596 us/op
# Warmup Iteration   4: 1567.904 us/op
# Warmup Iteration   5: 1322.011 us/op
Iteration   1: 211.591 us/op
Iteration   2: 255.297 us/op
Iteration   3: 167.479 us/op
Iteration   4: 166.235 us/op
Iteration   5: 153.981 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    193.264 ±(99.9%) 64.022 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 0 
    [125.000, 137.500) = 0 
    [137.500, 150.000) = 1 
    [150.000, 162.500) = 1 
    [162.500, 175.000) = 3 
    [175.000, 187.500) = 0 
    [187.500, 200.000) = 1 
    [200.000, 212.500) = 2 
    [212.500, 225.000) = 0 
    [225.000, 237.500) = 0 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 1 
    [262.500, 275.000) = 1 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    145.067 us/op
     p(50.0000) =    180.384 us/op
     p(90.0000) =    269.590 us/op
     p(95.0000) =    271.178 us/op
     p(99.0000) =    271.178 us/op
     p(99.9000) =    271.178 us/op
     p(99.9900) =    271.178 us/op
     p(99.9990) =    271.178 us/op
     p(99.9999) =    271.178 us/op
    p(100.0000) =    271.178 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.5)

# Run progress: 34.47% complete, ETA 00:30:20
# Fork: 1 of 2
# Warmup Iteration   1: 2932.232 us/op
# Warmup Iteration   2: 2037.412 us/op
# Warmup Iteration   3: 2123.730 us/op
# Warmup Iteration   4: 1481.194 us/op
# Warmup Iteration   5: 1440.699 us/op
Iteration   1: 126.901 us/op
Iteration   2: 174.526 us/op
Iteration   3: 232.283 us/op
Iteration   4: 154.799 us/op
Iteration   5: 128.111 us/op

# Run progress: 34.66% complete, ETA 00:30:14
# Fork: 2 of 2
# Warmup Iteration   1: 2814.986 us/op
# Warmup Iteration   2: 1886.575 us/op
# Warmup Iteration   3: 1876.786 us/op
# Warmup Iteration   4: 1422.186 us/op
# Warmup Iteration   5: 1383.932 us/op
Iteration   1: 147.370 us/op
Iteration   2: 188.015 us/op
Iteration   3: 267.799 us/op
Iteration   4: 157.693 us/op
Iteration   5: 134.871 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    171.237 ±(99.9%) 70.399 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 0 
    [125.000, 137.500) = 3 
    [137.500, 150.000) = 1 
    [150.000, 162.500) = 2 
    [162.500, 175.000) = 1 
    [175.000, 187.500) = 0 
    [187.500, 200.000) = 1 
    [200.000, 212.500) = 0 
    [212.500, 225.000) = 0 
    [225.000, 237.500) = 1 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 1 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    126.901 us/op
     p(50.0000) =    156.246 us/op
     p(90.0000) =    264.247 us/op
     p(95.0000) =    267.799 us/op
     p(99.0000) =    267.799 us/op
     p(99.9000) =    267.799 us/op
     p(99.9900) =    267.799 us/op
     p(99.9990) =    267.799 us/op
     p(99.9999) =    267.799 us/op
    p(100.0000) =    267.799 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.625)

# Run progress: 34.85% complete, ETA 00:30:09
# Fork: 1 of 2
# Warmup Iteration   1: 2704.344 us/op
# Warmup Iteration   2: 1586.947 us/op
# Warmup Iteration   3: 1674.738 us/op
# Warmup Iteration   4: 1590.675 us/op
# Warmup Iteration   5: 1201.747 us/op
Iteration   1: 138.196 us/op
Iteration   2: 127.351 us/op
Iteration   3: 145.821 us/op
Iteration   4: 163.862 us/op
Iteration   5: 127.398 us/op

# Run progress: 35.04% complete, ETA 00:30:04
# Fork: 2 of 2
# Warmup Iteration   1: 2853.663 us/op
# Warmup Iteration   2: 1523.408 us/op
# Warmup Iteration   3: 1591.722 us/op
# Warmup Iteration   4: 1547.056 us/op
# Warmup Iteration   5: 1193.619 us/op
Iteration   1: 143.449 us/op
Iteration   2: 190.525 us/op
Iteration   3: 156.951 us/op
Iteration   4: 142.778 us/op
Iteration   5: 161.573 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    149.790 ±(99.9%) 28.914 us/op

  Histogram, us/op:
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 2 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 1 
    [140.000, 145.000) = 2 
    [145.000, 150.000) = 1 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 1 
    [160.000, 165.000) = 2 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 0 
    [180.000, 185.000) = 0 
    [185.000, 190.000) = 0 
    [190.000, 195.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    127.351 us/op
     p(50.0000) =    144.635 us/op
     p(90.0000) =    187.859 us/op
     p(95.0000) =    190.525 us/op
     p(99.0000) =    190.525 us/op
     p(99.9000) =    190.525 us/op
     p(99.9900) =    190.525 us/op
     p(99.9990) =    190.525 us/op
     p(99.9999) =    190.525 us/op
    p(100.0000) =    190.525 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.75)

# Run progress: 35.23% complete, ETA 00:29:59
# Fork: 1 of 2
# Warmup Iteration   1: 2938.164 us/op
# Warmup Iteration   2: 1666.327 us/op
# Warmup Iteration   3: 1576.980 us/op
# Warmup Iteration   4: 1611.455 us/op
# Warmup Iteration   5: 1230.048 us/op
Iteration   1: 179.242 us/op
Iteration   2: 132.759 us/op
Iteration   3: 183.157 us/op
Iteration   4: 170.712 us/op
Iteration   5: 138.203 us/op

# Run progress: 35.42% complete, ETA 00:29:53
# Fork: 2 of 2
# Warmup Iteration   1: 3100.463 us/op
# Warmup Iteration   2: 1713.341 us/op
# Warmup Iteration   3: 1604.389 us/op
# Warmup Iteration   4: 1611.700 us/op
# Warmup Iteration   5: 1300.290 us/op
Iteration   1: 137.778 us/op
Iteration   2: 197.739 us/op
Iteration   3: 155.034 us/op
Iteration   4: 209.047 us/op
Iteration   5: 152.956 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    165.663 ±(99.9%) 40.050 us/op

  Histogram, us/op:
    [130.000, 135.000) = 1 
    [135.000, 140.000) = 2 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 1 
    [155.000, 160.000) = 1 
    [160.000, 165.000) = 0 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 1 
    [175.000, 180.000) = 1 
    [180.000, 185.000) = 1 
    [185.000, 190.000) = 0 
    [190.000, 195.000) = 0 
    [195.000, 200.000) = 1 
    [200.000, 205.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    132.759 us/op
     p(50.0000) =    162.873 us/op
     p(90.0000) =    207.916 us/op
     p(95.0000) =    209.047 us/op
     p(99.0000) =    209.047 us/op
     p(99.9000) =    209.047 us/op
     p(99.9900) =    209.047 us/op
     p(99.9990) =    209.047 us/op
     p(99.9999) =    209.047 us/op
    p(100.0000) =    209.047 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.875)

# Run progress: 35.61% complete, ETA 00:29:48
# Fork: 1 of 2
# Warmup Iteration   1: 2845.650 us/op
# Warmup Iteration   2: 1754.801 us/op
# Warmup Iteration   3: 1625.209 us/op
# Warmup Iteration   4: 1641.878 us/op
# Warmup Iteration   5: 1319.907 us/op
Iteration   1: 151.752 us/op
Iteration   2: 145.044 us/op
Iteration   3: 168.773 us/op
Iteration   4: 171.867 us/op
Iteration   5: 154.999 us/op

# Run progress: 35.80% complete, ETA 00:29:43
# Fork: 2 of 2
# Warmup Iteration   1: 2836.622 us/op
# Warmup Iteration   2: 1806.934 us/op
# Warmup Iteration   3: 1608.754 us/op
# Warmup Iteration   4: 1719.458 us/op
# Warmup Iteration   5: 1329.905 us/op
Iteration   1: 136.045 us/op
Iteration   2: 178.239 us/op
Iteration   3: 158.769 us/op
Iteration   4: 147.226 us/op
Iteration   5: 155.711 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    156.843 ±(99.9%) 19.676 us/op

  Histogram, us/op:
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 1 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 2 
    [150.000, 155.000) = 2 
    [155.000, 160.000) = 2 
    [160.000, 165.000) = 0 
    [165.000, 170.000) = 1 
    [170.000, 175.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    136.045 us/op
     p(50.0000) =    155.355 us/op
     p(90.0000) =    177.602 us/op
     p(95.0000) =    178.239 us/op
     p(99.0000) =    178.239 us/op
     p(99.9000) =    178.239 us/op
     p(99.9900) =    178.239 us/op
     p(99.9990) =    178.239 us/op
     p(99.9999) =    178.239 us/op
    p(100.0000) =    178.239 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 1)

# Run progress: 35.98% complete, ETA 00:29:37
# Fork: 1 of 2
# Warmup Iteration   1: 3157.375 us/op
# Warmup Iteration   2: 1751.415 us/op
# Warmup Iteration   3: 1695.791 us/op
# Warmup Iteration   4: 1661.112 us/op
# Warmup Iteration   5: 1401.169 us/op
Iteration   1: 121.795 us/op
Iteration   2: 189.461 us/op
Iteration   3: 139.246 us/op
Iteration   4: 121.652 us/op
Iteration   5: 118.795 us/op

# Run progress: 36.17% complete, ETA 00:29:32
# Fork: 2 of 2
# Warmup Iteration   1: 2920.691 us/op
# Warmup Iteration   2: 1991.143 us/op
# Warmup Iteration   3: 1548.573 us/op
# Warmup Iteration   4: 1393.764 us/op
# Warmup Iteration   5: 1444.172 us/op
Iteration   1: 130.421 us/op
Iteration   2: 131.820 us/op
Iteration   3: 135.526 us/op
Iteration   4: 130.016 us/op
Iteration   5: 127.620 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    134.635 ±(99.9%) 30.689 us/op

  Histogram, us/op:
    [110.000, 115.000) = 0 
    [115.000, 120.000) = 1 
    [120.000, 125.000) = 2 
    [125.000, 130.000) = 1 
    [130.000, 135.000) = 3 
    [135.000, 140.000) = 2 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 0 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 0 
    [180.000, 185.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    118.795 us/op
     p(50.0000) =    130.219 us/op
     p(90.0000) =    184.440 us/op
     p(95.0000) =    189.461 us/op
     p(99.0000) =    189.461 us/op
     p(99.9000) =    189.461 us/op
     p(99.9900) =    189.461 us/op
     p(99.9990) =    189.461 us/op
     p(99.9999) =    189.461 us/op
    p(100.0000) =    189.461 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.125)

# Run progress: 36.36% complete, ETA 00:29:27
# Fork: 1 of 2
# Warmup Iteration   1: 3329.542 us/op
# Warmup Iteration   2: 2439.643 us/op
# Warmup Iteration   3: 2331.316 us/op
# Warmup Iteration   4: 2149.841 us/op
# Warmup Iteration   5: 1890.997 us/op
Iteration   1: 160.021 us/op
Iteration   2: 296.356 us/op
Iteration   3: 191.899 us/op
Iteration   4: 208.664 us/op
Iteration   5: 193.489 us/op

# Run progress: 36.55% complete, ETA 00:29:22
# Fork: 2 of 2
# Warmup Iteration   1: 3493.619 us/op
# Warmup Iteration   2: 2514.316 us/op
# Warmup Iteration   3: 2240.280 us/op
# Warmup Iteration   4: 2004.064 us/op
# Warmup Iteration   5: 1966.242 us/op
Iteration   1: 172.036 us/op
Iteration   2: 192.253 us/op
Iteration   3: 176.147 us/op
Iteration   4: 186.160 us/op
Iteration   5: 174.013 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    195.104 ±(99.9%) 57.689 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 0 
    [125.000, 137.500) = 0 
    [137.500, 150.000) = 0 
    [150.000, 162.500) = 1 
    [162.500, 175.000) = 2 
    [175.000, 187.500) = 2 
    [187.500, 200.000) = 3 
    [200.000, 212.500) = 1 
    [212.500, 225.000) = 0 
    [225.000, 237.500) = 0 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    160.021 us/op
     p(50.0000) =    189.029 us/op
     p(90.0000) =    287.587 us/op
     p(95.0000) =    296.356 us/op
     p(99.0000) =    296.356 us/op
     p(99.9000) =    296.356 us/op
     p(99.9900) =    296.356 us/op
     p(99.9990) =    296.356 us/op
     p(99.9999) =    296.356 us/op
    p(100.0000) =    296.356 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.250)

# Run progress: 36.74% complete, ETA 00:29:16
# Fork: 1 of 2
# Warmup Iteration   1: 3370.104 us/op
# Warmup Iteration   2: 1939.162 us/op
# Warmup Iteration   3: 2072.792 us/op
# Warmup Iteration   4: 1549.433 us/op
# Warmup Iteration   5: 1670.289 us/op
Iteration   1: 144.922 us/op
Iteration   2: 179.683 us/op
Iteration   3: 170.531 us/op
Iteration   4: 178.341 us/op
Iteration   5: 167.981 us/op

# Run progress: 36.93% complete, ETA 00:29:11
# Fork: 2 of 2
# Warmup Iteration   1: 3225.649 us/op
# Warmup Iteration   2: 2107.537 us/op
# Warmup Iteration   3: 1770.858 us/op
# Warmup Iteration   4: 1522.808 us/op
# Warmup Iteration   5: 1551.651 us/op
Iteration   1: 186.936 us/op
Iteration   2: 202.754 us/op
Iteration   3: 154.074 us/op
Iteration   4: 185.059 us/op
Iteration   5: 139.973 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    171.025 ±(99.9%) 29.932 us/op

  Histogram, us/op:
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 1 
    [140.000, 145.000) = 1 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 1 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 0 
    [165.000, 170.000) = 1 
    [170.000, 175.000) = 1 
    [175.000, 180.000) = 2 
    [180.000, 185.000) = 0 
    [185.000, 190.000) = 2 
    [190.000, 195.000) = 0 
    [195.000, 200.000) = 0 
    [200.000, 205.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    139.973 us/op
     p(50.0000) =    174.436 us/op
     p(90.0000) =    201.172 us/op
     p(95.0000) =    202.754 us/op
     p(99.0000) =    202.754 us/op
     p(99.9000) =    202.754 us/op
     p(99.9900) =    202.754 us/op
     p(99.9990) =    202.754 us/op
     p(99.9999) =    202.754 us/op
    p(100.0000) =    202.754 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.375)

# Run progress: 37.12% complete, ETA 00:29:06
# Fork: 1 of 2
# Warmup Iteration   1: 3131.238 us/op
# Warmup Iteration   2: 1829.119 us/op
# Warmup Iteration   3: 1795.418 us/op
# Warmup Iteration   4: 1326.482 us/op
# Warmup Iteration   5: 1319.204 us/op
Iteration   1: 161.984 us/op
Iteration   2: 249.375 us/op
Iteration   3: 233.627 us/op
Iteration   4: 206.200 us/op
Iteration   5: 159.724 us/op

# Run progress: 37.31% complete, ETA 00:29:01
# Fork: 2 of 2
# Warmup Iteration   1: 2670.761 us/op
# Warmup Iteration   2: 1803.491 us/op
# Warmup Iteration   3: 1539.845 us/op
# Warmup Iteration   4: 1581.668 us/op
# Warmup Iteration   5: 1289.938 us/op
Iteration   1: 165.044 us/op
Iteration   2: 309.035 us/op
Iteration   3: 139.136 us/op
Iteration   4: 173.363 us/op
Iteration   5: 197.940 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    199.543 ±(99.9%) 78.398 us/op

  Histogram, us/op:
    [100.000, 125.000) = 0 
    [125.000, 150.000) = 1 
    [150.000, 175.000) = 4 
    [175.000, 200.000) = 1 
    [200.000, 225.000) = 1 
    [225.000, 250.000) = 2 
    [250.000, 275.000) = 0 
    [275.000, 300.000) = 0 
    [300.000, 325.000) = 1 
    [325.000, 350.000) = 0 
    [350.000, 375.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    139.136 us/op
     p(50.0000) =    185.652 us/op
     p(90.0000) =    303.069 us/op
     p(95.0000) =    309.035 us/op
     p(99.0000) =    309.035 us/op
     p(99.9000) =    309.035 us/op
     p(99.9900) =    309.035 us/op
     p(99.9990) =    309.035 us/op
     p(99.9999) =    309.035 us/op
    p(100.0000) =    309.035 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.5)

# Run progress: 37.50% complete, ETA 00:28:55
# Fork: 1 of 2
# Warmup Iteration   1: 3227.484 us/op
# Warmup Iteration   2: 1881.100 us/op
# Warmup Iteration   3: 1717.014 us/op
# Warmup Iteration   4: 1435.557 us/op
# Warmup Iteration   5: 1537.338 us/op
Iteration   1: 140.001 us/op
Iteration   2: 177.005 us/op
Iteration   3: 124.401 us/op
Iteration   4: 246.531 us/op
Iteration   5: 118.379 us/op

# Run progress: 37.69% complete, ETA 00:28:50
# Fork: 2 of 2
# Warmup Iteration   1: 2921.209 us/op
# Warmup Iteration   2: 1842.308 us/op
# Warmup Iteration   3: 1897.133 us/op
# Warmup Iteration   4: 1447.313 us/op
# Warmup Iteration   5: 1392.027 us/op
Iteration   1: 125.461 us/op
Iteration   2: 196.605 us/op
Iteration   3: 118.002 us/op
Iteration   4: 256.431 us/op
Iteration   5: 133.478 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    163.629 ±(99.9%) 80.228 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 3 
    [125.000, 137.500) = 2 
    [137.500, 150.000) = 1 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 0 
    [175.000, 187.500) = 1 
    [187.500, 200.000) = 1 
    [200.000, 212.500) = 0 
    [212.500, 225.000) = 0 
    [225.000, 237.500) = 0 
    [237.500, 250.000) = 1 
    [250.000, 262.500) = 1 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    118.002 us/op
     p(50.0000) =    136.740 us/op
     p(90.0000) =    255.441 us/op
     p(95.0000) =    256.431 us/op
     p(99.0000) =    256.431 us/op
     p(99.9000) =    256.431 us/op
     p(99.9900) =    256.431 us/op
     p(99.9990) =    256.431 us/op
     p(99.9999) =    256.431 us/op
    p(100.0000) =    256.431 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.625)

# Run progress: 37.88% complete, ETA 00:28:45
# Fork: 1 of 2
# Warmup Iteration   1: 2803.110 us/op
# Warmup Iteration   2: 1557.663 us/op
# Warmup Iteration   3: 1597.771 us/op
# Warmup Iteration   4: 1265.560 us/op
# Warmup Iteration   5: 1223.275 us/op
Iteration   1: 128.890 us/op
Iteration   2: 184.723 us/op
Iteration   3: 141.767 us/op
Iteration   4: 147.910 us/op
Iteration   5: 130.433 us/op

# Run progress: 38.07% complete, ETA 00:28:40
# Fork: 2 of 2
# Warmup Iteration   1: 2853.146 us/op
# Warmup Iteration   2: 1575.954 us/op
# Warmup Iteration   3: 1809.995 us/op
# Warmup Iteration   4: 1233.385 us/op
# Warmup Iteration   5: 1247.617 us/op
Iteration   1: 154.978 us/op
Iteration   2: 186.974 us/op
Iteration   3: 137.246 us/op
Iteration   4: 140.298 us/op
Iteration   5: 126.884 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    148.010 ±(99.9%) 32.853 us/op

  Histogram, us/op:
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 2 
    [130.000, 135.000) = 1 
    [135.000, 140.000) = 1 
    [140.000, 145.000) = 2 
    [145.000, 150.000) = 1 
    [150.000, 155.000) = 1 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 0 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 0 
    [180.000, 185.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    126.884 us/op
     p(50.0000) =    141.033 us/op
     p(90.0000) =    186.749 us/op
     p(95.0000) =    186.974 us/op
     p(99.0000) =    186.974 us/op
     p(99.9000) =    186.974 us/op
     p(99.9900) =    186.974 us/op
     p(99.9990) =    186.974 us/op
     p(99.9999) =    186.974 us/op
    p(100.0000) =    186.974 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.75)

# Run progress: 38.26% complete, ETA 00:28:34
# Fork: 1 of 2
# Warmup Iteration   1: 2879.631 us/op
# Warmup Iteration   2: 1730.675 us/op
# Warmup Iteration   3: 1482.632 us/op
# Warmup Iteration   4: 1618.437 us/op
# Warmup Iteration   5: 1264.913 us/op
Iteration   1: 160.362 us/op
Iteration   2: 180.383 us/op
Iteration   3: 158.595 us/op
Iteration   4: 125.800 us/op
Iteration   5: 156.810 us/op

# Run progress: 38.45% complete, ETA 00:28:29
# Fork: 2 of 2
# Warmup Iteration   1: 2708.357 us/op
# Warmup Iteration   2: 1672.594 us/op
# Warmup Iteration   3: 1831.346 us/op
# Warmup Iteration   4: 1589.863 us/op
# Warmup Iteration   5: 1248.908 us/op
Iteration   1: 131.477 us/op
Iteration   2: 174.250 us/op
Iteration   3: 135.247 us/op
Iteration   4: 136.224 us/op
Iteration   5: 139.418 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    149.857 ±(99.9%) 28.449 us/op

  Histogram, us/op:
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 1 
    [130.000, 135.000) = 1 
    [135.000, 140.000) = 3 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 2 
    [160.000, 165.000) = 1 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 1 
    [175.000, 180.000) = 0 
    [180.000, 185.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    125.800 us/op
     p(50.0000) =    148.114 us/op
     p(90.0000) =    179.770 us/op
     p(95.0000) =    180.383 us/op
     p(99.0000) =    180.383 us/op
     p(99.9000) =    180.383 us/op
     p(99.9900) =    180.383 us/op
     p(99.9990) =    180.383 us/op
     p(99.9999) =    180.383 us/op
    p(100.0000) =    180.383 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.875)

# Run progress: 38.64% complete, ETA 00:28:24
# Fork: 1 of 2
# Warmup Iteration   1: 3170.344 us/op
# Warmup Iteration   2: 1720.616 us/op
# Warmup Iteration   3: 1620.518 us/op
# Warmup Iteration   4: 1575.563 us/op
# Warmup Iteration   5: 1302.677 us/op
Iteration   1: 181.682 us/op
Iteration   2: 152.606 us/op
Iteration   3: 138.561 us/op
Iteration   4: 180.788 us/op
Iteration   5: 134.576 us/op

# Run progress: 38.83% complete, ETA 00:28:18
# Fork: 2 of 2
# Warmup Iteration   1: 2710.753 us/op
# Warmup Iteration   2: 1689.967 us/op
# Warmup Iteration   3: 1586.445 us/op
# Warmup Iteration   4: 1671.159 us/op
# Warmup Iteration   5: 1331.426 us/op
Iteration   1: 152.776 us/op
Iteration   2: 179.694 us/op
Iteration   3: 139.303 us/op
Iteration   4: 164.993 us/op
Iteration   5: 142.639 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    156.762 ±(99.9%) 28.297 us/op

  Histogram, us/op:
    [130.000, 135.000) = 1 
    [135.000, 140.000) = 2 
    [140.000, 145.000) = 1 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 2 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 1 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 1 
    [180.000, 185.000) = 2 

  Percentiles, us/op:
      p(0.0000) =    134.576 us/op
     p(50.0000) =    152.691 us/op
     p(90.0000) =    181.593 us/op
     p(95.0000) =    181.682 us/op
     p(99.0000) =    181.682 us/op
     p(99.9000) =    181.682 us/op
     p(99.9900) =    181.682 us/op
     p(99.9990) =    181.682 us/op
     p(99.9999) =    181.682 us/op
    p(100.0000) =    181.682 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 1)

# Run progress: 39.02% complete, ETA 00:28:13
# Fork: 1 of 2
# Warmup Iteration   1: 2806.548 us/op
# Warmup Iteration   2: 1726.111 us/op
# Warmup Iteration   3: 1792.226 us/op
# Warmup Iteration   4: 1693.353 us/op
# Warmup Iteration   5: 1360.900 us/op
Iteration   1: 118.497 us/op
Iteration   2: 115.605 us/op
Iteration   3: 148.983 us/op
Iteration   4: 131.755 us/op
Iteration   5: 121.554 us/op

# Run progress: 39.20% complete, ETA 00:28:08
# Fork: 2 of 2
# Warmup Iteration   1: 2826.529 us/op
# Warmup Iteration   2: 1727.027 us/op
# Warmup Iteration   3: 1880.493 us/op
# Warmup Iteration   4: 1390.390 us/op
# Warmup Iteration   5: 1368.156 us/op
Iteration   1: 133.128 us/op
Iteration   2: 145.681 us/op
Iteration   3: 206.138 us/op
Iteration   4: 116.150 us/op
Iteration   5: 130.240 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    136.773 ±(99.9%) 40.817 us/op

  Histogram, us/op:
    [110.000, 120.000) = 3 
    [120.000, 130.000) = 1 
    [130.000, 140.000) = 3 
    [140.000, 150.000) = 2 
    [150.000, 160.000) = 0 
    [160.000, 170.000) = 0 
    [170.000, 180.000) = 0 
    [180.000, 190.000) = 0 
    [190.000, 200.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    115.605 us/op
     p(50.0000) =    130.998 us/op
     p(90.0000) =    200.423 us/op
     p(95.0000) =    206.138 us/op
     p(99.0000) =    206.138 us/op
     p(99.9000) =    206.138 us/op
     p(99.9900) =    206.138 us/op
     p(99.9990) =    206.138 us/op
     p(99.9999) =    206.138 us/op
    p(100.0000) =    206.138 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.125)

# Run progress: 39.39% complete, ETA 00:28:03
# Fork: 1 of 2
# Warmup Iteration   1: 3485.575 us/op
# Warmup Iteration   2: 2559.808 us/op
# Warmup Iteration   3: 2129.512 us/op
# Warmup Iteration   4: 1772.228 us/op
# Warmup Iteration   5: 1696.704 us/op
Iteration   1: 171.205 us/op
Iteration   2: 213.606 us/op
Iteration   3: 143.104 us/op
Iteration   4: 160.027 us/op
Iteration   5: 139.957 us/op

# Run progress: 39.58% complete, ETA 00:27:57
# Fork: 2 of 2
# Warmup Iteration   1: 3486.187 us/op
# Warmup Iteration   2: 2363.851 us/op
# Warmup Iteration   3: 2096.223 us/op
# Warmup Iteration   4: 1810.590 us/op
# Warmup Iteration   5: 1763.083 us/op
Iteration   1: 160.444 us/op
Iteration   2: 168.486 us/op
Iteration   3: 139.244 us/op
Iteration   4: 177.044 us/op
Iteration   5: 134.648 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    160.777 ±(99.9%) 36.048 us/op

  Histogram, us/op:
    [130.000, 135.000) = 1 
    [135.000, 140.000) = 2 
    [140.000, 145.000) = 1 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 2 
    [165.000, 170.000) = 1 
    [170.000, 175.000) = 1 
    [175.000, 180.000) = 1 
    [180.000, 185.000) = 0 
    [185.000, 190.000) = 0 
    [190.000, 195.000) = 0 
    [195.000, 200.000) = 0 
    [200.000, 205.000) = 0 
    [205.000, 210.000) = 0 
    [210.000, 215.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    134.648 us/op
     p(50.0000) =    160.236 us/op
     p(90.0000) =    209.950 us/op
     p(95.0000) =    213.606 us/op
     p(99.0000) =    213.606 us/op
     p(99.9000) =    213.606 us/op
     p(99.9900) =    213.606 us/op
     p(99.9990) =    213.606 us/op
     p(99.9999) =    213.606 us/op
    p(100.0000) =    213.606 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.250)

# Run progress: 39.77% complete, ETA 00:27:52
# Fork: 1 of 2
# Warmup Iteration   1: 3045.002 us/op
# Warmup Iteration   2: 2283.351 us/op
# Warmup Iteration   3: 1703.647 us/op
# Warmup Iteration   4: 1503.475 us/op
# Warmup Iteration   5: 1550.476 us/op
Iteration   1: 123.464 us/op
Iteration   2: 159.910 us/op
Iteration   3: 152.586 us/op
Iteration   4: 140.093 us/op
Iteration   5: 171.286 us/op

# Run progress: 39.96% complete, ETA 00:27:47
# Fork: 2 of 2
# Warmup Iteration   1: 3038.839 us/op
# Warmup Iteration   2: 1931.427 us/op
# Warmup Iteration   3: 1862.002 us/op
# Warmup Iteration   4: 1495.977 us/op
# Warmup Iteration   5: 1554.688 us/op
Iteration   1: 119.914 us/op
Iteration   2: 123.907 us/op
Iteration   3: 175.240 us/op
Iteration   4: 158.063 us/op
Iteration   5: 150.202 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    147.467 ±(99.9%) 30.171 us/op

  Histogram, us/op:
    [110.000, 115.000) = 0 
    [115.000, 120.000) = 1 
    [120.000, 125.000) = 2 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 1 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 2 
    [155.000, 160.000) = 2 
    [160.000, 165.000) = 0 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    119.914 us/op
     p(50.0000) =    151.394 us/op
     p(90.0000) =    174.845 us/op
     p(95.0000) =    175.240 us/op
     p(99.0000) =    175.240 us/op
     p(99.9000) =    175.240 us/op
     p(99.9900) =    175.240 us/op
     p(99.9990) =    175.240 us/op
     p(99.9999) =    175.240 us/op
    p(100.0000) =    175.240 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.375)

# Run progress: 40.15% complete, ETA 00:27:42
# Fork: 1 of 2
# Warmup Iteration   1: 2948.430 us/op
# Warmup Iteration   2: 1728.061 us/op
# Warmup Iteration   3: 1785.309 us/op
# Warmup Iteration   4: 1395.684 us/op
# Warmup Iteration   5: 1259.847 us/op
Iteration   1: 144.370 us/op
Iteration   2: 210.140 us/op
Iteration   3: 137.677 us/op
Iteration   4: 289.761 us/op
Iteration   5: 139.493 us/op

# Run progress: 40.34% complete, ETA 00:27:36
# Fork: 2 of 2
# Warmup Iteration   1: 2799.977 us/op
# Warmup Iteration   2: 1781.310 us/op
# Warmup Iteration   3: 1664.222 us/op
# Warmup Iteration   4: 1319.628 us/op
# Warmup Iteration   5: 1290.322 us/op
Iteration   1: 307.172 us/op
Iteration   2: 155.939 us/op
Iteration   3: 129.844 us/op
Iteration   4: 160.383 us/op
Iteration   5: 140.984 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    181.576 ±(99.9%) 99.276 us/op

  Histogram, us/op:
    [100.000, 125.000) = 0 
    [125.000, 150.000) = 5 
    [150.000, 175.000) = 2 
    [175.000, 200.000) = 0 
    [200.000, 225.000) = 1 
    [225.000, 250.000) = 0 
    [250.000, 275.000) = 0 
    [275.000, 300.000) = 1 
    [300.000, 325.000) = 1 
    [325.000, 350.000) = 0 
    [350.000, 375.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    129.844 us/op
     p(50.0000) =    150.154 us/op
     p(90.0000) =    305.431 us/op
     p(95.0000) =    307.172 us/op
     p(99.0000) =    307.172 us/op
     p(99.9000) =    307.172 us/op
     p(99.9900) =    307.172 us/op
     p(99.9990) =    307.172 us/op
     p(99.9999) =    307.172 us/op
    p(100.0000) =    307.172 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.5)

# Run progress: 40.53% complete, ETA 00:27:31
# Fork: 1 of 2
# Warmup Iteration   1: 2987.662 us/op
# Warmup Iteration   2: 1911.386 us/op
# Warmup Iteration   3: 1787.291 us/op
# Warmup Iteration   4: 1389.131 us/op
# Warmup Iteration   5: 1354.311 us/op
Iteration   1: 104.154 us/op
Iteration   2: 149.756 us/op
Iteration   3: 130.236 us/op
Iteration   4: 270.628 us/op
Iteration   5: 133.529 us/op

# Run progress: 40.72% complete, ETA 00:27:26
# Fork: 2 of 2
# Warmup Iteration   1: 2679.905 us/op
# Warmup Iteration   2: 1880.817 us/op
# Warmup Iteration   3: 1619.328 us/op
# Warmup Iteration   4: 1644.232 us/op
# Warmup Iteration   5: 1358.447 us/op
Iteration   1: 118.457 us/op
Iteration   2: 172.423 us/op
Iteration   3: 118.246 us/op
Iteration   4: 229.400 us/op
Iteration   5: 121.425 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    154.825 ±(99.9%) 82.360 us/op

  Histogram, us/op:
    [100.000, 112.500) = 1 
    [112.500, 125.000) = 3 
    [125.000, 137.500) = 2 
    [137.500, 150.000) = 1 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 1 
    [175.000, 187.500) = 0 
    [187.500, 200.000) = 0 
    [200.000, 212.500) = 0 
    [212.500, 225.000) = 0 
    [225.000, 237.500) = 1 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 1 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    104.154 us/op
     p(50.0000) =    131.883 us/op
     p(90.0000) =    266.505 us/op
     p(95.0000) =    270.628 us/op
     p(99.0000) =    270.628 us/op
     p(99.9000) =    270.628 us/op
     p(99.9900) =    270.628 us/op
     p(99.9990) =    270.628 us/op
     p(99.9999) =    270.628 us/op
    p(100.0000) =    270.628 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.625)

# Run progress: 40.91% complete, ETA 00:27:20
# Fork: 1 of 2
# Warmup Iteration   1: 2895.297 us/op
# Warmup Iteration   2: 1513.651 us/op
# Warmup Iteration   3: 1700.670 us/op
# Warmup Iteration   4: 1240.292 us/op
# Warmup Iteration   5: 1175.972 us/op
Iteration   1: 114.992 us/op
Iteration   2: 144.613 us/op
Iteration   3: 188.095 us/op
Iteration   4: 113.746 us/op
Iteration   5: 129.255 us/op

# Run progress: 41.10% complete, ETA 00:27:15
# Fork: 2 of 2
# Warmup Iteration   1: 3103.209 us/op
# Warmup Iteration   2: 1598.265 us/op
# Warmup Iteration   3: 1783.355 us/op
# Warmup Iteration   4: 1229.644 us/op
# Warmup Iteration   5: 1283.339 us/op
Iteration   1: 151.066 us/op
Iteration   2: 151.476 us/op
Iteration   3: 129.632 us/op
Iteration   4: 118.114 us/op
Iteration   5: 225.268 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    146.626 ±(99.9%) 53.894 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 3 
    [125.000, 137.500) = 2 
    [137.500, 150.000) = 1 
    [150.000, 162.500) = 2 
    [162.500, 175.000) = 0 
    [175.000, 187.500) = 0 
    [187.500, 200.000) = 1 
    [200.000, 212.500) = 0 
    [212.500, 225.000) = 0 
    [225.000, 237.500) = 1 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    113.746 us/op
     p(50.0000) =    137.123 us/op
     p(90.0000) =    221.551 us/op
     p(95.0000) =    225.268 us/op
     p(99.0000) =    225.268 us/op
     p(99.9000) =    225.268 us/op
     p(99.9900) =    225.268 us/op
     p(99.9990) =    225.268 us/op
     p(99.9999) =    225.268 us/op
    p(100.0000) =    225.268 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.75)

# Run progress: 41.29% complete, ETA 00:27:10
# Fork: 1 of 2
# Warmup Iteration   1: 2849.983 us/op
# Warmup Iteration   2: 1645.618 us/op
# Warmup Iteration   3: 1642.281 us/op
# Warmup Iteration   4: 1558.480 us/op
# Warmup Iteration   5: 1219.540 us/op
Iteration   1: 146.733 us/op
Iteration   2: 143.558 us/op
Iteration   3: 153.092 us/op
Iteration   4: 194.837 us/op
Iteration   5: 111.817 us/op

# Run progress: 41.48% complete, ETA 00:27:05
# Fork: 2 of 2
# Warmup Iteration   1: 2800.219 us/op
# Warmup Iteration   2: 1651.828 us/op
# Warmup Iteration   3: 1466.999 us/op
# Warmup Iteration   4: 1562.717 us/op
# Warmup Iteration   5: 1244.464 us/op
Iteration   1: 162.163 us/op
Iteration   2: 144.049 us/op
Iteration   3: 150.358 us/op
Iteration   4: 134.037 us/op
Iteration   5: 115.065 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    145.571 ±(99.9%) 35.608 us/op

  Histogram, us/op:
    [110.000, 115.000) = 1 
    [115.000, 120.000) = 1 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 1 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 2 
    [145.000, 150.000) = 1 
    [150.000, 155.000) = 2 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 1 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 0 
    [180.000, 185.000) = 0 
    [185.000, 190.000) = 0 
    [190.000, 195.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    111.817 us/op
     p(50.0000) =    145.391 us/op
     p(90.0000) =    191.570 us/op
     p(95.0000) =    194.837 us/op
     p(99.0000) =    194.837 us/op
     p(99.9000) =    194.837 us/op
     p(99.9900) =    194.837 us/op
     p(99.9990) =    194.837 us/op
     p(99.9999) =    194.837 us/op
    p(100.0000) =    194.837 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.875)

# Run progress: 41.67% complete, ETA 00:26:59
# Fork: 1 of 2
# Warmup Iteration   1: 2767.036 us/op
# Warmup Iteration   2: 1731.178 us/op
# Warmup Iteration   3: 1584.375 us/op
# Warmup Iteration   4: 1723.655 us/op
# Warmup Iteration   5: 1320.029 us/op
Iteration   1: 162.656 us/op
Iteration   2: 122.864 us/op
Iteration   3: 122.698 us/op
Iteration   4: 123.069 us/op
Iteration   5: 125.128 us/op

# Run progress: 41.86% complete, ETA 00:26:54
# Fork: 2 of 2
# Warmup Iteration   1: 2820.003 us/op
# Warmup Iteration   2: 1762.637 us/op
# Warmup Iteration   3: 1637.547 us/op
# Warmup Iteration   4: 1875.635 us/op
# Warmup Iteration   5: 1305.785 us/op
Iteration   1: 146.141 us/op
Iteration   2: 172.469 us/op
Iteration   3: 131.993 us/op
Iteration   4: 137.243 us/op
Iteration   5: 132.527 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    137.679 ±(99.9%) 26.570 us/op

  Histogram, us/op:
    [120.000, 125.000) = 3 
    [125.000, 130.000) = 1 
    [130.000, 135.000) = 2 
    [135.000, 140.000) = 1 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 1 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 1 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    122.698 us/op
     p(50.0000) =    132.260 us/op
     p(90.0000) =    171.488 us/op
     p(95.0000) =    172.469 us/op
     p(99.0000) =    172.469 us/op
     p(99.9000) =    172.469 us/op
     p(99.9900) =    172.469 us/op
     p(99.9990) =    172.469 us/op
     p(99.9999) =    172.469 us/op
    p(100.0000) =    172.469 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 1)

# Run progress: 42.05% complete, ETA 00:26:49
# Fork: 1 of 2
# Warmup Iteration   1: 2644.662 us/op
# Warmup Iteration   2: 1703.086 us/op
# Warmup Iteration   3: 1585.134 us/op
# Warmup Iteration   4: 1607.393 us/op
# Warmup Iteration   5: 1401.232 us/op
Iteration   1: 94.699 us/op
Iteration   2: 127.068 us/op
Iteration   3: 99.745 us/op
Iteration   4: 106.359 us/op
Iteration   5: 105.430 us/op

# Run progress: 42.23% complete, ETA 00:26:44
# Fork: 2 of 2
# Warmup Iteration   1: 2796.993 us/op
# Warmup Iteration   2: 1752.295 us/op
# Warmup Iteration   3: 1769.999 us/op
# Warmup Iteration   4: 1690.099 us/op
# Warmup Iteration   5: 1344.721 us/op
Iteration   1: 123.983 us/op
Iteration   2: 156.130 us/op
Iteration   3: 160.242 us/op
Iteration   4: 92.910 us/op
Iteration   5: 140.268 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    120.683 ±(99.9%) 37.643 us/op

  Histogram, us/op:
    [ 90.000,  95.000) = 2 
    [ 95.000, 100.000) = 1 
    [100.000, 105.000) = 0 
    [105.000, 110.000) = 2 
    [110.000, 115.000) = 0 
    [115.000, 120.000) = 0 
    [120.000, 125.000) = 1 
    [125.000, 130.000) = 1 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 1 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 1 
    [160.000, 165.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     92.910 us/op
     p(50.0000) =    115.171 us/op
     p(90.0000) =    159.831 us/op
     p(95.0000) =    160.242 us/op
     p(99.0000) =    160.242 us/op
     p(99.9000) =    160.242 us/op
     p(99.9900) =    160.242 us/op
     p(99.9990) =    160.242 us/op
     p(99.9999) =    160.242 us/op
    p(100.0000) =    160.242 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.125)

# Run progress: 42.42% complete, ETA 00:26:38
# Fork: 1 of 2
# Warmup Iteration   1: 3207.940 us/op
# Warmup Iteration   2: 2522.500 us/op
# Warmup Iteration   3: 2168.067 us/op
# Warmup Iteration   4: 1826.315 us/op
# Warmup Iteration   5: 1737.402 us/op
Iteration   1: 162.628 us/op
Iteration   2: 166.635 us/op
Iteration   3: 143.105 us/op
Iteration   4: 137.381 us/op
Iteration   5: 129.190 us/op

# Run progress: 42.61% complete, ETA 00:26:33
# Fork: 2 of 2
# Warmup Iteration   1: 3549.188 us/op
# Warmup Iteration   2: 2437.301 us/op
# Warmup Iteration   3: 2067.207 us/op
# Warmup Iteration   4: 1760.618 us/op
# Warmup Iteration   5: 1669.124 us/op
Iteration   1: 158.084 us/op
Iteration   2: 169.415 us/op
Iteration   3: 135.833 us/op
Iteration   4: 131.213 us/op
Iteration   5: 135.423 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    146.891 ±(99.9%) 23.572 us/op

  Histogram, us/op:
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 1 
    [130.000, 135.000) = 1 
    [135.000, 140.000) = 3 
    [140.000, 145.000) = 1 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 1 
    [160.000, 165.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    129.190 us/op
     p(50.0000) =    140.243 us/op
     p(90.0000) =    169.137 us/op
     p(95.0000) =    169.415 us/op
     p(99.0000) =    169.415 us/op
     p(99.9000) =    169.415 us/op
     p(99.9900) =    169.415 us/op
     p(99.9990) =    169.415 us/op
     p(99.9999) =    169.415 us/op
    p(100.0000) =    169.415 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.250)

# Run progress: 42.80% complete, ETA 00:26:28
# Fork: 1 of 2
# Warmup Iteration   1: 3078.530 us/op
# Warmup Iteration   2: 2160.742 us/op
# Warmup Iteration   3: 1690.426 us/op
# Warmup Iteration   4: 1526.317 us/op
# Warmup Iteration   5: 1578.513 us/op
Iteration   1: 159.047 us/op
Iteration   2: 163.187 us/op
Iteration   3: 176.420 us/op
Iteration   4: 133.645 us/op
Iteration   5: 212.185 us/op

# Run progress: 42.99% complete, ETA 00:26:23
# Fork: 2 of 2
# Warmup Iteration   1: 2992.230 us/op
# Warmup Iteration   2: 2112.068 us/op
# Warmup Iteration   3: 1923.581 us/op
# Warmup Iteration   4: 1539.921 us/op
# Warmup Iteration   5: 1547.617 us/op
Iteration   1: 136.851 us/op
Iteration   2: 138.440 us/op
Iteration   3: 155.466 us/op
Iteration   4: 131.565 us/op
Iteration   5: 124.104 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    153.091 ±(99.9%) 40.125 us/op

  Histogram, us/op:
    [120.000, 130.000) = 1 
    [130.000, 140.000) = 4 
    [140.000, 150.000) = 0 
    [150.000, 160.000) = 2 
    [160.000, 170.000) = 1 
    [170.000, 180.000) = 1 
    [180.000, 190.000) = 0 
    [190.000, 200.000) = 0 
    [200.000, 210.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    124.104 us/op
     p(50.0000) =    146.953 us/op
     p(90.0000) =    208.609 us/op
     p(95.0000) =    212.185 us/op
     p(99.0000) =    212.185 us/op
     p(99.9000) =    212.185 us/op
     p(99.9900) =    212.185 us/op
     p(99.9990) =    212.185 us/op
     p(99.9999) =    212.185 us/op
    p(100.0000) =    212.185 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.375)

# Run progress: 43.18% complete, ETA 00:26:17
# Fork: 1 of 2
# Warmup Iteration   1: 2798.758 us/op
# Warmup Iteration   2: 1791.681 us/op
# Warmup Iteration   3: 1658.244 us/op
# Warmup Iteration   4: 1575.779 us/op
# Warmup Iteration   5: 1299.140 us/op
Iteration   1: 172.593 us/op
Iteration   2: 171.168 us/op
Iteration   3: 127.285 us/op
Iteration   4: 206.220 us/op
Iteration   5: 159.865 us/op

# Run progress: 43.37% complete, ETA 00:26:12
# Fork: 2 of 2
# Warmup Iteration   1: 2744.934 us/op
# Warmup Iteration   2: 1913.933 us/op
# Warmup Iteration   3: 1679.489 us/op
# Warmup Iteration   4: 1336.444 us/op
# Warmup Iteration   5: 1303.705 us/op
Iteration   1: 156.055 us/op
Iteration   2: 169.476 us/op
Iteration   3: 127.134 us/op
Iteration   4: 239.646 us/op
Iteration   5: 141.687 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    167.113 ±(99.9%) 52.489 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 0 
    [125.000, 137.500) = 2 
    [137.500, 150.000) = 1 
    [150.000, 162.500) = 2 
    [162.500, 175.000) = 3 
    [175.000, 187.500) = 0 
    [187.500, 200.000) = 0 
    [200.000, 212.500) = 1 
    [212.500, 225.000) = 0 
    [225.000, 237.500) = 0 
    [237.500, 250.000) = 1 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    127.134 us/op
     p(50.0000) =    164.671 us/op
     p(90.0000) =    236.303 us/op
     p(95.0000) =    239.646 us/op
     p(99.0000) =    239.646 us/op
     p(99.9000) =    239.646 us/op
     p(99.9900) =    239.646 us/op
     p(99.9990) =    239.646 us/op
     p(99.9999) =    239.646 us/op
    p(100.0000) =    239.646 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.5)

# Run progress: 43.56% complete, ETA 00:26:07
# Fork: 1 of 2
# Warmup Iteration   1: 2749.506 us/op
# Warmup Iteration   2: 1821.579 us/op
# Warmup Iteration   3: 1883.753 us/op
# Warmup Iteration   4: 1427.163 us/op
# Warmup Iteration   5: 1353.370 us/op
Iteration   1: 119.650 us/op
Iteration   2: 147.555 us/op
Iteration   3: 120.432 us/op
Iteration   4: 219.850 us/op
Iteration   5: 118.923 us/op

# Run progress: 43.75% complete, ETA 00:26:02
# Fork: 2 of 2
# Warmup Iteration   1: 2952.209 us/op
# Warmup Iteration   2: 2007.024 us/op
# Warmup Iteration   3: 1439.137 us/op
# Warmup Iteration   4: 1402.828 us/op
# Warmup Iteration   5: 1422.275 us/op
Iteration   1: 110.889 us/op
Iteration   2: 159.787 us/op
Iteration   3: 121.530 us/op
Iteration   4: 223.092 us/op
Iteration   5: 122.536 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    146.424 ±(99.9%) 63.847 us/op

  Histogram, us/op:
    [100.000, 112.500) = 1 
    [112.500, 125.000) = 5 
    [125.000, 137.500) = 0 
    [137.500, 150.000) = 1 
    [150.000, 162.500) = 1 
    [162.500, 175.000) = 0 
    [175.000, 187.500) = 0 
    [187.500, 200.000) = 0 
    [200.000, 212.500) = 0 
    [212.500, 225.000) = 2 
    [225.000, 237.500) = 0 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    110.889 us/op
     p(50.0000) =    122.033 us/op
     p(90.0000) =    222.768 us/op
     p(95.0000) =    223.092 us/op
     p(99.0000) =    223.092 us/op
     p(99.9000) =    223.092 us/op
     p(99.9900) =    223.092 us/op
     p(99.9990) =    223.092 us/op
     p(99.9999) =    223.092 us/op
    p(100.0000) =    223.092 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.625)

# Run progress: 43.94% complete, ETA 00:25:56
# Fork: 1 of 2
# Warmup Iteration   1: 2731.538 us/op
# Warmup Iteration   2: 1526.692 us/op
# Warmup Iteration   3: 1682.224 us/op
# Warmup Iteration   4: 1216.601 us/op
# Warmup Iteration   5: 1165.499 us/op
Iteration   1: 107.430 us/op
Iteration   2: 168.553 us/op
Iteration   3: 142.734 us/op
Iteration   4: 109.857 us/op
Iteration   5: 138.680 us/op

# Run progress: 44.13% complete, ETA 00:25:51
# Fork: 2 of 2
# Warmup Iteration   1: 2909.211 us/op
# Warmup Iteration   2: 1550.074 us/op
# Warmup Iteration   3: 1586.670 us/op
# Warmup Iteration   4: 1256.964 us/op
# Warmup Iteration   5: 1233.614 us/op
Iteration   1: 129.029 us/op
Iteration   2: 146.205 us/op
Iteration   3: 119.955 us/op
Iteration   4: 128.128 us/op
Iteration   5: 144.927 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    133.550 ±(99.9%) 28.076 us/op

  Histogram, us/op:
    [100.000, 105.000) = 0 
    [105.000, 110.000) = 2 
    [110.000, 115.000) = 0 
    [115.000, 120.000) = 1 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 2 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 1 
    [140.000, 145.000) = 2 
    [145.000, 150.000) = 1 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    107.430 us/op
     p(50.0000) =    133.855 us/op
     p(90.0000) =    166.318 us/op
     p(95.0000) =    168.553 us/op
     p(99.0000) =    168.553 us/op
     p(99.9000) =    168.553 us/op
     p(99.9900) =    168.553 us/op
     p(99.9990) =    168.553 us/op
     p(99.9999) =    168.553 us/op
    p(100.0000) =    168.553 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.75)

# Run progress: 44.32% complete, ETA 00:25:46
# Fork: 1 of 2
# Warmup Iteration   1: 2780.304 us/op
# Warmup Iteration   2: 1598.181 us/op
# Warmup Iteration   3: 1748.363 us/op
# Warmup Iteration   4: 1253.484 us/op
# Warmup Iteration   5: 1245.703 us/op
Iteration   1: 115.559 us/op
Iteration   2: 128.880 us/op
Iteration   3: 229.918 us/op
Iteration   4: 117.691 us/op
Iteration   5: 115.320 us/op

# Run progress: 44.51% complete, ETA 00:25:40
# Fork: 2 of 2
# Warmup Iteration   1: 2898.667 us/op
# Warmup Iteration   2: 1657.108 us/op
# Warmup Iteration   3: 1502.238 us/op
# Warmup Iteration   4: 1612.140 us/op
# Warmup Iteration   5: 1224.990 us/op
Iteration   1: 123.304 us/op
Iteration   2: 165.324 us/op
Iteration   3: 115.908 us/op
Iteration   4: 114.196 us/op
Iteration   5: 146.908 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    137.301 ±(99.9%) 55.330 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 6 
    [125.000, 137.500) = 1 
    [137.500, 150.000) = 1 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 1 
    [175.000, 187.500) = 0 
    [187.500, 200.000) = 0 
    [200.000, 212.500) = 0 
    [212.500, 225.000) = 0 
    [225.000, 237.500) = 1 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    114.196 us/op
     p(50.0000) =    120.498 us/op
     p(90.0000) =    223.459 us/op
     p(95.0000) =    229.918 us/op
     p(99.0000) =    229.918 us/op
     p(99.9000) =    229.918 us/op
     p(99.9900) =    229.918 us/op
     p(99.9990) =    229.918 us/op
     p(99.9999) =    229.918 us/op
    p(100.0000) =    229.918 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.875)

# Run progress: 44.70% complete, ETA 00:25:35
# Fork: 1 of 2
# Warmup Iteration   1: 2899.743 us/op
# Warmup Iteration   2: 1652.613 us/op
# Warmup Iteration   3: 1568.207 us/op
# Warmup Iteration   4: 1729.654 us/op
# Warmup Iteration   5: 1284.226 us/op
Iteration   1: 127.960 us/op
Iteration   2: 170.094 us/op
Iteration   3: 150.823 us/op
Iteration   4: 148.239 us/op
Iteration   5: 121.420 us/op

# Run progress: 44.89% complete, ETA 00:25:30
# Fork: 2 of 2
# Warmup Iteration   1: 3177.910 us/op
# Warmup Iteration   2: 1691.764 us/op
# Warmup Iteration   3: 1531.515 us/op
# Warmup Iteration   4: 1616.202 us/op
# Warmup Iteration   5: 1437.662 us/op
Iteration   1: 144.867 us/op
Iteration   2: 208.019 us/op
Iteration   3: 129.991 us/op
Iteration   4: 118.506 us/op
Iteration   5: 117.576 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    143.750 ±(99.9%) 42.630 us/op

  Histogram, us/op:
    [110.000, 120.000) = 2 
    [120.000, 130.000) = 3 
    [130.000, 140.000) = 0 
    [140.000, 150.000) = 2 
    [150.000, 160.000) = 1 
    [160.000, 170.000) = 0 
    [170.000, 180.000) = 1 
    [180.000, 190.000) = 0 
    [190.000, 200.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    117.576 us/op
     p(50.0000) =    137.429 us/op
     p(90.0000) =    204.227 us/op
     p(95.0000) =    208.019 us/op
     p(99.0000) =    208.019 us/op
     p(99.9000) =    208.019 us/op
     p(99.9900) =    208.019 us/op
     p(99.9990) =    208.019 us/op
     p(99.9999) =    208.019 us/op
    p(100.0000) =    208.019 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 1)

# Run progress: 45.08% complete, ETA 00:25:25
# Fork: 1 of 2
# Warmup Iteration   1: 2853.496 us/op
# Warmup Iteration   2: 1698.840 us/op
# Warmup Iteration   3: 1659.280 us/op
# Warmup Iteration   4: 1691.290 us/op
# Warmup Iteration   5: 1430.597 us/op
Iteration   1: 95.610 us/op
Iteration   2: 139.651 us/op
Iteration   3: 98.437 us/op
Iteration   4: 102.086 us/op
Iteration   5: 98.439 us/op

# Run progress: 45.27% complete, ETA 00:25:19
# Fork: 2 of 2
# Warmup Iteration   1: 2799.468 us/op
# Warmup Iteration   2: 2017.797 us/op
# Warmup Iteration   3: 1457.358 us/op
# Warmup Iteration   4: 1351.019 us/op
# Warmup Iteration   5: 1343.547 us/op
Iteration   1: 91.472 us/op
Iteration   2: 158.226 us/op
Iteration   3: 97.158 us/op
Iteration   4: 115.649 us/op
Iteration   5: 95.784 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    109.251 ±(99.9%) 33.726 us/op

  Histogram, us/op:
    [ 90.000,  95.000) = 1 
    [ 95.000, 100.000) = 5 
    [100.000, 105.000) = 1 
    [105.000, 110.000) = 0 
    [110.000, 115.000) = 0 
    [115.000, 120.000) = 1 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 1 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     91.472 us/op
     p(50.0000) =     98.438 us/op
     p(90.0000) =    156.369 us/op
     p(95.0000) =    158.226 us/op
     p(99.0000) =    158.226 us/op
     p(99.9000) =    158.226 us/op
     p(99.9900) =    158.226 us/op
     p(99.9990) =    158.226 us/op
     p(99.9999) =    158.226 us/op
    p(100.0000) =    158.226 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.125)

# Run progress: 45.45% complete, ETA 00:25:14
# Fork: 1 of 2
# Warmup Iteration   1: 3543.532 us/op
# Warmup Iteration   2: 2422.223 us/op
# Warmup Iteration   3: 1966.902 us/op
# Warmup Iteration   4: 1691.647 us/op
# Warmup Iteration   5: 1620.444 us/op
Iteration   1: 143.780 us/op
Iteration   2: 155.632 us/op
Iteration   3: 114.046 us/op
Iteration   4: 130.018 us/op
Iteration   5: 107.317 us/op

# Run progress: 45.64% complete, ETA 00:25:09
# Fork: 2 of 2
# Warmup Iteration   1: 3670.075 us/op
# Warmup Iteration   2: 2356.582 us/op
# Warmup Iteration   3: 2062.027 us/op
# Warmup Iteration   4: 1626.869 us/op
# Warmup Iteration   5: 1671.018 us/op
Iteration   1: 124.383 us/op
Iteration   2: 189.040 us/op
Iteration   3: 132.459 us/op
Iteration   4: 108.581 us/op
Iteration   5: 132.360 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    133.762 ±(99.9%) 37.245 us/op

  Histogram, us/op:
    [100.000, 105.000) = 0 
    [105.000, 110.000) = 2 
    [110.000, 115.000) = 1 
    [115.000, 120.000) = 0 
    [120.000, 125.000) = 1 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 3 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 1 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 1 
    [160.000, 165.000) = 0 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 0 
    [180.000, 185.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    107.317 us/op
     p(50.0000) =    131.189 us/op
     p(90.0000) =    185.699 us/op
     p(95.0000) =    189.040 us/op
     p(99.0000) =    189.040 us/op
     p(99.9000) =    189.040 us/op
     p(99.9900) =    189.040 us/op
     p(99.9990) =    189.040 us/op
     p(99.9999) =    189.040 us/op
    p(100.0000) =    189.040 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.250)

# Run progress: 45.83% complete, ETA 00:25:04
# Fork: 1 of 2
# Warmup Iteration   1: 3230.832 us/op
# Warmup Iteration   2: 1806.782 us/op
# Warmup Iteration   3: 1792.617 us/op
# Warmup Iteration   4: 1480.100 us/op
# Warmup Iteration   5: 1470.249 us/op
Iteration   1: 110.645 us/op
Iteration   2: 153.638 us/op
Iteration   3: 132.010 us/op
Iteration   4: 112.970 us/op
Iteration   5: 114.898 us/op

# Run progress: 46.02% complete, ETA 00:24:58
# Fork: 2 of 2
# Warmup Iteration   1: 4228.015 us/op
# Warmup Iteration   2: 1829.098 us/op
# Warmup Iteration   3: 1680.281 us/op
# Warmup Iteration   4: 1798.676 us/op
# Warmup Iteration   5: 1458.746 us/op
Iteration   1: 109.723 us/op
Iteration   2: 131.696 us/op
Iteration   3: 104.318 us/op
Iteration   4: 108.596 us/op
Iteration   5: 145.052 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    122.355 ±(99.9%) 25.841 us/op

  Histogram, us/op:
    [100.000, 105.000) = 1 
    [105.000, 110.000) = 2 
    [110.000, 115.000) = 3 
    [115.000, 120.000) = 0 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 2 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 1 
    [150.000, 155.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    104.318 us/op
     p(50.0000) =    113.934 us/op
     p(90.0000) =    152.779 us/op
     p(95.0000) =    153.638 us/op
     p(99.0000) =    153.638 us/op
     p(99.9000) =    153.638 us/op
     p(99.9900) =    153.638 us/op
     p(99.9990) =    153.638 us/op
     p(99.9999) =    153.638 us/op
    p(100.0000) =    153.638 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.375)

# Run progress: 46.21% complete, ETA 00:24:53
# Fork: 1 of 2
# Warmup Iteration   1: 2682.487 us/op
# Warmup Iteration   2: 1491.817 us/op
# Warmup Iteration   3: 1544.509 us/op
# Warmup Iteration   4: 1598.093 us/op
# Warmup Iteration   5: 1141.857 us/op
Iteration   1: 106.867 us/op
Iteration   2: 121.445 us/op
Iteration   3: 126.434 us/op
Iteration   4: 168.374 us/op
Iteration   5: 121.958 us/op

# Run progress: 46.40% complete, ETA 00:24:48
# Fork: 2 of 2
# Warmup Iteration   1: 2462.946 us/op
# Warmup Iteration   2: 1456.899 us/op
# Warmup Iteration   3: 1371.677 us/op
# Warmup Iteration   4: 1391.353 us/op
# Warmup Iteration   5: 1119.096 us/op
Iteration   1: 138.972 us/op
Iteration   2: 125.199 us/op
Iteration   3: 178.754 us/op
Iteration   4: 121.641 us/op
Iteration   5: 126.182 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    133.583 ±(99.9%) 34.161 us/op

  Histogram, us/op:
    [100.000, 105.000) = 0 
    [105.000, 110.000) = 1 
    [110.000, 115.000) = 0 
    [115.000, 120.000) = 0 
    [120.000, 125.000) = 3 
    [125.000, 130.000) = 3 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 1 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 0 
    [165.000, 170.000) = 1 
    [170.000, 175.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    106.867 us/op
     p(50.0000) =    125.691 us/op
     p(90.0000) =    177.716 us/op
     p(95.0000) =    178.754 us/op
     p(99.0000) =    178.754 us/op
     p(99.9000) =    178.754 us/op
     p(99.9900) =    178.754 us/op
     p(99.9990) =    178.754 us/op
     p(99.9999) =    178.754 us/op
    p(100.0000) =    178.754 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.5)

# Run progress: 46.59% complete, ETA 00:24:43
# Fork: 1 of 2
# Warmup Iteration   1: 2774.164 us/op
# Warmup Iteration   2: 1618.312 us/op
# Warmup Iteration   3: 1419.701 us/op
# Warmup Iteration   4: 1471.995 us/op
# Warmup Iteration   5: 1186.483 us/op
Iteration   1: 122.753 us/op
Iteration   2: 152.173 us/op
Iteration   3: 133.856 us/op
Iteration   4: 144.841 us/op
Iteration   5: 109.820 us/op

# Run progress: 46.78% complete, ETA 00:24:37
# Fork: 2 of 2
# Warmup Iteration   1: 2782.786 us/op
# Warmup Iteration   2: 1614.700 us/op
# Warmup Iteration   3: 1631.542 us/op
# Warmup Iteration   4: 1210.503 us/op
# Warmup Iteration   5: 1234.540 us/op
Iteration   1: 125.398 us/op
Iteration   2: 151.635 us/op
Iteration   3: 130.050 us/op
Iteration   4: 115.254 us/op
Iteration   5: 147.552 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    133.333 ±(99.9%) 23.040 us/op

  Histogram, us/op:
    [100.000, 105.000) = 0 
    [105.000, 110.000) = 1 
    [110.000, 115.000) = 0 
    [115.000, 120.000) = 1 
    [120.000, 125.000) = 1 
    [125.000, 130.000) = 1 
    [130.000, 135.000) = 2 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 1 
    [145.000, 150.000) = 1 
    [150.000, 155.000) = 2 

  Percentiles, us/op:
      p(0.0000) =    109.820 us/op
     p(50.0000) =    131.953 us/op
     p(90.0000) =    152.119 us/op
     p(95.0000) =    152.173 us/op
     p(99.0000) =    152.173 us/op
     p(99.9000) =    152.173 us/op
     p(99.9900) =    152.173 us/op
     p(99.9990) =    152.173 us/op
     p(99.9999) =    152.173 us/op
    p(100.0000) =    152.173 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.625)

# Run progress: 46.97% complete, ETA 00:24:32
# Fork: 1 of 2
# Warmup Iteration   1: 2148.856 us/op
# Warmup Iteration   2: 1290.707 us/op
# Warmup Iteration   3: 1152.558 us/op
# Warmup Iteration   4: 1202.614 us/op
# Warmup Iteration   5: 922.707 us/op
Iteration   1: 108.444 us/op
Iteration   2: 173.217 us/op
Iteration   3: 133.627 us/op
Iteration   4: 185.200 us/op
Iteration   5: 128.921 us/op

# Run progress: 47.16% complete, ETA 00:24:27
# Fork: 2 of 2
# Warmup Iteration   1: 2151.763 us/op
# Warmup Iteration   2: 1283.237 us/op
# Warmup Iteration   3: 1190.158 us/op
# Warmup Iteration   4: 1228.232 us/op
# Warmup Iteration   5: 891.367 us/op
Iteration   1: 147.225 us/op
Iteration   2: 248.307 us/op
Iteration   3: 115.272 us/op
Iteration   4: 110.250 us/op
Iteration   5: 106.689 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    145.715 ±(99.9%) 68.299 us/op

  Histogram, us/op:
    [100.000, 112.500) = 3 
    [112.500, 125.000) = 1 
    [125.000, 137.500) = 2 
    [137.500, 150.000) = 1 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 1 
    [175.000, 187.500) = 1 
    [187.500, 200.000) = 0 
    [200.000, 212.500) = 0 
    [212.500, 225.000) = 0 
    [225.000, 237.500) = 0 
    [237.500, 250.000) = 1 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    106.689 us/op
     p(50.0000) =    131.274 us/op
     p(90.0000) =    241.996 us/op
     p(95.0000) =    248.307 us/op
     p(99.0000) =    248.307 us/op
     p(99.9000) =    248.307 us/op
     p(99.9900) =    248.307 us/op
     p(99.9990) =    248.307 us/op
     p(99.9999) =    248.307 us/op
    p(100.0000) =    248.307 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.75)

# Run progress: 47.35% complete, ETA 00:24:22
# Fork: 1 of 2
# Warmup Iteration   1: 2221.323 us/op
# Warmup Iteration   2: 1298.591 us/op
# Warmup Iteration   3: 1283.924 us/op
# Warmup Iteration   4: 963.332 us/op
# Warmup Iteration   5: 911.157 us/op
Iteration   1: 107.663 us/op
Iteration   2: 198.378 us/op
Iteration   3: 127.161 us/op
Iteration   4: 151.442 us/op
Iteration   5: 107.982 us/op

# Run progress: 47.54% complete, ETA 00:24:16
# Fork: 2 of 2
# Warmup Iteration   1: 1906.106 us/op
# Warmup Iteration   2: 1371.134 us/op
# Warmup Iteration   3: 1202.792 us/op
# Warmup Iteration   4: 1169.942 us/op
# Warmup Iteration   5: 968.610 us/op
Iteration   1: 138.186 us/op
Iteration   2: 158.490 us/op
Iteration   3: 121.677 us/op
Iteration   4: 110.515 us/op
Iteration   5: 121.597 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    134.309 ±(99.9%) 43.175 us/op

  Histogram, us/op:
    [100.000, 110.000) = 2 
    [110.000, 120.000) = 1 
    [120.000, 130.000) = 3 
    [130.000, 140.000) = 1 
    [140.000, 150.000) = 0 
    [150.000, 160.000) = 2 
    [160.000, 170.000) = 0 
    [170.000, 180.000) = 0 
    [180.000, 190.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    107.663 us/op
     p(50.0000) =    124.419 us/op
     p(90.0000) =    194.389 us/op
     p(95.0000) =    198.378 us/op
     p(99.0000) =    198.378 us/op
     p(99.9000) =    198.378 us/op
     p(99.9900) =    198.378 us/op
     p(99.9990) =    198.378 us/op
     p(99.9999) =    198.378 us/op
    p(100.0000) =    198.378 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.875)

# Run progress: 47.73% complete, ETA 00:24:11
# Fork: 1 of 2
# Warmup Iteration   1: 2215.615 us/op
# Warmup Iteration   2: 1281.312 us/op
# Warmup Iteration   3: 1183.508 us/op
# Warmup Iteration   4: 1188.006 us/op
# Warmup Iteration   5: 910.684 us/op
Iteration   1: 140.055 us/op
Iteration   2: 186.778 us/op
Iteration   3: 132.820 us/op
Iteration   4: 114.304 us/op
Iteration   5: 180.240 us/op

# Run progress: 47.92% complete, ETA 00:24:06
# Fork: 2 of 2
# Warmup Iteration   1: 2028.144 us/op
# Warmup Iteration   2: 1265.909 us/op
# Warmup Iteration   3: 1178.828 us/op
# Warmup Iteration   4: 1282.740 us/op
# Warmup Iteration   5: 939.937 us/op
Iteration   1: 113.056 us/op
Iteration   2: 111.785 us/op
Iteration   3: 114.759 us/op
Iteration   4: 133.604 us/op
Iteration   5: 135.116 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    136.252 ±(99.9%) 40.950 us/op

  Histogram, us/op:
    [110.000, 115.000) = 4 
    [115.000, 120.000) = 0 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 2 
    [135.000, 140.000) = 1 
    [140.000, 145.000) = 1 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 0 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 0 
    [180.000, 185.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    111.785 us/op
     p(50.0000) =    133.212 us/op
     p(90.0000) =    186.124 us/op
     p(95.0000) =    186.778 us/op
     p(99.0000) =    186.778 us/op
     p(99.9000) =    186.778 us/op
     p(99.9900) =    186.778 us/op
     p(99.9990) =    186.778 us/op
     p(99.9999) =    186.778 us/op
    p(100.0000) =    186.778 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 1)

# Run progress: 48.11% complete, ETA 00:24:00
# Fork: 1 of 2
# Warmup Iteration   1: 2093.567 us/op
# Warmup Iteration   2: 1259.108 us/op
# Warmup Iteration   3: 1137.891 us/op
# Warmup Iteration   4: 1192.094 us/op
# Warmup Iteration   5: 922.258 us/op
Iteration   1: 136.655 us/op
Iteration   2: 199.070 us/op
Iteration   3: 127.110 us/op
Iteration   4: 151.086 us/op
Iteration   5: 177.499 us/op

# Run progress: 48.30% complete, ETA 00:23:55
# Fork: 2 of 2
# Warmup Iteration   1: 2063.026 us/op
# Warmup Iteration   2: 1258.900 us/op
# Warmup Iteration   3: 1413.647 us/op
# Warmup Iteration   4: 929.930 us/op
# Warmup Iteration   5: 926.912 us/op
Iteration   1: 170.652 us/op
Iteration   2: 157.703 us/op
Iteration   3: 136.534 us/op
Iteration   4: 136.219 us/op
Iteration   5: 125.679 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    151.821 ±(99.9%) 36.628 us/op

  Histogram, us/op:
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 2 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 3 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 1 
    [155.000, 160.000) = 1 
    [160.000, 165.000) = 0 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 1 
    [175.000, 180.000) = 1 
    [180.000, 185.000) = 0 
    [185.000, 190.000) = 0 
    [190.000, 195.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    125.679 us/op
     p(50.0000) =    143.871 us/op
     p(90.0000) =    196.913 us/op
     p(95.0000) =    199.070 us/op
     p(99.0000) =    199.070 us/op
     p(99.9000) =    199.070 us/op
     p(99.9900) =    199.070 us/op
     p(99.9990) =    199.070 us/op
     p(99.9999) =    199.070 us/op
    p(100.0000) =    199.070 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.125)

# Run progress: 48.48% complete, ETA 00:23:50
# Fork: 1 of 2
# Warmup Iteration   1: 3516.314 us/op
# Warmup Iteration   2: 1730.169 us/op
# Warmup Iteration   3: 1807.932 us/op
# Warmup Iteration   4: 1452.896 us/op
# Warmup Iteration   5: 1415.002 us/op
Iteration   1: 190.232 us/op
Iteration   2: 270.981 us/op
Iteration   3: 233.911 us/op
Iteration   4: 204.477 us/op
Iteration   5: 184.178 us/op

# Run progress: 48.67% complete, ETA 00:23:45
# Fork: 2 of 2
# Warmup Iteration   1: 3587.742 us/op
# Warmup Iteration   2: 2081.534 us/op
# Warmup Iteration   3: 1441.897 us/op
# Warmup Iteration   4: 1319.242 us/op
# Warmup Iteration   5: 1315.509 us/op
Iteration   1: 176.490 us/op
Iteration   2: 208.188 us/op
Iteration   3: 216.940 us/op
Iteration   4: 185.901 us/op
Iteration   5: 167.538 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    203.884 ±(99.9%) 46.633 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 0 
    [125.000, 137.500) = 0 
    [137.500, 150.000) = 0 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 1 
    [175.000, 187.500) = 3 
    [187.500, 200.000) = 1 
    [200.000, 212.500) = 2 
    [212.500, 225.000) = 1 
    [225.000, 237.500) = 1 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 1 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    167.538 us/op
     p(50.0000) =    197.355 us/op
     p(90.0000) =    267.274 us/op
     p(95.0000) =    270.981 us/op
     p(99.0000) =    270.981 us/op
     p(99.9000) =    270.981 us/op
     p(99.9900) =    270.981 us/op
     p(99.9990) =    270.981 us/op
     p(99.9999) =    270.981 us/op
    p(100.0000) =    270.981 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.250)

# Run progress: 48.86% complete, ETA 00:23:39
# Fork: 1 of 2
# Warmup Iteration   1: 2163.306 us/op
# Warmup Iteration   2: 1393.912 us/op
# Warmup Iteration   3: 1200.595 us/op
# Warmup Iteration   4: 1313.015 us/op
# Warmup Iteration   5: 985.131 us/op
Iteration   1: 182.405 us/op
Iteration   2: 270.572 us/op
Iteration   3: 179.551 us/op
Iteration   4: 183.505 us/op
Iteration   5: 179.326 us/op

# Run progress: 49.05% complete, ETA 00:23:34
# Fork: 2 of 2
# Warmup Iteration   1: 2384.129 us/op
# Warmup Iteration   2: 1315.801 us/op
# Warmup Iteration   3: 1248.475 us/op
# Warmup Iteration   4: 1330.657 us/op
# Warmup Iteration   5: 965.052 us/op
Iteration   1: 177.532 us/op
Iteration   2: 243.820 us/op
Iteration   3: 178.503 us/op
Iteration   4: 178.180 us/op
Iteration   5: 179.794 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    195.319 ±(99.9%) 50.294 us/op

  Histogram, us/op:
    [170.000, 180.000) = 6 
    [180.000, 190.000) = 2 
    [190.000, 200.000) = 0 
    [200.000, 210.000) = 0 
    [210.000, 220.000) = 0 
    [220.000, 230.000) = 0 
    [230.000, 240.000) = 0 
    [240.000, 250.000) = 1 
    [250.000, 260.000) = 0 
    [260.000, 270.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    177.532 us/op
     p(50.0000) =    179.673 us/op
     p(90.0000) =    267.897 us/op
     p(95.0000) =    270.572 us/op
     p(99.0000) =    270.572 us/op
     p(99.9000) =    270.572 us/op
     p(99.9900) =    270.572 us/op
     p(99.9990) =    270.572 us/op
     p(99.9999) =    270.572 us/op
    p(100.0000) =    270.572 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.375)

# Run progress: 49.24% complete, ETA 00:23:29
# Fork: 1 of 2
# Warmup Iteration   1: 2618.164 us/op
# Warmup Iteration   2: 1343.781 us/op
# Warmup Iteration   3: 1429.584 us/op
# Warmup Iteration   4: 970.990 us/op
# Warmup Iteration   5: 957.290 us/op
Iteration   1: 176.143 us/op
Iteration   2: 242.533 us/op
Iteration   3: 194.772 us/op
Iteration   4: 202.150 us/op
Iteration   5: 179.586 us/op

# Run progress: 49.43% complete, ETA 00:23:24
# Fork: 2 of 2
# Warmup Iteration   1: 2180.208 us/op
# Warmup Iteration   2: 1388.705 us/op
# Warmup Iteration   3: 1319.367 us/op
# Warmup Iteration   4: 1304.623 us/op
# Warmup Iteration   5: 987.771 us/op
Iteration   1: 178.772 us/op
Iteration   2: 253.280 us/op
Iteration   3: 176.435 us/op
Iteration   4: 247.074 us/op
Iteration   5: 192.604 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    204.335 ±(99.9%) 47.152 us/op

  Histogram, us/op:
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 4 
    [180.000, 185.000) = 0 
    [185.000, 190.000) = 0 
    [190.000, 195.000) = 2 
    [195.000, 200.000) = 0 
    [200.000, 205.000) = 1 
    [205.000, 210.000) = 0 
    [210.000, 215.000) = 0 
    [215.000, 220.000) = 0 
    [220.000, 225.000) = 0 
    [225.000, 230.000) = 0 
    [230.000, 235.000) = 0 
    [235.000, 240.000) = 0 
    [240.000, 245.000) = 1 
    [245.000, 250.000) = 1 
    [250.000, 255.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    176.143 us/op
     p(50.0000) =    193.688 us/op
     p(90.0000) =    252.659 us/op
     p(95.0000) =    253.280 us/op
     p(99.0000) =    253.280 us/op
     p(99.9000) =    253.280 us/op
     p(99.9900) =    253.280 us/op
     p(99.9990) =    253.280 us/op
     p(99.9999) =    253.280 us/op
    p(100.0000) =    253.280 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.5)

# Run progress: 49.62% complete, ETA 00:23:18
# Fork: 1 of 2
# Warmup Iteration   1: 2367.152 us/op
# Warmup Iteration   2: 1439.268 us/op
# Warmup Iteration   3: 1253.655 us/op
# Warmup Iteration   4: 1303.058 us/op
# Warmup Iteration   5: 981.966 us/op
Iteration   1: 173.339 us/op
Iteration   2: 225.263 us/op
Iteration   3: 185.513 us/op
Iteration   4: 185.533 us/op
Iteration   5: 217.499 us/op

# Run progress: 49.81% complete, ETA 00:23:13
# Fork: 2 of 2
# Warmup Iteration   1: 2313.981 us/op
# Warmup Iteration   2: 1470.409 us/op
# Warmup Iteration   3: 1266.439 us/op
# Warmup Iteration   4: 1246.038 us/op
# Warmup Iteration   5: 968.306 us/op
Iteration   1: 178.022 us/op
Iteration   2: 282.172 us/op
Iteration   3: 175.048 us/op
Iteration   4: 211.479 us/op
Iteration   5: 194.548 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    202.842 ±(99.9%) 50.428 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 0 
    [125.000, 137.500) = 0 
    [137.500, 150.000) = 0 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 1 
    [175.000, 187.500) = 4 
    [187.500, 200.000) = 1 
    [200.000, 212.500) = 1 
    [212.500, 225.000) = 1 
    [225.000, 237.500) = 1 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 1 

  Percentiles, us/op:
      p(0.0000) =    173.339 us/op
     p(50.0000) =    190.041 us/op
     p(90.0000) =    276.481 us/op
     p(95.0000) =    282.172 us/op
     p(99.0000) =    282.172 us/op
     p(99.9000) =    282.172 us/op
     p(99.9900) =    282.172 us/op
     p(99.9990) =    282.172 us/op
     p(99.9999) =    282.172 us/op
    p(100.0000) =    282.172 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.625)

# Run progress: 50.00% complete, ETA 00:23:08
# Fork: 1 of 2
# Warmup Iteration   1: 2030.369 us/op
# Warmup Iteration   2: 1351.342 us/op
# Warmup Iteration   3: 1292.971 us/op
# Warmup Iteration   4: 981.975 us/op
# Warmup Iteration   5: 967.629 us/op
Iteration   1: 185.376 us/op
Iteration   2: 222.860 us/op
Iteration   3: 182.591 us/op
Iteration   4: 179.637 us/op
Iteration   5: 173.763 us/op

# Run progress: 50.19% complete, ETA 00:23:03
# Fork: 2 of 2
# Warmup Iteration   1: 2142.913 us/op
# Warmup Iteration   2: 1346.110 us/op
# Warmup Iteration   3: 1164.091 us/op
# Warmup Iteration   4: 1236.312 us/op
# Warmup Iteration   5: 959.713 us/op
Iteration   1: 174.091 us/op
Iteration   2: 227.595 us/op
Iteration   3: 192.032 us/op
Iteration   4: 204.432 us/op
Iteration   5: 209.657 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    195.203 ±(99.9%) 29.906 us/op

  Histogram, us/op:
    [170.000, 175.000) = 2 
    [175.000, 180.000) = 1 
    [180.000, 185.000) = 1 
    [185.000, 190.000) = 1 
    [190.000, 195.000) = 1 
    [195.000, 200.000) = 0 
    [200.000, 205.000) = 1 
    [205.000, 210.000) = 1 
    [210.000, 215.000) = 0 
    [215.000, 220.000) = 0 
    [220.000, 225.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    173.763 us/op
     p(50.0000) =    188.704 us/op
     p(90.0000) =    227.122 us/op
     p(95.0000) =    227.595 us/op
     p(99.0000) =    227.595 us/op
     p(99.9000) =    227.595 us/op
     p(99.9900) =    227.595 us/op
     p(99.9990) =    227.595 us/op
     p(99.9999) =    227.595 us/op
    p(100.0000) =    227.595 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.75)

# Run progress: 50.38% complete, ETA 00:22:57
# Fork: 1 of 2
# Warmup Iteration   1: 2039.924 us/op
# Warmup Iteration   2: 1333.241 us/op
# Warmup Iteration   3: 1166.468 us/op
# Warmup Iteration   4: 1394.805 us/op
# Warmup Iteration   5: 966.922 us/op
Iteration   1: 175.676 us/op
Iteration   2: 228.347 us/op
Iteration   3: 173.178 us/op
Iteration   4: 178.349 us/op
Iteration   5: 177.090 us/op

# Run progress: 50.57% complete, ETA 00:22:52
# Fork: 2 of 2
# Warmup Iteration   1: 2218.317 us/op
# Warmup Iteration   2: 1352.387 us/op
# Warmup Iteration   3: 1218.280 us/op
# Warmup Iteration   4: 1275.764 us/op
# Warmup Iteration   5: 951.172 us/op
Iteration   1: 170.838 us/op
Iteration   2: 295.947 us/op
Iteration   3: 180.791 us/op
Iteration   4: 178.658 us/op
Iteration   5: 173.186 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    193.206 ±(99.9%) 60.151 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 0 
    [125.000, 137.500) = 0 
    [137.500, 150.000) = 0 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 3 
    [175.000, 187.500) = 5 
    [187.500, 200.000) = 0 
    [200.000, 212.500) = 0 
    [212.500, 225.000) = 0 
    [225.000, 237.500) = 1 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    170.838 us/op
     p(50.0000) =    177.719 us/op
     p(90.0000) =    289.187 us/op
     p(95.0000) =    295.947 us/op
     p(99.0000) =    295.947 us/op
     p(99.9000) =    295.947 us/op
     p(99.9900) =    295.947 us/op
     p(99.9990) =    295.947 us/op
     p(99.9999) =    295.947 us/op
    p(100.0000) =    295.947 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.875)

# Run progress: 50.76% complete, ETA 00:22:47
# Fork: 1 of 2
# Warmup Iteration   1: 2124.103 us/op
# Warmup Iteration   2: 1331.447 us/op
# Warmup Iteration   3: 1242.008 us/op
# Warmup Iteration   4: 970.606 us/op
# Warmup Iteration   5: 1006.470 us/op
Iteration   1: 175.498 us/op
Iteration   2: 249.814 us/op
Iteration   3: 176.536 us/op
Iteration   4: 180.053 us/op
Iteration   5: 184.538 us/op

# Run progress: 50.95% complete, ETA 00:22:41
# Fork: 2 of 2
# Warmup Iteration   1: 2264.767 us/op
# Warmup Iteration   2: 1339.517 us/op
# Warmup Iteration   3: 1167.058 us/op
# Warmup Iteration   4: 1335.731 us/op
# Warmup Iteration   5: 953.309 us/op
Iteration   1: 206.820 us/op
Iteration   2: 281.058 us/op
Iteration   3: 175.672 us/op
Iteration   4: 199.354 us/op
Iteration   5: 177.335 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    200.668 ±(99.9%) 55.177 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 0 
    [125.000, 137.500) = 0 
    [137.500, 150.000) = 0 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 0 
    [175.000, 187.500) = 6 
    [187.500, 200.000) = 1 
    [200.000, 212.500) = 1 
    [212.500, 225.000) = 0 
    [225.000, 237.500) = 0 
    [237.500, 250.000) = 1 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 1 

  Percentiles, us/op:
      p(0.0000) =    175.498 us/op
     p(50.0000) =    182.296 us/op
     p(90.0000) =    277.934 us/op
     p(95.0000) =    281.058 us/op
     p(99.0000) =    281.058 us/op
     p(99.9000) =    281.058 us/op
     p(99.9900) =    281.058 us/op
     p(99.9990) =    281.058 us/op
     p(99.9999) =    281.058 us/op
    p(100.0000) =    281.058 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 1)

# Run progress: 51.14% complete, ETA 00:22:36
# Fork: 1 of 2
# Warmup Iteration   1: 1984.282 us/op
# Warmup Iteration   2: 1363.016 us/op
# Warmup Iteration   3: 1184.929 us/op
# Warmup Iteration   4: 1252.885 us/op
# Warmup Iteration   5: 979.194 us/op
Iteration   1: 190.440 us/op
Iteration   2: 262.786 us/op
Iteration   3: 174.354 us/op
Iteration   4: 183.248 us/op
Iteration   5: 180.638 us/op

# Run progress: 51.33% complete, ETA 00:22:31
# Fork: 2 of 2
# Warmup Iteration   1: 2032.086 us/op
# Warmup Iteration   2: 1427.079 us/op
# Warmup Iteration   3: 1372.202 us/op
# Warmup Iteration   4: 965.969 us/op
# Warmup Iteration   5: 954.193 us/op
Iteration   1: 184.949 us/op
Iteration   2: 251.827 us/op
Iteration   3: 179.967 us/op
Iteration   4: 182.876 us/op
Iteration   5: 186.680 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    197.777 ±(99.9%) 48.026 us/op

  Histogram, us/op:
    [170.000, 180.000) = 2 
    [180.000, 190.000) = 5 
    [190.000, 200.000) = 1 
    [200.000, 210.000) = 0 
    [210.000, 220.000) = 0 
    [220.000, 230.000) = 0 
    [230.000, 240.000) = 0 
    [240.000, 250.000) = 0 
    [250.000, 260.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    174.354 us/op
     p(50.0000) =    184.099 us/op
     p(90.0000) =    261.690 us/op
     p(95.0000) =    262.786 us/op
     p(99.0000) =    262.786 us/op
     p(99.9000) =    262.786 us/op
     p(99.9900) =    262.786 us/op
     p(99.9990) =    262.786 us/op
     p(99.9999) =    262.786 us/op
    p(100.0000) =    262.786 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.125)

# Run progress: 51.52% complete, ETA 00:22:26
# Fork: 1 of 2
# Warmup Iteration   1: 2321.479 us/op
# Warmup Iteration   2: 1496.087 us/op
# Warmup Iteration   3: 1429.151 us/op
# Warmup Iteration   4: 1127.766 us/op
# Warmup Iteration   5: 1046.703 us/op
Iteration   1: 281.640 us/op
Iteration   2: 332.718 us/op
Iteration   3: 295.897 us/op
Iteration   4: 265.406 us/op
Iteration   5: 282.877 us/op

# Run progress: 51.70% complete, ETA 00:22:20
# Fork: 2 of 2
# Warmup Iteration   1: 2184.220 us/op
# Warmup Iteration   2: 1416.243 us/op
# Warmup Iteration   3: 1274.746 us/op
# Warmup Iteration   4: 1040.078 us/op
# Warmup Iteration   5: 1046.125 us/op
Iteration   1: 255.834 us/op
Iteration   2: 337.860 us/op
Iteration   3: 257.878 us/op
Iteration   4: 256.449 us/op
Iteration   5: 306.197 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    287.276 ±(99.9%) 46.157 us/op

  Histogram, us/op:
    [250.000, 255.000) = 0 
    [255.000, 260.000) = 3 
    [260.000, 265.000) = 0 
    [265.000, 270.000) = 1 
    [270.000, 275.000) = 0 
    [275.000, 280.000) = 0 
    [280.000, 285.000) = 2 
    [285.000, 290.000) = 0 
    [290.000, 295.000) = 0 
    [295.000, 300.000) = 1 
    [300.000, 305.000) = 0 
    [305.000, 310.000) = 1 
    [310.000, 315.000) = 0 
    [315.000, 320.000) = 0 
    [320.000, 325.000) = 0 
    [325.000, 330.000) = 0 
    [330.000, 335.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    255.834 us/op
     p(50.0000) =    282.259 us/op
     p(90.0000) =    337.346 us/op
     p(95.0000) =    337.860 us/op
     p(99.0000) =    337.860 us/op
     p(99.9000) =    337.860 us/op
     p(99.9900) =    337.860 us/op
     p(99.9990) =    337.860 us/op
     p(99.9999) =    337.860 us/op
    p(100.0000) =    337.860 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.250)

# Run progress: 51.89% complete, ETA 00:22:15
# Fork: 1 of 2
# Warmup Iteration   1: 2166.470 us/op
# Warmup Iteration   2: 1502.726 us/op
# Warmup Iteration   3: 1276.884 us/op
# Warmup Iteration   4: 1389.021 us/op
# Warmup Iteration   5: 1113.017 us/op
Iteration   1: 265.073 us/op
Iteration   2: 350.892 us/op
Iteration   3: 271.395 us/op
Iteration   4: 265.472 us/op
Iteration   5: 271.149 us/op

# Run progress: 52.08% complete, ETA 00:22:10
# Fork: 2 of 2
# Warmup Iteration   1: 2091.498 us/op
# Warmup Iteration   2: 1405.106 us/op
# Warmup Iteration   3: 1569.395 us/op
# Warmup Iteration   4: 1068.196 us/op
# Warmup Iteration   5: 1053.180 us/op
Iteration   1: 273.406 us/op
Iteration   2: 324.087 us/op
Iteration   3: 286.205 us/op
Iteration   4: 258.446 us/op
Iteration   5: 259.796 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    282.592 ±(99.9%) 46.307 us/op

  Histogram, us/op:
    [250.000, 260.000) = 2 
    [260.000, 270.000) = 2 
    [270.000, 280.000) = 3 
    [280.000, 290.000) = 1 
    [290.000, 300.000) = 0 
    [300.000, 310.000) = 0 
    [310.000, 320.000) = 0 
    [320.000, 330.000) = 1 
    [330.000, 340.000) = 0 
    [340.000, 350.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    258.446 us/op
     p(50.0000) =    271.272 us/op
     p(90.0000) =    348.212 us/op
     p(95.0000) =    350.892 us/op
     p(99.0000) =    350.892 us/op
     p(99.9000) =    350.892 us/op
     p(99.9900) =    350.892 us/op
     p(99.9990) =    350.892 us/op
     p(99.9999) =    350.892 us/op
    p(100.0000) =    350.892 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.375)

# Run progress: 52.27% complete, ETA 00:22:05
# Fork: 1 of 2
# Warmup Iteration   1: 2157.935 us/op
# Warmup Iteration   2: 1539.357 us/op
# Warmup Iteration   3: 1322.558 us/op
# Warmup Iteration   4: 1336.021 us/op
# Warmup Iteration   5: 1058.933 us/op
Iteration   1: 268.057 us/op
Iteration   2: 319.588 us/op
Iteration   3: 268.957 us/op
Iteration   4: 265.399 us/op
Iteration   5: 276.542 us/op

# Run progress: 52.46% complete, ETA 00:21:59
# Fork: 2 of 2
# Warmup Iteration   1: 2361.398 us/op
# Warmup Iteration   2: 1514.867 us/op
# Warmup Iteration   3: 1298.107 us/op
# Warmup Iteration   4: 1338.048 us/op
# Warmup Iteration   5: 1064.432 us/op
Iteration   1: 265.266 us/op
Iteration   2: 339.872 us/op
Iteration   3: 271.164 us/op
Iteration   4: 272.234 us/op
Iteration   5: 279.361 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    282.644 ±(99.9%) 38.800 us/op

  Histogram, us/op:
    [260.000, 265.000) = 0 
    [265.000, 270.000) = 4 
    [270.000, 275.000) = 2 
    [275.000, 280.000) = 2 
    [280.000, 285.000) = 0 
    [285.000, 290.000) = 0 
    [290.000, 295.000) = 0 
    [295.000, 300.000) = 0 
    [300.000, 305.000) = 0 
    [305.000, 310.000) = 0 
    [310.000, 315.000) = 0 
    [315.000, 320.000) = 1 
    [320.000, 325.000) = 0 
    [325.000, 330.000) = 0 
    [330.000, 335.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    265.266 us/op
     p(50.0000) =    271.699 us/op
     p(90.0000) =    337.844 us/op
     p(95.0000) =    339.872 us/op
     p(99.0000) =    339.872 us/op
     p(99.9000) =    339.872 us/op
     p(99.9900) =    339.872 us/op
     p(99.9990) =    339.872 us/op
     p(99.9999) =    339.872 us/op
    p(100.0000) =    339.872 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.5)

# Run progress: 52.65% complete, ETA 00:21:54
# Fork: 1 of 2
# Warmup Iteration   1: 2203.704 us/op
# Warmup Iteration   2: 1666.189 us/op
# Warmup Iteration   3: 1427.013 us/op
# Warmup Iteration   4: 1366.812 us/op
# Warmup Iteration   5: 1102.215 us/op
Iteration   1: 284.815 us/op
Iteration   2: 357.900 us/op
Iteration   3: 298.104 us/op
Iteration   4: 280.312 us/op
Iteration   5: 271.340 us/op

# Run progress: 52.84% complete, ETA 00:21:49
# Fork: 2 of 2
# Warmup Iteration   1: 2263.643 us/op
# Warmup Iteration   2: 1404.904 us/op
# Warmup Iteration   3: 1335.974 us/op
# Warmup Iteration   4: 1080.874 us/op
# Warmup Iteration   5: 1098.787 us/op
Iteration   1: 268.522 us/op
Iteration   2: 319.487 us/op
Iteration   3: 272.711 us/op
Iteration   4: 275.673 us/op
Iteration   5: 274.748 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    290.361 ±(99.9%) 42.795 us/op

  Histogram, us/op:
    [260.000, 270.000) = 1 
    [270.000, 280.000) = 4 
    [280.000, 290.000) = 2 
    [290.000, 300.000) = 1 
    [300.000, 310.000) = 0 
    [310.000, 320.000) = 1 
    [320.000, 330.000) = 0 
    [330.000, 340.000) = 0 
    [340.000, 350.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    268.522 us/op
     p(50.0000) =    277.993 us/op
     p(90.0000) =    354.059 us/op
     p(95.0000) =    357.900 us/op
     p(99.0000) =    357.900 us/op
     p(99.9000) =    357.900 us/op
     p(99.9900) =    357.900 us/op
     p(99.9990) =    357.900 us/op
     p(99.9999) =    357.900 us/op
    p(100.0000) =    357.900 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.625)

# Run progress: 53.03% complete, ETA 00:21:44
# Fork: 1 of 2
# Warmup Iteration   1: 2149.634 us/op
# Warmup Iteration   2: 1465.031 us/op
# Warmup Iteration   3: 1588.078 us/op
# Warmup Iteration   4: 1071.104 us/op
# Warmup Iteration   5: 1063.217 us/op
Iteration   1: 272.387 us/op
Iteration   2: 324.053 us/op
Iteration   3: 263.622 us/op
Iteration   4: 283.039 us/op
Iteration   5: 265.726 us/op

# Run progress: 53.22% complete, ETA 00:21:38
# Fork: 2 of 2
# Warmup Iteration   1: 1980.470 us/op
# Warmup Iteration   2: 1408.389 us/op
# Warmup Iteration   3: 1506.238 us/op
# Warmup Iteration   4: 1084.458 us/op
# Warmup Iteration   5: 1057.605 us/op
Iteration   1: 262.709 us/op
Iteration   2: 297.434 us/op
Iteration   3: 342.353 us/op
Iteration   4: 260.325 us/op
Iteration   5: 278.869 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    285.052 ±(99.9%) 42.475 us/op

  Histogram, us/op:
    [260.000, 265.000) = 3 
    [265.000, 270.000) = 1 
    [270.000, 275.000) = 1 
    [275.000, 280.000) = 1 
    [280.000, 285.000) = 1 
    [285.000, 290.000) = 0 
    [290.000, 295.000) = 0 
    [295.000, 300.000) = 1 
    [300.000, 305.000) = 0 
    [305.000, 310.000) = 0 
    [310.000, 315.000) = 0 
    [315.000, 320.000) = 0 
    [320.000, 325.000) = 1 
    [325.000, 330.000) = 0 
    [330.000, 335.000) = 0 
    [335.000, 340.000) = 0 
    [340.000, 345.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    260.325 us/op
     p(50.0000) =    275.628 us/op
     p(90.0000) =    340.523 us/op
     p(95.0000) =    342.353 us/op
     p(99.0000) =    342.353 us/op
     p(99.9000) =    342.353 us/op
     p(99.9900) =    342.353 us/op
     p(99.9990) =    342.353 us/op
     p(99.9999) =    342.353 us/op
    p(100.0000) =    342.353 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.75)

# Run progress: 53.41% complete, ETA 00:21:33
# Fork: 1 of 2
# Warmup Iteration   1: 2420.276 us/op
# Warmup Iteration   2: 1441.691 us/op
# Warmup Iteration   3: 1303.560 us/op
# Warmup Iteration   4: 1358.728 us/op
# Warmup Iteration   5: 1051.409 us/op
Iteration   1: 289.837 us/op
Iteration   2: 329.606 us/op
Iteration   3: 282.194 us/op
Iteration   4: 263.924 us/op
Iteration   5: 263.243 us/op

# Run progress: 53.60% complete, ETA 00:21:28
# Fork: 2 of 2
# Warmup Iteration   1: 2180.373 us/op
# Warmup Iteration   2: 1441.869 us/op
# Warmup Iteration   3: 1457.283 us/op
# Warmup Iteration   4: 1052.482 us/op
# Warmup Iteration   5: 1034.074 us/op
Iteration   1: 261.831 us/op
Iteration   2: 312.414 us/op
Iteration   3: 273.845 us/op
Iteration   4: 274.540 us/op
Iteration   5: 329.804 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    288.124 ±(99.9%) 40.223 us/op

  Histogram, us/op:
    [260.000, 265.000) = 3 
    [265.000, 270.000) = 0 
    [270.000, 275.000) = 2 
    [275.000, 280.000) = 0 
    [280.000, 285.000) = 1 
    [285.000, 290.000) = 1 
    [290.000, 295.000) = 0 
    [295.000, 300.000) = 0 
    [300.000, 305.000) = 0 
    [305.000, 310.000) = 0 
    [310.000, 315.000) = 1 
    [315.000, 320.000) = 0 
    [320.000, 325.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    261.831 us/op
     p(50.0000) =    278.367 us/op
     p(90.0000) =    329.784 us/op
     p(95.0000) =    329.804 us/op
     p(99.0000) =    329.804 us/op
     p(99.9000) =    329.804 us/op
     p(99.9900) =    329.804 us/op
     p(99.9990) =    329.804 us/op
     p(99.9999) =    329.804 us/op
    p(100.0000) =    329.804 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.875)

# Run progress: 53.79% complete, ETA 00:21:22
# Fork: 1 of 2
# Warmup Iteration   1: 2346.238 us/op
# Warmup Iteration   2: 1519.080 us/op
# Warmup Iteration   3: 1298.870 us/op
# Warmup Iteration   4: 1065.537 us/op
# Warmup Iteration   5: 1155.185 us/op
Iteration   1: 258.906 us/op
Iteration   2: 350.291 us/op
Iteration   3: 276.538 us/op
Iteration   4: 265.631 us/op
Iteration   5: 267.478 us/op

# Run progress: 53.98% complete, ETA 00:21:17
# Fork: 2 of 2
# Warmup Iteration   1: 2347.152 us/op
# Warmup Iteration   2: 1435.674 us/op
# Warmup Iteration   3: 1382.216 us/op
# Warmup Iteration   4: 1062.298 us/op
# Warmup Iteration   5: 1046.900 us/op
Iteration   1: 266.253 us/op
Iteration   2: 310.218 us/op
Iteration   3: 288.239 us/op
Iteration   4: 295.815 us/op
Iteration   5: 267.682 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    284.705 ±(99.9%) 42.498 us/op

  Histogram, us/op:
    [250.000, 260.000) = 1 
    [260.000, 270.000) = 4 
    [270.000, 280.000) = 1 
    [280.000, 290.000) = 1 
    [290.000, 300.000) = 1 
    [300.000, 310.000) = 0 
    [310.000, 320.000) = 1 
    [320.000, 330.000) = 0 
    [330.000, 340.000) = 0 
    [340.000, 350.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    258.906 us/op
     p(50.0000) =    272.110 us/op
     p(90.0000) =    346.284 us/op
     p(95.0000) =    350.291 us/op
     p(99.0000) =    350.291 us/op
     p(99.9000) =    350.291 us/op
     p(99.9900) =    350.291 us/op
     p(99.9990) =    350.291 us/op
     p(99.9999) =    350.291 us/op
    p(100.0000) =    350.291 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 1)

# Run progress: 54.17% complete, ETA 00:21:12
# Fork: 1 of 2
# Warmup Iteration   1: 2645.531 us/op
# Warmup Iteration   2: 1412.625 us/op
# Warmup Iteration   3: 1220.431 us/op
# Warmup Iteration   4: 1304.138 us/op
# Warmup Iteration   5: 1051.677 us/op
Iteration   1: 261.931 us/op
Iteration   2: 321.015 us/op
Iteration   3: 256.398 us/op
Iteration   4: 259.426 us/op
Iteration   5: 264.556 us/op

# Run progress: 54.36% complete, ETA 00:21:07
# Fork: 2 of 2
# Warmup Iteration   1: 2362.312 us/op
# Warmup Iteration   2: 1448.919 us/op
# Warmup Iteration   3: 1385.616 us/op
# Warmup Iteration   4: 1327.078 us/op
# Warmup Iteration   5: 1067.198 us/op
Iteration   1: 270.077 us/op
Iteration   2: 331.626 us/op
Iteration   3: 272.911 us/op
Iteration   4: 308.224 us/op
Iteration   5: 271.953 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    281.812 ±(99.9%) 41.771 us/op

  Histogram, us/op:
    [250.000, 255.000) = 0 
    [255.000, 260.000) = 2 
    [260.000, 265.000) = 2 
    [265.000, 270.000) = 0 
    [270.000, 275.000) = 3 
    [275.000, 280.000) = 0 
    [280.000, 285.000) = 0 
    [285.000, 290.000) = 0 
    [290.000, 295.000) = 0 
    [295.000, 300.000) = 0 
    [300.000, 305.000) = 0 
    [305.000, 310.000) = 1 
    [310.000, 315.000) = 0 
    [315.000, 320.000) = 0 
    [320.000, 325.000) = 1 
    [325.000, 330.000) = 0 
    [330.000, 335.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    256.398 us/op
     p(50.0000) =    271.015 us/op
     p(90.0000) =    330.565 us/op
     p(95.0000) =    331.626 us/op
     p(99.0000) =    331.626 us/op
     p(99.9000) =    331.626 us/op
     p(99.9900) =    331.626 us/op
     p(99.9990) =    331.626 us/op
     p(99.9999) =    331.626 us/op
    p(100.0000) =    331.626 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.125)

# Run progress: 54.55% complete, ETA 00:21:01
# Fork: 1 of 2
# Warmup Iteration   1: 2824.778 us/op
# Warmup Iteration   2: 2306.434 us/op
# Warmup Iteration   3: 2476.169 us/op
# Warmup Iteration   4: 1636.421 us/op
# Warmup Iteration   5: 1783.391 us/op
Iteration   1: 786.908 us/op
Iteration   2: 818.056 us/op
Iteration   3: 803.061 us/op
Iteration   4: 777.265 us/op
Iteration   5: 784.993 us/op

# Run progress: 54.73% complete, ETA 00:20:56
# Fork: 2 of 2
# Warmup Iteration   1: 2778.518 us/op
# Warmup Iteration   2: 2060.826 us/op
# Warmup Iteration   3: 2510.510 us/op
# Warmup Iteration   4: 1704.840 us/op
# Warmup Iteration   5: 1824.819 us/op
Iteration   1: 799.816 us/op
Iteration   2: 890.540 us/op
Iteration   3: 842.405 us/op
Iteration   4: 813.744 us/op
Iteration   5: 815.880 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    813.267 ±(99.9%) 50.207 us/op

  Histogram, us/op:
    [700.000, 712.500) = 0 
    [712.500, 725.000) = 0 
    [725.000, 737.500) = 0 
    [737.500, 750.000) = 0 
    [750.000, 762.500) = 0 
    [762.500, 775.000) = 0 
    [775.000, 787.500) = 3 
    [787.500, 800.000) = 1 
    [800.000, 812.500) = 1 
    [812.500, 825.000) = 3 
    [825.000, 837.500) = 0 
    [837.500, 850.000) = 1 
    [850.000, 862.500) = 0 
    [862.500, 875.000) = 0 
    [875.000, 887.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    777.265 us/op
     p(50.0000) =    808.403 us/op
     p(90.0000) =    885.727 us/op
     p(95.0000) =    890.540 us/op
     p(99.0000) =    890.540 us/op
     p(99.9000) =    890.540 us/op
     p(99.9900) =    890.540 us/op
     p(99.9990) =    890.540 us/op
     p(99.9999) =    890.540 us/op
    p(100.0000) =    890.540 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.250)

# Run progress: 54.92% complete, ETA 00:20:51
# Fork: 1 of 2
# Warmup Iteration   1: 2832.208 us/op
# Warmup Iteration   2: 2091.044 us/op
# Warmup Iteration   3: 2623.650 us/op
# Warmup Iteration   4: 1626.856 us/op
# Warmup Iteration   5: 1807.385 us/op
Iteration   1: 854.715 us/op
Iteration   2: 841.732 us/op
Iteration   3: 765.430 us/op
Iteration   4: 774.632 us/op
Iteration   5: 797.094 us/op

# Run progress: 55.11% complete, ETA 00:20:46
# Fork: 2 of 2
# Warmup Iteration   1: 2808.349 us/op
# Warmup Iteration   2: 2115.046 us/op
# Warmup Iteration   3: 2611.710 us/op
# Warmup Iteration   4: 1713.808 us/op
# Warmup Iteration   5: 1752.925 us/op
Iteration   1: 794.981 us/op
Iteration   2: 864.556 us/op
Iteration   3: 796.776 us/op
Iteration   4: 795.569 us/op
Iteration   5: 817.487 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    810.297 ±(99.9%) 50.522 us/op

  Histogram, us/op:
    [760.000, 770.000) = 1 
    [770.000, 780.000) = 1 
    [780.000, 790.000) = 0 
    [790.000, 800.000) = 4 
    [800.000, 810.000) = 0 
    [810.000, 820.000) = 1 
    [820.000, 830.000) = 0 
    [830.000, 840.000) = 0 
    [840.000, 850.000) = 1 
    [850.000, 860.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    765.430 us/op
     p(50.0000) =    796.935 us/op
     p(90.0000) =    863.572 us/op
     p(95.0000) =    864.556 us/op
     p(99.0000) =    864.556 us/op
     p(99.9000) =    864.556 us/op
     p(99.9900) =    864.556 us/op
     p(99.9990) =    864.556 us/op
     p(99.9999) =    864.556 us/op
    p(100.0000) =    864.556 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.375)

# Run progress: 55.30% complete, ETA 00:20:40
# Fork: 1 of 2
# Warmup Iteration   1: 2933.552 us/op
# Warmup Iteration   2: 2058.467 us/op
# Warmup Iteration   3: 2733.452 us/op
# Warmup Iteration   4: 1697.500 us/op
# Warmup Iteration   5: 1808.688 us/op
Iteration   1: 758.892 us/op
Iteration   2: 908.259 us/op
Iteration   3: 772.228 us/op
Iteration   4: 918.027 us/op
Iteration   5: 800.981 us/op

# Run progress: 55.49% complete, ETA 00:20:35
# Fork: 2 of 2
# Warmup Iteration   1: 2835.969 us/op
# Warmup Iteration   2: 2064.833 us/op
# Warmup Iteration   3: 2432.938 us/op
# Warmup Iteration   4: 1684.938 us/op
# Warmup Iteration   5: 1804.747 us/op
Iteration   1: 804.336 us/op
Iteration   2: 855.584 us/op
Iteration   3: 818.397 us/op
Iteration   4: 798.309 us/op
Iteration   5: 812.655 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    824.767 ±(99.9%) 80.614 us/op

  Histogram, us/op:
    [ 700.000,  725.000) = 0 
    [ 725.000,  750.000) = 0 
    [ 750.000,  775.000) = 2 
    [ 775.000,  800.000) = 1 
    [ 800.000,  825.000) = 4 
    [ 825.000,  850.000) = 0 
    [ 850.000,  875.000) = 1 
    [ 875.000,  900.000) = 0 
    [ 900.000,  925.000) = 2 
    [ 925.000,  950.000) = 0 
    [ 950.000,  975.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    758.892 us/op
     p(50.0000) =    808.496 us/op
     p(90.0000) =    917.050 us/op
     p(95.0000) =    918.027 us/op
     p(99.0000) =    918.027 us/op
     p(99.9000) =    918.027 us/op
     p(99.9900) =    918.027 us/op
     p(99.9990) =    918.027 us/op
     p(99.9999) =    918.027 us/op
    p(100.0000) =    918.027 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.5)

# Run progress: 55.68% complete, ETA 00:20:30
# Fork: 1 of 2
# Warmup Iteration   1: 2914.789 us/op
# Warmup Iteration   2: 2160.215 us/op
# Warmup Iteration   3: 2650.897 us/op
# Warmup Iteration   4: 1728.860 us/op
# Warmup Iteration   5: 1806.208 us/op
Iteration   1: 831.210 us/op
Iteration   2: 843.278 us/op
Iteration   3: 820.949 us/op
Iteration   4: 844.597 us/op
Iteration   5: 846.227 us/op

# Run progress: 55.87% complete, ETA 00:20:25
# Fork: 2 of 2
# Warmup Iteration   1: 2848.575 us/op
# Warmup Iteration   2: 2166.906 us/op
# Warmup Iteration   3: 2554.625 us/op
# Warmup Iteration   4: 1664.608 us/op
# Warmup Iteration   5: 1852.048 us/op
Iteration   1: 796.420 us/op
Iteration   2: 852.589 us/op
Iteration   3: 812.780 us/op
Iteration   4: 806.447 us/op
Iteration   5: 818.538 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    827.304 ±(99.9%) 28.879 us/op

  Histogram, us/op:
    [790.000, 795.000) = 0 
    [795.000, 800.000) = 1 
    [800.000, 805.000) = 0 
    [805.000, 810.000) = 1 
    [810.000, 815.000) = 1 
    [815.000, 820.000) = 1 
    [820.000, 825.000) = 1 
    [825.000, 830.000) = 0 
    [830.000, 835.000) = 1 
    [835.000, 840.000) = 0 
    [840.000, 845.000) = 2 
    [845.000, 850.000) = 1 
    [850.000, 855.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    796.420 us/op
     p(50.0000) =    826.080 us/op
     p(90.0000) =    851.953 us/op
     p(95.0000) =    852.589 us/op
     p(99.0000) =    852.589 us/op
     p(99.9000) =    852.589 us/op
     p(99.9900) =    852.589 us/op
     p(99.9990) =    852.589 us/op
     p(99.9999) =    852.589 us/op
    p(100.0000) =    852.589 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.625)

# Run progress: 56.06% complete, ETA 00:20:19
# Fork: 1 of 2
# Warmup Iteration   1: 2837.391 us/op
# Warmup Iteration   2: 2200.221 us/op
# Warmup Iteration   3: 2491.022 us/op
# Warmup Iteration   4: 1771.438 us/op
# Warmup Iteration   5: 1823.910 us/op
Iteration   1: 797.401 us/op
Iteration   2: 837.161 us/op
Iteration   3: 784.459 us/op
Iteration   4: 787.122 us/op
Iteration   5: 804.116 us/op

# Run progress: 56.25% complete, ETA 00:20:14
# Fork: 2 of 2
# Warmup Iteration   1: 2951.899 us/op
# Warmup Iteration   2: 2231.527 us/op
# Warmup Iteration   3: 2461.268 us/op
# Warmup Iteration   4: 1648.770 us/op
# Warmup Iteration   5: 1904.428 us/op
Iteration   1: 762.633 us/op
Iteration   2: 879.904 us/op
Iteration   3: 809.060 us/op
Iteration   4: 797.517 us/op
Iteration   5: 792.100 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    805.147 ±(99.9%) 49.064 us/op

  Histogram, us/op:
    [700.000, 712.500) = 0 
    [712.500, 725.000) = 0 
    [725.000, 737.500) = 0 
    [737.500, 750.000) = 0 
    [750.000, 762.500) = 0 
    [762.500, 775.000) = 1 
    [775.000, 787.500) = 2 
    [787.500, 800.000) = 3 
    [800.000, 812.500) = 2 
    [812.500, 825.000) = 0 
    [825.000, 837.500) = 1 
    [837.500, 850.000) = 0 
    [850.000, 862.500) = 0 
    [862.500, 875.000) = 0 
    [875.000, 887.500) = 1 

  Percentiles, us/op:
      p(0.0000) =    762.633 us/op
     p(50.0000) =    797.459 us/op
     p(90.0000) =    875.630 us/op
     p(95.0000) =    879.904 us/op
     p(99.0000) =    879.904 us/op
     p(99.9000) =    879.904 us/op
     p(99.9900) =    879.904 us/op
     p(99.9990) =    879.904 us/op
     p(99.9999) =    879.904 us/op
    p(100.0000) =    879.904 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.75)

# Run progress: 56.44% complete, ETA 00:20:09
# Fork: 1 of 2
# Warmup Iteration   1: 2876.660 us/op
# Warmup Iteration   2: 2074.224 us/op
# Warmup Iteration   3: 2568.378 us/op
# Warmup Iteration   4: 1716.791 us/op
# Warmup Iteration   5: 1845.655 us/op
Iteration   1: 815.983 us/op
Iteration   2: 860.963 us/op
Iteration   3: 829.458 us/op
Iteration   4: 805.910 us/op
Iteration   5: 803.930 us/op

# Run progress: 56.63% complete, ETA 00:20:04
# Fork: 2 of 2
# Warmup Iteration   1: 3091.479 us/op
# Warmup Iteration   2: 2162.979 us/op
# Warmup Iteration   3: 2518.242 us/op
# Warmup Iteration   4: 1665.694 us/op
# Warmup Iteration   5: 1743.704 us/op
Iteration   1: 782.991 us/op
Iteration   2: 910.994 us/op
Iteration   3: 783.071 us/op
Iteration   4: 795.032 us/op
Iteration   5: 824.632 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    821.296 ±(99.9%) 59.376 us/op

  Histogram, us/op:
    [ 700.000,  725.000) = 0 
    [ 725.000,  750.000) = 0 
    [ 750.000,  775.000) = 0 
    [ 775.000,  800.000) = 3 
    [ 800.000,  825.000) = 4 
    [ 825.000,  850.000) = 1 
    [ 850.000,  875.000) = 1 
    [ 875.000,  900.000) = 0 
    [ 900.000,  925.000) = 1 
    [ 925.000,  950.000) = 0 
    [ 950.000,  975.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    782.991 us/op
     p(50.0000) =    810.947 us/op
     p(90.0000) =    905.991 us/op
     p(95.0000) =    910.994 us/op
     p(99.0000) =    910.994 us/op
     p(99.9000) =    910.994 us/op
     p(99.9900) =    910.994 us/op
     p(99.9990) =    910.994 us/op
     p(99.9999) =    910.994 us/op
    p(100.0000) =    910.994 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.875)

# Run progress: 56.82% complete, ETA 00:19:58
# Fork: 1 of 2
# Warmup Iteration   1: 2773.502 us/op
# Warmup Iteration   2: 2214.805 us/op
# Warmup Iteration   3: 2380.313 us/op
# Warmup Iteration   4: 1729.775 us/op
# Warmup Iteration   5: 1857.156 us/op
Iteration   1: 804.293 us/op
Iteration   2: 848.256 us/op
Iteration   3: 803.163 us/op
Iteration   4: 801.875 us/op
Iteration   5: 822.361 us/op

# Run progress: 57.01% complete, ETA 00:19:53
# Fork: 2 of 2
# Warmup Iteration   1: 2852.815 us/op
# Warmup Iteration   2: 2189.104 us/op
# Warmup Iteration   3: 2397.475 us/op
# Warmup Iteration   4: 1677.720 us/op
# Warmup Iteration   5: 1780.669 us/op
Iteration   1: 819.860 us/op
Iteration   2: 861.014 us/op
Iteration   3: 794.037 us/op
Iteration   4: 806.701 us/op
Iteration   5: 847.786 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    820.935 ±(99.9%) 35.489 us/op

  Histogram, us/op:
    [790.000, 795.000) = 1 
    [795.000, 800.000) = 0 
    [800.000, 805.000) = 3 
    [805.000, 810.000) = 1 
    [810.000, 815.000) = 0 
    [815.000, 820.000) = 1 
    [820.000, 825.000) = 1 
    [825.000, 830.000) = 0 
    [830.000, 835.000) = 0 
    [835.000, 840.000) = 0 
    [840.000, 845.000) = 0 
    [845.000, 850.000) = 2 
    [850.000, 855.000) = 0 
    [855.000, 860.000) = 0 
    [860.000, 865.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    794.037 us/op
     p(50.0000) =    813.281 us/op
     p(90.0000) =    859.738 us/op
     p(95.0000) =    861.014 us/op
     p(99.0000) =    861.014 us/op
     p(99.9000) =    861.014 us/op
     p(99.9900) =    861.014 us/op
     p(99.9990) =    861.014 us/op
     p(99.9999) =    861.014 us/op
    p(100.0000) =    861.014 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 1)

# Run progress: 57.20% complete, ETA 00:19:48
# Fork: 1 of 2
# Warmup Iteration   1: 2757.193 us/op
# Warmup Iteration   2: 2105.062 us/op
# Warmup Iteration   3: 2420.242 us/op
# Warmup Iteration   4: 1696.218 us/op
# Warmup Iteration   5: 1804.758 us/op
Iteration   1: 870.435 us/op
Iteration   2: 889.338 us/op
Iteration   3: 819.421 us/op
Iteration   4: 789.687 us/op
Iteration   5: 829.964 us/op

# Run progress: 57.39% complete, ETA 00:19:43
# Fork: 2 of 2
# Warmup Iteration   1: 2835.046 us/op
# Warmup Iteration   2: 2168.324 us/op
# Warmup Iteration   3: 2603.401 us/op
# Warmup Iteration   4: 1694.991 us/op
# Warmup Iteration   5: 1838.042 us/op
Iteration   1: 804.005 us/op
Iteration   2: 863.562 us/op
Iteration   3: 806.631 us/op
Iteration   4: 815.824 us/op
Iteration   5: 807.577 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    829.644 ±(99.9%) 50.253 us/op

  Histogram, us/op:
    [780.000, 790.000) = 1 
    [790.000, 800.000) = 0 
    [800.000, 810.000) = 3 
    [810.000, 820.000) = 2 
    [820.000, 830.000) = 1 
    [830.000, 840.000) = 0 
    [840.000, 850.000) = 0 
    [850.000, 860.000) = 0 
    [860.000, 870.000) = 1 
    [870.000, 880.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    789.687 us/op
     p(50.0000) =    817.623 us/op
     p(90.0000) =    887.448 us/op
     p(95.0000) =    889.338 us/op
     p(99.0000) =    889.338 us/op
     p(99.9000) =    889.338 us/op
     p(99.9900) =    889.338 us/op
     p(99.9990) =    889.338 us/op
     p(99.9999) =    889.338 us/op
    p(100.0000) =    889.338 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.125)

# Run progress: 57.58% complete, ETA 00:19:37
# Fork: 1 of 2
# Warmup Iteration   1: 3713.266 us/op
# Warmup Iteration   2: 3141.528 us/op
# Warmup Iteration   3: 3380.726 us/op
# Warmup Iteration   4: 2521.456 us/op
# Warmup Iteration   5: 2420.499 us/op
Iteration   1: 1539.008 us/op
Iteration   2: 1538.617 us/op
Iteration   3: 1507.376 us/op
Iteration   4: 1557.453 us/op
Iteration   5: 1491.967 us/op

# Run progress: 57.77% complete, ETA 00:19:32
# Fork: 2 of 2
# Warmup Iteration   1: 3698.732 us/op
# Warmup Iteration   2: 3159.448 us/op
# Warmup Iteration   3: 2958.236 us/op
# Warmup Iteration   4: 2456.782 us/op
# Warmup Iteration   5: 2445.313 us/op
Iteration   1: 1468.492 us/op
Iteration   2: 1503.484 us/op
Iteration   3: 1456.896 us/op
Iteration   4: 1485.573 us/op
Iteration   5: 1472.205 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1502.107 ±(99.9%) 50.976 us/op

  Histogram, us/op:
    [1400.000, 1412.500) = 0 
    [1412.500, 1425.000) = 0 
    [1425.000, 1437.500) = 0 
    [1437.500, 1450.000) = 0 
    [1450.000, 1462.500) = 1 
    [1462.500, 1475.000) = 2 
    [1475.000, 1487.500) = 1 
    [1487.500, 1500.000) = 1 
    [1500.000, 1512.500) = 2 
    [1512.500, 1525.000) = 0 
    [1525.000, 1537.500) = 0 
    [1537.500, 1550.000) = 2 
    [1550.000, 1562.500) = 1 
    [1562.500, 1575.000) = 0 
    [1575.000, 1587.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1456.896 us/op
     p(50.0000) =   1497.726 us/op
     p(90.0000) =   1555.609 us/op
     p(95.0000) =   1557.453 us/op
     p(99.0000) =   1557.453 us/op
     p(99.9000) =   1557.453 us/op
     p(99.9900) =   1557.453 us/op
     p(99.9990) =   1557.453 us/op
     p(99.9999) =   1557.453 us/op
    p(100.0000) =   1557.453 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.250)

# Run progress: 57.95% complete, ETA 00:19:27
# Fork: 1 of 2
# Warmup Iteration   1: 3572.004 us/op
# Warmup Iteration   2: 3442.851 us/op
# Warmup Iteration   3: 2625.412 us/op
# Warmup Iteration   4: 2472.822 us/op
# Warmup Iteration   5: 2405.684 us/op
Iteration   1: 1492.916 us/op
Iteration   2: 1588.365 us/op
Iteration   3: 1522.843 us/op
Iteration   4: 1487.044 us/op
Iteration   5: 1502.505 us/op

# Run progress: 58.14% complete, ETA 00:19:22
# Fork: 2 of 2
# Warmup Iteration   1: 3773.123 us/op
# Warmup Iteration   2: 3244.576 us/op
# Warmup Iteration   3: 3159.021 us/op
# Warmup Iteration   4: 2353.761 us/op
# Warmup Iteration   5: 2407.973 us/op
Iteration   1: 1464.410 us/op
Iteration   2: 1514.769 us/op
Iteration   3: 1497.145 us/op
Iteration   4: 1457.022 us/op
Iteration   5: 1468.123 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1499.514 ±(99.9%) 57.256 us/op

  Histogram, us/op:
    [1400.000, 1412.500) = 0 
    [1412.500, 1425.000) = 0 
    [1425.000, 1437.500) = 0 
    [1437.500, 1450.000) = 0 
    [1450.000, 1462.500) = 1 
    [1462.500, 1475.000) = 2 
    [1475.000, 1487.500) = 1 
    [1487.500, 1500.000) = 2 
    [1500.000, 1512.500) = 1 
    [1512.500, 1525.000) = 2 
    [1525.000, 1537.500) = 0 
    [1537.500, 1550.000) = 0 
    [1550.000, 1562.500) = 0 
    [1562.500, 1575.000) = 0 
    [1575.000, 1587.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1457.022 us/op
     p(50.0000) =   1495.030 us/op
     p(90.0000) =   1581.813 us/op
     p(95.0000) =   1588.365 us/op
     p(99.0000) =   1588.365 us/op
     p(99.9000) =   1588.365 us/op
     p(99.9900) =   1588.365 us/op
     p(99.9990) =   1588.365 us/op
     p(99.9999) =   1588.365 us/op
    p(100.0000) =   1588.365 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.375)

# Run progress: 58.33% complete, ETA 00:19:16
# Fork: 1 of 2
# Warmup Iteration   1: 3576.373 us/op
# Warmup Iteration   2: 3402.719 us/op
# Warmup Iteration   3: 2513.556 us/op
# Warmup Iteration   4: 2465.484 us/op
# Warmup Iteration   5: 2433.596 us/op
Iteration   1: 1440.943 us/op
Iteration   2: 1555.224 us/op
Iteration   3: 1432.123 us/op
Iteration   4: 1452.859 us/op
Iteration   5: 1444.397 us/op

# Run progress: 58.52% complete, ETA 00:19:11
# Fork: 2 of 2
# Warmup Iteration   1: 3650.907 us/op
# Warmup Iteration   2: 3231.073 us/op
# Warmup Iteration   3: 3124.902 us/op
# Warmup Iteration   4: 2379.721 us/op
# Warmup Iteration   5: 2362.092 us/op
Iteration   1: 1483.834 us/op
Iteration   2: 1597.270 us/op
Iteration   3: 1457.201 us/op
Iteration   4: 1444.026 us/op
Iteration   5: 1488.605 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1479.648 ±(99.9%) 83.013 us/op

  Histogram, us/op:
    [1400.000, 1412.500) = 0 
    [1412.500, 1425.000) = 0 
    [1425.000, 1437.500) = 1 
    [1437.500, 1450.000) = 3 
    [1450.000, 1462.500) = 2 
    [1462.500, 1475.000) = 0 
    [1475.000, 1487.500) = 1 
    [1487.500, 1500.000) = 1 
    [1500.000, 1512.500) = 0 
    [1512.500, 1525.000) = 0 
    [1525.000, 1537.500) = 0 
    [1537.500, 1550.000) = 0 
    [1550.000, 1562.500) = 1 
    [1562.500, 1575.000) = 0 
    [1575.000, 1587.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1432.123 us/op
     p(50.0000) =   1455.030 us/op
     p(90.0000) =   1593.065 us/op
     p(95.0000) =   1597.270 us/op
     p(99.0000) =   1597.270 us/op
     p(99.9000) =   1597.270 us/op
     p(99.9900) =   1597.270 us/op
     p(99.9990) =   1597.270 us/op
     p(99.9999) =   1597.270 us/op
    p(100.0000) =   1597.270 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.5)

# Run progress: 58.71% complete, ETA 00:19:06
# Fork: 1 of 2
# Warmup Iteration   1: 3587.258 us/op
# Warmup Iteration   2: 3336.411 us/op
# Warmup Iteration   3: 2634.679 us/op
# Warmup Iteration   4: 2595.087 us/op
# Warmup Iteration   5: 2477.557 us/op
Iteration   1: 1527.342 us/op
Iteration   2: 1552.533 us/op
Iteration   3: 1511.568 us/op
Iteration   4: 1515.680 us/op
Iteration   5: 1524.028 us/op

# Run progress: 58.90% complete, ETA 00:19:01
# Fork: 2 of 2
# Warmup Iteration   1: 3506.669 us/op
# Warmup Iteration   2: 3318.559 us/op
# Warmup Iteration   3: 3023.767 us/op
# Warmup Iteration   4: 2399.848 us/op
# Warmup Iteration   5: 2513.124 us/op
Iteration   1: 1501.251 us/op
Iteration   2: 1516.644 us/op
Iteration   3: 1513.834 us/op
Iteration   4: 1679.882 us/op
Iteration   5: 1563.302 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1540.606 ±(99.9%) 79.379 us/op

  Histogram, us/op:
    [1500.000, 1512.500) = 2 
    [1512.500, 1525.000) = 4 
    [1525.000, 1537.500) = 1 
    [1537.500, 1550.000) = 0 
    [1550.000, 1562.500) = 1 
    [1562.500, 1575.000) = 1 
    [1575.000, 1587.500) = 0 
    [1587.500, 1600.000) = 0 
    [1600.000, 1612.500) = 0 
    [1612.500, 1625.000) = 0 
    [1625.000, 1637.500) = 0 
    [1637.500, 1650.000) = 0 
    [1650.000, 1662.500) = 0 
    [1662.500, 1675.000) = 0 
    [1675.000, 1687.500) = 1 

  Percentiles, us/op:
      p(0.0000) =   1501.251 us/op
     p(50.0000) =   1520.336 us/op
     p(90.0000) =   1668.224 us/op
     p(95.0000) =   1679.882 us/op
     p(99.0000) =   1679.882 us/op
     p(99.9000) =   1679.882 us/op
     p(99.9900) =   1679.882 us/op
     p(99.9990) =   1679.882 us/op
     p(99.9999) =   1679.882 us/op
    p(100.0000) =   1679.882 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.625)

# Run progress: 59.09% complete, ETA 00:18:55
# Fork: 1 of 2
# Warmup Iteration   1: 3823.207 us/op
# Warmup Iteration   2: 3143.412 us/op
# Warmup Iteration   3: 2768.003 us/op
# Warmup Iteration   4: 2388.283 us/op
# Warmup Iteration   5: 2460.502 us/op
Iteration   1: 1617.447 us/op
Iteration   2: 1527.283 us/op
Iteration   3: 1447.946 us/op
Iteration   4: 1437.077 us/op
Iteration   5: 1484.730 us/op

# Run progress: 59.28% complete, ETA 00:18:50
# Fork: 2 of 2
# Warmup Iteration   1: 3669.886 us/op
# Warmup Iteration   2: 3243.244 us/op
# Warmup Iteration   3: 3126.848 us/op
# Warmup Iteration   4: 2436.565 us/op
# Warmup Iteration   5: 2502.193 us/op
Iteration   1: 1498.009 us/op
Iteration   2: 1514.737 us/op
Iteration   3: 1474.202 us/op
Iteration   4: 1495.108 us/op
Iteration   5: 1528.126 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1502.467 ±(99.9%) 76.563 us/op

  Histogram, us/op:
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 2 
    [1450.000, 1475.000) = 1 
    [1475.000, 1500.000) = 3 
    [1500.000, 1525.000) = 1 
    [1525.000, 1550.000) = 2 
    [1550.000, 1575.000) = 0 
    [1575.000, 1600.000) = 0 
    [1600.000, 1625.000) = 1 
    [1625.000, 1650.000) = 0 
    [1650.000, 1675.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1437.077 us/op
     p(50.0000) =   1496.559 us/op
     p(90.0000) =   1608.515 us/op
     p(95.0000) =   1617.447 us/op
     p(99.0000) =   1617.447 us/op
     p(99.9000) =   1617.447 us/op
     p(99.9900) =   1617.447 us/op
     p(99.9990) =   1617.447 us/op
     p(99.9999) =   1617.447 us/op
    p(100.0000) =   1617.447 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.75)

# Run progress: 59.47% complete, ETA 00:18:45
# Fork: 1 of 2
# Warmup Iteration   1: 3452.487 us/op
# Warmup Iteration   2: 3188.704 us/op
# Warmup Iteration   3: 2981.031 us/op
# Warmup Iteration   4: 2523.062 us/op
# Warmup Iteration   5: 2427.538 us/op
Iteration   1: 1543.236 us/op
Iteration   2: 1584.569 us/op
Iteration   3: 1509.534 us/op
Iteration   4: 1526.923 us/op
Iteration   5: 1518.593 us/op

# Run progress: 59.66% complete, ETA 00:18:40
# Fork: 2 of 2
# Warmup Iteration   1: 3615.473 us/op
# Warmup Iteration   2: 3218.529 us/op
# Warmup Iteration   3: 3120.685 us/op
# Warmup Iteration   4: 2477.833 us/op
# Warmup Iteration   5: 2389.183 us/op
Iteration   1: 1538.605 us/op
Iteration   2: 1591.741 us/op
Iteration   3: 1501.290 us/op
Iteration   4: 1436.974 us/op
Iteration   5: 1476.727 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1522.819 ±(99.9%) 70.189 us/op

  Histogram, us/op:
    [1400.000, 1412.500) = 0 
    [1412.500, 1425.000) = 0 
    [1425.000, 1437.500) = 1 
    [1437.500, 1450.000) = 0 
    [1450.000, 1462.500) = 0 
    [1462.500, 1475.000) = 0 
    [1475.000, 1487.500) = 1 
    [1487.500, 1500.000) = 0 
    [1500.000, 1512.500) = 2 
    [1512.500, 1525.000) = 1 
    [1525.000, 1537.500) = 1 
    [1537.500, 1550.000) = 2 
    [1550.000, 1562.500) = 0 
    [1562.500, 1575.000) = 0 
    [1575.000, 1587.500) = 1 

  Percentiles, us/op:
      p(0.0000) =   1436.974 us/op
     p(50.0000) =   1522.758 us/op
     p(90.0000) =   1591.024 us/op
     p(95.0000) =   1591.741 us/op
     p(99.0000) =   1591.741 us/op
     p(99.9000) =   1591.741 us/op
     p(99.9900) =   1591.741 us/op
     p(99.9990) =   1591.741 us/op
     p(99.9999) =   1591.741 us/op
    p(100.0000) =   1591.741 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.875)

# Run progress: 59.85% complete, ETA 00:18:34
# Fork: 1 of 2
# Warmup Iteration   1: 3475.608 us/op
# Warmup Iteration   2: 3104.773 us/op
# Warmup Iteration   3: 2971.973 us/op
# Warmup Iteration   4: 2462.785 us/op
# Warmup Iteration   5: 2424.459 us/op
Iteration   1: 1461.239 us/op
Iteration   2: 1535.869 us/op
Iteration   3: 1502.010 us/op
Iteration   4: 1510.655 us/op
Iteration   5: 1524.216 us/op

# Run progress: 60.04% complete, ETA 00:18:29
# Fork: 2 of 2
# Warmup Iteration   1: 3519.505 us/op
# Warmup Iteration   2: 3394.490 us/op
# Warmup Iteration   3: 2589.619 us/op
# Warmup Iteration   4: 2461.421 us/op
# Warmup Iteration   5: 2437.876 us/op
Iteration   1: 1518.093 us/op
Iteration   2: 1576.255 us/op
Iteration   3: 1503.475 us/op
Iteration   4: 1501.351 us/op
Iteration   5: 1520.554 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1515.372 ±(99.9%) 44.246 us/op

  Histogram, us/op:
    [1400.000, 1412.500) = 0 
    [1412.500, 1425.000) = 0 
    [1425.000, 1437.500) = 0 
    [1437.500, 1450.000) = 0 
    [1450.000, 1462.500) = 1 
    [1462.500, 1475.000) = 0 
    [1475.000, 1487.500) = 0 
    [1487.500, 1500.000) = 0 
    [1500.000, 1512.500) = 4 
    [1512.500, 1525.000) = 3 
    [1525.000, 1537.500) = 1 
    [1537.500, 1550.000) = 0 
    [1550.000, 1562.500) = 0 
    [1562.500, 1575.000) = 0 
    [1575.000, 1587.500) = 1 

  Percentiles, us/op:
      p(0.0000) =   1461.239 us/op
     p(50.0000) =   1514.374 us/op
     p(90.0000) =   1572.216 us/op
     p(95.0000) =   1576.255 us/op
     p(99.0000) =   1576.255 us/op
     p(99.9000) =   1576.255 us/op
     p(99.9900) =   1576.255 us/op
     p(99.9990) =   1576.255 us/op
     p(99.9999) =   1576.255 us/op
    p(100.0000) =   1576.255 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 1)

# Run progress: 60.23% complete, ETA 00:18:24
# Fork: 1 of 2
# Warmup Iteration   1: 3761.268 us/op
# Warmup Iteration   2: 3276.521 us/op
# Warmup Iteration   3: 2984.804 us/op
# Warmup Iteration   4: 2409.876 us/op
# Warmup Iteration   5: 2377.284 us/op
Iteration   1: 1485.395 us/op
Iteration   2: 1513.612 us/op
Iteration   3: 1479.550 us/op
Iteration   4: 1483.413 us/op
Iteration   5: 1714.785 us/op

# Run progress: 60.42% complete, ETA 00:18:19
# Fork: 2 of 2
# Warmup Iteration   1: 3637.316 us/op
# Warmup Iteration   2: 3207.676 us/op
# Warmup Iteration   3: 2954.493 us/op
# Warmup Iteration   4: 2549.182 us/op
# Warmup Iteration   5: 2470.318 us/op
Iteration   1: 1468.349 us/op
Iteration   2: 1533.897 us/op
Iteration   3: 1497.887 us/op
Iteration   4: 1441.349 us/op
Iteration   5: 1458.845 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1507.708 ±(99.9%) 117.020 us/op

  Histogram, us/op:
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 1 
    [1450.000, 1475.000) = 2 
    [1475.000, 1500.000) = 4 
    [1500.000, 1525.000) = 1 
    [1525.000, 1550.000) = 1 
    [1550.000, 1575.000) = 0 
    [1575.000, 1600.000) = 0 
    [1600.000, 1625.000) = 0 
    [1625.000, 1650.000) = 0 
    [1650.000, 1675.000) = 0 
    [1675.000, 1700.000) = 0 
    [1700.000, 1725.000) = 1 
    [1725.000, 1750.000) = 0 
    [1750.000, 1775.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1441.349 us/op
     p(50.0000) =   1484.404 us/op
     p(90.0000) =   1696.696 us/op
     p(95.0000) =   1714.785 us/op
     p(99.0000) =   1714.785 us/op
     p(99.9000) =   1714.785 us/op
     p(99.9900) =   1714.785 us/op
     p(99.9990) =   1714.785 us/op
     p(99.9999) =   1714.785 us/op
    p(100.0000) =   1714.785 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.125)

# Run progress: 60.61% complete, ETA 00:18:13
# Fork: 1 of 2
# Warmup Iteration   1: 3632.745 us/op
# Warmup Iteration   2: 3511.299 us/op
# Warmup Iteration   3: 3108.966 us/op
# Warmup Iteration   4: 2582.637 us/op
# Warmup Iteration   5: 2488.604 us/op
Iteration   1: 1605.933 us/op
Iteration   2: 1619.312 us/op
Iteration   3: 1529.844 us/op
Iteration   4: 1518.492 us/op
Iteration   5: 1558.517 us/op

# Run progress: 60.80% complete, ETA 00:18:08
# Fork: 2 of 2
# Warmup Iteration   1: 3594.819 us/op
# Warmup Iteration   2: 3293.384 us/op
# Warmup Iteration   3: 2809.918 us/op
# Warmup Iteration   4: 2420.560 us/op
# Warmup Iteration   5: 2356.110 us/op
Iteration   1: 1460.821 us/op
Iteration   2: 1525.491 us/op
Iteration   3: 1508.585 us/op
Iteration   4: 1524.965 us/op
Iteration   5: 1522.949 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1537.491 ±(99.9%) 70.313 us/op

  Histogram, us/op:
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 1 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 4 
    [1525.000, 1550.000) = 2 
    [1550.000, 1575.000) = 1 
    [1575.000, 1600.000) = 0 
    [1600.000, 1625.000) = 2 
    [1625.000, 1650.000) = 0 
    [1650.000, 1675.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1460.821 us/op
     p(50.0000) =   1525.228 us/op
     p(90.0000) =   1617.974 us/op
     p(95.0000) =   1619.312 us/op
     p(99.0000) =   1619.312 us/op
     p(99.9000) =   1619.312 us/op
     p(99.9900) =   1619.312 us/op
     p(99.9990) =   1619.312 us/op
     p(99.9999) =   1619.312 us/op
    p(100.0000) =   1619.312 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.250)

# Run progress: 60.98% complete, ETA 00:18:03
# Fork: 1 of 2
# Warmup Iteration   1: 3884.201 us/op
# Warmup Iteration   2: 3229.016 us/op
# Warmup Iteration   3: 3068.445 us/op
# Warmup Iteration   4: 2418.243 us/op
# Warmup Iteration   5: 2406.019 us/op
Iteration   1: 1442.916 us/op
Iteration   2: 1526.477 us/op
Iteration   3: 1461.341 us/op
Iteration   4: 1431.491 us/op
Iteration   5: 1460.362 us/op

# Run progress: 61.17% complete, ETA 00:17:58
# Fork: 2 of 2
# Warmup Iteration   1: 3447.154 us/op
# Warmup Iteration   2: 3119.994 us/op
# Warmup Iteration   3: 3158.482 us/op
# Warmup Iteration   4: 2483.494 us/op
# Warmup Iteration   5: 2447.646 us/op
Iteration   1: 1506.353 us/op
Iteration   2: 1565.889 us/op
Iteration   3: 1500.183 us/op
Iteration   4: 1493.640 us/op
Iteration   5: 1492.788 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1488.144 ±(99.9%) 61.282 us/op

  Histogram, us/op:
    [1400.000, 1412.500) = 0 
    [1412.500, 1425.000) = 0 
    [1425.000, 1437.500) = 1 
    [1437.500, 1450.000) = 1 
    [1450.000, 1462.500) = 2 
    [1462.500, 1475.000) = 0 
    [1475.000, 1487.500) = 0 
    [1487.500, 1500.000) = 2 
    [1500.000, 1512.500) = 2 
    [1512.500, 1525.000) = 0 
    [1525.000, 1537.500) = 1 
    [1537.500, 1550.000) = 0 
    [1550.000, 1562.500) = 0 
    [1562.500, 1575.000) = 1 
    [1575.000, 1587.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1431.491 us/op
     p(50.0000) =   1493.214 us/op
     p(90.0000) =   1561.948 us/op
     p(95.0000) =   1565.889 us/op
     p(99.0000) =   1565.889 us/op
     p(99.9000) =   1565.889 us/op
     p(99.9900) =   1565.889 us/op
     p(99.9990) =   1565.889 us/op
     p(99.9999) =   1565.889 us/op
    p(100.0000) =   1565.889 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.375)

# Run progress: 61.36% complete, ETA 00:17:52
# Fork: 1 of 2
# Warmup Iteration   1: 3567.195 us/op
# Warmup Iteration   2: 3154.748 us/op
# Warmup Iteration   3: 3157.814 us/op
# Warmup Iteration   4: 2651.313 us/op
# Warmup Iteration   5: 2516.610 us/op
Iteration   1: 1564.009 us/op
Iteration   2: 1526.621 us/op
Iteration   3: 1519.181 us/op
Iteration   4: 1508.149 us/op
Iteration   5: 1554.530 us/op

# Run progress: 61.55% complete, ETA 00:17:47
# Fork: 2 of 2
# Warmup Iteration   1: 3853.486 us/op
# Warmup Iteration   2: 3455.730 us/op
# Warmup Iteration   3: 2636.354 us/op
# Warmup Iteration   4: 2532.146 us/op
# Warmup Iteration   5: 2638.668 us/op
Iteration   1: 1612.597 us/op
Iteration   2: 1590.280 us/op
Iteration   3: 1556.310 us/op
Iteration   4: 1531.795 us/op
Iteration   5: 1575.549 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1553.902 ±(99.9%) 50.085 us/op

  Histogram, us/op:
    [1500.000, 1512.500) = 1 
    [1512.500, 1525.000) = 1 
    [1525.000, 1537.500) = 2 
    [1537.500, 1550.000) = 0 
    [1550.000, 1562.500) = 2 
    [1562.500, 1575.000) = 1 
    [1575.000, 1587.500) = 1 
    [1587.500, 1600.000) = 1 
    [1600.000, 1612.500) = 0 
    [1612.500, 1625.000) = 1 
    [1625.000, 1637.500) = 0 
    [1637.500, 1650.000) = 0 
    [1650.000, 1662.500) = 0 
    [1662.500, 1675.000) = 0 
    [1675.000, 1687.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1508.149 us/op
     p(50.0000) =   1555.420 us/op
     p(90.0000) =   1610.365 us/op
     p(95.0000) =   1612.597 us/op
     p(99.0000) =   1612.597 us/op
     p(99.9000) =   1612.597 us/op
     p(99.9900) =   1612.597 us/op
     p(99.9990) =   1612.597 us/op
     p(99.9999) =   1612.597 us/op
    p(100.0000) =   1612.597 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.5)

# Run progress: 61.74% complete, ETA 00:17:42
# Fork: 1 of 2
# Warmup Iteration   1: 3453.950 us/op
# Warmup Iteration   2: 3218.115 us/op
# Warmup Iteration   3: 3044.570 us/op
# Warmup Iteration   4: 2454.702 us/op
# Warmup Iteration   5: 2422.537 us/op
Iteration   1: 1502.454 us/op
Iteration   2: 1541.885 us/op
Iteration   3: 1502.997 us/op
Iteration   4: 1518.602 us/op
Iteration   5: 1490.859 us/op

# Run progress: 61.93% complete, ETA 00:17:37
# Fork: 2 of 2
# Warmup Iteration   1: 3634.155 us/op
# Warmup Iteration   2: 3264.176 us/op
# Warmup Iteration   3: 3067.443 us/op
# Warmup Iteration   4: 2633.170 us/op
# Warmup Iteration   5: 2616.569 us/op
Iteration   1: 1499.305 us/op
Iteration   2: 1566.932 us/op
Iteration   3: 1491.143 us/op
Iteration   4: 1485.292 us/op
Iteration   5: 1538.336 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1513.781 ±(99.9%) 40.769 us/op

  Histogram, us/op:
    [1480.000, 1485.000) = 0 
    [1485.000, 1490.000) = 1 
    [1490.000, 1495.000) = 2 
    [1495.000, 1500.000) = 1 
    [1500.000, 1505.000) = 2 
    [1505.000, 1510.000) = 0 
    [1510.000, 1515.000) = 0 
    [1515.000, 1520.000) = 1 
    [1520.000, 1525.000) = 0 
    [1525.000, 1530.000) = 0 
    [1530.000, 1535.000) = 0 
    [1535.000, 1540.000) = 1 
    [1540.000, 1545.000) = 1 
    [1545.000, 1550.000) = 0 
    [1550.000, 1555.000) = 0 
    [1555.000, 1560.000) = 0 
    [1560.000, 1565.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1485.292 us/op
     p(50.0000) =   1502.726 us/op
     p(90.0000) =   1564.427 us/op
     p(95.0000) =   1566.932 us/op
     p(99.0000) =   1566.932 us/op
     p(99.9000) =   1566.932 us/op
     p(99.9900) =   1566.932 us/op
     p(99.9990) =   1566.932 us/op
     p(99.9999) =   1566.932 us/op
    p(100.0000) =   1566.932 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.625)

# Run progress: 62.12% complete, ETA 00:17:31
# Fork: 1 of 2
# Warmup Iteration   1: 3559.484 us/op
# Warmup Iteration   2: 3103.831 us/op
# Warmup Iteration   3: 2876.204 us/op
# Warmup Iteration   4: 2467.708 us/op
# Warmup Iteration   5: 2382.691 us/op
Iteration   1: 1491.263 us/op
Iteration   2: 1520.518 us/op
Iteration   3: 1513.536 us/op
Iteration   4: 1495.194 us/op
Iteration   5: 1516.169 us/op

# Run progress: 62.31% complete, ETA 00:17:26
# Fork: 2 of 2
# Warmup Iteration   1: 3508.710 us/op
# Warmup Iteration   2: 3228.043 us/op
# Warmup Iteration   3: 3030.474 us/op
# Warmup Iteration   4: 2514.369 us/op
# Warmup Iteration   5: 2433.636 us/op
Iteration   1: 1509.226 us/op
Iteration   2: 1586.322 us/op
Iteration   3: 1496.723 us/op
Iteration   4: 1536.504 us/op
Iteration   5: 1541.990 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1520.745 ±(99.9%) 43.072 us/op

  Histogram, us/op:
    [1490.000, 1500.000) = 3 
    [1500.000, 1510.000) = 1 
    [1510.000, 1520.000) = 2 
    [1520.000, 1530.000) = 1 
    [1530.000, 1540.000) = 1 
    [1540.000, 1550.000) = 1 
    [1550.000, 1560.000) = 0 
    [1560.000, 1570.000) = 0 
    [1570.000, 1580.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1491.263 us/op
     p(50.0000) =   1514.853 us/op
     p(90.0000) =   1581.889 us/op
     p(95.0000) =   1586.322 us/op
     p(99.0000) =   1586.322 us/op
     p(99.9000) =   1586.322 us/op
     p(99.9900) =   1586.322 us/op
     p(99.9990) =   1586.322 us/op
     p(99.9999) =   1586.322 us/op
    p(100.0000) =   1586.322 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.75)

# Run progress: 62.50% complete, ETA 00:17:21
# Fork: 1 of 2
# Warmup Iteration   1: 3554.130 us/op
# Warmup Iteration   2: 3499.037 us/op
# Warmup Iteration   3: 2641.645 us/op
# Warmup Iteration   4: 2465.476 us/op
# Warmup Iteration   5: 2449.823 us/op
Iteration   1: 1606.371 us/op
Iteration   2: 1539.144 us/op
Iteration   3: 1488.152 us/op
Iteration   4: 1477.090 us/op
Iteration   5: 1521.415 us/op

# Run progress: 62.69% complete, ETA 00:17:16
# Fork: 2 of 2
# Warmup Iteration   1: 3657.831 us/op
# Warmup Iteration   2: 3232.256 us/op
# Warmup Iteration   3: 2814.219 us/op
# Warmup Iteration   4: 2530.534 us/op
# Warmup Iteration   5: 2487.076 us/op
Iteration   1: 1546.616 us/op
Iteration   2: 1545.415 us/op
Iteration   3: 1493.366 us/op
Iteration   4: 1468.811 us/op
Iteration   5: 1479.548 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1516.593 ±(99.9%) 65.491 us/op

  Histogram, us/op:
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 1 
    [1475.000, 1500.000) = 4 
    [1500.000, 1525.000) = 1 
    [1525.000, 1550.000) = 3 
    [1550.000, 1575.000) = 0 
    [1575.000, 1600.000) = 0 
    [1600.000, 1625.000) = 1 
    [1625.000, 1650.000) = 0 
    [1650.000, 1675.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1468.811 us/op
     p(50.0000) =   1507.391 us/op
     p(90.0000) =   1600.396 us/op
     p(95.0000) =   1606.371 us/op
     p(99.0000) =   1606.371 us/op
     p(99.9000) =   1606.371 us/op
     p(99.9900) =   1606.371 us/op
     p(99.9990) =   1606.371 us/op
     p(99.9999) =   1606.371 us/op
    p(100.0000) =   1606.371 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.875)

# Run progress: 62.88% complete, ETA 00:17:10
# Fork: 1 of 2
# Warmup Iteration   1: 4090.911 us/op
# Warmup Iteration   2: 3197.738 us/op
# Warmup Iteration   3: 3034.700 us/op
# Warmup Iteration   4: 2420.037 us/op
# Warmup Iteration   5: 2421.500 us/op
Iteration   1: 1574.427 us/op
Iteration   2: 1476.398 us/op
Iteration   3: 1467.350 us/op
Iteration   4: 1455.948 us/op
Iteration   5: 1469.590 us/op

# Run progress: 63.07% complete, ETA 00:17:05
# Fork: 2 of 2
# Warmup Iteration   1: 3350.550 us/op
# Warmup Iteration   2: 3363.599 us/op
# Warmup Iteration   3: 3002.667 us/op
# Warmup Iteration   4: 2408.770 us/op
# Warmup Iteration   5: 2394.654 us/op
Iteration   1: 1461.192 us/op
Iteration   2: 1520.365 us/op
Iteration   3: 1421.292 us/op
Iteration   4: 1470.768 us/op
Iteration   5: 1642.512 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1495.984 ±(99.9%) 99.709 us/op

  Histogram, us/op:
    [1400.000, 1425.000) = 1 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 5 
    [1475.000, 1500.000) = 1 
    [1500.000, 1525.000) = 1 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 1 
    [1575.000, 1600.000) = 0 
    [1600.000, 1625.000) = 0 
    [1625.000, 1650.000) = 1 
    [1650.000, 1675.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1421.292 us/op
     p(50.0000) =   1470.179 us/op
     p(90.0000) =   1635.704 us/op
     p(95.0000) =   1642.512 us/op
     p(99.0000) =   1642.512 us/op
     p(99.9000) =   1642.512 us/op
     p(99.9900) =   1642.512 us/op
     p(99.9990) =   1642.512 us/op
     p(99.9999) =   1642.512 us/op
    p(100.0000) =   1642.512 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 1)

# Run progress: 63.26% complete, ETA 00:17:00
# Fork: 1 of 2
# Warmup Iteration   1: 3622.498 us/op
# Warmup Iteration   2: 3143.467 us/op
# Warmup Iteration   3: 3051.631 us/op
# Warmup Iteration   4: 2447.590 us/op
# Warmup Iteration   5: 2449.621 us/op
Iteration   1: 1469.862 us/op
Iteration   2: 1535.140 us/op
Iteration   3: 1513.574 us/op
Iteration   4: 1504.833 us/op
Iteration   5: 1505.854 us/op

# Run progress: 63.45% complete, ETA 00:16:55
# Fork: 2 of 2
# Warmup Iteration   1: 3584.177 us/op
# Warmup Iteration   2: 3146.578 us/op
# Warmup Iteration   3: 2969.852 us/op
# Warmup Iteration   4: 2413.797 us/op
# Warmup Iteration   5: 2396.387 us/op
Iteration   1: 1593.399 us/op
Iteration   2: 1504.951 us/op
Iteration   3: 1509.287 us/op
Iteration   4: 1533.036 us/op
Iteration   5: 1561.028 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1523.096 ±(99.9%) 52.130 us/op

  Histogram, us/op:
    [1400.000, 1412.500) = 0 
    [1412.500, 1425.000) = 0 
    [1425.000, 1437.500) = 0 
    [1437.500, 1450.000) = 0 
    [1450.000, 1462.500) = 0 
    [1462.500, 1475.000) = 1 
    [1475.000, 1487.500) = 0 
    [1487.500, 1500.000) = 0 
    [1500.000, 1512.500) = 4 
    [1512.500, 1525.000) = 1 
    [1525.000, 1537.500) = 2 
    [1537.500, 1550.000) = 0 
    [1550.000, 1562.500) = 1 
    [1562.500, 1575.000) = 0 
    [1575.000, 1587.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1469.862 us/op
     p(50.0000) =   1511.431 us/op
     p(90.0000) =   1590.162 us/op
     p(95.0000) =   1593.399 us/op
     p(99.0000) =   1593.399 us/op
     p(99.9000) =   1593.399 us/op
     p(99.9900) =   1593.399 us/op
     p(99.9990) =   1593.399 us/op
     p(99.9999) =   1593.399 us/op
    p(100.0000) =   1593.399 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.125)

# Run progress: 63.64% complete, ETA 00:16:49
# Fork: 1 of 2
# Warmup Iteration   1: 5002.380 us/op
# Warmup Iteration   2: 5048.801 us/op
# Warmup Iteration   3: 4042.300 us/op
# Warmup Iteration   4: 3989.020 us/op
# Warmup Iteration   5: 4016.494 us/op
Iteration   1: 2889.155 us/op
Iteration   2: 2919.527 us/op
Iteration   3: 2838.582 us/op
Iteration   4: 3184.501 us/op
Iteration   5: 3203.764 us/op

# Run progress: 63.83% complete, ETA 00:16:44
# Fork: 2 of 2
# Warmup Iteration   1: 5595.993 us/op
# Warmup Iteration   2: 4785.070 us/op
# Warmup Iteration   3: 4579.348 us/op
# Warmup Iteration   4: 3958.920 us/op
# Warmup Iteration   5: 3988.218 us/op
Iteration   1: 2858.108 us/op
Iteration   2: 3076.302 us/op
Iteration   3: 3000.668 us/op
Iteration   4: 2862.224 us/op
Iteration   5: 2831.796 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2966.463 ±(99.9%) 215.207 us/op

  Histogram, us/op:
    [2800.000, 2850.000) = 2 
    [2850.000, 2900.000) = 3 
    [2900.000, 2950.000) = 1 
    [2950.000, 3000.000) = 0 
    [3000.000, 3050.000) = 1 
    [3050.000, 3100.000) = 1 
    [3100.000, 3150.000) = 0 
    [3150.000, 3200.000) = 1 
    [3200.000, 3250.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2831.796 us/op
     p(50.0000) =   2904.341 us/op
     p(90.0000) =   3201.838 us/op
     p(95.0000) =   3203.764 us/op
     p(99.0000) =   3203.764 us/op
     p(99.9000) =   3203.764 us/op
     p(99.9900) =   3203.764 us/op
     p(99.9990) =   3203.764 us/op
     p(99.9999) =   3203.764 us/op
    p(100.0000) =   3203.764 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.250)

# Run progress: 64.02% complete, ETA 00:16:39
# Fork: 1 of 2
# Warmup Iteration   1: 5010.553 us/op
# Warmup Iteration   2: 5115.025 us/op
# Warmup Iteration   3: 3974.217 us/op
# Warmup Iteration   4: 3939.805 us/op
# Warmup Iteration   5: 3943.121 us/op
Iteration   1: 2841.698 us/op
Iteration   2: 2925.619 us/op
Iteration   3: 2837.783 us/op
Iteration   4: 2822.377 us/op
Iteration   5: 2911.278 us/op

# Run progress: 64.20% complete, ETA 00:16:34
# Fork: 2 of 2
# Warmup Iteration   1: 5048.221 us/op
# Warmup Iteration   2: 4918.165 us/op
# Warmup Iteration   3: 4021.497 us/op
# Warmup Iteration   4: 3946.684 us/op
# Warmup Iteration   5: 3954.517 us/op
Iteration   1: 2820.082 us/op
Iteration   2: 2871.924 us/op
Iteration   3: 2827.040 us/op
Iteration   4: 2867.323 us/op
Iteration   5: 2845.295 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2857.042 ±(99.9%) 55.626 us/op

  Histogram, us/op:
    [2800.000, 2812.500) = 0 
    [2812.500, 2825.000) = 2 
    [2825.000, 2837.500) = 1 
    [2837.500, 2850.000) = 3 
    [2850.000, 2862.500) = 0 
    [2862.500, 2875.000) = 2 
    [2875.000, 2887.500) = 0 
    [2887.500, 2900.000) = 0 
    [2900.000, 2912.500) = 1 
    [2912.500, 2925.000) = 0 
    [2925.000, 2937.500) = 1 
    [2937.500, 2950.000) = 0 
    [2950.000, 2962.500) = 0 
    [2962.500, 2975.000) = 0 
    [2975.000, 2987.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   2820.082 us/op
     p(50.0000) =   2843.497 us/op
     p(90.0000) =   2924.185 us/op
     p(95.0000) =   2925.619 us/op
     p(99.0000) =   2925.619 us/op
     p(99.9000) =   2925.619 us/op
     p(99.9900) =   2925.619 us/op
     p(99.9990) =   2925.619 us/op
     p(99.9999) =   2925.619 us/op
    p(100.0000) =   2925.619 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.375)

# Run progress: 64.39% complete, ETA 00:16:28
# Fork: 1 of 2
# Warmup Iteration   1: 5006.397 us/op
# Warmup Iteration   2: 4727.351 us/op
# Warmup Iteration   3: 4679.768 us/op
# Warmup Iteration   4: 3928.478 us/op
# Warmup Iteration   5: 3865.372 us/op
Iteration   1: 2911.209 us/op
Iteration   2: 3004.351 us/op
Iteration   3: 2892.565 us/op
Iteration   4: 2967.030 us/op
Iteration   5: 2964.609 us/op

# Run progress: 64.58% complete, ETA 00:16:23
# Fork: 2 of 2
# Warmup Iteration   1: 5128.794 us/op
# Warmup Iteration   2: 4981.105 us/op
# Warmup Iteration   3: 4092.085 us/op
# Warmup Iteration   4: 3975.320 us/op
# Warmup Iteration   5: 4591.448 us/op
Iteration   1: 3051.990 us/op
Iteration   2: 3397.507 us/op
Iteration   3: 3644.848 us/op
Iteration   4: 3778.280 us/op
Iteration   5: 3691.471 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   3230.386 ±(99.9%) 540.758 us/op

  Histogram, us/op:
    [2800.000, 2900.000) = 1 
    [2900.000, 3000.000) = 3 
    [3000.000, 3100.000) = 2 
    [3100.000, 3200.000) = 0 
    [3200.000, 3300.000) = 0 
    [3300.000, 3400.000) = 1 
    [3400.000, 3500.000) = 0 
    [3500.000, 3600.000) = 0 
    [3600.000, 3700.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   2892.565 us/op
     p(50.0000) =   3028.171 us/op
     p(90.0000) =   3769.599 us/op
     p(95.0000) =   3778.280 us/op
     p(99.0000) =   3778.280 us/op
     p(99.9000) =   3778.280 us/op
     p(99.9900) =   3778.280 us/op
     p(99.9990) =   3778.280 us/op
     p(99.9999) =   3778.280 us/op
    p(100.0000) =   3778.280 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.5)

# Run progress: 64.77% complete, ETA 00:16:18
# Fork: 1 of 2
# Warmup Iteration   1: 4875.132 us/op
# Warmup Iteration   2: 4715.287 us/op
# Warmup Iteration   3: 4415.740 us/op
# Warmup Iteration   4: 3893.169 us/op
# Warmup Iteration   5: 3881.050 us/op
Iteration   1: 2801.669 us/op
Iteration   2: 2837.759 us/op
Iteration   3: 2788.145 us/op
Iteration   4: 2807.308 us/op
Iteration   5: 3030.347 us/op

# Run progress: 64.96% complete, ETA 00:16:13
# Fork: 2 of 2
# Warmup Iteration   1: 5123.429 us/op
# Warmup Iteration   2: 4884.024 us/op
# Warmup Iteration   3: 4594.879 us/op
# Warmup Iteration   4: 4004.283 us/op
# Warmup Iteration   5: 3865.711 us/op
Iteration   1: 2790.872 us/op
Iteration   2: 2867.991 us/op
Iteration   3: 2970.972 us/op
Iteration   4: 2823.320 us/op
Iteration   5: 2893.017 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2861.140 ±(99.9%) 123.889 us/op

  Histogram, us/op:
    [2700.000, 2725.000) = 0 
    [2725.000, 2750.000) = 0 
    [2750.000, 2775.000) = 0 
    [2775.000, 2800.000) = 2 
    [2800.000, 2825.000) = 3 
    [2825.000, 2850.000) = 1 
    [2850.000, 2875.000) = 1 
    [2875.000, 2900.000) = 1 
    [2900.000, 2925.000) = 0 
    [2925.000, 2950.000) = 0 
    [2950.000, 2975.000) = 1 
    [2975.000, 3000.000) = 0 
    [3000.000, 3025.000) = 0 
    [3025.000, 3050.000) = 1 
    [3050.000, 3075.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2788.145 us/op
     p(50.0000) =   2830.540 us/op
     p(90.0000) =   3024.410 us/op
     p(95.0000) =   3030.347 us/op
     p(99.0000) =   3030.347 us/op
     p(99.9000) =   3030.347 us/op
     p(99.9900) =   3030.347 us/op
     p(99.9990) =   3030.347 us/op
     p(99.9999) =   3030.347 us/op
    p(100.0000) =   3030.347 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.625)

# Run progress: 65.15% complete, ETA 00:16:07
# Fork: 1 of 2
# Warmup Iteration   1: 5001.471 us/op
# Warmup Iteration   2: 4794.062 us/op
# Warmup Iteration   3: 4522.798 us/op
# Warmup Iteration   4: 3971.049 us/op
# Warmup Iteration   5: 3941.826 us/op
Iteration   1: 2829.590 us/op
Iteration   2: 2876.756 us/op
Iteration   3: 2827.198 us/op
Iteration   4: 2888.144 us/op
Iteration   5: 2841.482 us/op

# Run progress: 65.34% complete, ETA 00:16:02
# Fork: 2 of 2
# Warmup Iteration   1: 5250.525 us/op
# Warmup Iteration   2: 4877.068 us/op
# Warmup Iteration   3: 4632.975 us/op
# Warmup Iteration   4: 4105.902 us/op
# Warmup Iteration   5: 4001.366 us/op
Iteration   1: 2879.225 us/op
Iteration   2: 2927.954 us/op
Iteration   3: 2875.302 us/op
Iteration   4: 2846.286 us/op
Iteration   5: 2878.950 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2867.089 ±(99.9%) 46.959 us/op

  Histogram, us/op:
    [2800.000, 2812.500) = 0 
    [2812.500, 2825.000) = 0 
    [2825.000, 2837.500) = 2 
    [2837.500, 2850.000) = 2 
    [2850.000, 2862.500) = 0 
    [2862.500, 2875.000) = 0 
    [2875.000, 2887.500) = 4 
    [2887.500, 2900.000) = 1 
    [2900.000, 2912.500) = 0 
    [2912.500, 2925.000) = 0 
    [2925.000, 2937.500) = 1 
    [2937.500, 2950.000) = 0 
    [2950.000, 2962.500) = 0 
    [2962.500, 2975.000) = 0 
    [2975.000, 2987.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   2827.198 us/op
     p(50.0000) =   2876.029 us/op
     p(90.0000) =   2923.973 us/op
     p(95.0000) =   2927.954 us/op
     p(99.0000) =   2927.954 us/op
     p(99.9000) =   2927.954 us/op
     p(99.9900) =   2927.954 us/op
     p(99.9990) =   2927.954 us/op
     p(99.9999) =   2927.954 us/op
    p(100.0000) =   2927.954 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.75)

# Run progress: 65.53% complete, ETA 00:15:57
# Fork: 1 of 2
# Warmup Iteration   1: 5323.613 us/op
# Warmup Iteration   2: 5067.438 us/op
# Warmup Iteration   3: 4228.702 us/op
# Warmup Iteration   4: 4089.396 us/op
# Warmup Iteration   5: 4114.424 us/op
Iteration   1: 2883.595 us/op
Iteration   2: 2917.290 us/op
Iteration   3: 2860.692 us/op
Iteration   4: 2871.205 us/op
Iteration   5: 3019.075 us/op

# Run progress: 65.72% complete, ETA 00:15:52
# Fork: 2 of 2
# Warmup Iteration   1: 5145.348 us/op
# Warmup Iteration   2: 5027.688 us/op
# Warmup Iteration   3: 4411.520 us/op
# Warmup Iteration   4: 3988.488 us/op
# Warmup Iteration   5: 4053.985 us/op
Iteration   1: 2924.614 us/op
Iteration   2: 3003.524 us/op
Iteration   3: 2824.051 us/op
Iteration   4: 2898.109 us/op
Iteration   5: 2893.297 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2909.545 ±(99.9%) 92.032 us/op

  Histogram, us/op:
    [2800.000, 2825.000) = 1 
    [2825.000, 2850.000) = 0 
    [2850.000, 2875.000) = 2 
    [2875.000, 2900.000) = 3 
    [2900.000, 2925.000) = 2 
    [2925.000, 2950.000) = 0 
    [2950.000, 2975.000) = 0 
    [2975.000, 3000.000) = 0 
    [3000.000, 3025.000) = 2 
    [3025.000, 3050.000) = 0 
    [3050.000, 3075.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2824.051 us/op
     p(50.0000) =   2895.703 us/op
     p(90.0000) =   3017.520 us/op
     p(95.0000) =   3019.075 us/op
     p(99.0000) =   3019.075 us/op
     p(99.9000) =   3019.075 us/op
     p(99.9900) =   3019.075 us/op
     p(99.9990) =   3019.075 us/op
     p(99.9999) =   3019.075 us/op
    p(100.0000) =   3019.075 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.875)

# Run progress: 65.91% complete, ETA 00:15:46
# Fork: 1 of 2
# Warmup Iteration   1: 5055.305 us/op
# Warmup Iteration   2: 5157.997 us/op
# Warmup Iteration   3: 4092.160 us/op
# Warmup Iteration   4: 4025.549 us/op
# Warmup Iteration   5: 4306.373 us/op
Iteration   1: 2876.578 us/op
Iteration   2: 2923.888 us/op
Iteration   3: 2864.854 us/op
Iteration   4: 2865.563 us/op
Iteration   5: 2937.233 us/op

# Run progress: 66.10% complete, ETA 00:15:41
# Fork: 2 of 2
# Warmup Iteration   1: 5288.122 us/op
# Warmup Iteration   2: 5062.412 us/op
# Warmup Iteration   3: 4159.059 us/op
# Warmup Iteration   4: 3915.661 us/op
# Warmup Iteration   5: 3909.569 us/op
Iteration   1: 2806.528 us/op
Iteration   2: 2840.038 us/op
Iteration   3: 2786.735 us/op
Iteration   4: 2955.866 us/op
Iteration   5: 2802.111 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2865.939 ±(99.9%) 89.002 us/op

  Histogram, us/op:
    [2700.000, 2725.000) = 0 
    [2725.000, 2750.000) = 0 
    [2750.000, 2775.000) = 0 
    [2775.000, 2800.000) = 1 
    [2800.000, 2825.000) = 2 
    [2825.000, 2850.000) = 1 
    [2850.000, 2875.000) = 2 
    [2875.000, 2900.000) = 1 
    [2900.000, 2925.000) = 1 
    [2925.000, 2950.000) = 1 
    [2950.000, 2975.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2786.735 us/op
     p(50.0000) =   2865.208 us/op
     p(90.0000) =   2954.003 us/op
     p(95.0000) =   2955.866 us/op
     p(99.0000) =   2955.866 us/op
     p(99.9000) =   2955.866 us/op
     p(99.9900) =   2955.866 us/op
     p(99.9990) =   2955.866 us/op
     p(99.9999) =   2955.866 us/op
    p(100.0000) =   2955.866 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 1)

# Run progress: 66.29% complete, ETA 00:15:36
# Fork: 1 of 2
# Warmup Iteration   1: 5106.853 us/op
# Warmup Iteration   2: 5001.562 us/op
# Warmup Iteration   3: 4180.286 us/op
# Warmup Iteration   4: 3974.510 us/op
# Warmup Iteration   5: 4087.203 us/op
Iteration   1: 2912.088 us/op
Iteration   2: 2960.613 us/op
Iteration   3: 2968.075 us/op
Iteration   4: 3004.466 us/op
Iteration   5: 3023.228 us/op

# Run progress: 66.48% complete, ETA 00:15:31
# Fork: 2 of 2
# Warmup Iteration   1: 5066.349 us/op
# Warmup Iteration   2: 4856.206 us/op
# Warmup Iteration   3: 4394.701 us/op
# Warmup Iteration   4: 4081.101 us/op
# Warmup Iteration   5: 4061.200 us/op
Iteration   1: 2914.385 us/op
Iteration   2: 2926.939 us/op
Iteration   3: 2963.687 us/op
Iteration   4: 2955.247 us/op
Iteration   5: 2965.033 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2959.376 ±(99.9%) 54.201 us/op

  Histogram, us/op:
    [2900.000, 2912.500) = 1 
    [2912.500, 2925.000) = 1 
    [2925.000, 2937.500) = 1 
    [2937.500, 2950.000) = 0 
    [2950.000, 2962.500) = 2 
    [2962.500, 2975.000) = 3 
    [2975.000, 2987.500) = 0 
    [2987.500, 3000.000) = 0 
    [3000.000, 3012.500) = 1 
    [3012.500, 3025.000) = 1 
    [3025.000, 3037.500) = 0 
    [3037.500, 3050.000) = 0 
    [3050.000, 3062.500) = 0 
    [3062.500, 3075.000) = 0 
    [3075.000, 3087.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   2912.088 us/op
     p(50.0000) =   2962.150 us/op
     p(90.0000) =   3021.352 us/op
     p(95.0000) =   3023.228 us/op
     p(99.0000) =   3023.228 us/op
     p(99.9000) =   3023.228 us/op
     p(99.9900) =   3023.228 us/op
     p(99.9990) =   3023.228 us/op
     p(99.9999) =   3023.228 us/op
    p(100.0000) =   3023.228 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.125)

# Run progress: 66.67% complete, ETA 00:15:25
# Fork: 1 of 2
# Warmup Iteration   1: 3500.170 us/op
# Warmup Iteration   2: 2428.107 us/op
# Warmup Iteration   3: 2034.380 us/op
# Warmup Iteration   4: 1751.755 us/op
# Warmup Iteration   5: 1681.644 us/op
Iteration   1: 175.369 us/op
Iteration   2: 177.079 us/op
Iteration   3: 136.525 us/op
Iteration   4: 122.757 us/op
Iteration   5: 122.092 us/op

# Run progress: 66.86% complete, ETA 00:15:20
# Fork: 2 of 2
# Warmup Iteration   1: 3432.784 us/op
# Warmup Iteration   2: 2344.563 us/op
# Warmup Iteration   3: 2108.251 us/op
# Warmup Iteration   4: 1865.373 us/op
# Warmup Iteration   5: 1719.496 us/op
Iteration   1: 193.563 us/op
Iteration   2: 206.157 us/op
Iteration   3: 141.905 us/op
Iteration   4: 124.264 us/op
Iteration   5: 139.639 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    153.935 ±(99.9%) 47.305 us/op

  Histogram, us/op:
    [120.000, 125.000) = 3 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 2 
    [140.000, 145.000) = 1 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 0 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 2 
    [180.000, 185.000) = 0 
    [185.000, 190.000) = 0 
    [190.000, 195.000) = 1 
    [195.000, 200.000) = 0 
    [200.000, 205.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    122.092 us/op
     p(50.0000) =    140.772 us/op
     p(90.0000) =    204.898 us/op
     p(95.0000) =    206.157 us/op
     p(99.0000) =    206.157 us/op
     p(99.9000) =    206.157 us/op
     p(99.9900) =    206.157 us/op
     p(99.9990) =    206.157 us/op
     p(99.9999) =    206.157 us/op
    p(100.0000) =    206.157 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.250)

# Run progress: 67.05% complete, ETA 00:15:15
# Fork: 1 of 2
# Warmup Iteration   1: 2969.380 us/op
# Warmup Iteration   2: 2269.108 us/op
# Warmup Iteration   3: 1579.921 us/op
# Warmup Iteration   4: 1507.751 us/op
# Warmup Iteration   5: 1558.087 us/op
Iteration   1: 164.783 us/op
Iteration   2: 223.504 us/op
Iteration   3: 149.245 us/op
Iteration   4: 164.799 us/op
Iteration   5: 180.721 us/op

# Run progress: 67.23% complete, ETA 00:15:10
# Fork: 2 of 2
# Warmup Iteration   1: 3019.737 us/op
# Warmup Iteration   2: 2248.154 us/op
# Warmup Iteration   3: 1684.869 us/op
# Warmup Iteration   4: 1516.670 us/op
# Warmup Iteration   5: 1542.375 us/op
Iteration   1: 127.915 us/op
Iteration   2: 183.225 us/op
Iteration   3: 145.253 us/op
Iteration   4: 166.206 us/op
Iteration   5: 144.159 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    164.981 ±(99.9%) 40.478 us/op

  Histogram, us/op:
    [120.000, 130.000) = 1 
    [130.000, 140.000) = 0 
    [140.000, 150.000) = 3 
    [150.000, 160.000) = 0 
    [160.000, 170.000) = 3 
    [170.000, 180.000) = 0 
    [180.000, 190.000) = 2 
    [190.000, 200.000) = 0 
    [200.000, 210.000) = 0 
    [210.000, 220.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    127.915 us/op
     p(50.0000) =    164.791 us/op
     p(90.0000) =    219.476 us/op
     p(95.0000) =    223.504 us/op
     p(99.0000) =    223.504 us/op
     p(99.9000) =    223.504 us/op
     p(99.9900) =    223.504 us/op
     p(99.9990) =    223.504 us/op
     p(99.9999) =    223.504 us/op
    p(100.0000) =    223.504 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.375)

# Run progress: 67.42% complete, ETA 00:15:04
# Fork: 1 of 2
# Warmup Iteration   1: 2625.613 us/op
# Warmup Iteration   2: 1705.241 us/op
# Warmup Iteration   3: 1725.286 us/op
# Warmup Iteration   4: 1308.945 us/op
# Warmup Iteration   5: 1245.664 us/op
Iteration   1: 135.215 us/op
Iteration   2: 264.928 us/op
Iteration   3: 133.440 us/op
Iteration   4: 174.542 us/op
Iteration   5: 160.589 us/op

# Run progress: 67.61% complete, ETA 00:14:59
# Fork: 2 of 2
# Warmup Iteration   1: 3181.462 us/op
# Warmup Iteration   2: 1776.098 us/op
# Warmup Iteration   3: 1633.297 us/op
# Warmup Iteration   4: 1318.369 us/op
# Warmup Iteration   5: 1289.174 us/op
Iteration   1: 137.920 us/op
Iteration   2: 207.096 us/op
Iteration   3: 185.263 us/op
Iteration   4: 167.786 us/op
Iteration   5: 199.336 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    176.612 ±(99.9%) 61.171 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 0 
    [125.000, 137.500) = 2 
    [137.500, 150.000) = 1 
    [150.000, 162.500) = 1 
    [162.500, 175.000) = 2 
    [175.000, 187.500) = 1 
    [187.500, 200.000) = 1 
    [200.000, 212.500) = 1 
    [212.500, 225.000) = 0 
    [225.000, 237.500) = 0 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 1 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    133.440 us/op
     p(50.0000) =    171.164 us/op
     p(90.0000) =    259.145 us/op
     p(95.0000) =    264.928 us/op
     p(99.0000) =    264.928 us/op
     p(99.9000) =    264.928 us/op
     p(99.9900) =    264.928 us/op
     p(99.9990) =    264.928 us/op
     p(99.9999) =    264.928 us/op
    p(100.0000) =    264.928 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.5)

# Run progress: 67.80% complete, ETA 00:14:54
# Fork: 1 of 2
# Warmup Iteration   1: 2973.373 us/op
# Warmup Iteration   2: 2037.110 us/op
# Warmup Iteration   3: 1778.326 us/op
# Warmup Iteration   4: 1396.505 us/op
# Warmup Iteration   5: 1753.936 us/op
Iteration   1: 116.921 us/op
Iteration   2: 138.979 us/op
Iteration   3: 251.807 us/op
Iteration   4: 156.748 us/op
Iteration   5: 132.307 us/op

# Run progress: 67.99% complete, ETA 00:14:49
# Fork: 2 of 2
# Warmup Iteration   1: 2873.356 us/op
# Warmup Iteration   2: 1975.375 us/op
# Warmup Iteration   3: 1493.138 us/op
# Warmup Iteration   4: 1545.161 us/op
# Warmup Iteration   5: 1584.198 us/op
Iteration   1: 131.936 us/op
Iteration   2: 160.644 us/op
Iteration   3: 151.266 us/op
Iteration   4: 152.200 us/op
Iteration   5: 134.352 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    152.716 ±(99.9%) 56.470 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 1 
    [125.000, 137.500) = 3 
    [137.500, 150.000) = 1 
    [150.000, 162.500) = 4 
    [162.500, 175.000) = 0 
    [175.000, 187.500) = 0 
    [187.500, 200.000) = 0 
    [200.000, 212.500) = 0 
    [212.500, 225.000) = 0 
    [225.000, 237.500) = 0 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 1 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    116.921 us/op
     p(50.0000) =    145.123 us/op
     p(90.0000) =    242.691 us/op
     p(95.0000) =    251.807 us/op
     p(99.0000) =    251.807 us/op
     p(99.9000) =    251.807 us/op
     p(99.9900) =    251.807 us/op
     p(99.9990) =    251.807 us/op
     p(99.9999) =    251.807 us/op
    p(100.0000) =    251.807 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.625)

# Run progress: 68.18% complete, ETA 00:14:43
# Fork: 1 of 2
# Warmup Iteration   1: 2697.184 us/op
# Warmup Iteration   2: 1859.975 us/op
# Warmup Iteration   3: 1267.427 us/op
# Warmup Iteration   4: 1194.257 us/op
# Warmup Iteration   5: 1237.908 us/op
Iteration   1: 127.803 us/op
Iteration   2: 169.011 us/op
Iteration   3: 127.516 us/op
Iteration   4: 131.747 us/op
Iteration   5: 229.405 us/op

# Run progress: 68.37% complete, ETA 00:14:38
# Fork: 2 of 2
# Warmup Iteration   1: 2825.780 us/op
# Warmup Iteration   2: 1778.650 us/op
# Warmup Iteration   3: 1302.300 us/op
# Warmup Iteration   4: 1191.593 us/op
# Warmup Iteration   5: 1185.928 us/op
Iteration   1: 140.676 us/op
Iteration   2: 174.752 us/op
Iteration   3: 128.985 us/op
Iteration   4: 133.165 us/op
Iteration   5: 245.916 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    160.898 ±(99.9%) 66.543 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 0 
    [125.000, 137.500) = 5 
    [137.500, 150.000) = 1 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 2 
    [175.000, 187.500) = 0 
    [187.500, 200.000) = 0 
    [200.000, 212.500) = 0 
    [212.500, 225.000) = 0 
    [225.000, 237.500) = 1 
    [237.500, 250.000) = 1 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    127.516 us/op
     p(50.0000) =    136.921 us/op
     p(90.0000) =    244.265 us/op
     p(95.0000) =    245.916 us/op
     p(99.0000) =    245.916 us/op
     p(99.9000) =    245.916 us/op
     p(99.9900) =    245.916 us/op
     p(99.9990) =    245.916 us/op
     p(99.9999) =    245.916 us/op
    p(100.0000) =    245.916 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.75)

# Run progress: 68.56% complete, ETA 00:14:33
# Fork: 1 of 2
# Warmup Iteration   1: 2994.163 us/op
# Warmup Iteration   2: 1541.864 us/op
# Warmup Iteration   3: 1507.179 us/op
# Warmup Iteration   4: 1505.536 us/op
# Warmup Iteration   5: 1258.763 us/op
Iteration   1: 134.658 us/op
Iteration   2: 161.161 us/op
Iteration   3: 205.761 us/op
Iteration   4: 132.386 us/op
Iteration   5: 148.335 us/op

# Run progress: 68.75% complete, ETA 00:14:27
# Fork: 2 of 2
# Warmup Iteration   1: 2874.715 us/op
# Warmup Iteration   2: 1629.107 us/op
# Warmup Iteration   3: 1724.198 us/op
# Warmup Iteration   4: 1256.571 us/op
# Warmup Iteration   5: 1335.936 us/op
Iteration   1: 137.600 us/op
Iteration   2: 144.700 us/op
Iteration   3: 135.302 us/op
Iteration   4: 148.847 us/op
Iteration   5: 133.540 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    148.229 ±(99.9%) 33.508 us/op

  Histogram, us/op:
    [130.000, 135.000) = 3 
    [135.000, 140.000) = 2 
    [140.000, 145.000) = 1 
    [145.000, 150.000) = 2 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 1 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 0 
    [180.000, 185.000) = 0 
    [185.000, 190.000) = 0 
    [190.000, 195.000) = 0 
    [195.000, 200.000) = 0 
    [200.000, 205.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    132.386 us/op
     p(50.0000) =    141.150 us/op
     p(90.0000) =    201.301 us/op
     p(95.0000) =    205.761 us/op
     p(99.0000) =    205.761 us/op
     p(99.9000) =    205.761 us/op
     p(99.9900) =    205.761 us/op
     p(99.9990) =    205.761 us/op
     p(99.9999) =    205.761 us/op
    p(100.0000) =    205.761 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.875)

# Run progress: 68.94% complete, ETA 00:14:22
# Fork: 1 of 2
# Warmup Iteration   1: 2805.728 us/op
# Warmup Iteration   2: 1978.307 us/op
# Warmup Iteration   3: 1370.324 us/op
# Warmup Iteration   4: 1286.415 us/op
# Warmup Iteration   5: 1268.206 us/op
Iteration   1: 147.620 us/op
Iteration   2: 185.057 us/op
Iteration   3: 150.974 us/op
Iteration   4: 214.291 us/op
Iteration   5: 166.942 us/op

# Run progress: 69.13% complete, ETA 00:14:17
# Fork: 2 of 2
# Warmup Iteration   1: 2653.909 us/op
# Warmup Iteration   2: 1909.535 us/op
# Warmup Iteration   3: 1319.176 us/op
# Warmup Iteration   4: 1286.139 us/op
# Warmup Iteration   5: 1355.220 us/op
Iteration   1: 134.096 us/op
Iteration   2: 159.681 us/op
Iteration   3: 160.646 us/op
Iteration   4: 225.967 us/op
Iteration   5: 146.098 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    169.137 ±(99.9%) 45.746 us/op

  Histogram, us/op:
    [130.000, 140.000) = 1 
    [140.000, 150.000) = 2 
    [150.000, 160.000) = 2 
    [160.000, 170.000) = 2 
    [170.000, 180.000) = 0 
    [180.000, 190.000) = 1 
    [190.000, 200.000) = 0 
    [200.000, 210.000) = 0 
    [210.000, 220.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    134.096 us/op
     p(50.0000) =    160.164 us/op
     p(90.0000) =    224.799 us/op
     p(95.0000) =    225.967 us/op
     p(99.0000) =    225.967 us/op
     p(99.9000) =    225.967 us/op
     p(99.9900) =    225.967 us/op
     p(99.9990) =    225.967 us/op
     p(99.9999) =    225.967 us/op
    p(100.0000) =    225.967 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 1)

# Run progress: 69.32% complete, ETA 00:14:12
# Fork: 1 of 2
# Warmup Iteration   1: 2852.913 us/op
# Warmup Iteration   2: 1730.794 us/op
# Warmup Iteration   3: 1797.367 us/op
# Warmup Iteration   4: 1365.843 us/op
# Warmup Iteration   5: 1335.322 us/op
Iteration   1: 114.186 us/op
Iteration   2: 237.828 us/op
Iteration   3: 139.886 us/op
Iteration   4: 133.973 us/op
Iteration   5: 119.408 us/op

# Run progress: 69.51% complete, ETA 00:14:06
# Fork: 2 of 2
# Warmup Iteration   1: 2781.836 us/op
# Warmup Iteration   2: 1764.248 us/op
# Warmup Iteration   3: 1567.074 us/op
# Warmup Iteration   4: 1668.165 us/op
# Warmup Iteration   5: 1340.718 us/op
Iteration   1: 121.699 us/op
Iteration   2: 117.780 us/op
Iteration   3: 121.848 us/op
Iteration   4: 124.837 us/op
Iteration   5: 136.217 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    136.766 ±(99.9%) 55.193 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 6 
    [125.000, 137.500) = 2 
    [137.500, 150.000) = 1 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 0 
    [175.000, 187.500) = 0 
    [187.500, 200.000) = 0 
    [200.000, 212.500) = 0 
    [212.500, 225.000) = 0 
    [225.000, 237.500) = 0 
    [237.500, 250.000) = 1 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    114.186 us/op
     p(50.0000) =    123.343 us/op
     p(90.0000) =    228.034 us/op
     p(95.0000) =    237.828 us/op
     p(99.0000) =    237.828 us/op
     p(99.9000) =    237.828 us/op
     p(99.9900) =    237.828 us/op
     p(99.9990) =    237.828 us/op
     p(99.9999) =    237.828 us/op
    p(100.0000) =    237.828 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.125)

# Run progress: 69.70% complete, ETA 00:14:01
# Fork: 1 of 2
# Warmup Iteration   1: 3221.880 us/op
# Warmup Iteration   2: 2360.797 us/op
# Warmup Iteration   3: 2431.838 us/op
# Warmup Iteration   4: 1963.575 us/op
# Warmup Iteration   5: 1983.242 us/op
Iteration   1: 144.112 us/op
Iteration   2: 186.274 us/op
Iteration   3: 265.713 us/op
Iteration   4: 171.522 us/op
Iteration   5: 170.068 us/op

# Run progress: 69.89% complete, ETA 00:13:56
# Fork: 2 of 2
# Warmup Iteration   1: 3320.817 us/op
# Warmup Iteration   2: 2543.386 us/op
# Warmup Iteration   3: 2017.887 us/op
# Warmup Iteration   4: 2027.312 us/op
# Warmup Iteration   5: 1914.451 us/op
Iteration   1: 164.375 us/op
Iteration   2: 256.219 us/op
Iteration   3: 214.703 us/op
Iteration   4: 176.672 us/op
Iteration   5: 197.510 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    194.717 ±(99.9%) 60.167 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 0 
    [125.000, 137.500) = 0 
    [137.500, 150.000) = 1 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 3 
    [175.000, 187.500) = 2 
    [187.500, 200.000) = 1 
    [200.000, 212.500) = 0 
    [212.500, 225.000) = 1 
    [225.000, 237.500) = 0 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 1 
    [262.500, 275.000) = 1 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    144.112 us/op
     p(50.0000) =    181.473 us/op
     p(90.0000) =    264.764 us/op
     p(95.0000) =    265.713 us/op
     p(99.0000) =    265.713 us/op
     p(99.9000) =    265.713 us/op
     p(99.9900) =    265.713 us/op
     p(99.9990) =    265.713 us/op
     p(99.9999) =    265.713 us/op
    p(100.0000) =    265.713 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.250)

# Run progress: 70.08% complete, ETA 00:13:51
# Fork: 1 of 2
# Warmup Iteration   1: 2870.909 us/op
# Warmup Iteration   2: 2059.053 us/op
# Warmup Iteration   3: 1682.142 us/op
# Warmup Iteration   4: 1459.868 us/op
# Warmup Iteration   5: 1529.830 us/op
Iteration   1: 128.350 us/op
Iteration   2: 196.451 us/op
Iteration   3: 137.788 us/op
Iteration   4: 175.849 us/op
Iteration   5: 145.006 us/op

# Run progress: 70.27% complete, ETA 00:13:45
# Fork: 2 of 2
# Warmup Iteration   1: 3337.730 us/op
# Warmup Iteration   2: 2022.811 us/op
# Warmup Iteration   3: 1816.565 us/op
# Warmup Iteration   4: 1526.837 us/op
# Warmup Iteration   5: 1576.892 us/op
Iteration   1: 164.760 us/op
Iteration   2: 198.785 us/op
Iteration   3: 160.193 us/op
Iteration   4: 164.232 us/op
Iteration   5: 126.490 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    159.790 ±(99.9%) 38.929 us/op

  Histogram, us/op:
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 2 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 1 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 1 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 3 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 1 
    [180.000, 185.000) = 0 
    [185.000, 190.000) = 0 
    [190.000, 195.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    126.490 us/op
     p(50.0000) =    162.213 us/op
     p(90.0000) =    198.552 us/op
     p(95.0000) =    198.785 us/op
     p(99.0000) =    198.785 us/op
     p(99.9000) =    198.785 us/op
     p(99.9900) =    198.785 us/op
     p(99.9990) =    198.785 us/op
     p(99.9999) =    198.785 us/op
    p(100.0000) =    198.785 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.375)

# Run progress: 70.45% complete, ETA 00:13:40
# Fork: 1 of 2
# Warmup Iteration   1: 2632.582 us/op
# Warmup Iteration   2: 1694.001 us/op
# Warmup Iteration   3: 1674.790 us/op
# Warmup Iteration   4: 1370.771 us/op
# Warmup Iteration   5: 1245.360 us/op
Iteration   1: 161.034 us/op
Iteration   2: 317.193 us/op
Iteration   3: 140.761 us/op
Iteration   4: 191.639 us/op
Iteration   5: 210.285 us/op

# Run progress: 70.64% complete, ETA 00:13:35
# Fork: 2 of 2
# Warmup Iteration   1: 2678.166 us/op
# Warmup Iteration   2: 1701.626 us/op
# Warmup Iteration   3: 1656.196 us/op
# Warmup Iteration   4: 1333.053 us/op
# Warmup Iteration   5: 1267.409 us/op
Iteration   1: 132.356 us/op
Iteration   2: 241.881 us/op
Iteration   3: 137.118 us/op
Iteration   4: 164.139 us/op
Iteration   5: 139.701 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    183.611 ±(99.9%) 89.382 us/op

  Histogram, us/op:
    [100.000, 125.000) = 0 
    [125.000, 150.000) = 4 
    [150.000, 175.000) = 2 
    [175.000, 200.000) = 1 
    [200.000, 225.000) = 1 
    [225.000, 250.000) = 1 
    [250.000, 275.000) = 0 
    [275.000, 300.000) = 0 
    [300.000, 325.000) = 1 
    [325.000, 350.000) = 0 
    [350.000, 375.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    132.356 us/op
     p(50.0000) =    162.587 us/op
     p(90.0000) =    309.662 us/op
     p(95.0000) =    317.193 us/op
     p(99.0000) =    317.193 us/op
     p(99.9000) =    317.193 us/op
     p(99.9900) =    317.193 us/op
     p(99.9990) =    317.193 us/op
     p(99.9999) =    317.193 us/op
    p(100.0000) =    317.193 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.5)

# Run progress: 70.83% complete, ETA 00:13:30
# Fork: 1 of 2
# Warmup Iteration   1: 2932.529 us/op
# Warmup Iteration   2: 1829.562 us/op
# Warmup Iteration   3: 1710.528 us/op
# Warmup Iteration   4: 1387.860 us/op
# Warmup Iteration   5: 1355.488 us/op
Iteration   1: 117.930 us/op
Iteration   2: 164.404 us/op
Iteration   3: 124.636 us/op
Iteration   4: 245.791 us/op
Iteration   5: 150.810 us/op

# Run progress: 71.02% complete, ETA 00:13:24
# Fork: 2 of 2
# Warmup Iteration   1: 2739.703 us/op
# Warmup Iteration   2: 1836.846 us/op
# Warmup Iteration   3: 1769.187 us/op
# Warmup Iteration   4: 1461.817 us/op
# Warmup Iteration   5: 1359.506 us/op
Iteration   1: 131.886 us/op
Iteration   2: 168.107 us/op
Iteration   3: 128.888 us/op
Iteration   4: 302.225 us/op
Iteration   5: 130.549 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    166.523 ±(99.9%) 91.518 us/op

  Histogram, us/op:
    [100.000, 125.000) = 2 
    [125.000, 150.000) = 3 
    [150.000, 175.000) = 3 
    [175.000, 200.000) = 0 
    [200.000, 225.000) = 0 
    [225.000, 250.000) = 1 
    [250.000, 275.000) = 0 
    [275.000, 300.000) = 0 
    [300.000, 325.000) = 1 
    [325.000, 350.000) = 0 
    [350.000, 375.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    117.930 us/op
     p(50.0000) =    141.348 us/op
     p(90.0000) =    296.582 us/op
     p(95.0000) =    302.225 us/op
     p(99.0000) =    302.225 us/op
     p(99.9000) =    302.225 us/op
     p(99.9900) =    302.225 us/op
     p(99.9990) =    302.225 us/op
     p(99.9999) =    302.225 us/op
    p(100.0000) =    302.225 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.625)

# Run progress: 71.21% complete, ETA 00:13:19
# Fork: 1 of 2
# Warmup Iteration   1: 2754.759 us/op
# Warmup Iteration   2: 1593.306 us/op
# Warmup Iteration   3: 1553.296 us/op
# Warmup Iteration   4: 1211.135 us/op
# Warmup Iteration   5: 1191.952 us/op
Iteration   1: 130.713 us/op
Iteration   2: 145.626 us/op
Iteration   3: 130.469 us/op
Iteration   4: 125.069 us/op
Iteration   5: 164.971 us/op

# Run progress: 71.40% complete, ETA 00:13:14
# Fork: 2 of 2
# Warmup Iteration   1: 2723.770 us/op
# Warmup Iteration   2: 1669.537 us/op
# Warmup Iteration   3: 1260.655 us/op
# Warmup Iteration   4: 1155.013 us/op
# Warmup Iteration   5: 1162.287 us/op
Iteration   1: 127.461 us/op
Iteration   2: 150.337 us/op
Iteration   3: 151.929 us/op
Iteration   4: 166.561 us/op
Iteration   5: 161.618 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    145.475 ±(99.9%) 24.350 us/op

  Histogram, us/op:
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 2 
    [130.000, 135.000) = 2 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 1 
    [150.000, 155.000) = 2 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 2 

  Percentiles, us/op:
      p(0.0000) =    125.069 us/op
     p(50.0000) =    147.981 us/op
     p(90.0000) =    166.402 us/op
     p(95.0000) =    166.561 us/op
     p(99.0000) =    166.561 us/op
     p(99.9000) =    166.561 us/op
     p(99.9900) =    166.561 us/op
     p(99.9990) =    166.561 us/op
     p(99.9999) =    166.561 us/op
    p(100.0000) =    166.561 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.75)

# Run progress: 71.59% complete, ETA 00:13:09
# Fork: 1 of 2
# Warmup Iteration   1: 2657.910 us/op
# Warmup Iteration   2: 1603.703 us/op
# Warmup Iteration   3: 1466.127 us/op
# Warmup Iteration   4: 1542.651 us/op
# Warmup Iteration   5: 1245.217 us/op
Iteration   1: 129.976 us/op
Iteration   2: 173.958 us/op
Iteration   3: 132.202 us/op
Iteration   4: 129.708 us/op
Iteration   5: 141.911 us/op

# Run progress: 71.78% complete, ETA 00:13:03
# Fork: 2 of 2
# Warmup Iteration   1: 3021.036 us/op
# Warmup Iteration   2: 1654.077 us/op
# Warmup Iteration   3: 1717.293 us/op
# Warmup Iteration   4: 1254.452 us/op
# Warmup Iteration   5: 1229.013 us/op
Iteration   1: 130.466 us/op
Iteration   2: 177.176 us/op
Iteration   3: 159.318 us/op
Iteration   4: 130.622 us/op
Iteration   5: 132.050 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    143.739 ±(99.9%) 28.869 us/op

  Histogram, us/op:
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 2 
    [130.000, 135.000) = 4 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 1 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 1 
    [160.000, 165.000) = 0 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    129.708 us/op
     p(50.0000) =    132.126 us/op
     p(90.0000) =    176.854 us/op
     p(95.0000) =    177.176 us/op
     p(99.0000) =    177.176 us/op
     p(99.9000) =    177.176 us/op
     p(99.9900) =    177.176 us/op
     p(99.9990) =    177.176 us/op
     p(99.9999) =    177.176 us/op
    p(100.0000) =    177.176 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.875)

# Run progress: 71.97% complete, ETA 00:12:58
# Fork: 1 of 2
# Warmup Iteration   1: 2759.962 us/op
# Warmup Iteration   2: 1780.433 us/op
# Warmup Iteration   3: 1508.119 us/op
# Warmup Iteration   4: 1630.783 us/op
# Warmup Iteration   5: 1291.456 us/op
Iteration   1: 131.392 us/op
Iteration   2: 207.227 us/op
Iteration   3: 146.258 us/op
Iteration   4: 134.006 us/op
Iteration   5: 141.132 us/op

# Run progress: 72.16% complete, ETA 00:12:53
# Fork: 2 of 2
# Warmup Iteration   1: 2717.011 us/op
# Warmup Iteration   2: 1644.514 us/op
# Warmup Iteration   3: 1698.932 us/op
# Warmup Iteration   4: 1343.704 us/op
# Warmup Iteration   5: 1266.193 us/op
Iteration   1: 151.601 us/op
Iteration   2: 163.315 us/op
Iteration   3: 199.681 us/op
Iteration   4: 144.008 us/op
Iteration   5: 157.182 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    157.580 ±(99.9%) 39.458 us/op

  Histogram, us/op:
    [130.000, 135.000) = 2 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 2 
    [145.000, 150.000) = 1 
    [150.000, 155.000) = 1 
    [155.000, 160.000) = 1 
    [160.000, 165.000) = 1 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 0 
    [180.000, 185.000) = 0 
    [185.000, 190.000) = 0 
    [190.000, 195.000) = 0 
    [195.000, 200.000) = 1 
    [200.000, 205.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    131.392 us/op
     p(50.0000) =    148.930 us/op
     p(90.0000) =    206.472 us/op
     p(95.0000) =    207.227 us/op
     p(99.0000) =    207.227 us/op
     p(99.9000) =    207.227 us/op
     p(99.9900) =    207.227 us/op
     p(99.9990) =    207.227 us/op
     p(99.9999) =    207.227 us/op
    p(100.0000) =    207.227 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 1)

# Run progress: 72.35% complete, ETA 00:12:47
# Fork: 1 of 2
# Warmup Iteration   1: 2767.641 us/op
# Warmup Iteration   2: 1962.087 us/op
# Warmup Iteration   3: 1836.172 us/op
# Warmup Iteration   4: 1322.423 us/op
# Warmup Iteration   5: 1309.561 us/op
Iteration   1: 125.033 us/op
Iteration   2: 197.302 us/op
Iteration   3: 233.815 us/op
Iteration   4: 126.845 us/op
Iteration   5: 129.656 us/op

# Run progress: 72.54% complete, ETA 00:12:42
# Fork: 2 of 2
# Warmup Iteration   1: 2567.545 us/op
# Warmup Iteration   2: 1821.633 us/op
# Warmup Iteration   3: 1669.612 us/op
# Warmup Iteration   4: 1673.036 us/op
# Warmup Iteration   5: 1330.383 us/op
Iteration   1: 113.858 us/op
Iteration   2: 135.397 us/op
Iteration   3: 258.743 us/op
Iteration   4: 112.291 us/op
Iteration   5: 128.887 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    156.183 ±(99.9%) 80.736 us/op

  Histogram, us/op:
    [100.000, 112.500) = 1 
    [112.500, 125.000) = 1 
    [125.000, 137.500) = 5 
    [137.500, 150.000) = 0 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 0 
    [175.000, 187.500) = 0 
    [187.500, 200.000) = 1 
    [200.000, 212.500) = 0 
    [212.500, 225.000) = 0 
    [225.000, 237.500) = 1 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 1 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    112.291 us/op
     p(50.0000) =    129.272 us/op
     p(90.0000) =    256.250 us/op
     p(95.0000) =    258.743 us/op
     p(99.0000) =    258.743 us/op
     p(99.9000) =    258.743 us/op
     p(99.9900) =    258.743 us/op
     p(99.9990) =    258.743 us/op
     p(99.9999) =    258.743 us/op
    p(100.0000) =    258.743 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.125)

# Run progress: 72.73% complete, ETA 00:12:37
# Fork: 1 of 2
# Warmup Iteration   1: 3360.432 us/op
# Warmup Iteration   2: 2307.202 us/op
# Warmup Iteration   3: 2065.841 us/op
# Warmup Iteration   4: 1772.612 us/op
# Warmup Iteration   5: 1704.648 us/op
Iteration   1: 156.012 us/op
Iteration   2: 203.696 us/op
Iteration   3: 127.333 us/op
Iteration   4: 118.988 us/op
Iteration   5: 131.879 us/op

# Run progress: 72.92% complete, ETA 00:12:32
# Fork: 2 of 2
# Warmup Iteration   1: 3375.355 us/op
# Warmup Iteration   2: 2573.056 us/op
# Warmup Iteration   3: 1987.437 us/op
# Warmup Iteration   4: 1732.537 us/op
# Warmup Iteration   5: 1711.682 us/op
Iteration   1: 164.602 us/op
Iteration   2: 141.060 us/op
Iteration   3: 136.340 us/op
Iteration   4: 115.567 us/op
Iteration   5: 116.025 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    141.150 ±(99.9%) 41.434 us/op

  Histogram, us/op:
    [110.000, 120.000) = 3 
    [120.000, 130.000) = 1 
    [130.000, 140.000) = 2 
    [140.000, 150.000) = 1 
    [150.000, 160.000) = 1 
    [160.000, 170.000) = 1 
    [170.000, 180.000) = 0 
    [180.000, 190.000) = 0 
    [190.000, 200.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    115.567 us/op
     p(50.0000) =    134.110 us/op
     p(90.0000) =    199.787 us/op
     p(95.0000) =    203.696 us/op
     p(99.0000) =    203.696 us/op
     p(99.9000) =    203.696 us/op
     p(99.9900) =    203.696 us/op
     p(99.9990) =    203.696 us/op
     p(99.9999) =    203.696 us/op
    p(100.0000) =    203.696 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.250)

# Run progress: 73.11% complete, ETA 00:12:26
# Fork: 1 of 2
# Warmup Iteration   1: 3047.012 us/op
# Warmup Iteration   2: 1890.958 us/op
# Warmup Iteration   3: 1888.825 us/op
# Warmup Iteration   4: 1540.405 us/op
# Warmup Iteration   5: 1581.600 us/op
Iteration   1: 125.772 us/op
Iteration   2: 164.845 us/op
Iteration   3: 142.738 us/op
Iteration   4: 126.023 us/op
Iteration   5: 148.160 us/op

# Run progress: 73.30% complete, ETA 00:12:21
# Fork: 2 of 2
# Warmup Iteration   1: 3049.507 us/op
# Warmup Iteration   2: 1947.950 us/op
# Warmup Iteration   3: 1842.930 us/op
# Warmup Iteration   4: 1578.533 us/op
# Warmup Iteration   5: 1610.240 us/op
Iteration   1: 124.118 us/op
Iteration   2: 123.841 us/op
Iteration   3: 148.670 us/op
Iteration   4: 153.634 us/op
Iteration   5: 164.517 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    142.232 ±(99.9%) 24.765 us/op

  Histogram, us/op:
    [120.000, 125.000) = 2 
    [125.000, 130.000) = 2 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 1 
    [145.000, 150.000) = 2 
    [150.000, 155.000) = 1 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 2 

  Percentiles, us/op:
      p(0.0000) =    123.841 us/op
     p(50.0000) =    145.449 us/op
     p(90.0000) =    164.812 us/op
     p(95.0000) =    164.845 us/op
     p(99.0000) =    164.845 us/op
     p(99.9000) =    164.845 us/op
     p(99.9900) =    164.845 us/op
     p(99.9990) =    164.845 us/op
     p(99.9999) =    164.845 us/op
    p(100.0000) =    164.845 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.375)

# Run progress: 73.48% complete, ETA 00:12:16
# Fork: 1 of 2
# Warmup Iteration   1: 2548.412 us/op
# Warmup Iteration   2: 1643.691 us/op
# Warmup Iteration   3: 1613.447 us/op
# Warmup Iteration   4: 1495.147 us/op
# Warmup Iteration   5: 1267.637 us/op
Iteration   1: 125.757 us/op
Iteration   2: 126.453 us/op
Iteration   3: 125.596 us/op
Iteration   4: 232.088 us/op
Iteration   5: 128.073 us/op

# Run progress: 73.67% complete, ETA 00:12:11
# Fork: 2 of 2
# Warmup Iteration   1: 3083.400 us/op
# Warmup Iteration   2: 1654.257 us/op
# Warmup Iteration   3: 1726.176 us/op
# Warmup Iteration   4: 1322.807 us/op
# Warmup Iteration   5: 1425.413 us/op
Iteration   1: 238.176 us/op
Iteration   2: 213.983 us/op
Iteration   3: 157.643 us/op
Iteration   4: 152.444 us/op
Iteration   5: 175.412 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    167.563 ±(99.9%) 68.455 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 0 
    [125.000, 137.500) = 4 
    [137.500, 150.000) = 0 
    [150.000, 162.500) = 2 
    [162.500, 175.000) = 0 
    [175.000, 187.500) = 1 
    [187.500, 200.000) = 0 
    [200.000, 212.500) = 0 
    [212.500, 225.000) = 1 
    [225.000, 237.500) = 1 
    [237.500, 250.000) = 1 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    125.596 us/op
     p(50.0000) =    155.044 us/op
     p(90.0000) =    237.567 us/op
     p(95.0000) =    238.176 us/op
     p(99.0000) =    238.176 us/op
     p(99.9000) =    238.176 us/op
     p(99.9900) =    238.176 us/op
     p(99.9990) =    238.176 us/op
     p(99.9999) =    238.176 us/op
    p(100.0000) =    238.176 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.5)

# Run progress: 73.86% complete, ETA 00:12:05
# Fork: 1 of 2
# Warmup Iteration   1: 2702.505 us/op
# Warmup Iteration   2: 1741.107 us/op
# Warmup Iteration   3: 1834.677 us/op
# Warmup Iteration   4: 1392.764 us/op
# Warmup Iteration   5: 1375.045 us/op
Iteration   1: 109.694 us/op
Iteration   2: 108.890 us/op
Iteration   3: 112.407 us/op
Iteration   4: 205.853 us/op
Iteration   5: 108.060 us/op

# Run progress: 74.05% complete, ETA 00:12:00
# Fork: 2 of 2
# Warmup Iteration   1: 2889.202 us/op
# Warmup Iteration   2: 1779.934 us/op
# Warmup Iteration   3: 1716.545 us/op
# Warmup Iteration   4: 1368.641 us/op
# Warmup Iteration   5: 1419.525 us/op
Iteration   1: 105.748 us/op
Iteration   2: 120.031 us/op
Iteration   3: 123.227 us/op
Iteration   4: 205.808 us/op
Iteration   5: 117.803 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    131.752 ±(99.9%) 59.630 us/op

  Histogram, us/op:
    [100.000, 112.500) = 5 
    [112.500, 125.000) = 3 
    [125.000, 137.500) = 0 
    [137.500, 150.000) = 0 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 0 
    [175.000, 187.500) = 0 
    [187.500, 200.000) = 0 
    [200.000, 212.500) = 2 
    [212.500, 225.000) = 0 
    [225.000, 237.500) = 0 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    105.748 us/op
     p(50.0000) =    115.105 us/op
     p(90.0000) =    205.849 us/op
     p(95.0000) =    205.853 us/op
     p(99.0000) =    205.853 us/op
     p(99.9000) =    205.853 us/op
     p(99.9900) =    205.853 us/op
     p(99.9990) =    205.853 us/op
     p(99.9999) =    205.853 us/op
    p(100.0000) =    205.853 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.625)

# Run progress: 74.24% complete, ETA 00:11:55
# Fork: 1 of 2
# Warmup Iteration   1: 2686.008 us/op
# Warmup Iteration   2: 1489.546 us/op
# Warmup Iteration   3: 1563.119 us/op
# Warmup Iteration   4: 1230.506 us/op
# Warmup Iteration   5: 1179.065 us/op
Iteration   1: 116.740 us/op
Iteration   2: 142.689 us/op
Iteration   3: 108.124 us/op
Iteration   4: 109.370 us/op
Iteration   5: 112.684 us/op

# Run progress: 74.43% complete, ETA 00:11:50
# Fork: 2 of 2
# Warmup Iteration   1: 2969.098 us/op
# Warmup Iteration   2: 1623.168 us/op
# Warmup Iteration   3: 1743.639 us/op
# Warmup Iteration   4: 1208.968 us/op
# Warmup Iteration   5: 1171.591 us/op
Iteration   1: 167.039 us/op
Iteration   2: 122.944 us/op
Iteration   3: 220.139 us/op
Iteration   4: 120.393 us/op
Iteration   5: 115.377 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    133.550 ±(99.9%) 53.494 us/op

  Histogram, us/op:
    [100.000, 112.500) = 2 
    [112.500, 125.000) = 5 
    [125.000, 137.500) = 0 
    [137.500, 150.000) = 1 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 1 
    [175.000, 187.500) = 0 
    [187.500, 200.000) = 0 
    [200.000, 212.500) = 0 
    [212.500, 225.000) = 1 
    [225.000, 237.500) = 0 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    108.124 us/op
     p(50.0000) =    118.566 us/op
     p(90.0000) =    214.829 us/op
     p(95.0000) =    220.139 us/op
     p(99.0000) =    220.139 us/op
     p(99.9000) =    220.139 us/op
     p(99.9900) =    220.139 us/op
     p(99.9990) =    220.139 us/op
     p(99.9999) =    220.139 us/op
    p(100.0000) =    220.139 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.75)

# Run progress: 74.62% complete, ETA 00:11:44
# Fork: 1 of 2
# Warmup Iteration   1: 3130.453 us/op
# Warmup Iteration   2: 1797.041 us/op
# Warmup Iteration   3: 1416.284 us/op
# Warmup Iteration   4: 1628.821 us/op
# Warmup Iteration   5: 1238.672 us/op
Iteration   1: 112.313 us/op
Iteration   2: 143.970 us/op
Iteration   3: 117.348 us/op
Iteration   4: 116.900 us/op
Iteration   5: 115.230 us/op

# Run progress: 74.81% complete, ETA 00:11:39
# Fork: 2 of 2
# Warmup Iteration   1: 3100.505 us/op
# Warmup Iteration   2: 1723.765 us/op
# Warmup Iteration   3: 1334.470 us/op
# Warmup Iteration   4: 1206.453 us/op
# Warmup Iteration   5: 1202.095 us/op
Iteration   1: 123.253 us/op
Iteration   2: 156.882 us/op
Iteration   3: 126.069 us/op
Iteration   4: 187.520 us/op
Iteration   5: 113.027 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    131.251 ±(99.9%) 37.110 us/op

  Histogram, us/op:
    [110.000, 115.000) = 2 
    [115.000, 120.000) = 3 
    [120.000, 125.000) = 1 
    [125.000, 130.000) = 1 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 1 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 1 
    [160.000, 165.000) = 0 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 0 
    [180.000, 185.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    112.313 us/op
     p(50.0000) =    120.301 us/op
     p(90.0000) =    184.456 us/op
     p(95.0000) =    187.520 us/op
     p(99.0000) =    187.520 us/op
     p(99.9000) =    187.520 us/op
     p(99.9900) =    187.520 us/op
     p(99.9990) =    187.520 us/op
     p(99.9999) =    187.520 us/op
    p(100.0000) =    187.520 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.875)

# Run progress: 75.00% complete, ETA 00:11:34
# Fork: 1 of 2
# Warmup Iteration   1: 2999.566 us/op
# Warmup Iteration   2: 1606.888 us/op
# Warmup Iteration   3: 2061.205 us/op
# Warmup Iteration   4: 1362.144 us/op
# Warmup Iteration   5: 1306.497 us/op
Iteration   1: 125.000 us/op
Iteration   2: 117.006 us/op
Iteration   3: 121.230 us/op
Iteration   4: 114.957 us/op
Iteration   5: 121.557 us/op

# Run progress: 75.19% complete, ETA 00:11:29
# Fork: 2 of 2
# Warmup Iteration   1: 3002.010 us/op
# Warmup Iteration   2: 1631.023 us/op
# Warmup Iteration   3: 1516.871 us/op
# Warmup Iteration   4: 1834.241 us/op
# Warmup Iteration   5: 1279.009 us/op
Iteration   1: 128.935 us/op
Iteration   2: 146.536 us/op
Iteration   3: 115.130 us/op
Iteration   4: 116.474 us/op
Iteration   5: 125.125 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    123.195 ±(99.9%) 14.322 us/op

  Histogram, us/op:
    [110.000, 112.500) = 0 
    [112.500, 115.000) = 1 
    [115.000, 117.500) = 3 
    [117.500, 120.000) = 0 
    [120.000, 122.500) = 2 
    [122.500, 125.000) = 0 
    [125.000, 127.500) = 2 
    [127.500, 130.000) = 1 
    [130.000, 132.500) = 0 
    [132.500, 135.000) = 0 
    [135.000, 137.500) = 0 
    [137.500, 140.000) = 0 
    [140.000, 142.500) = 0 
    [142.500, 145.000) = 0 
    [145.000, 147.500) = 1 

  Percentiles, us/op:
      p(0.0000) =    114.957 us/op
     p(50.0000) =    121.394 us/op
     p(90.0000) =    144.776 us/op
     p(95.0000) =    146.536 us/op
     p(99.0000) =    146.536 us/op
     p(99.9000) =    146.536 us/op
     p(99.9900) =    146.536 us/op
     p(99.9990) =    146.536 us/op
     p(99.9999) =    146.536 us/op
    p(100.0000) =    146.536 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 1)

# Run progress: 75.38% complete, ETA 00:11:23
# Fork: 1 of 2
# Warmup Iteration   1: 3053.112 us/op
# Warmup Iteration   2: 1785.186 us/op
# Warmup Iteration   3: 1603.414 us/op
# Warmup Iteration   4: 1871.599 us/op
# Warmup Iteration   5: 1377.451 us/op
Iteration   1: 90.947 us/op
Iteration   2: 118.836 us/op
Iteration   3: 96.849 us/op
Iteration   4: 95.435 us/op
Iteration   5: 95.818 us/op

# Run progress: 75.57% complete, ETA 00:11:18
# Fork: 2 of 2
# Warmup Iteration   1: 2843.458 us/op
# Warmup Iteration   2: 1668.249 us/op
# Warmup Iteration   3: 1808.059 us/op
# Warmup Iteration   4: 1341.550 us/op
# Warmup Iteration   5: 1292.158 us/op
Iteration   1: 180.904 us/op
Iteration   2: 119.099 us/op
Iteration   3: 93.160 us/op
Iteration   4: 94.463 us/op
Iteration   5: 135.090 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    112.060 ±(99.9%) 42.909 us/op

  Histogram, us/op:
    [ 90.000, 100.000) = 6 
    [100.000, 110.000) = 0 
    [110.000, 120.000) = 2 
    [120.000, 130.000) = 0 
    [130.000, 140.000) = 1 
    [140.000, 150.000) = 0 
    [150.000, 160.000) = 0 
    [160.000, 170.000) = 0 
    [170.000, 180.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     90.947 us/op
     p(50.0000) =     96.334 us/op
     p(90.0000) =    176.323 us/op
     p(95.0000) =    180.904 us/op
     p(99.0000) =    180.904 us/op
     p(99.9000) =    180.904 us/op
     p(99.9900) =    180.904 us/op
     p(99.9990) =    180.904 us/op
     p(99.9999) =    180.904 us/op
    p(100.0000) =    180.904 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.125)

# Run progress: 75.76% complete, ETA 00:11:13
# Fork: 1 of 2
# Warmup Iteration   1: 3644.377 us/op
# Warmup Iteration   2: 2442.474 us/op
# Warmup Iteration   3: 2019.003 us/op
# Warmup Iteration   4: 1941.152 us/op
# Warmup Iteration   5: 1781.522 us/op
Iteration   1: 160.702 us/op
Iteration   2: 145.797 us/op
Iteration   3: 137.167 us/op
Iteration   4: 121.248 us/op
Iteration   5: 135.532 us/op

# Run progress: 75.95% complete, ETA 00:11:07
# Fork: 2 of 2
# Warmup Iteration   1: 3273.244 us/op
# Warmup Iteration   2: 2508.695 us/op
# Warmup Iteration   3: 1998.880 us/op
# Warmup Iteration   4: 2027.487 us/op
# Warmup Iteration   5: 1765.122 us/op
Iteration   1: 174.525 us/op
Iteration   2: 160.288 us/op
Iteration   3: 125.836 us/op
Iteration   4: 117.397 us/op
Iteration   5: 150.993 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    142.949 ±(99.9%) 28.467 us/op

  Histogram, us/op:
    [110.000, 115.000) = 0 
    [115.000, 120.000) = 1 
    [120.000, 125.000) = 1 
    [125.000, 130.000) = 1 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 2 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 1 
    [150.000, 155.000) = 1 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 2 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    117.397 us/op
     p(50.0000) =    141.482 us/op
     p(90.0000) =    173.143 us/op
     p(95.0000) =    174.525 us/op
     p(99.0000) =    174.525 us/op
     p(99.9000) =    174.525 us/op
     p(99.9900) =    174.525 us/op
     p(99.9990) =    174.525 us/op
     p(99.9999) =    174.525 us/op
    p(100.0000) =    174.525 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.250)

# Run progress: 76.14% complete, ETA 00:11:02
# Fork: 1 of 2
# Warmup Iteration   1: 3119.381 us/op
# Warmup Iteration   2: 2082.078 us/op
# Warmup Iteration   3: 1594.668 us/op
# Warmup Iteration   4: 1472.138 us/op
# Warmup Iteration   5: 1798.365 us/op
Iteration   1: 117.644 us/op
Iteration   2: 131.910 us/op
Iteration   3: 161.737 us/op
Iteration   4: 120.613 us/op
Iteration   5: 150.762 us/op

# Run progress: 76.33% complete, ETA 00:10:57
# Fork: 2 of 2
# Warmup Iteration   1: 3371.816 us/op
# Warmup Iteration   2: 2169.944 us/op
# Warmup Iteration   3: 1631.259 us/op
# Warmup Iteration   4: 1541.903 us/op
# Warmup Iteration   5: 1529.779 us/op
Iteration   1: 192.358 us/op
Iteration   2: 119.366 us/op
Iteration   3: 140.204 us/op
Iteration   4: 135.909 us/op
Iteration   5: 163.465 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    143.397 ±(99.9%) 36.160 us/op

  Histogram, us/op:
    [110.000, 115.000) = 0 
    [115.000, 120.000) = 2 
    [120.000, 125.000) = 1 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 1 
    [135.000, 140.000) = 1 
    [140.000, 145.000) = 1 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 1 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 2 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 0 
    [180.000, 185.000) = 0 
    [185.000, 190.000) = 0 
    [190.000, 195.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    117.644 us/op
     p(50.0000) =    138.057 us/op
     p(90.0000) =    189.469 us/op
     p(95.0000) =    192.358 us/op
     p(99.0000) =    192.358 us/op
     p(99.9000) =    192.358 us/op
     p(99.9900) =    192.358 us/op
     p(99.9990) =    192.358 us/op
     p(99.9999) =    192.358 us/op
    p(100.0000) =    192.358 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.375)

# Run progress: 76.52% complete, ETA 00:10:52
# Fork: 1 of 2
# Warmup Iteration   1: 2609.965 us/op
# Warmup Iteration   2: 1724.409 us/op
# Warmup Iteration   3: 1651.534 us/op
# Warmup Iteration   4: 1295.818 us/op
# Warmup Iteration   5: 1290.331 us/op
Iteration   1: 326.922 us/op
Iteration   2: 171.696 us/op
Iteration   3: 130.936 us/op
Iteration   4: 147.071 us/op
Iteration   5: 128.578 us/op

# Run progress: 76.70% complete, ETA 00:10:46
# Fork: 2 of 2
# Warmup Iteration   1: 3022.580 us/op
# Warmup Iteration   2: 1695.349 us/op
# Warmup Iteration   3: 1650.463 us/op
# Warmup Iteration   4: 1328.076 us/op
# Warmup Iteration   5: 1298.758 us/op
Iteration   1: 130.839 us/op
Iteration   2: 130.243 us/op
Iteration   3: 127.845 us/op
Iteration   4: 175.472 us/op
Iteration   5: 133.653 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    160.326 ±(99.9%) 92.515 us/op

  Histogram, us/op:
    [100.000, 125.000) = 0 
    [125.000, 150.000) = 7 
    [150.000, 175.000) = 1 
    [175.000, 200.000) = 1 
    [200.000, 225.000) = 0 
    [225.000, 250.000) = 0 
    [250.000, 275.000) = 0 
    [275.000, 300.000) = 0 
    [300.000, 325.000) = 0 
    [325.000, 350.000) = 1 
    [350.000, 375.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    127.845 us/op
     p(50.0000) =    132.295 us/op
     p(90.0000) =    311.777 us/op
     p(95.0000) =    326.922 us/op
     p(99.0000) =    326.922 us/op
     p(99.9000) =    326.922 us/op
     p(99.9900) =    326.922 us/op
     p(99.9990) =    326.922 us/op
     p(99.9999) =    326.922 us/op
    p(100.0000) =    326.922 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.5)

# Run progress: 76.89% complete, ETA 00:10:41
# Fork: 1 of 2
# Warmup Iteration   1: 2800.082 us/op
# Warmup Iteration   2: 1981.657 us/op
# Warmup Iteration   3: 1409.357 us/op
# Warmup Iteration   4: 1546.545 us/op
# Warmup Iteration   5: 1381.973 us/op
Iteration   1: 106.245 us/op
Iteration   2: 131.998 us/op
Iteration   3: 107.751 us/op
Iteration   4: 226.649 us/op
Iteration   5: 109.205 us/op

# Run progress: 77.08% complete, ETA 00:10:36
# Fork: 2 of 2
# Warmup Iteration   1: 2826.383 us/op
# Warmup Iteration   2: 1852.777 us/op
# Warmup Iteration   3: 1766.344 us/op
# Warmup Iteration   4: 1453.284 us/op
# Warmup Iteration   5: 1442.285 us/op
Iteration   1: 118.821 us/op
Iteration   2: 110.370 us/op
Iteration   3: 113.947 us/op
Iteration   4: 205.305 us/op
Iteration   5: 115.868 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    134.616 ±(99.9%) 66.212 us/op

  Histogram, us/op:
    [100.000, 112.500) = 4 
    [112.500, 125.000) = 3 
    [125.000, 137.500) = 1 
    [137.500, 150.000) = 0 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 0 
    [175.000, 187.500) = 0 
    [187.500, 200.000) = 0 
    [200.000, 212.500) = 1 
    [212.500, 225.000) = 0 
    [225.000, 237.500) = 1 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    106.245 us/op
     p(50.0000) =    114.908 us/op
     p(90.0000) =    224.515 us/op
     p(95.0000) =    226.649 us/op
     p(99.0000) =    226.649 us/op
     p(99.9000) =    226.649 us/op
     p(99.9900) =    226.649 us/op
     p(99.9990) =    226.649 us/op
     p(99.9999) =    226.649 us/op
    p(100.0000) =    226.649 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.625)

# Run progress: 77.27% complete, ETA 00:10:31
# Fork: 1 of 2
# Warmup Iteration   1: 2354.334 us/op
# Warmup Iteration   2: 1541.880 us/op
# Warmup Iteration   3: 1675.211 us/op
# Warmup Iteration   4: 1177.559 us/op
# Warmup Iteration   5: 1235.703 us/op
Iteration   1: 111.565 us/op
Iteration   2: 222.207 us/op
Iteration   3: 108.802 us/op
Iteration   4: 123.153 us/op
Iteration   5: 125.708 us/op

# Run progress: 77.46% complete, ETA 00:10:25
# Fork: 2 of 2
# Warmup Iteration   1: 2404.336 us/op
# Warmup Iteration   2: 1500.160 us/op
# Warmup Iteration   3: 1735.512 us/op
# Warmup Iteration   4: 1254.091 us/op
# Warmup Iteration   5: 1168.018 us/op
Iteration   1: 125.724 us/op
Iteration   2: 107.626 us/op
Iteration   3: 127.149 us/op
Iteration   4: 109.602 us/op
Iteration   5: 109.592 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    127.113 ±(99.9%) 51.965 us/op

  Histogram, us/op:
    [100.000, 112.500) = 5 
    [112.500, 125.000) = 1 
    [125.000, 137.500) = 3 
    [137.500, 150.000) = 0 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 0 
    [175.000, 187.500) = 0 
    [187.500, 200.000) = 0 
    [200.000, 212.500) = 0 
    [212.500, 225.000) = 1 
    [225.000, 237.500) = 0 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    107.626 us/op
     p(50.0000) =    117.359 us/op
     p(90.0000) =    212.701 us/op
     p(95.0000) =    222.207 us/op
     p(99.0000) =    222.207 us/op
     p(99.9000) =    222.207 us/op
     p(99.9900) =    222.207 us/op
     p(99.9990) =    222.207 us/op
     p(99.9999) =    222.207 us/op
    p(100.0000) =    222.207 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.75)

# Run progress: 77.65% complete, ETA 00:10:20
# Fork: 1 of 2
# Warmup Iteration   1: 2686.464 us/op
# Warmup Iteration   2: 1655.255 us/op
# Warmup Iteration   3: 1771.692 us/op
# Warmup Iteration   4: 1224.366 us/op
# Warmup Iteration   5: 1217.736 us/op
Iteration   1: 107.490 us/op
Iteration   2: 111.980 us/op
Iteration   3: 114.372 us/op
Iteration   4: 112.570 us/op
Iteration   5: 115.625 us/op

# Run progress: 77.84% complete, ETA 00:10:15
# Fork: 2 of 2
# Warmup Iteration   1: 3072.773 us/op
# Warmup Iteration   2: 2108.186 us/op
# Warmup Iteration   3: 1485.587 us/op
# Warmup Iteration   4: 1301.262 us/op
# Warmup Iteration   5: 1333.617 us/op
Iteration   1: 116.912 us/op
Iteration   2: 122.557 us/op
Iteration   3: 123.144 us/op
Iteration   4: 117.220 us/op
Iteration   5: 120.970 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    116.284 ±(99.9%) 7.532 us/op

  Histogram, us/op:
    [100.000, 102.500) = 0 
    [102.500, 105.000) = 0 
    [105.000, 107.500) = 1 
    [107.500, 110.000) = 0 
    [110.000, 112.500) = 1 
    [112.500, 115.000) = 2 
    [115.000, 117.500) = 3 
    [117.500, 120.000) = 0 
    [120.000, 122.500) = 1 
    [122.500, 125.000) = 2 
    [125.000, 127.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    107.490 us/op
     p(50.0000) =    116.269 us/op
     p(90.0000) =    123.085 us/op
     p(95.0000) =    123.144 us/op
     p(99.0000) =    123.144 us/op
     p(99.9000) =    123.144 us/op
     p(99.9900) =    123.144 us/op
     p(99.9990) =    123.144 us/op
     p(99.9999) =    123.144 us/op
    p(100.0000) =    123.144 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.875)

# Run progress: 78.03% complete, ETA 00:10:10
# Fork: 1 of 2
# Warmup Iteration   1: 2806.498 us/op
# Warmup Iteration   2: 1652.093 us/op
# Warmup Iteration   3: 1571.153 us/op
# Warmup Iteration   4: 1533.835 us/op
# Warmup Iteration   5: 1271.512 us/op
Iteration   1: 171.569 us/op
Iteration   2: 152.246 us/op
Iteration   3: 115.047 us/op
Iteration   4: 209.492 us/op
Iteration   5: 119.054 us/op

# Run progress: 78.22% complete, ETA 00:10:04
# Fork: 2 of 2
# Warmup Iteration   1: 3344.074 us/op
# Warmup Iteration   2: 1865.578 us/op
# Warmup Iteration   3: 1590.168 us/op
# Warmup Iteration   4: 1333.873 us/op
# Warmup Iteration   5: 1355.233 us/op
Iteration   1: 124.441 us/op
Iteration   2: 119.813 us/op
Iteration   3: 120.814 us/op
Iteration   4: 120.321 us/op
Iteration   5: 125.035 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    137.783 ±(99.9%) 46.780 us/op

  Histogram, us/op:
    [110.000, 120.000) = 3 
    [120.000, 130.000) = 4 
    [130.000, 140.000) = 0 
    [140.000, 150.000) = 0 
    [150.000, 160.000) = 1 
    [160.000, 170.000) = 0 
    [170.000, 180.000) = 1 
    [180.000, 190.000) = 0 
    [190.000, 200.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    115.047 us/op
     p(50.0000) =    122.628 us/op
     p(90.0000) =    205.700 us/op
     p(95.0000) =    209.492 us/op
     p(99.0000) =    209.492 us/op
     p(99.9000) =    209.492 us/op
     p(99.9900) =    209.492 us/op
     p(99.9990) =    209.492 us/op
     p(99.9999) =    209.492 us/op
    p(100.0000) =    209.492 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 1)

# Run progress: 78.41% complete, ETA 00:09:59
# Fork: 1 of 2
# Warmup Iteration   1: 2970.595 us/op
# Warmup Iteration   2: 1774.322 us/op
# Warmup Iteration   3: 1699.262 us/op
# Warmup Iteration   4: 1520.042 us/op
# Warmup Iteration   5: 1333.259 us/op
Iteration   1: 93.501 us/op
Iteration   2: 133.808 us/op
Iteration   3: 115.047 us/op
Iteration   4: 93.326 us/op
Iteration   5: 111.598 us/op

# Run progress: 78.60% complete, ETA 00:09:54
# Fork: 2 of 2
# Warmup Iteration   1: 2971.292 us/op
# Warmup Iteration   2: 2396.016 us/op
# Warmup Iteration   3: 1875.392 us/op
# Warmup Iteration   4: 1530.808 us/op
# Warmup Iteration   5: 1377.621 us/op
Iteration   1: 95.255 us/op
Iteration   2: 94.250 us/op
Iteration   3: 99.760 us/op
Iteration   4: 98.982 us/op
Iteration   5: 96.704 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    103.223 ±(99.9%) 19.868 us/op

  Histogram, us/op:
    [ 90.000,  95.000) = 3 
    [ 95.000, 100.000) = 4 
    [100.000, 105.000) = 0 
    [105.000, 110.000) = 0 
    [110.000, 115.000) = 1 
    [115.000, 120.000) = 1 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     93.326 us/op
     p(50.0000) =     97.843 us/op
     p(90.0000) =    131.932 us/op
     p(95.0000) =    133.808 us/op
     p(99.0000) =    133.808 us/op
     p(99.9000) =    133.808 us/op
     p(99.9900) =    133.808 us/op
     p(99.9990) =    133.808 us/op
     p(99.9999) =    133.808 us/op
    p(100.0000) =    133.808 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.125)

# Run progress: 78.79% complete, ETA 00:09:49
# Fork: 1 of 2
# Warmup Iteration   1: 3344.131 us/op
# Warmup Iteration   2: 2240.998 us/op
# Warmup Iteration   3: 1996.641 us/op
# Warmup Iteration   4: 1756.598 us/op
# Warmup Iteration   5: 1561.922 us/op
Iteration   1: 107.659 us/op
Iteration   2: 153.250 us/op
Iteration   3: 139.842 us/op
Iteration   4: 108.343 us/op
Iteration   5: 110.900 us/op

# Run progress: 78.98% complete, ETA 00:09:43
# Fork: 2 of 2
# Warmup Iteration   1: 3530.002 us/op
# Warmup Iteration   2: 2506.065 us/op
# Warmup Iteration   3: 2024.650 us/op
# Warmup Iteration   4: 1626.282 us/op
# Warmup Iteration   5: 1589.348 us/op
Iteration   1: 111.832 us/op
Iteration   2: 117.148 us/op
Iteration   3: 136.289 us/op
Iteration   4: 171.675 us/op
Iteration   5: 135.108 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    129.205 ±(99.9%) 32.899 us/op

  Histogram, us/op:
    [100.000, 105.000) = 0 
    [105.000, 110.000) = 2 
    [110.000, 115.000) = 2 
    [115.000, 120.000) = 1 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 3 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 1 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 0 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    107.659 us/op
     p(50.0000) =    126.128 us/op
     p(90.0000) =    169.833 us/op
     p(95.0000) =    171.675 us/op
     p(99.0000) =    171.675 us/op
     p(99.9000) =    171.675 us/op
     p(99.9900) =    171.675 us/op
     p(99.9990) =    171.675 us/op
     p(99.9999) =    171.675 us/op
    p(100.0000) =    171.675 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.250)

# Run progress: 79.17% complete, ETA 00:09:38
# Fork: 1 of 2
# Warmup Iteration   1: 3458.958 us/op
# Warmup Iteration   2: 1899.121 us/op
# Warmup Iteration   3: 1740.115 us/op
# Warmup Iteration   4: 1396.228 us/op
# Warmup Iteration   5: 1756.206 us/op
Iteration   1: 109.926 us/op
Iteration   2: 205.556 us/op
Iteration   3: 127.078 us/op
Iteration   4: 116.720 us/op
Iteration   5: 129.365 us/op

# Run progress: 79.36% complete, ETA 00:09:33
# Fork: 2 of 2
# Warmup Iteration   1: 3286.139 us/op
# Warmup Iteration   2: 1697.539 us/op
# Warmup Iteration   3: 1739.454 us/op
# Warmup Iteration   4: 1387.963 us/op
# Warmup Iteration   5: 1367.170 us/op
Iteration   1: 112.064 us/op
Iteration   2: 139.201 us/op
Iteration   3: 108.131 us/op
Iteration   4: 109.108 us/op
Iteration   5: 127.253 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    128.440 ±(99.9%) 43.937 us/op

  Histogram, us/op:
    [100.000, 110.000) = 3 
    [110.000, 120.000) = 2 
    [120.000, 130.000) = 3 
    [130.000, 140.000) = 1 
    [140.000, 150.000) = 0 
    [150.000, 160.000) = 0 
    [160.000, 170.000) = 0 
    [170.000, 180.000) = 0 
    [180.000, 190.000) = 0 
    [190.000, 200.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    108.131 us/op
     p(50.0000) =    121.899 us/op
     p(90.0000) =    198.921 us/op
     p(95.0000) =    205.556 us/op
     p(99.0000) =    205.556 us/op
     p(99.9000) =    205.556 us/op
     p(99.9900) =    205.556 us/op
     p(99.9990) =    205.556 us/op
     p(99.9999) =    205.556 us/op
    p(100.0000) =    205.556 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.375)

# Run progress: 79.55% complete, ETA 00:09:27
# Fork: 1 of 2
# Warmup Iteration   1: 2533.921 us/op
# Warmup Iteration   2: 1496.435 us/op
# Warmup Iteration   3: 1497.546 us/op
# Warmup Iteration   4: 1128.691 us/op
# Warmup Iteration   5: 1108.251 us/op
Iteration   1: 161.477 us/op
Iteration   2: 138.734 us/op
Iteration   3: 106.563 us/op
Iteration   4: 108.479 us/op
Iteration   5: 111.894 us/op

# Run progress: 79.73% complete, ETA 00:09:22
# Fork: 2 of 2
# Warmup Iteration   1: 2645.240 us/op
# Warmup Iteration   2: 1523.762 us/op
# Warmup Iteration   3: 1512.580 us/op
# Warmup Iteration   4: 1127.514 us/op
# Warmup Iteration   5: 1162.557 us/op
Iteration   1: 115.278 us/op
Iteration   2: 124.257 us/op
Iteration   3: 147.144 us/op
Iteration   4: 157.135 us/op
Iteration   5: 130.156 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    130.112 ±(99.9%) 30.601 us/op

  Histogram, us/op:
    [100.000, 105.000) = 0 
    [105.000, 110.000) = 2 
    [110.000, 115.000) = 1 
    [115.000, 120.000) = 1 
    [120.000, 125.000) = 1 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 1 
    [135.000, 140.000) = 1 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 1 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 1 
    [160.000, 165.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    106.563 us/op
     p(50.0000) =    127.207 us/op
     p(90.0000) =    161.043 us/op
     p(95.0000) =    161.477 us/op
     p(99.0000) =    161.477 us/op
     p(99.9000) =    161.477 us/op
     p(99.9900) =    161.477 us/op
     p(99.9990) =    161.477 us/op
     p(99.9999) =    161.477 us/op
    p(100.0000) =    161.477 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.5)

# Run progress: 79.92% complete, ETA 00:09:17
# Fork: 1 of 2
# Warmup Iteration   1: 2640.918 us/op
# Warmup Iteration   2: 1641.415 us/op
# Warmup Iteration   3: 1196.623 us/op
# Warmup Iteration   4: 1170.786 us/op
# Warmup Iteration   5: 1169.357 us/op
Iteration   1: 105.389 us/op
Iteration   2: 112.363 us/op
Iteration   3: 110.177 us/op
Iteration   4: 120.196 us/op
Iteration   5: 107.877 us/op

# Run progress: 80.11% complete, ETA 00:09:12
# Fork: 2 of 2
# Warmup Iteration   1: 2808.165 us/op
# Warmup Iteration   2: 1505.883 us/op
# Warmup Iteration   3: 1644.134 us/op
# Warmup Iteration   4: 1147.657 us/op
# Warmup Iteration   5: 1264.506 us/op
Iteration   1: 111.843 us/op
Iteration   2: 128.583 us/op
Iteration   3: 114.511 us/op
Iteration   4: 112.130 us/op
Iteration   5: 168.094 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    119.116 ±(99.9%) 27.844 us/op

  Histogram, us/op:
    [100.000, 105.000) = 0 
    [105.000, 110.000) = 2 
    [110.000, 115.000) = 5 
    [115.000, 120.000) = 0 
    [120.000, 125.000) = 1 
    [125.000, 130.000) = 1 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    105.389 us/op
     p(50.0000) =    112.247 us/op
     p(90.0000) =    164.143 us/op
     p(95.0000) =    168.094 us/op
     p(99.0000) =    168.094 us/op
     p(99.9000) =    168.094 us/op
     p(99.9900) =    168.094 us/op
     p(99.9990) =    168.094 us/op
     p(99.9999) =    168.094 us/op
    p(100.0000) =    168.094 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.625)

# Run progress: 80.30% complete, ETA 00:09:06
# Fork: 1 of 2
# Warmup Iteration   1: 2280.867 us/op
# Warmup Iteration   2: 1349.790 us/op
# Warmup Iteration   3: 1150.454 us/op
# Warmup Iteration   4: 941.833 us/op
# Warmup Iteration   5: 926.358 us/op
Iteration   1: 111.078 us/op
Iteration   2: 113.637 us/op
Iteration   3: 113.602 us/op
Iteration   4: 112.444 us/op
Iteration   5: 117.264 us/op

# Run progress: 80.49% complete, ETA 00:09:01
# Fork: 2 of 2
# Warmup Iteration   1: 2099.479 us/op
# Warmup Iteration   2: 1475.461 us/op
# Warmup Iteration   3: 918.037 us/op
# Warmup Iteration   4: 883.201 us/op
# Warmup Iteration   5: 925.247 us/op
Iteration   1: 107.942 us/op
Iteration   2: 187.304 us/op
Iteration   3: 123.179 us/op
Iteration   4: 111.447 us/op
Iteration   5: 117.896 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    121.579 ±(99.9%) 35.505 us/op

  Histogram, us/op:
    [100.000, 105.000) = 0 
    [105.000, 110.000) = 1 
    [110.000, 115.000) = 5 
    [115.000, 120.000) = 2 
    [120.000, 125.000) = 1 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 0 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 0 
    [180.000, 185.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    107.942 us/op
     p(50.0000) =    113.620 us/op
     p(90.0000) =    180.892 us/op
     p(95.0000) =    187.304 us/op
     p(99.0000) =    187.304 us/op
     p(99.9000) =    187.304 us/op
     p(99.9900) =    187.304 us/op
     p(99.9990) =    187.304 us/op
     p(99.9999) =    187.304 us/op
    p(100.0000) =    187.304 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.75)

# Run progress: 80.68% complete, ETA 00:08:56
# Fork: 1 of 2
# Warmup Iteration   1: 2150.689 us/op
# Warmup Iteration   2: 1289.998 us/op
# Warmup Iteration   3: 1247.115 us/op
# Warmup Iteration   4: 1247.741 us/op
# Warmup Iteration   5: 947.275 us/op
Iteration   1: 111.252 us/op
Iteration   2: 146.975 us/op
Iteration   3: 135.296 us/op
Iteration   4: 115.716 us/op
Iteration   5: 183.802 us/op

# Run progress: 80.87% complete, ETA 00:08:51
# Fork: 2 of 2
# Warmup Iteration   1: 1980.675 us/op
# Warmup Iteration   2: 1260.078 us/op
# Warmup Iteration   3: 1161.455 us/op
# Warmup Iteration   4: 1162.881 us/op
# Warmup Iteration   5: 910.027 us/op
Iteration   1: 108.765 us/op
Iteration   2: 140.631 us/op
Iteration   3: 113.650 us/op
Iteration   4: 112.814 us/op
Iteration   5: 114.394 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    128.330 ±(99.9%) 36.020 us/op

  Histogram, us/op:
    [100.000, 105.000) = 0 
    [105.000, 110.000) = 1 
    [110.000, 115.000) = 4 
    [115.000, 120.000) = 1 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 1 
    [140.000, 145.000) = 1 
    [145.000, 150.000) = 1 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 0 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 0 
    [180.000, 185.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    108.765 us/op
     p(50.0000) =    115.055 us/op
     p(90.0000) =    180.119 us/op
     p(95.0000) =    183.802 us/op
     p(99.0000) =    183.802 us/op
     p(99.9000) =    183.802 us/op
     p(99.9900) =    183.802 us/op
     p(99.9990) =    183.802 us/op
     p(99.9999) =    183.802 us/op
    p(100.0000) =    183.802 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.875)

# Run progress: 81.06% complete, ETA 00:08:45
# Fork: 1 of 2
# Warmup Iteration   1: 2036.666 us/op
# Warmup Iteration   2: 1563.783 us/op
# Warmup Iteration   3: 1599.243 us/op
# Warmup Iteration   4: 1201.973 us/op
# Warmup Iteration   5: 910.681 us/op
Iteration   1: 104.921 us/op
Iteration   2: 148.742 us/op
Iteration   3: 114.123 us/op
Iteration   4: 110.472 us/op
Iteration   5: 154.679 us/op

# Run progress: 81.25% complete, ETA 00:08:40
# Fork: 2 of 2
# Warmup Iteration   1: 2167.592 us/op
# Warmup Iteration   2: 1448.865 us/op
# Warmup Iteration   3: 952.617 us/op
# Warmup Iteration   4: 905.299 us/op
# Warmup Iteration   5: 910.651 us/op
Iteration   1: 107.339 us/op
Iteration   2: 124.093 us/op
Iteration   3: 110.174 us/op
Iteration   4: 112.380 us/op
Iteration   5: 111.938 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    119.886 ±(99.9%) 26.562 us/op

  Histogram, us/op:
    [100.000, 105.000) = 1 
    [105.000, 110.000) = 1 
    [110.000, 115.000) = 5 
    [115.000, 120.000) = 0 
    [120.000, 125.000) = 1 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 1 
    [150.000, 155.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    104.921 us/op
     p(50.0000) =    112.159 us/op
     p(90.0000) =    154.085 us/op
     p(95.0000) =    154.679 us/op
     p(99.0000) =    154.679 us/op
     p(99.9000) =    154.679 us/op
     p(99.9900) =    154.679 us/op
     p(99.9990) =    154.679 us/op
     p(99.9999) =    154.679 us/op
    p(100.0000) =    154.679 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 1)

# Run progress: 81.44% complete, ETA 00:08:35
# Fork: 1 of 2
# Warmup Iteration   1: 2103.878 us/op
# Warmup Iteration   2: 1285.057 us/op
# Warmup Iteration   3: 1245.516 us/op
# Warmup Iteration   4: 1157.033 us/op
# Warmup Iteration   5: 902.707 us/op
Iteration   1: 105.698 us/op
Iteration   2: 152.308 us/op
Iteration   3: 110.275 us/op
Iteration   4: 110.519 us/op
Iteration   5: 116.254 us/op

# Run progress: 81.63% complete, ETA 00:08:30
# Fork: 2 of 2
# Warmup Iteration   1: 2073.408 us/op
# Warmup Iteration   2: 1381.540 us/op
# Warmup Iteration   3: 1254.432 us/op
# Warmup Iteration   4: 1348.277 us/op
# Warmup Iteration   5: 987.689 us/op
Iteration   1: 113.456 us/op
Iteration   2: 110.161 us/op
Iteration   3: 117.131 us/op
Iteration   4: 116.842 us/op
Iteration   5: 120.922 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    117.357 ±(99.9%) 19.749 us/op

  Histogram, us/op:
    [100.000, 105.000) = 0 
    [105.000, 110.000) = 1 
    [110.000, 115.000) = 4 
    [115.000, 120.000) = 3 
    [120.000, 125.000) = 1 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    105.698 us/op
     p(50.0000) =    114.855 us/op
     p(90.0000) =    149.169 us/op
     p(95.0000) =    152.308 us/op
     p(99.0000) =    152.308 us/op
     p(99.9000) =    152.308 us/op
     p(99.9900) =    152.308 us/op
     p(99.9990) =    152.308 us/op
     p(99.9999) =    152.308 us/op
    p(100.0000) =    152.308 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.125)

# Run progress: 81.82% complete, ETA 00:08:24
# Fork: 1 of 2
# Warmup Iteration   1: 3732.173 us/op
# Warmup Iteration   2: 1927.424 us/op
# Warmup Iteration   3: 1434.197 us/op
# Warmup Iteration   4: 1298.195 us/op
# Warmup Iteration   5: 1290.475 us/op
Iteration   1: 178.553 us/op
Iteration   2: 306.238 us/op
Iteration   3: 189.963 us/op
Iteration   4: 175.344 us/op
Iteration   5: 197.895 us/op

# Run progress: 82.01% complete, ETA 00:08:19
# Fork: 2 of 2
# Warmup Iteration   1: 3397.129 us/op
# Warmup Iteration   2: 1726.923 us/op
# Warmup Iteration   3: 1633.949 us/op
# Warmup Iteration   4: 1361.459 us/op
# Warmup Iteration   5: 1360.980 us/op
Iteration   1: 182.702 us/op
Iteration   2: 192.338 us/op
Iteration   3: 224.844 us/op
Iteration   4: 190.841 us/op
Iteration   5: 178.713 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    201.743 ±(99.9%) 59.503 us/op

  Histogram, us/op:
    [100.000, 125.000) = 0 
    [125.000, 150.000) = 0 
    [150.000, 175.000) = 0 
    [175.000, 200.000) = 8 
    [200.000, 225.000) = 1 
    [225.000, 250.000) = 0 
    [250.000, 275.000) = 0 
    [275.000, 300.000) = 0 
    [300.000, 325.000) = 1 
    [325.000, 350.000) = 0 
    [350.000, 375.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    175.344 us/op
     p(50.0000) =    190.402 us/op
     p(90.0000) =    298.099 us/op
     p(95.0000) =    306.238 us/op
     p(99.0000) =    306.238 us/op
     p(99.9000) =    306.238 us/op
     p(99.9900) =    306.238 us/op
     p(99.9990) =    306.238 us/op
     p(99.9999) =    306.238 us/op
    p(100.0000) =    306.238 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.250)

# Run progress: 82.20% complete, ETA 00:08:14
# Fork: 1 of 2
# Warmup Iteration   1: 2312.662 us/op
# Warmup Iteration   2: 1373.191 us/op
# Warmup Iteration   3: 1187.313 us/op
# Warmup Iteration   4: 1216.814 us/op
# Warmup Iteration   5: 933.746 us/op
Iteration   1: 170.148 us/op
Iteration   2: 398.981 us/op
Iteration   3: 218.553 us/op
Iteration   4: 187.548 us/op
Iteration   5: 216.837 us/op

# Run progress: 82.39% complete, ETA 00:08:09
# Fork: 2 of 2
# Warmup Iteration   1: 2327.197 us/op
# Warmup Iteration   2: 1680.256 us/op
# Warmup Iteration   3: 1184.470 us/op
# Warmup Iteration   4: 987.975 us/op
# Warmup Iteration   5: 974.871 us/op
Iteration   1: 220.992 us/op
Iteration   2: 177.982 us/op
Iteration   3: 194.623 us/op
Iteration   4: 180.970 us/op
Iteration   5: 184.638 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    215.127 ±(99.9%) 101.458 us/op

  Histogram, us/op:
    [100.000, 125.000) = 0 
    [125.000, 150.000) = 0 
    [150.000, 175.000) = 1 
    [175.000, 200.000) = 5 
    [200.000, 225.000) = 3 
    [225.000, 250.000) = 0 
    [250.000, 275.000) = 0 
    [275.000, 300.000) = 0 
    [300.000, 325.000) = 0 
    [325.000, 350.000) = 0 
    [350.000, 375.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    170.148 us/op
     p(50.0000) =    191.086 us/op
     p(90.0000) =    381.182 us/op
     p(95.0000) =    398.981 us/op
     p(99.0000) =    398.981 us/op
     p(99.9000) =    398.981 us/op
     p(99.9900) =    398.981 us/op
     p(99.9990) =    398.981 us/op
     p(99.9999) =    398.981 us/op
    p(100.0000) =    398.981 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.375)

# Run progress: 82.58% complete, ETA 00:08:03
# Fork: 1 of 2
# Warmup Iteration   1: 1952.227 us/op
# Warmup Iteration   2: 1311.939 us/op
# Warmup Iteration   3: 1167.834 us/op
# Warmup Iteration   4: 1280.788 us/op
# Warmup Iteration   5: 956.116 us/op
Iteration   1: 190.729 us/op
Iteration   2: 239.733 us/op
Iteration   3: 191.542 us/op
Iteration   4: 178.023 us/op
Iteration   5: 183.289 us/op

# Run progress: 82.77% complete, ETA 00:07:58
# Fork: 2 of 2
# Warmup Iteration   1: 2217.209 us/op
# Warmup Iteration   2: 1560.422 us/op
# Warmup Iteration   3: 1255.035 us/op
# Warmup Iteration   4: 1196.511 us/op
# Warmup Iteration   5: 974.939 us/op
Iteration   1: 178.447 us/op
Iteration   2: 243.265 us/op
Iteration   3: 180.876 us/op
Iteration   4: 180.288 us/op
Iteration   5: 186.184 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    195.238 ±(99.9%) 37.554 us/op

  Histogram, us/op:
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 2 
    [180.000, 185.000) = 3 
    [185.000, 190.000) = 1 
    [190.000, 195.000) = 2 
    [195.000, 200.000) = 0 
    [200.000, 205.000) = 0 
    [205.000, 210.000) = 0 
    [210.000, 215.000) = 0 
    [215.000, 220.000) = 0 
    [220.000, 225.000) = 0 
    [225.000, 230.000) = 0 
    [230.000, 235.000) = 0 
    [235.000, 240.000) = 1 
    [240.000, 245.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    178.023 us/op
     p(50.0000) =    184.736 us/op
     p(90.0000) =    242.912 us/op
     p(95.0000) =    243.265 us/op
     p(99.0000) =    243.265 us/op
     p(99.9000) =    243.265 us/op
     p(99.9900) =    243.265 us/op
     p(99.9990) =    243.265 us/op
     p(99.9999) =    243.265 us/op
    p(100.0000) =    243.265 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.5)

# Run progress: 82.95% complete, ETA 00:07:53
# Fork: 1 of 2
# Warmup Iteration   1: 2114.983 us/op
# Warmup Iteration   2: 1567.927 us/op
# Warmup Iteration   3: 947.478 us/op
# Warmup Iteration   4: 946.102 us/op
# Warmup Iteration   5: 915.383 us/op
Iteration   1: 217.267 us/op
Iteration   2: 229.323 us/op
Iteration   3: 195.710 us/op
Iteration   4: 181.287 us/op
Iteration   5: 188.366 us/op

# Run progress: 83.14% complete, ETA 00:07:48
# Fork: 2 of 2
# Warmup Iteration   1: 2132.456 us/op
# Warmup Iteration   2: 1361.610 us/op
# Warmup Iteration   3: 1421.788 us/op
# Warmup Iteration   4: 974.685 us/op
# Warmup Iteration   5: 1042.400 us/op
Iteration   1: 283.478 us/op
Iteration   2: 197.336 us/op
Iteration   3: 181.738 us/op
Iteration   4: 180.925 us/op
Iteration   5: 184.076 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    203.951 ±(99.9%) 48.944 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 0 
    [125.000, 137.500) = 0 
    [137.500, 150.000) = 0 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 0 
    [175.000, 187.500) = 4 
    [187.500, 200.000) = 3 
    [200.000, 212.500) = 0 
    [212.500, 225.000) = 1 
    [225.000, 237.500) = 1 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 1 

  Percentiles, us/op:
      p(0.0000) =    180.925 us/op
     p(50.0000) =    192.038 us/op
     p(90.0000) =    278.063 us/op
     p(95.0000) =    283.478 us/op
     p(99.0000) =    283.478 us/op
     p(99.9000) =    283.478 us/op
     p(99.9900) =    283.478 us/op
     p(99.9990) =    283.478 us/op
     p(99.9999) =    283.478 us/op
    p(100.0000) =    283.478 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.625)

# Run progress: 83.33% complete, ETA 00:07:42
# Fork: 1 of 2
# Warmup Iteration   1: 2010.741 us/op
# Warmup Iteration   2: 1432.698 us/op
# Warmup Iteration   3: 1307.455 us/op
# Warmup Iteration   4: 962.482 us/op
# Warmup Iteration   5: 956.301 us/op
Iteration   1: 261.268 us/op
Iteration   2: 233.248 us/op
Iteration   3: 184.493 us/op
Iteration   4: 177.738 us/op
Iteration   5: 210.231 us/op

# Run progress: 83.52% complete, ETA 00:07:37
# Fork: 2 of 2
# Warmup Iteration   1: 2019.768 us/op
# Warmup Iteration   2: 1472.515 us/op
# Warmup Iteration   3: 1456.184 us/op
# Warmup Iteration   4: 1605.945 us/op
# Warmup Iteration   5: 976.076 us/op
Iteration   1: 192.748 us/op
Iteration   2: 207.223 us/op
Iteration   3: 189.414 us/op
Iteration   4: 180.924 us/op
Iteration   5: 187.451 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    202.474 ±(99.9%) 40.243 us/op

  Histogram, us/op:
    [170.000, 180.000) = 1 
    [180.000, 190.000) = 4 
    [190.000, 200.000) = 1 
    [200.000, 210.000) = 1 
    [210.000, 220.000) = 1 
    [220.000, 230.000) = 0 
    [230.000, 240.000) = 1 
    [240.000, 250.000) = 0 
    [250.000, 260.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    177.738 us/op
     p(50.0000) =    191.081 us/op
     p(90.0000) =    258.466 us/op
     p(95.0000) =    261.268 us/op
     p(99.0000) =    261.268 us/op
     p(99.9000) =    261.268 us/op
     p(99.9900) =    261.268 us/op
     p(99.9990) =    261.268 us/op
     p(99.9999) =    261.268 us/op
    p(100.0000) =    261.268 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.75)

# Run progress: 83.71% complete, ETA 00:07:32
# Fork: 1 of 2
# Warmup Iteration   1: 2031.752 us/op
# Warmup Iteration   2: 1326.030 us/op
# Warmup Iteration   3: 1203.298 us/op
# Warmup Iteration   4: 957.107 us/op
# Warmup Iteration   5: 974.120 us/op
Iteration   1: 183.511 us/op
Iteration   2: 223.078 us/op
Iteration   3: 186.064 us/op
Iteration   4: 180.135 us/op
Iteration   5: 210.302 us/op

# Run progress: 83.90% complete, ETA 00:07:26
# Fork: 2 of 2
# Warmup Iteration   1: 2126.400 us/op
# Warmup Iteration   2: 1467.709 us/op
# Warmup Iteration   3: 1364.256 us/op
# Warmup Iteration   4: 1135.092 us/op
# Warmup Iteration   5: 932.306 us/op
Iteration   1: 174.981 us/op
Iteration   2: 236.560 us/op
Iteration   3: 180.516 us/op
Iteration   4: 180.540 us/op
Iteration   5: 187.770 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    194.346 ±(99.9%) 32.072 us/op

  Histogram, us/op:
    [170.000, 175.000) = 1 
    [175.000, 180.000) = 0 
    [180.000, 185.000) = 4 
    [185.000, 190.000) = 2 
    [190.000, 195.000) = 0 
    [195.000, 200.000) = 0 
    [200.000, 205.000) = 0 
    [205.000, 210.000) = 0 
    [210.000, 215.000) = 1 
    [215.000, 220.000) = 0 
    [220.000, 225.000) = 1 
    [225.000, 230.000) = 0 
    [230.000, 235.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    174.981 us/op
     p(50.0000) =    184.788 us/op
     p(90.0000) =    235.212 us/op
     p(95.0000) =    236.560 us/op
     p(99.0000) =    236.560 us/op
     p(99.9000) =    236.560 us/op
     p(99.9900) =    236.560 us/op
     p(99.9990) =    236.560 us/op
     p(99.9999) =    236.560 us/op
    p(100.0000) =    236.560 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.875)

# Run progress: 84.09% complete, ETA 00:07:21
# Fork: 1 of 2
# Warmup Iteration   1: 2039.377 us/op
# Warmup Iteration   2: 1279.318 us/op
# Warmup Iteration   3: 1153.088 us/op
# Warmup Iteration   4: 1206.991 us/op
# Warmup Iteration   5: 942.997 us/op
Iteration   1: 176.054 us/op
Iteration   2: 222.531 us/op
Iteration   3: 188.157 us/op
Iteration   4: 190.665 us/op
Iteration   5: 182.720 us/op

# Run progress: 84.28% complete, ETA 00:07:16
# Fork: 2 of 2
# Warmup Iteration   1: 2251.855 us/op
# Warmup Iteration   2: 1278.273 us/op
# Warmup Iteration   3: 1149.524 us/op
# Warmup Iteration   4: 1202.032 us/op
# Warmup Iteration   5: 962.728 us/op
Iteration   1: 177.923 us/op
Iteration   2: 219.688 us/op
Iteration   3: 185.215 us/op
Iteration   4: 180.128 us/op
Iteration   5: 200.070 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    192.315 ±(99.9%) 25.223 us/op

  Histogram, us/op:
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 2 
    [180.000, 185.000) = 2 
    [185.000, 190.000) = 2 
    [190.000, 195.000) = 1 
    [195.000, 200.000) = 0 
    [200.000, 205.000) = 1 
    [205.000, 210.000) = 0 
    [210.000, 215.000) = 0 
    [215.000, 220.000) = 1 
    [220.000, 225.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    176.054 us/op
     p(50.0000) =    186.686 us/op
     p(90.0000) =    222.247 us/op
     p(95.0000) =    222.531 us/op
     p(99.0000) =    222.531 us/op
     p(99.9000) =    222.531 us/op
     p(99.9900) =    222.531 us/op
     p(99.9990) =    222.531 us/op
     p(99.9999) =    222.531 us/op
    p(100.0000) =    222.531 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 1)

# Run progress: 84.47% complete, ETA 00:07:11
# Fork: 1 of 2
# Warmup Iteration   1: 2099.681 us/op
# Warmup Iteration   2: 1319.616 us/op
# Warmup Iteration   3: 1162.440 us/op
# Warmup Iteration   4: 1209.121 us/op
# Warmup Iteration   5: 987.504 us/op
Iteration   1: 178.765 us/op
Iteration   2: 178.166 us/op
Iteration   3: 182.005 us/op
Iteration   4: 180.408 us/op
Iteration   5: 219.907 us/op

# Run progress: 84.66% complete, ETA 00:07:05
# Fork: 2 of 2
# Warmup Iteration   1: 2031.262 us/op
# Warmup Iteration   2: 1304.520 us/op
# Warmup Iteration   3: 1206.853 us/op
# Warmup Iteration   4: 951.899 us/op
# Warmup Iteration   5: 941.079 us/op
Iteration   1: 180.628 us/op
Iteration   2: 233.393 us/op
Iteration   3: 183.914 us/op
Iteration   4: 217.595 us/op
Iteration   5: 178.009 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    193.279 ±(99.9%) 32.356 us/op

  Histogram, us/op:
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 3 
    [180.000, 185.000) = 4 
    [185.000, 190.000) = 0 
    [190.000, 195.000) = 0 
    [195.000, 200.000) = 0 
    [200.000, 205.000) = 0 
    [205.000, 210.000) = 0 
    [210.000, 215.000) = 0 
    [215.000, 220.000) = 2 
    [220.000, 225.000) = 0 
    [225.000, 230.000) = 0 
    [230.000, 235.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    178.009 us/op
     p(50.0000) =    181.317 us/op
     p(90.0000) =    232.044 us/op
     p(95.0000) =    233.393 us/op
     p(99.0000) =    233.393 us/op
     p(99.9000) =    233.393 us/op
     p(99.9900) =    233.393 us/op
     p(99.9990) =    233.393 us/op
     p(99.9999) =    233.393 us/op
    p(100.0000) =    233.393 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.125)

# Run progress: 84.85% complete, ETA 00:07:00
# Fork: 1 of 2
# Warmup Iteration   1: 2133.901 us/op
# Warmup Iteration   2: 1360.302 us/op
# Warmup Iteration   3: 1807.518 us/op
# Warmup Iteration   4: 1072.673 us/op
# Warmup Iteration   5: 1065.370 us/op
Iteration   1: 264.629 us/op
Iteration   2: 271.759 us/op
Iteration   3: 276.659 us/op
Iteration   4: 267.309 us/op
Iteration   5: 275.555 us/op

# Run progress: 85.04% complete, ETA 00:06:55
# Fork: 2 of 2
# Warmup Iteration   1: 2154.309 us/op
# Warmup Iteration   2: 1411.415 us/op
# Warmup Iteration   3: 1200.081 us/op
# Warmup Iteration   4: 1262.017 us/op
# Warmup Iteration   5: 1116.243 us/op
Iteration   1: 262.501 us/op
Iteration   2: 310.503 us/op
Iteration   3: 272.719 us/op
Iteration   4: 314.080 us/op
Iteration   5: 282.950 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    279.866 ±(99.9%) 27.398 us/op

  Histogram, us/op:
    [260.000, 265.000) = 2 
    [265.000, 270.000) = 1 
    [270.000, 275.000) = 2 
    [275.000, 280.000) = 2 
    [280.000, 285.000) = 1 
    [285.000, 290.000) = 0 
    [290.000, 295.000) = 0 
    [295.000, 300.000) = 0 
    [300.000, 305.000) = 0 
    [305.000, 310.000) = 0 
    [310.000, 315.000) = 2 

  Percentiles, us/op:
      p(0.0000) =    262.501 us/op
     p(50.0000) =    274.137 us/op
     p(90.0000) =    313.722 us/op
     p(95.0000) =    314.080 us/op
     p(99.0000) =    314.080 us/op
     p(99.9000) =    314.080 us/op
     p(99.9900) =    314.080 us/op
     p(99.9990) =    314.080 us/op
     p(99.9999) =    314.080 us/op
    p(100.0000) =    314.080 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.250)

# Run progress: 85.23% complete, ETA 00:06:50
# Fork: 1 of 2
# Warmup Iteration   1: 2465.108 us/op
# Warmup Iteration   2: 1723.231 us/op
# Warmup Iteration   3: 1283.809 us/op
# Warmup Iteration   4: 1296.144 us/op
# Warmup Iteration   5: 1062.746 us/op
Iteration   1: 378.921 us/op
Iteration   2: 314.677 us/op
Iteration   3: 274.265 us/op
Iteration   4: 346.012 us/op
Iteration   5: 287.668 us/op

# Run progress: 85.42% complete, ETA 00:06:44
# Fork: 2 of 2
# Warmup Iteration   1: 2236.016 us/op
# Warmup Iteration   2: 1434.822 us/op
# Warmup Iteration   3: 1429.601 us/op
# Warmup Iteration   4: 1106.031 us/op
# Warmup Iteration   5: 1029.629 us/op
Iteration   1: 264.828 us/op
Iteration   2: 350.199 us/op
Iteration   3: 432.316 us/op
Iteration   4: 455.916 us/op
Iteration   5: 367.289 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    347.209 ±(99.9%) 97.186 us/op

  Histogram, us/op:
    [200.000, 225.000) = 0 
    [225.000, 250.000) = 0 
    [250.000, 275.000) = 2 
    [275.000, 300.000) = 1 
    [300.000, 325.000) = 1 
    [325.000, 350.000) = 1 
    [350.000, 375.000) = 2 
    [375.000, 400.000) = 1 
    [400.000, 425.000) = 0 
    [425.000, 450.000) = 1 
    [450.000, 475.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    264.828 us/op
     p(50.0000) =    348.106 us/op
     p(90.0000) =    453.556 us/op
     p(95.0000) =    455.916 us/op
     p(99.0000) =    455.916 us/op
     p(99.9000) =    455.916 us/op
     p(99.9900) =    455.916 us/op
     p(99.9990) =    455.916 us/op
     p(99.9999) =    455.916 us/op
    p(100.0000) =    455.916 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.375)

# Run progress: 85.61% complete, ETA 00:06:39
# Fork: 1 of 2
# Warmup Iteration   1: 2508.189 us/op
# Warmup Iteration   2: 1506.529 us/op
# Warmup Iteration   3: 1315.150 us/op
# Warmup Iteration   4: 1081.886 us/op
# Warmup Iteration   5: 1080.777 us/op
Iteration   1: 276.314 us/op
Iteration   2: 388.074 us/op
Iteration   3: 427.365 us/op
Iteration   4: 488.883 us/op
Iteration   5: 287.353 us/op

# Run progress: 85.80% complete, ETA 00:06:34
# Fork: 2 of 2
# Warmup Iteration   1: 2154.142 us/op
# Warmup Iteration   2: 1395.452 us/op
# Warmup Iteration   3: 1460.534 us/op
# Warmup Iteration   4: 1119.370 us/op
# Warmup Iteration   5: 1071.162 us/op
Iteration   1: 267.470 us/op
Iteration   2: 264.644 us/op
Iteration   3: 273.229 us/op
Iteration   4: 284.029 us/op
Iteration   5: 282.205 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    323.957 ±(99.9%) 121.613 us/op

  Histogram, us/op:
    [200.000, 225.000) = 0 
    [225.000, 250.000) = 0 
    [250.000, 275.000) = 3 
    [275.000, 300.000) = 4 
    [300.000, 325.000) = 0 
    [325.000, 350.000) = 0 
    [350.000, 375.000) = 0 
    [375.000, 400.000) = 1 
    [400.000, 425.000) = 0 
    [425.000, 450.000) = 1 
    [450.000, 475.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    264.644 us/op
     p(50.0000) =    283.117 us/op
     p(90.0000) =    482.731 us/op
     p(95.0000) =    488.883 us/op
     p(99.0000) =    488.883 us/op
     p(99.9000) =    488.883 us/op
     p(99.9900) =    488.883 us/op
     p(99.9990) =    488.883 us/op
     p(99.9999) =    488.883 us/op
    p(100.0000) =    488.883 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.5)

# Run progress: 85.98% complete, ETA 00:06:29
# Fork: 1 of 2
# Warmup Iteration   1: 2324.143 us/op
# Warmup Iteration   2: 1398.525 us/op
# Warmup Iteration   3: 1268.806 us/op
# Warmup Iteration   4: 1454.183 us/op
# Warmup Iteration   5: 1053.552 us/op
Iteration   1: 261.616 us/op
Iteration   2: 308.758 us/op
Iteration   3: 263.721 us/op
Iteration   4: 317.449 us/op
Iteration   5: 273.747 us/op

# Run progress: 86.17% complete, ETA 00:06:23
# Fork: 2 of 2
# Warmup Iteration   1: 2095.731 us/op
# Warmup Iteration   2: 1424.768 us/op
# Warmup Iteration   3: 1263.626 us/op
# Warmup Iteration   4: 1282.504 us/op
# Warmup Iteration   5: 1084.349 us/op
Iteration   1: 274.281 us/op
Iteration   2: 312.530 us/op
Iteration   3: 271.682 us/op
Iteration   4: 266.965 us/op
Iteration   5: 269.315 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    282.006 ±(99.9%) 32.952 us/op

  Histogram, us/op:
    [260.000, 265.000) = 2 
    [265.000, 270.000) = 2 
    [270.000, 275.000) = 3 
    [275.000, 280.000) = 0 
    [280.000, 285.000) = 0 
    [285.000, 290.000) = 0 
    [290.000, 295.000) = 0 
    [295.000, 300.000) = 0 
    [300.000, 305.000) = 0 
    [305.000, 310.000) = 1 
    [310.000, 315.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    261.616 us/op
     p(50.0000) =    272.715 us/op
     p(90.0000) =    316.957 us/op
     p(95.0000) =    317.449 us/op
     p(99.0000) =    317.449 us/op
     p(99.9000) =    317.449 us/op
     p(99.9900) =    317.449 us/op
     p(99.9990) =    317.449 us/op
     p(99.9999) =    317.449 us/op
    p(100.0000) =    317.449 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.625)

# Run progress: 86.36% complete, ETA 00:06:18
# Fork: 1 of 2
# Warmup Iteration   1: 2093.888 us/op
# Warmup Iteration   2: 1369.319 us/op
# Warmup Iteration   3: 1480.499 us/op
# Warmup Iteration   4: 1045.135 us/op
# Warmup Iteration   5: 1068.113 us/op
Iteration   1: 297.035 us/op
Iteration   2: 306.450 us/op
Iteration   3: 264.621 us/op
Iteration   4: 268.488 us/op
Iteration   5: 288.029 us/op

# Run progress: 86.55% complete, ETA 00:06:13
# Fork: 2 of 2
# Warmup Iteration   1: 2296.644 us/op
# Warmup Iteration   2: 1435.670 us/op
# Warmup Iteration   3: 1268.235 us/op
# Warmup Iteration   4: 1269.603 us/op
# Warmup Iteration   5: 1074.792 us/op
Iteration   1: 278.009 us/op
Iteration   2: 271.559 us/op
Iteration   3: 281.628 us/op
Iteration   4: 331.307 us/op
Iteration   5: 271.198 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    285.832 ±(99.9%) 31.354 us/op

  Histogram, us/op:
    [260.000, 265.000) = 1 
    [265.000, 270.000) = 1 
    [270.000, 275.000) = 2 
    [275.000, 280.000) = 1 
    [280.000, 285.000) = 1 
    [285.000, 290.000) = 1 
    [290.000, 295.000) = 0 
    [295.000, 300.000) = 1 
    [300.000, 305.000) = 0 
    [305.000, 310.000) = 1 
    [310.000, 315.000) = 0 
    [315.000, 320.000) = 0 
    [320.000, 325.000) = 0 
    [325.000, 330.000) = 0 
    [330.000, 335.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    264.621 us/op
     p(50.0000) =    279.819 us/op
     p(90.0000) =    328.821 us/op
     p(95.0000) =    331.307 us/op
     p(99.0000) =    331.307 us/op
     p(99.9000) =    331.307 us/op
     p(99.9900) =    331.307 us/op
     p(99.9990) =    331.307 us/op
     p(99.9999) =    331.307 us/op
    p(100.0000) =    331.307 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.75)

# Run progress: 86.74% complete, ETA 00:06:08
# Fork: 1 of 2
# Warmup Iteration   1: 2211.677 us/op
# Warmup Iteration   2: 1391.051 us/op
# Warmup Iteration   3: 1482.006 us/op
# Warmup Iteration   4: 1028.614 us/op
# Warmup Iteration   5: 1033.845 us/op
Iteration   1: 254.407 us/op
Iteration   2: 303.469 us/op
Iteration   3: 262.995 us/op
Iteration   4: 274.363 us/op
Iteration   5: 268.247 us/op

# Run progress: 86.93% complete, ETA 00:06:02
# Fork: 2 of 2
# Warmup Iteration   1: 2220.135 us/op
# Warmup Iteration   2: 1384.152 us/op
# Warmup Iteration   3: 1349.907 us/op
# Warmup Iteration   4: 1059.639 us/op
# Warmup Iteration   5: 1083.076 us/op
Iteration   1: 265.314 us/op
Iteration   2: 292.082 us/op
Iteration   3: 273.383 us/op
Iteration   4: 327.913 us/op
Iteration   5: 278.080 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    280.025 ±(99.9%) 33.313 us/op

  Histogram, us/op:
    [250.000, 255.000) = 1 
    [255.000, 260.000) = 0 
    [260.000, 265.000) = 1 
    [265.000, 270.000) = 2 
    [270.000, 275.000) = 2 
    [275.000, 280.000) = 1 
    [280.000, 285.000) = 0 
    [285.000, 290.000) = 0 
    [290.000, 295.000) = 1 
    [295.000, 300.000) = 0 
    [300.000, 305.000) = 1 
    [305.000, 310.000) = 0 
    [310.000, 315.000) = 0 
    [315.000, 320.000) = 0 
    [320.000, 325.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    254.407 us/op
     p(50.0000) =    273.873 us/op
     p(90.0000) =    325.469 us/op
     p(95.0000) =    327.913 us/op
     p(99.0000) =    327.913 us/op
     p(99.9000) =    327.913 us/op
     p(99.9900) =    327.913 us/op
     p(99.9990) =    327.913 us/op
     p(99.9999) =    327.913 us/op
    p(100.0000) =    327.913 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.875)

# Run progress: 87.12% complete, ETA 00:05:57
# Fork: 1 of 2
# Warmup Iteration   1: 2364.425 us/op
# Warmup Iteration   2: 1505.205 us/op
# Warmup Iteration   3: 1206.918 us/op
# Warmup Iteration   4: 1318.236 us/op
# Warmup Iteration   5: 1053.154 us/op
Iteration   1: 257.713 us/op
Iteration   2: 332.272 us/op
Iteration   3: 270.676 us/op
Iteration   4: 260.977 us/op
Iteration   5: 267.213 us/op

# Run progress: 87.31% complete, ETA 00:05:52
# Fork: 2 of 2
# Warmup Iteration   1: 2093.391 us/op
# Warmup Iteration   2: 1398.145 us/op
# Warmup Iteration   3: 1229.803 us/op
# Warmup Iteration   4: 1296.570 us/op
# Warmup Iteration   5: 1179.008 us/op
Iteration   1: 257.593 us/op
Iteration   2: 329.794 us/op
Iteration   3: 277.043 us/op
Iteration   4: 278.676 us/op
Iteration   5: 273.222 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    280.518 ±(99.9%) 41.791 us/op

  Histogram, us/op:
    [250.000, 255.000) = 0 
    [255.000, 260.000) = 2 
    [260.000, 265.000) = 1 
    [265.000, 270.000) = 1 
    [270.000, 275.000) = 2 
    [275.000, 280.000) = 2 
    [280.000, 285.000) = 0 
    [285.000, 290.000) = 0 
    [290.000, 295.000) = 0 
    [295.000, 300.000) = 0 
    [300.000, 305.000) = 0 
    [305.000, 310.000) = 0 
    [310.000, 315.000) = 0 
    [315.000, 320.000) = 0 
    [320.000, 325.000) = 0 
    [325.000, 330.000) = 1 
    [330.000, 335.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    257.593 us/op
     p(50.0000) =    271.949 us/op
     p(90.0000) =    332.024 us/op
     p(95.0000) =    332.272 us/op
     p(99.0000) =    332.272 us/op
     p(99.9000) =    332.272 us/op
     p(99.9900) =    332.272 us/op
     p(99.9990) =    332.272 us/op
     p(99.9999) =    332.272 us/op
    p(100.0000) =    332.272 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 1)

# Run progress: 87.50% complete, ETA 00:05:47
# Fork: 1 of 2
# Warmup Iteration   1: 2129.833 us/op
# Warmup Iteration   2: 1338.574 us/op
# Warmup Iteration   3: 1325.052 us/op
# Warmup Iteration   4: 1067.381 us/op
# Warmup Iteration   5: 1069.331 us/op
Iteration   1: 272.407 us/op
Iteration   2: 308.610 us/op
Iteration   3: 275.085 us/op
Iteration   4: 269.239 us/op
Iteration   5: 290.679 us/op

# Run progress: 87.69% complete, ETA 00:05:41
# Fork: 2 of 2
# Warmup Iteration   1: 2280.909 us/op
# Warmup Iteration   2: 1372.960 us/op
# Warmup Iteration   3: 1275.162 us/op
# Warmup Iteration   4: 1105.301 us/op
# Warmup Iteration   5: 1077.785 us/op
Iteration   1: 265.237 us/op
Iteration   2: 315.518 us/op
Iteration   3: 275.844 us/op
Iteration   4: 270.079 us/op
Iteration   5: 358.521 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    290.122 ±(99.9%) 44.697 us/op

  Histogram, us/op:
    [260.000, 270.000) = 2 
    [270.000, 280.000) = 4 
    [280.000, 290.000) = 0 
    [290.000, 300.000) = 1 
    [300.000, 310.000) = 1 
    [310.000, 320.000) = 1 
    [320.000, 330.000) = 0 
    [330.000, 340.000) = 0 
    [340.000, 350.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    265.237 us/op
     p(50.0000) =    275.465 us/op
     p(90.0000) =    354.221 us/op
     p(95.0000) =    358.521 us/op
     p(99.0000) =    358.521 us/op
     p(99.9000) =    358.521 us/op
     p(99.9900) =    358.521 us/op
     p(99.9990) =    358.521 us/op
     p(99.9999) =    358.521 us/op
    p(100.0000) =    358.521 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.125)

# Run progress: 87.88% complete, ETA 00:05:36
# Fork: 1 of 2
# Warmup Iteration   1: 2753.323 us/op
# Warmup Iteration   2: 2026.463 us/op
# Warmup Iteration   3: 2570.164 us/op
# Warmup Iteration   4: 1662.052 us/op
# Warmup Iteration   5: 1721.360 us/op
Iteration   1: 818.041 us/op
Iteration   2: 803.185 us/op
Iteration   3: 799.181 us/op
Iteration   4: 800.280 us/op
Iteration   5: 821.176 us/op

# Run progress: 88.07% complete, ETA 00:05:31
# Fork: 2 of 2
# Warmup Iteration   1: 2967.050 us/op
# Warmup Iteration   2: 1998.471 us/op
# Warmup Iteration   3: 2461.355 us/op
# Warmup Iteration   4: 1672.156 us/op
# Warmup Iteration   5: 2660.322 us/op
Iteration   1: 806.815 us/op
Iteration   2: 834.142 us/op
Iteration   3: 824.596 us/op
Iteration   4: 791.434 us/op
Iteration   5: 910.024 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    820.887 ±(99.9%) 51.437 us/op

  Histogram, us/op:
    [ 700.000,  725.000) = 0 
    [ 725.000,  750.000) = 0 
    [ 750.000,  775.000) = 0 
    [ 775.000,  800.000) = 2 
    [ 800.000,  825.000) = 6 
    [ 825.000,  850.000) = 1 
    [ 850.000,  875.000) = 0 
    [ 875.000,  900.000) = 0 
    [ 900.000,  925.000) = 1 
    [ 925.000,  950.000) = 0 
    [ 950.000,  975.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    791.434 us/op
     p(50.0000) =    812.428 us/op
     p(90.0000) =    902.436 us/op
     p(95.0000) =    910.024 us/op
     p(99.0000) =    910.024 us/op
     p(99.9000) =    910.024 us/op
     p(99.9900) =    910.024 us/op
     p(99.9990) =    910.024 us/op
     p(99.9999) =    910.024 us/op
    p(100.0000) =    910.024 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.250)

# Run progress: 88.26% complete, ETA 00:05:26
# Fork: 1 of 2
# Warmup Iteration   1: 2870.248 us/op
# Warmup Iteration   2: 2017.263 us/op
# Warmup Iteration   3: 2460.681 us/op
# Warmup Iteration   4: 1686.602 us/op
# Warmup Iteration   5: 1794.487 us/op
Iteration   1: 823.743 us/op
Iteration   2: 853.325 us/op
Iteration   3: 822.910 us/op
Iteration   4: 871.622 us/op
Iteration   5: 835.848 us/op

# Run progress: 88.45% complete, ETA 00:05:20
# Fork: 2 of 2
# Warmup Iteration   1: 2722.673 us/op
# Warmup Iteration   2: 2064.547 us/op
# Warmup Iteration   3: 2406.595 us/op
# Warmup Iteration   4: 1681.247 us/op
# Warmup Iteration   5: 1891.382 us/op
Iteration   1: 822.867 us/op
Iteration   2: 905.686 us/op
Iteration   3: 860.364 us/op
Iteration   4: 881.808 us/op
Iteration   5: 805.202 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    848.338 ±(99.9%) 47.909 us/op

  Histogram, us/op:
    [ 800.000,  812.500) = 1 
    [ 812.500,  825.000) = 3 
    [ 825.000,  837.500) = 1 
    [ 837.500,  850.000) = 0 
    [ 850.000,  862.500) = 2 
    [ 862.500,  875.000) = 1 
    [ 875.000,  887.500) = 1 
    [ 887.500,  900.000) = 0 
    [ 900.000,  912.500) = 1 
    [ 912.500,  925.000) = 0 
    [ 925.000,  937.500) = 0 
    [ 937.500,  950.000) = 0 
    [ 950.000,  962.500) = 0 
    [ 962.500,  975.000) = 0 
    [ 975.000,  987.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    805.202 us/op
     p(50.0000) =    844.587 us/op
     p(90.0000) =    903.298 us/op
     p(95.0000) =    905.686 us/op
     p(99.0000) =    905.686 us/op
     p(99.9000) =    905.686 us/op
     p(99.9900) =    905.686 us/op
     p(99.9990) =    905.686 us/op
     p(99.9999) =    905.686 us/op
    p(100.0000) =    905.686 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.375)

# Run progress: 88.64% complete, ETA 00:05:15
# Fork: 1 of 2
# Warmup Iteration   1: 3203.739 us/op
# Warmup Iteration   2: 2033.523 us/op
# Warmup Iteration   3: 2480.460 us/op
# Warmup Iteration   4: 1718.814 us/op
# Warmup Iteration   5: 1852.437 us/op
Iteration   1: 788.016 us/op
Iteration   2: 1256.366 us/op
Iteration   3: 877.537 us/op
Iteration   4: 816.780 us/op
Iteration   5: 809.925 us/op

# Run progress: 88.83% complete, ETA 00:05:10
# Fork: 2 of 2
# Warmup Iteration   1: 2754.714 us/op
# Warmup Iteration   2: 2192.803 us/op
# Warmup Iteration   3: 2455.205 us/op
# Warmup Iteration   4: 1768.891 us/op
# Warmup Iteration   5: 1736.103 us/op
Iteration   1: 793.491 us/op
Iteration   2: 881.978 us/op
Iteration   3: 799.955 us/op
Iteration   4: 791.336 us/op
Iteration   5: 793.751 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    860.914 ±(99.9%) 216.511 us/op

  Histogram, us/op:
    [ 700.000,  750.000) = 0 
    [ 750.000,  800.000) = 5 
    [ 800.000,  850.000) = 2 
    [ 850.000,  900.000) = 2 
    [ 900.000,  950.000) = 0 
    [ 950.000, 1000.000) = 0 
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 0 
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 0 
    [1200.000, 1250.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    788.016 us/op
     p(50.0000) =    804.940 us/op
     p(90.0000) =   1218.927 us/op
     p(95.0000) =   1256.366 us/op
     p(99.0000) =   1256.366 us/op
     p(99.9000) =   1256.366 us/op
     p(99.9900) =   1256.366 us/op
     p(99.9990) =   1256.366 us/op
     p(99.9999) =   1256.366 us/op
    p(100.0000) =   1256.366 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.5)

# Run progress: 89.02% complete, ETA 00:05:04
# Fork: 1 of 2
# Warmup Iteration   1: 2861.668 us/op
# Warmup Iteration   2: 2172.243 us/op
# Warmup Iteration   3: 3210.373 us/op
# Warmup Iteration   4: 2379.894 us/op
# Warmup Iteration   5: 1839.638 us/op
Iteration   1: 1055.471 us/op
Iteration   2: 839.143 us/op
Iteration   3: 799.936 us/op
Iteration   4: 799.252 us/op
Iteration   5: 957.013 us/op

# Run progress: 89.20% complete, ETA 00:04:59
# Fork: 2 of 2
# Warmup Iteration   1: 2691.229 us/op
# Warmup Iteration   2: 2149.358 us/op
# Warmup Iteration   3: 2561.023 us/op
# Warmup Iteration   4: 1672.543 us/op
# Warmup Iteration   5: 1777.050 us/op
Iteration   1: 794.830 us/op
Iteration   2: 825.315 us/op
Iteration   3: 786.831 us/op
Iteration   4: 824.118 us/op
Iteration   5: 857.918 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    853.983 ±(99.9%) 130.530 us/op

  Histogram, us/op:
    [ 700.000,  725.000) = 0 
    [ 725.000,  750.000) = 0 
    [ 750.000,  775.000) = 0 
    [ 775.000,  800.000) = 4 
    [ 800.000,  825.000) = 1 
    [ 825.000,  850.000) = 2 
    [ 850.000,  875.000) = 1 
    [ 875.000,  900.000) = 0 
    [ 900.000,  925.000) = 0 
    [ 925.000,  950.000) = 0 
    [ 950.000,  975.000) = 1 
    [ 975.000, 1000.000) = 0 
    [1000.000, 1025.000) = 0 
    [1025.000, 1050.000) = 0 
    [1050.000, 1075.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    786.831 us/op
     p(50.0000) =    824.717 us/op
     p(90.0000) =   1045.625 us/op
     p(95.0000) =   1055.471 us/op
     p(99.0000) =   1055.471 us/op
     p(99.9000) =   1055.471 us/op
     p(99.9900) =   1055.471 us/op
     p(99.9990) =   1055.471 us/op
     p(99.9999) =   1055.471 us/op
    p(100.0000) =   1055.471 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.625)

# Run progress: 89.39% complete, ETA 00:04:54
# Fork: 1 of 2
# Warmup Iteration   1: 2623.805 us/op
# Warmup Iteration   2: 2016.158 us/op
# Warmup Iteration   3: 2509.457 us/op
# Warmup Iteration   4: 1675.426 us/op
# Warmup Iteration   5: 1751.909 us/op
Iteration   1: 841.504 us/op
Iteration   2: 835.834 us/op
Iteration   3: 814.903 us/op
Iteration   4: 815.258 us/op
Iteration   5: 800.359 us/op

# Run progress: 89.58% complete, ETA 00:04:49
# Fork: 2 of 2
# Warmup Iteration   1: 2767.329 us/op
# Warmup Iteration   2: 2035.647 us/op
# Warmup Iteration   3: 2523.203 us/op
# Warmup Iteration   4: 1693.202 us/op
# Warmup Iteration   5: 1737.290 us/op
Iteration   1: 807.852 us/op
Iteration   2: 813.016 us/op
Iteration   3: 817.463 us/op
Iteration   4: 812.728 us/op
Iteration   5: 821.541 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    818.046 ±(99.9%) 18.634 us/op

  Histogram, us/op:
    [800.000, 805.000) = 1 
    [805.000, 810.000) = 1 
    [810.000, 815.000) = 3 
    [815.000, 820.000) = 2 
    [820.000, 825.000) = 1 
    [825.000, 830.000) = 0 
    [830.000, 835.000) = 0 
    [835.000, 840.000) = 1 
    [840.000, 845.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    800.359 us/op
     p(50.0000) =    815.081 us/op
     p(90.0000) =    840.937 us/op
     p(95.0000) =    841.504 us/op
     p(99.0000) =    841.504 us/op
     p(99.9000) =    841.504 us/op
     p(99.9900) =    841.504 us/op
     p(99.9990) =    841.504 us/op
     p(99.9999) =    841.504 us/op
    p(100.0000) =    841.504 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.75)

# Run progress: 89.77% complete, ETA 00:04:43
# Fork: 1 of 2
# Warmup Iteration   1: 2713.966 us/op
# Warmup Iteration   2: 2236.117 us/op
# Warmup Iteration   3: 2490.526 us/op
# Warmup Iteration   4: 1652.274 us/op
# Warmup Iteration   5: 1803.839 us/op
Iteration   1: 790.460 us/op
Iteration   2: 839.242 us/op
Iteration   3: 813.528 us/op
Iteration   4: 799.855 us/op
Iteration   5: 843.869 us/op

# Run progress: 89.96% complete, ETA 00:04:38
# Fork: 2 of 2
# Warmup Iteration   1: 2782.463 us/op
# Warmup Iteration   2: 2113.634 us/op
# Warmup Iteration   3: 2333.049 us/op
# Warmup Iteration   4: 1732.094 us/op
# Warmup Iteration   5: 1866.768 us/op
Iteration   1: 855.074 us/op
Iteration   2: 810.668 us/op
Iteration   3: 832.491 us/op
Iteration   4: 841.714 us/op
Iteration   5: 917.364 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    834.426 ±(99.9%) 54.286 us/op

  Histogram, us/op:
    [ 700.000,  725.000) = 0 
    [ 725.000,  750.000) = 0 
    [ 750.000,  775.000) = 0 
    [ 775.000,  800.000) = 2 
    [ 800.000,  825.000) = 2 
    [ 825.000,  850.000) = 4 
    [ 850.000,  875.000) = 1 
    [ 875.000,  900.000) = 0 
    [ 900.000,  925.000) = 1 
    [ 925.000,  950.000) = 0 
    [ 950.000,  975.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    790.460 us/op
     p(50.0000) =    835.867 us/op
     p(90.0000) =    911.135 us/op
     p(95.0000) =    917.364 us/op
     p(99.0000) =    917.364 us/op
     p(99.9000) =    917.364 us/op
     p(99.9900) =    917.364 us/op
     p(99.9990) =    917.364 us/op
     p(99.9999) =    917.364 us/op
    p(100.0000) =    917.364 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.875)

# Run progress: 90.15% complete, ETA 00:04:33
# Fork: 1 of 2
# Warmup Iteration   1: 2745.862 us/op
# Warmup Iteration   2: 2137.065 us/op
# Warmup Iteration   3: 2588.689 us/op
# Warmup Iteration   4: 1666.897 us/op
# Warmup Iteration   5: 1744.890 us/op
Iteration   1: 772.024 us/op
Iteration   2: 863.379 us/op
Iteration   3: 822.665 us/op
Iteration   4: 822.569 us/op
Iteration   5: 798.497 us/op

# Run progress: 90.34% complete, ETA 00:04:28
# Fork: 2 of 2
# Warmup Iteration   1: 2835.342 us/op
# Warmup Iteration   2: 2020.638 us/op
# Warmup Iteration   3: 2893.319 us/op
# Warmup Iteration   4: 1715.889 us/op
# Warmup Iteration   5: 1816.500 us/op
Iteration   1: 915.623 us/op
Iteration   2: 939.900 us/op
Iteration   3: 814.986 us/op
Iteration   4: 830.780 us/op
Iteration   5: 904.990 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    848.541 ±(99.9%) 83.416 us/op

  Histogram, us/op:
    [ 700.000,  725.000) = 0 
    [ 725.000,  750.000) = 0 
    [ 750.000,  775.000) = 1 
    [ 775.000,  800.000) = 1 
    [ 800.000,  825.000) = 3 
    [ 825.000,  850.000) = 1 
    [ 850.000,  875.000) = 1 
    [ 875.000,  900.000) = 0 
    [ 900.000,  925.000) = 2 
    [ 925.000,  950.000) = 1 
    [ 950.000,  975.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    772.024 us/op
     p(50.0000) =    826.723 us/op
     p(90.0000) =    937.472 us/op
     p(95.0000) =    939.900 us/op
     p(99.0000) =    939.900 us/op
     p(99.9000) =    939.900 us/op
     p(99.9900) =    939.900 us/op
     p(99.9990) =    939.900 us/op
     p(99.9999) =    939.900 us/op
    p(100.0000) =    939.900 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 1)

# Run progress: 90.53% complete, ETA 00:04:22
# Fork: 1 of 2
# Warmup Iteration   1: 2880.389 us/op
# Warmup Iteration   2: 2214.930 us/op
# Warmup Iteration   3: 2447.868 us/op
# Warmup Iteration   4: 1631.429 us/op
# Warmup Iteration   5: 1841.575 us/op
Iteration   1: 773.021 us/op
Iteration   2: 874.831 us/op
Iteration   3: 776.103 us/op
Iteration   4: 784.927 us/op
Iteration   5: 807.646 us/op

# Run progress: 90.72% complete, ETA 00:04:17
# Fork: 2 of 2
# Warmup Iteration   1: 3196.483 us/op
# Warmup Iteration   2: 2040.643 us/op
# Warmup Iteration   3: 2513.099 us/op
# Warmup Iteration   4: 1776.438 us/op
# Warmup Iteration   5: 1857.760 us/op
Iteration   1: 1092.594 us/op
Iteration   2: 930.951 us/op
Iteration   3: 819.706 us/op
Iteration   4: 920.160 us/op
Iteration   5: 848.038 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    862.798 ±(99.9%) 149.193 us/op

  Histogram, us/op:
    [ 700.000,  725.000) = 0 
    [ 725.000,  750.000) = 0 
    [ 750.000,  775.000) = 1 
    [ 775.000,  800.000) = 2 
    [ 800.000,  825.000) = 2 
    [ 825.000,  850.000) = 1 
    [ 850.000,  875.000) = 1 
    [ 875.000,  900.000) = 0 
    [ 900.000,  925.000) = 1 
    [ 925.000,  950.000) = 1 
    [ 950.000,  975.000) = 0 
    [ 975.000, 1000.000) = 0 
    [1000.000, 1025.000) = 0 
    [1025.000, 1050.000) = 0 
    [1050.000, 1075.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    773.021 us/op
     p(50.0000) =    833.872 us/op
     p(90.0000) =   1076.430 us/op
     p(95.0000) =   1092.594 us/op
     p(99.0000) =   1092.594 us/op
     p(99.9000) =   1092.594 us/op
     p(99.9900) =   1092.594 us/op
     p(99.9990) =   1092.594 us/op
     p(99.9999) =   1092.594 us/op
    p(100.0000) =   1092.594 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.125)

# Run progress: 90.91% complete, ETA 00:04:12
# Fork: 1 of 2
# Warmup Iteration   1: 3666.223 us/op
# Warmup Iteration   2: 3233.696 us/op
# Warmup Iteration   3: 2908.695 us/op
# Warmup Iteration   4: 2401.441 us/op
# Warmup Iteration   5: 2430.250 us/op
Iteration   1: 1495.279 us/op
Iteration   2: 1510.625 us/op
Iteration   3: 1489.925 us/op
Iteration   4: 1488.114 us/op
Iteration   5: 1591.812 us/op

# Run progress: 91.10% complete, ETA 00:04:07
# Fork: 2 of 2
# Warmup Iteration   1: 3558.917 us/op
# Warmup Iteration   2: 3375.246 us/op
# Warmup Iteration   3: 3301.994 us/op
# Warmup Iteration   4: 2514.493 us/op
# Warmup Iteration   5: 2639.985 us/op
Iteration   1: 1594.804 us/op
Iteration   2: 1555.668 us/op
Iteration   3: 1819.060 us/op
Iteration   4: 1668.680 us/op
Iteration   5: 1707.448 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1592.142 ±(99.9%) 166.595 us/op

  Histogram, us/op:
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 3 
    [1500.000, 1550.000) = 1 
    [1550.000, 1600.000) = 3 
    [1600.000, 1650.000) = 0 
    [1650.000, 1700.000) = 1 
    [1700.000, 1750.000) = 1 
    [1750.000, 1800.000) = 0 
    [1800.000, 1850.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1488.114 us/op
     p(50.0000) =   1573.740 us/op
     p(90.0000) =   1807.899 us/op
     p(95.0000) =   1819.060 us/op
     p(99.0000) =   1819.060 us/op
     p(99.9000) =   1819.060 us/op
     p(99.9900) =   1819.060 us/op
     p(99.9990) =   1819.060 us/op
     p(99.9999) =   1819.060 us/op
    p(100.0000) =   1819.060 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.250)

# Run progress: 91.29% complete, ETA 00:04:01
# Fork: 1 of 2
# Warmup Iteration   1: 3535.742 us/op
# Warmup Iteration   2: 3220.317 us/op
# Warmup Iteration   3: 2938.678 us/op
# Warmup Iteration   4: 2457.638 us/op
# Warmup Iteration   5: 2418.060 us/op
Iteration   1: 1477.125 us/op
Iteration   2: 1545.764 us/op
Iteration   3: 1491.562 us/op
Iteration   4: 1516.966 us/op
Iteration   5: 1510.267 us/op

# Run progress: 91.48% complete, ETA 00:03:56
# Fork: 2 of 2
# Warmup Iteration   1: 3745.870 us/op
# Warmup Iteration   2: 3518.921 us/op
# Warmup Iteration   3: 3066.067 us/op
# Warmup Iteration   4: 2510.447 us/op
# Warmup Iteration   5: 2542.856 us/op
Iteration   1: 1488.529 us/op
Iteration   2: 1676.193 us/op
Iteration   3: 1514.143 us/op
Iteration   4: 1680.456 us/op
Iteration   5: 1496.049 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1539.705 ±(99.9%) 114.112 us/op

  Histogram, us/op:
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 0 
    [1475.000, 1500.000) = 4 
    [1500.000, 1525.000) = 3 
    [1525.000, 1550.000) = 1 
    [1550.000, 1575.000) = 0 
    [1575.000, 1600.000) = 0 
    [1600.000, 1625.000) = 0 
    [1625.000, 1650.000) = 0 
    [1650.000, 1675.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1477.125 us/op
     p(50.0000) =   1512.205 us/op
     p(90.0000) =   1680.030 us/op
     p(95.0000) =   1680.456 us/op
     p(99.0000) =   1680.456 us/op
     p(99.9000) =   1680.456 us/op
     p(99.9900) =   1680.456 us/op
     p(99.9990) =   1680.456 us/op
     p(99.9999) =   1680.456 us/op
    p(100.0000) =   1680.456 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.375)

# Run progress: 91.67% complete, ETA 00:03:51
# Fork: 1 of 2
# Warmup Iteration   1: 3429.512 us/op
# Warmup Iteration   2: 3541.882 us/op
# Warmup Iteration   3: 2991.995 us/op
# Warmup Iteration   4: 2424.307 us/op
# Warmup Iteration   5: 2390.285 us/op
Iteration   1: 1513.365 us/op
Iteration   2: 1520.737 us/op
Iteration   3: 1499.903 us/op
Iteration   4: 1525.473 us/op
Iteration   5: 1473.376 us/op

# Run progress: 91.86% complete, ETA 00:03:46
# Fork: 2 of 2
# Warmup Iteration   1: 3504.540 us/op
# Warmup Iteration   2: 3255.507 us/op
# Warmup Iteration   3: 4543.778 us/op
# Warmup Iteration   4: 2424.191 us/op
# Warmup Iteration   5: 2561.152 us/op
Iteration   1: 1596.968 us/op
Iteration   2: 1522.899 us/op
Iteration   3: 1552.371 us/op
Iteration   4: 1601.675 us/op
Iteration   5: 1668.347 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1547.511 ±(99.9%) 88.359 us/op

  Histogram, us/op:
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 1 
    [1475.000, 1500.000) = 1 
    [1500.000, 1525.000) = 3 
    [1525.000, 1550.000) = 1 
    [1550.000, 1575.000) = 1 
    [1575.000, 1600.000) = 1 
    [1600.000, 1625.000) = 1 
    [1625.000, 1650.000) = 0 
    [1650.000, 1675.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1473.376 us/op
     p(50.0000) =   1524.186 us/op
     p(90.0000) =   1661.680 us/op
     p(95.0000) =   1668.347 us/op
     p(99.0000) =   1668.347 us/op
     p(99.9000) =   1668.347 us/op
     p(99.9900) =   1668.347 us/op
     p(99.9990) =   1668.347 us/op
     p(99.9999) =   1668.347 us/op
    p(100.0000) =   1668.347 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.5)

# Run progress: 92.05% complete, ETA 00:03:40
# Fork: 1 of 2
# Warmup Iteration   1: 3552.209 us/op
# Warmup Iteration   2: 3240.368 us/op
# Warmup Iteration   3: 2935.104 us/op
# Warmup Iteration   4: 2527.809 us/op
# Warmup Iteration   5: 2496.960 us/op
Iteration   1: 1497.499 us/op
Iteration   2: 1539.166 us/op
Iteration   3: 1489.235 us/op
Iteration   4: 1499.067 us/op
Iteration   5: 1511.009 us/op

# Run progress: 92.23% complete, ETA 00:03:35
# Fork: 2 of 2
# Warmup Iteration   1: 3693.669 us/op
# Warmup Iteration   2: 3355.224 us/op
# Warmup Iteration   3: 2599.820 us/op
# Warmup Iteration   4: 2388.828 us/op
# Warmup Iteration   5: 2381.839 us/op
Iteration   1: 1476.266 us/op
Iteration   2: 1507.609 us/op
Iteration   3: 1489.708 us/op
Iteration   4: 1493.905 us/op
Iteration   5: 1502.317 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1500.578 ±(99.9%) 25.421 us/op

  Histogram, us/op:
    [1470.000, 1475.000) = 0 
    [1475.000, 1480.000) = 1 
    [1480.000, 1485.000) = 0 
    [1485.000, 1490.000) = 2 
    [1490.000, 1495.000) = 1 
    [1495.000, 1500.000) = 2 
    [1500.000, 1505.000) = 1 
    [1505.000, 1510.000) = 1 
    [1510.000, 1515.000) = 1 
    [1515.000, 1520.000) = 0 
    [1520.000, 1525.000) = 0 
    [1525.000, 1530.000) = 0 
    [1530.000, 1535.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1476.266 us/op
     p(50.0000) =   1498.283 us/op
     p(90.0000) =   1536.350 us/op
     p(95.0000) =   1539.166 us/op
     p(99.0000) =   1539.166 us/op
     p(99.9000) =   1539.166 us/op
     p(99.9900) =   1539.166 us/op
     p(99.9990) =   1539.166 us/op
     p(99.9999) =   1539.166 us/op
    p(100.0000) =   1539.166 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.625)

# Run progress: 92.42% complete, ETA 00:03:30
# Fork: 1 of 2
# Warmup Iteration   1: 3677.532 us/op
# Warmup Iteration   2: 3094.221 us/op
# Warmup Iteration   3: 2851.556 us/op
# Warmup Iteration   4: 2398.789 us/op
# Warmup Iteration   5: 2431.300 us/op
Iteration   1: 1520.382 us/op
Iteration   2: 1503.093 us/op
Iteration   3: 1517.661 us/op
Iteration   4: 1518.660 us/op
Iteration   5: 1507.996 us/op

# Run progress: 92.61% complete, ETA 00:03:25
# Fork: 2 of 2
# Warmup Iteration   1: 3577.697 us/op
# Warmup Iteration   2: 3093.899 us/op
# Warmup Iteration   3: 2939.432 us/op
# Warmup Iteration   4: 2457.756 us/op
# Warmup Iteration   5: 2425.391 us/op
Iteration   1: 1485.648 us/op
Iteration   2: 1594.129 us/op
Iteration   3: 1502.613 us/op
Iteration   4: 1518.624 us/op
Iteration   5: 1540.068 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1520.887 ±(99.9%) 44.541 us/op

  Histogram, us/op:
    [1400.000, 1412.500) = 0 
    [1412.500, 1425.000) = 0 
    [1425.000, 1437.500) = 0 
    [1437.500, 1450.000) = 0 
    [1450.000, 1462.500) = 0 
    [1462.500, 1475.000) = 0 
    [1475.000, 1487.500) = 1 
    [1487.500, 1500.000) = 0 
    [1500.000, 1512.500) = 3 
    [1512.500, 1525.000) = 4 
    [1525.000, 1537.500) = 0 
    [1537.500, 1550.000) = 1 
    [1550.000, 1562.500) = 0 
    [1562.500, 1575.000) = 0 
    [1575.000, 1587.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1485.648 us/op
     p(50.0000) =   1518.143 us/op
     p(90.0000) =   1588.723 us/op
     p(95.0000) =   1594.129 us/op
     p(99.0000) =   1594.129 us/op
     p(99.9000) =   1594.129 us/op
     p(99.9900) =   1594.129 us/op
     p(99.9990) =   1594.129 us/op
     p(99.9999) =   1594.129 us/op
    p(100.0000) =   1594.129 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.75)

# Run progress: 92.80% complete, ETA 00:03:19
# Fork: 1 of 2
# Warmup Iteration   1: 3616.731 us/op
# Warmup Iteration   2: 3209.681 us/op
# Warmup Iteration   3: 2932.094 us/op
# Warmup Iteration   4: 2446.358 us/op
# Warmup Iteration   5: 2502.698 us/op
Iteration   1: 1500.321 us/op
Iteration   2: 1509.773 us/op
Iteration   3: 1523.965 us/op
Iteration   4: 1858.746 us/op
Iteration   5: 1614.081 us/op

# Run progress: 92.99% complete, ETA 00:03:14
# Fork: 2 of 2
# Warmup Iteration   1: 3518.873 us/op
# Warmup Iteration   2: 3360.321 us/op
# Warmup Iteration   3: 3037.289 us/op
# Warmup Iteration   4: 2499.714 us/op
# Warmup Iteration   5: 2440.620 us/op
Iteration   1: 1504.168 us/op
Iteration   2: 1539.085 us/op
Iteration   3: 1516.347 us/op
Iteration   4: 1644.998 us/op
Iteration   5: 1696.722 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1590.821 ±(99.9%) 175.615 us/op

  Histogram, us/op:
    [1500.000, 1525.000) = 5 
    [1525.000, 1550.000) = 1 
    [1550.000, 1575.000) = 0 
    [1575.000, 1600.000) = 0 
    [1600.000, 1625.000) = 1 
    [1625.000, 1650.000) = 1 
    [1650.000, 1675.000) = 0 
    [1675.000, 1700.000) = 1 
    [1700.000, 1725.000) = 0 
    [1725.000, 1750.000) = 0 
    [1750.000, 1775.000) = 0 
    [1775.000, 1800.000) = 0 
    [1800.000, 1825.000) = 0 
    [1825.000, 1850.000) = 0 
    [1850.000, 1875.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1500.321 us/op
     p(50.0000) =   1531.525 us/op
     p(90.0000) =   1842.544 us/op
     p(95.0000) =   1858.746 us/op
     p(99.0000) =   1858.746 us/op
     p(99.9000) =   1858.746 us/op
     p(99.9900) =   1858.746 us/op
     p(99.9990) =   1858.746 us/op
     p(99.9999) =   1858.746 us/op
    p(100.0000) =   1858.746 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.875)

# Run progress: 93.18% complete, ETA 00:03:09
# Fork: 1 of 2
# Warmup Iteration   1: 3614.076 us/op
# Warmup Iteration   2: 3194.293 us/op
# Warmup Iteration   3: 2940.344 us/op
# Warmup Iteration   4: 2458.107 us/op
# Warmup Iteration   5: 2533.430 us/op
Iteration   1: 1519.327 us/op
Iteration   2: 1560.766 us/op
Iteration   3: 1530.256 us/op
Iteration   4: 1528.749 us/op
Iteration   5: 1560.199 us/op

# Run progress: 93.37% complete, ETA 00:03:04
# Fork: 2 of 2
# Warmup Iteration   1: 3584.374 us/op
# Warmup Iteration   2: 3471.101 us/op
# Warmup Iteration   3: 2565.608 us/op
# Warmup Iteration   4: 2477.875 us/op
# Warmup Iteration   5: 2393.474 us/op
Iteration   1: 1513.956 us/op
Iteration   2: 1511.151 us/op
Iteration   3: 1490.852 us/op
Iteration   4: 1491.523 us/op
Iteration   5: 1569.742 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1527.652 ±(99.9%) 42.536 us/op

  Histogram, us/op:
    [1490.000, 1495.000) = 2 
    [1495.000, 1500.000) = 0 
    [1500.000, 1505.000) = 0 
    [1505.000, 1510.000) = 0 
    [1510.000, 1515.000) = 2 
    [1515.000, 1520.000) = 1 
    [1520.000, 1525.000) = 0 
    [1525.000, 1530.000) = 1 
    [1530.000, 1535.000) = 1 
    [1535.000, 1540.000) = 0 
    [1540.000, 1545.000) = 0 
    [1545.000, 1550.000) = 0 
    [1550.000, 1555.000) = 0 
    [1555.000, 1560.000) = 0 
    [1560.000, 1565.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   1490.852 us/op
     p(50.0000) =   1524.038 us/op
     p(90.0000) =   1568.844 us/op
     p(95.0000) =   1569.742 us/op
     p(99.0000) =   1569.742 us/op
     p(99.9000) =   1569.742 us/op
     p(99.9900) =   1569.742 us/op
     p(99.9990) =   1569.742 us/op
     p(99.9999) =   1569.742 us/op
    p(100.0000) =   1569.742 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 1)

# Run progress: 93.56% complete, ETA 00:02:58
# Fork: 1 of 2
# Warmup Iteration   1: 3568.242 us/op
# Warmup Iteration   2: 3187.472 us/op
# Warmup Iteration   3: 2953.276 us/op
# Warmup Iteration   4: 2528.611 us/op
# Warmup Iteration   5: 2472.293 us/op
Iteration   1: 1499.261 us/op
Iteration   2: 1551.421 us/op
Iteration   3: 1491.600 us/op
Iteration   4: 1514.229 us/op
Iteration   5: 1516.160 us/op

# Run progress: 93.75% complete, ETA 00:02:53
# Fork: 2 of 2
# Warmup Iteration   1: 3535.319 us/op
# Warmup Iteration   2: 3506.958 us/op
# Warmup Iteration   3: 2863.012 us/op
# Warmup Iteration   4: 2384.665 us/op
# Warmup Iteration   5: 2374.660 us/op
Iteration   1: 1538.849 us/op
Iteration   2: 1574.500 us/op
Iteration   3: 1552.641 us/op
Iteration   4: 1598.685 us/op
Iteration   5: 1608.493 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1544.584 ±(99.9%) 60.980 us/op

  Histogram, us/op:
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 0 
    [1475.000, 1500.000) = 2 
    [1500.000, 1525.000) = 2 
    [1525.000, 1550.000) = 1 
    [1550.000, 1575.000) = 3 
    [1575.000, 1600.000) = 1 
    [1600.000, 1625.000) = 1 
    [1625.000, 1650.000) = 0 
    [1650.000, 1675.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1491.600 us/op
     p(50.0000) =   1545.135 us/op
     p(90.0000) =   1607.512 us/op
     p(95.0000) =   1608.493 us/op
     p(99.0000) =   1608.493 us/op
     p(99.9000) =   1608.493 us/op
     p(99.9900) =   1608.493 us/op
     p(99.9990) =   1608.493 us/op
     p(99.9999) =   1608.493 us/op
    p(100.0000) =   1608.493 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.125)

# Run progress: 93.94% complete, ETA 00:02:48
# Fork: 1 of 2
# Warmup Iteration   1: 4059.462 us/op
# Warmup Iteration   2: 3082.083 us/op
# Warmup Iteration   3: 2820.564 us/op
# Warmup Iteration   4: 2556.337 us/op
# Warmup Iteration   5: 2465.117 us/op
Iteration   1: 1563.117 us/op
Iteration   2: 1537.111 us/op
Iteration   3: 1511.417 us/op
Iteration   4: 1525.714 us/op
Iteration   5: 1524.561 us/op

# Run progress: 94.13% complete, ETA 00:02:43
# Fork: 2 of 2
# Warmup Iteration   1: 3464.102 us/op
# Warmup Iteration   2: 3541.600 us/op
# Warmup Iteration   3: 2586.881 us/op
# Warmup Iteration   4: 2468.017 us/op
# Warmup Iteration   5: 2372.439 us/op
Iteration   1: 1489.926 us/op
Iteration   2: 1810.670 us/op
Iteration   3: 1480.223 us/op
Iteration   4: 1469.124 us/op
Iteration   5: 1468.489 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1538.035 ±(99.9%) 152.227 us/op

  Histogram, us/op:
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 4 
    [1500.000, 1550.000) = 4 
    [1550.000, 1600.000) = 1 
    [1600.000, 1650.000) = 0 
    [1650.000, 1700.000) = 0 
    [1700.000, 1750.000) = 0 
    [1750.000, 1800.000) = 0 
    [1800.000, 1850.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1468.489 us/op
     p(50.0000) =   1517.989 us/op
     p(90.0000) =   1785.915 us/op
     p(95.0000) =   1810.670 us/op
     p(99.0000) =   1810.670 us/op
     p(99.9000) =   1810.670 us/op
     p(99.9900) =   1810.670 us/op
     p(99.9990) =   1810.670 us/op
     p(99.9999) =   1810.670 us/op
    p(100.0000) =   1810.670 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.250)

# Run progress: 94.32% complete, ETA 00:02:37
# Fork: 1 of 2
# Warmup Iteration   1: 4038.802 us/op
# Warmup Iteration   2: 3241.178 us/op
# Warmup Iteration   3: 2897.394 us/op
# Warmup Iteration   4: 2648.774 us/op
# Warmup Iteration   5: 2463.821 us/op
Iteration   1: 1544.684 us/op
Iteration   2: 1540.107 us/op
Iteration   3: 1543.635 us/op
Iteration   4: 1540.246 us/op
Iteration   5: 1628.661 us/op

# Run progress: 94.51% complete, ETA 00:02:32
# Fork: 2 of 2
# Warmup Iteration   1: 3693.960 us/op
# Warmup Iteration   2: 3397.088 us/op
# Warmup Iteration   3: 2499.327 us/op
# Warmup Iteration   4: 2404.572 us/op
# Warmup Iteration   5: 2400.503 us/op
Iteration   1: 1486.687 us/op
Iteration   2: 1509.106 us/op
Iteration   3: 1488.475 us/op
Iteration   4: 1449.625 us/op
Iteration   5: 1662.515 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1539.374 ±(99.9%) 97.618 us/op

  Histogram, us/op:
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 1 
    [1450.000, 1475.000) = 0 
    [1475.000, 1500.000) = 2 
    [1500.000, 1525.000) = 1 
    [1525.000, 1550.000) = 4 
    [1550.000, 1575.000) = 0 
    [1575.000, 1600.000) = 0 
    [1600.000, 1625.000) = 0 
    [1625.000, 1650.000) = 1 
    [1650.000, 1675.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1449.625 us/op
     p(50.0000) =   1540.177 us/op
     p(90.0000) =   1659.130 us/op
     p(95.0000) =   1662.515 us/op
     p(99.0000) =   1662.515 us/op
     p(99.9000) =   1662.515 us/op
     p(99.9900) =   1662.515 us/op
     p(99.9990) =   1662.515 us/op
     p(99.9999) =   1662.515 us/op
    p(100.0000) =   1662.515 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.375)

# Run progress: 94.70% complete, ETA 00:02:27
# Fork: 1 of 2
# Warmup Iteration   1: 3624.974 us/op
# Warmup Iteration   2: 3249.491 us/op
# Warmup Iteration   3: 2944.836 us/op
# Warmup Iteration   4: 2724.085 us/op
# Warmup Iteration   5: 2456.014 us/op
Iteration   1: 1495.183 us/op
Iteration   2: 1511.774 us/op
Iteration   3: 1709.277 us/op
Iteration   4: 1569.188 us/op
Iteration   5: 1516.124 us/op

# Run progress: 94.89% complete, ETA 00:02:21
# Fork: 2 of 2
# Warmup Iteration   1: 3617.735 us/op
# Warmup Iteration   2: 3167.688 us/op
# Warmup Iteration   3: 2885.030 us/op
# Warmup Iteration   4: 2472.147 us/op
# Warmup Iteration   5: 2467.490 us/op
Iteration   1: 1512.571 us/op
Iteration   2: 1526.087 us/op
Iteration   3: 1494.515 us/op
Iteration   4: 1526.236 us/op
Iteration   5: 1573.796 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1543.475 ±(99.9%) 97.078 us/op

  Histogram, us/op:
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 0 
    [1475.000, 1500.000) = 2 
    [1500.000, 1525.000) = 3 
    [1525.000, 1550.000) = 2 
    [1550.000, 1575.000) = 2 
    [1575.000, 1600.000) = 0 
    [1600.000, 1625.000) = 0 
    [1625.000, 1650.000) = 0 
    [1650.000, 1675.000) = 0 
    [1675.000, 1700.000) = 0 
    [1700.000, 1725.000) = 1 
    [1725.000, 1750.000) = 0 
    [1750.000, 1775.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1494.515 us/op
     p(50.0000) =   1521.106 us/op
     p(90.0000) =   1695.729 us/op
     p(95.0000) =   1709.277 us/op
     p(99.0000) =   1709.277 us/op
     p(99.9000) =   1709.277 us/op
     p(99.9900) =   1709.277 us/op
     p(99.9990) =   1709.277 us/op
     p(99.9999) =   1709.277 us/op
    p(100.0000) =   1709.277 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.5)

# Run progress: 95.08% complete, ETA 00:02:16
# Fork: 1 of 2
# Warmup Iteration   1: 3607.335 us/op
# Warmup Iteration   2: 3188.216 us/op
# Warmup Iteration   3: 3366.694 us/op
# Warmup Iteration   4: 2478.800 us/op
# Warmup Iteration   5: 2759.173 us/op
Iteration   1: 1548.475 us/op
Iteration   2: 1535.767 us/op
Iteration   3: 1543.730 us/op
Iteration   4: 1637.302 us/op
Iteration   5: 1570.946 us/op

# Run progress: 95.27% complete, ETA 00:02:11
# Fork: 2 of 2
# Warmup Iteration   1: 3837.999 us/op
# Warmup Iteration   2: 3101.138 us/op
# Warmup Iteration   3: 2841.188 us/op
# Warmup Iteration   4: 2527.854 us/op
# Warmup Iteration   5: 2372.239 us/op
Iteration   1: 1491.253 us/op
Iteration   2: 1532.314 us/op
Iteration   3: 1481.750 us/op
Iteration   4: 1500.425 us/op
Iteration   5: 1511.909 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1535.387 ±(99.9%) 68.545 us/op

  Histogram, us/op:
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 0 
    [1475.000, 1500.000) = 2 
    [1500.000, 1525.000) = 2 
    [1525.000, 1550.000) = 4 
    [1550.000, 1575.000) = 1 
    [1575.000, 1600.000) = 0 
    [1600.000, 1625.000) = 0 
    [1625.000, 1650.000) = 1 
    [1650.000, 1675.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1481.750 us/op
     p(50.0000) =   1534.041 us/op
     p(90.0000) =   1630.666 us/op
     p(95.0000) =   1637.302 us/op
     p(99.0000) =   1637.302 us/op
     p(99.9000) =   1637.302 us/op
     p(99.9900) =   1637.302 us/op
     p(99.9990) =   1637.302 us/op
     p(99.9999) =   1637.302 us/op
    p(100.0000) =   1637.302 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.625)

# Run progress: 95.45% complete, ETA 00:02:06
# Fork: 1 of 2
# Warmup Iteration   1: 5401.703 us/op
# Warmup Iteration   2: 3224.311 us/op
# Warmup Iteration   3: 2523.141 us/op
# Warmup Iteration   4: 2504.106 us/op
# Warmup Iteration   5: 2503.293 us/op
Iteration   1: 1455.179 us/op
Iteration   2: 1650.858 us/op
Iteration   3: 1461.346 us/op
Iteration   4: 1572.302 us/op
Iteration   5: 1456.345 us/op

# Run progress: 95.64% complete, ETA 00:02:00
# Fork: 2 of 2
# Warmup Iteration   1: 3709.156 us/op
# Warmup Iteration   2: 3323.611 us/op
# Warmup Iteration   3: 3044.326 us/op
# Warmup Iteration   4: 2432.878 us/op
# Warmup Iteration   5: 2416.803 us/op
Iteration   1: 1548.296 us/op
Iteration   2: 1501.878 us/op
Iteration   3: 1498.715 us/op
Iteration   4: 1553.601 us/op
Iteration   5: 1555.679 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1525.420 ±(99.9%) 94.609 us/op

  Histogram, us/op:
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 3 
    [1475.000, 1500.000) = 1 
    [1500.000, 1525.000) = 1 
    [1525.000, 1550.000) = 1 
    [1550.000, 1575.000) = 3 
    [1575.000, 1600.000) = 0 
    [1600.000, 1625.000) = 0 
    [1625.000, 1650.000) = 0 
    [1650.000, 1675.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1455.179 us/op
     p(50.0000) =   1525.087 us/op
     p(90.0000) =   1643.002 us/op
     p(95.0000) =   1650.858 us/op
     p(99.0000) =   1650.858 us/op
     p(99.9000) =   1650.858 us/op
     p(99.9900) =   1650.858 us/op
     p(99.9990) =   1650.858 us/op
     p(99.9999) =   1650.858 us/op
    p(100.0000) =   1650.858 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.75)

# Run progress: 95.83% complete, ETA 00:01:55
# Fork: 1 of 2
# Warmup Iteration   1: 3513.998 us/op
# Warmup Iteration   2: 3543.385 us/op
# Warmup Iteration   3: 2657.650 us/op
# Warmup Iteration   4: 2474.705 us/op
# Warmup Iteration   5: 2459.996 us/op
Iteration   1: 1503.196 us/op
Iteration   2: 1529.158 us/op
Iteration   3: 1496.110 us/op
Iteration   4: 2024.479 us/op
Iteration   5: 2318.166 us/op

# Run progress: 96.02% complete, ETA 00:01:50
# Fork: 2 of 2
# Warmup Iteration   1: 3493.947 us/op
# Warmup Iteration   2: 3201.872 us/op
# Warmup Iteration   3: 3099.590 us/op
# Warmup Iteration   4: 2586.614 us/op
# Warmup Iteration   5: 2423.109 us/op
Iteration   1: 1532.949 us/op
Iteration   2: 1545.276 us/op
Iteration   3: 1541.947 us/op
Iteration   4: 1487.735 us/op
Iteration   5: 1657.865 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1663.688 ±(99.9%) 423.853 us/op

  Histogram, us/op:
    [1400.000, 1500.000) = 2 
    [1500.000, 1600.000) = 5 
    [1600.000, 1700.000) = 1 
    [1700.000, 1800.000) = 0 
    [1800.000, 1900.000) = 0 
    [1900.000, 2000.000) = 0 
    [2000.000, 2100.000) = 1 
    [2100.000, 2200.000) = 0 
    [2200.000, 2300.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1487.735 us/op
     p(50.0000) =   1537.448 us/op
     p(90.0000) =   2288.797 us/op
     p(95.0000) =   2318.166 us/op
     p(99.0000) =   2318.166 us/op
     p(99.9000) =   2318.166 us/op
     p(99.9900) =   2318.166 us/op
     p(99.9990) =   2318.166 us/op
     p(99.9999) =   2318.166 us/op
    p(100.0000) =   2318.166 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.875)

# Run progress: 96.21% complete, ETA 00:01:45
# Fork: 1 of 2
# Warmup Iteration   1: 3477.440 us/op
# Warmup Iteration   2: 3192.858 us/op
# Warmup Iteration   3: 3219.888 us/op
# Warmup Iteration   4: 2414.607 us/op
# Warmup Iteration   5: 2417.696 us/op
Iteration   1: 1508.240 us/op
Iteration   2: 1569.569 us/op
Iteration   3: 1533.002 us/op
Iteration   4: 1543.750 us/op
Iteration   5: 1578.299 us/op

# Run progress: 96.40% complete, ETA 00:01:39
# Fork: 2 of 2
# Warmup Iteration   1: 3619.558 us/op
# Warmup Iteration   2: 3125.271 us/op
# Warmup Iteration   3: 3073.822 us/op
# Warmup Iteration   4: 2522.012 us/op
# Warmup Iteration   5: 2469.756 us/op
Iteration   1: 1573.771 us/op
Iteration   2: 1503.726 us/op
Iteration   3: 1515.219 us/op
Iteration   4: 1522.210 us/op
Iteration   5: 1547.691 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1539.548 ±(99.9%) 41.730 us/op

  Histogram, us/op:
    [1500.000, 1505.000) = 1 
    [1505.000, 1510.000) = 1 
    [1510.000, 1515.000) = 0 
    [1515.000, 1520.000) = 1 
    [1520.000, 1525.000) = 1 
    [1525.000, 1530.000) = 0 
    [1530.000, 1535.000) = 1 
    [1535.000, 1540.000) = 0 
    [1540.000, 1545.000) = 1 
    [1545.000, 1550.000) = 1 
    [1550.000, 1555.000) = 0 
    [1555.000, 1560.000) = 0 
    [1560.000, 1565.000) = 0 
    [1565.000, 1570.000) = 1 
    [1570.000, 1575.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1503.726 us/op
     p(50.0000) =   1538.376 us/op
     p(90.0000) =   1577.846 us/op
     p(95.0000) =   1578.299 us/op
     p(99.0000) =   1578.299 us/op
     p(99.9000) =   1578.299 us/op
     p(99.9900) =   1578.299 us/op
     p(99.9990) =   1578.299 us/op
     p(99.9999) =   1578.299 us/op
    p(100.0000) =   1578.299 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 1)

# Run progress: 96.59% complete, ETA 00:01:34
# Fork: 1 of 2
# Warmup Iteration   1: 3356.183 us/op
# Warmup Iteration   2: 3009.131 us/op
# Warmup Iteration   3: 3076.209 us/op
# Warmup Iteration   4: 2382.838 us/op
# Warmup Iteration   5: 2442.380 us/op
Iteration   1: 1477.473 us/op
Iteration   2: 1527.410 us/op
Iteration   3: 1555.414 us/op
Iteration   4: 1469.280 us/op
Iteration   5: 1494.270 us/op

# Run progress: 96.78% complete, ETA 00:01:29
# Fork: 2 of 2
# Warmup Iteration   1: 3487.613 us/op
# Warmup Iteration   2: 3126.573 us/op
# Warmup Iteration   3: 2887.339 us/op
# Warmup Iteration   4: 2539.252 us/op
# Warmup Iteration   5: 2501.623 us/op
Iteration   1: 1551.998 us/op
Iteration   2: 1570.579 us/op
Iteration   3: 1552.787 us/op
Iteration   4: 1554.751 us/op
Iteration   5: 1556.168 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1531.013 ±(99.9%) 55.919 us/op

  Histogram, us/op:
    [1400.000, 1412.500) = 0 
    [1412.500, 1425.000) = 0 
    [1425.000, 1437.500) = 0 
    [1437.500, 1450.000) = 0 
    [1450.000, 1462.500) = 0 
    [1462.500, 1475.000) = 1 
    [1475.000, 1487.500) = 1 
    [1487.500, 1500.000) = 1 
    [1500.000, 1512.500) = 0 
    [1512.500, 1525.000) = 0 
    [1525.000, 1537.500) = 1 
    [1537.500, 1550.000) = 0 
    [1550.000, 1562.500) = 5 
    [1562.500, 1575.000) = 1 
    [1575.000, 1587.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1469.280 us/op
     p(50.0000) =   1552.393 us/op
     p(90.0000) =   1569.138 us/op
     p(95.0000) =   1570.579 us/op
     p(99.0000) =   1570.579 us/op
     p(99.9000) =   1570.579 us/op
     p(99.9900) =   1570.579 us/op
     p(99.9990) =   1570.579 us/op
     p(99.9999) =   1570.579 us/op
    p(100.0000) =   1570.579 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.125)

# Run progress: 96.97% complete, ETA 00:01:24
# Fork: 1 of 2
# Warmup Iteration   1: 5971.040 us/op
# Warmup Iteration   2: 4863.695 us/op
# Warmup Iteration   3: 3966.596 us/op
# Warmup Iteration   4: 4012.156 us/op
# Warmup Iteration   5: 3969.292 us/op
Iteration   1: 2893.463 us/op
Iteration   2: 3019.516 us/op
Iteration   3: 3289.628 us/op
Iteration   4: 3596.278 us/op
Iteration   5: 3773.842 us/op

# Run progress: 97.16% complete, ETA 00:01:18
# Fork: 2 of 2
# Warmup Iteration   1: 5492.885 us/op
# Warmup Iteration   2: 4982.035 us/op
# Warmup Iteration   3: 4102.427 us/op
# Warmup Iteration   4: 4072.566 us/op
# Warmup Iteration   5: 4057.327 us/op
Iteration   1: 2977.187 us/op
Iteration   2: 3235.191 us/op
Iteration   3: 3537.666 us/op
Iteration   4: 3738.436 us/op
Iteration   5: 3705.343 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   3376.655 ±(99.9%) 508.723 us/op

  Histogram, us/op:
    [2800.000, 2900.000) = 1 
    [2900.000, 3000.000) = 1 
    [3000.000, 3100.000) = 1 
    [3100.000, 3200.000) = 0 
    [3200.000, 3300.000) = 2 
    [3300.000, 3400.000) = 0 
    [3400.000, 3500.000) = 0 
    [3500.000, 3600.000) = 2 
    [3600.000, 3700.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2893.463 us/op
     p(50.0000) =   3413.647 us/op
     p(90.0000) =   3770.301 us/op
     p(95.0000) =   3773.842 us/op
     p(99.0000) =   3773.842 us/op
     p(99.9000) =   3773.842 us/op
     p(99.9900) =   3773.842 us/op
     p(99.9990) =   3773.842 us/op
     p(99.9999) =   3773.842 us/op
    p(100.0000) =   3773.842 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.250)

# Run progress: 97.35% complete, ETA 00:01:13
# Fork: 1 of 2
# Warmup Iteration   1: 4891.717 us/op
# Warmup Iteration   2: 4890.065 us/op
# Warmup Iteration   3: 4422.286 us/op
# Warmup Iteration   4: 3846.805 us/op
# Warmup Iteration   5: 3988.301 us/op
Iteration   1: 2845.593 us/op
Iteration   2: 2871.331 us/op
Iteration   3: 2873.752 us/op
Iteration   4: 2826.753 us/op
Iteration   5: 2882.213 us/op

# Run progress: 97.54% complete, ETA 00:01:08
# Fork: 2 of 2
# Warmup Iteration   1: 5525.083 us/op
# Warmup Iteration   2: 5107.061 us/op
# Warmup Iteration   3: 4271.203 us/op
# Warmup Iteration   4: 4151.142 us/op
# Warmup Iteration   5: 4204.493 us/op
Iteration   1: 3449.555 us/op
Iteration   2: 3809.465 us/op
Iteration   3: 3786.308 us/op
Iteration   4: 3845.330 us/op
Iteration   5: 3822.522 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   3301.282 ±(99.9%) 723.177 us/op

  Histogram, us/op:
    [2000.000, 2125.000) = 0 
    [2125.000, 2250.000) = 0 
    [2250.000, 2375.000) = 0 
    [2375.000, 2500.000) = 0 
    [2500.000, 2625.000) = 0 
    [2625.000, 2750.000) = 0 
    [2750.000, 2875.000) = 4 
    [2875.000, 3000.000) = 1 
    [3000.000, 3125.000) = 0 
    [3125.000, 3250.000) = 0 
    [3250.000, 3375.000) = 0 
    [3375.000, 3500.000) = 1 
    [3500.000, 3625.000) = 0 
    [3625.000, 3750.000) = 0 
    [3750.000, 3875.000) = 4 

  Percentiles, us/op:
      p(0.0000) =   2826.753 us/op
     p(50.0000) =   3165.884 us/op
     p(90.0000) =   3843.049 us/op
     p(95.0000) =   3845.330 us/op
     p(99.0000) =   3845.330 us/op
     p(99.9000) =   3845.330 us/op
     p(99.9900) =   3845.330 us/op
     p(99.9990) =   3845.330 us/op
     p(99.9999) =   3845.330 us/op
    p(100.0000) =   3845.330 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.375)

# Run progress: 97.73% complete, ETA 00:01:03
# Fork: 1 of 2
# Warmup Iteration   1: 5013.177 us/op
# Warmup Iteration   2: 5026.436 us/op
# Warmup Iteration   3: 4153.714 us/op
# Warmup Iteration   4: 4042.624 us/op
# Warmup Iteration   5: 3982.436 us/op
Iteration   1: 2957.818 us/op
Iteration   2: 2934.968 us/op
Iteration   3: 2887.567 us/op
Iteration   4: 2962.303 us/op
Iteration   5: 3005.516 us/op

# Run progress: 97.92% complete, ETA 00:00:57
# Fork: 2 of 2
# Warmup Iteration   1: 5108.642 us/op
# Warmup Iteration   2: 4975.389 us/op
# Warmup Iteration   3: 4158.107 us/op
# Warmup Iteration   4: 4033.473 us/op
# Warmup Iteration   5: 3991.110 us/op
Iteration   1: 2892.818 us/op
Iteration   2: 2962.594 us/op
Iteration   3: 2896.192 us/op
Iteration   4: 2901.983 us/op
Iteration   5: 2917.502 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2931.926 ±(99.9%) 59.281 us/op

  Histogram, us/op:
    [2800.000, 2825.000) = 0 
    [2825.000, 2850.000) = 0 
    [2850.000, 2875.000) = 0 
    [2875.000, 2900.000) = 3 
    [2900.000, 2925.000) = 2 
    [2925.000, 2950.000) = 1 
    [2950.000, 2975.000) = 3 
    [2975.000, 3000.000) = 0 
    [3000.000, 3025.000) = 1 
    [3025.000, 3050.000) = 0 
    [3050.000, 3075.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2887.567 us/op
     p(50.0000) =   2926.235 us/op
     p(90.0000) =   3001.224 us/op
     p(95.0000) =   3005.516 us/op
     p(99.0000) =   3005.516 us/op
     p(99.9000) =   3005.516 us/op
     p(99.9900) =   3005.516 us/op
     p(99.9990) =   3005.516 us/op
     p(99.9999) =   3005.516 us/op
    p(100.0000) =   3005.516 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.5)

# Run progress: 98.11% complete, ETA 00:00:52
# Fork: 1 of 2
# Warmup Iteration   1: 5117.573 us/op
# Warmup Iteration   2: 5358.550 us/op
# Warmup Iteration   3: 4137.348 us/op
# Warmup Iteration   4: 4008.941 us/op
# Warmup Iteration   5: 4039.729 us/op
Iteration   1: 2955.291 us/op
Iteration   2: 2935.439 us/op
Iteration   3: 2994.596 us/op
Iteration   4: 2946.869 us/op
Iteration   5: 2927.357 us/op

# Run progress: 98.30% complete, ETA 00:00:47
# Fork: 2 of 2
# Warmup Iteration   1: 5050.043 us/op
# Warmup Iteration   2: 4930.109 us/op
# Warmup Iteration   3: 4183.585 us/op
# Warmup Iteration   4: 4016.555 us/op
# Warmup Iteration   5: 4087.864 us/op
Iteration   1: 2929.423 us/op
Iteration   2: 2907.895 us/op
Iteration   3: 2906.961 us/op
Iteration   4: 3026.974 us/op
Iteration   5: 2939.097 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2946.990 ±(99.9%) 56.911 us/op

  Histogram, us/op:
    [2900.000, 2912.500) = 2 
    [2912.500, 2925.000) = 0 
    [2925.000, 2937.500) = 3 
    [2937.500, 2950.000) = 2 
    [2950.000, 2962.500) = 1 
    [2962.500, 2975.000) = 0 
    [2975.000, 2987.500) = 0 
    [2987.500, 3000.000) = 1 
    [3000.000, 3012.500) = 0 
    [3012.500, 3025.000) = 0 
    [3025.000, 3037.500) = 1 
    [3037.500, 3050.000) = 0 
    [3050.000, 3062.500) = 0 
    [3062.500, 3075.000) = 0 
    [3075.000, 3087.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   2906.961 us/op
     p(50.0000) =   2937.268 us/op
     p(90.0000) =   3023.736 us/op
     p(95.0000) =   3026.974 us/op
     p(99.0000) =   3026.974 us/op
     p(99.9000) =   3026.974 us/op
     p(99.9900) =   3026.974 us/op
     p(99.9990) =   3026.974 us/op
     p(99.9999) =   3026.974 us/op
    p(100.0000) =   3026.974 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.625)

# Run progress: 98.48% complete, ETA 00:00:42
# Fork: 1 of 2
# Warmup Iteration   1: 5296.141 us/op
# Warmup Iteration   2: 5017.786 us/op
# Warmup Iteration   3: 4172.500 us/op
# Warmup Iteration   4: 4033.243 us/op
# Warmup Iteration   5: 4009.904 us/op
Iteration   1: 2928.713 us/op
Iteration   2: 2943.071 us/op
Iteration   3: 3023.344 us/op
Iteration   4: 2949.144 us/op
Iteration   5: 2939.212 us/op

# Run progress: 98.67% complete, ETA 00:00:36
# Fork: 2 of 2
# Warmup Iteration   1: 5256.544 us/op
# Warmup Iteration   2: 4766.335 us/op
# Warmup Iteration   3: 4192.189 us/op
# Warmup Iteration   4: 4069.786 us/op
# Warmup Iteration   5: 3961.902 us/op
Iteration   1: 2884.970 us/op
Iteration   2: 2891.871 us/op
Iteration   3: 2902.850 us/op
Iteration   4: 2880.540 us/op
Iteration   5: 3030.898 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2937.461 ±(99.9%) 80.673 us/op

  Histogram, us/op:
    [2800.000, 2825.000) = 0 
    [2825.000, 2850.000) = 0 
    [2850.000, 2875.000) = 0 
    [2875.000, 2900.000) = 3 
    [2900.000, 2925.000) = 1 
    [2925.000, 2950.000) = 4 
    [2950.000, 2975.000) = 0 
    [2975.000, 3000.000) = 0 
    [3000.000, 3025.000) = 1 
    [3025.000, 3050.000) = 1 
    [3050.000, 3075.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2880.540 us/op
     p(50.0000) =   2933.963 us/op
     p(90.0000) =   3030.143 us/op
     p(95.0000) =   3030.898 us/op
     p(99.0000) =   3030.898 us/op
     p(99.9000) =   3030.898 us/op
     p(99.9900) =   3030.898 us/op
     p(99.9990) =   3030.898 us/op
     p(99.9999) =   3030.898 us/op
    p(100.0000) =   3030.898 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.75)

# Run progress: 98.86% complete, ETA 00:00:31
# Fork: 1 of 2
# Warmup Iteration   1: 5018.579 us/op
# Warmup Iteration   2: 4796.661 us/op
# Warmup Iteration   3: 3931.458 us/op
# Warmup Iteration   4: 3953.315 us/op
# Warmup Iteration   5: 3990.331 us/op
Iteration   1: 2846.031 us/op
Iteration   2: 2888.456 us/op
Iteration   3: 2924.087 us/op
Iteration   4: 2873.080 us/op
Iteration   5: 2885.392 us/op

# Run progress: 99.05% complete, ETA 00:00:26
# Fork: 2 of 2
# Warmup Iteration   1: 5125.703 us/op
# Warmup Iteration   2: 5328.543 us/op
# Warmup Iteration   3: 4170.790 us/op
# Warmup Iteration   4: 4025.305 us/op
# Warmup Iteration   5: 4053.681 us/op
Iteration   1: 2878.301 us/op
Iteration   2: 2884.389 us/op
Iteration   3: 2809.069 us/op
Iteration   4: 2901.136 us/op
Iteration   5: 2951.384 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2884.132 ±(99.9%) 58.924 us/op

  Histogram, us/op:
    [2800.000, 2812.500) = 1 
    [2812.500, 2825.000) = 0 
    [2825.000, 2837.500) = 0 
    [2837.500, 2850.000) = 1 
    [2850.000, 2862.500) = 0 
    [2862.500, 2875.000) = 1 
    [2875.000, 2887.500) = 3 
    [2887.500, 2900.000) = 1 
    [2900.000, 2912.500) = 1 
    [2912.500, 2925.000) = 1 
    [2925.000, 2937.500) = 0 
    [2937.500, 2950.000) = 0 
    [2950.000, 2962.500) = 1 
    [2962.500, 2975.000) = 0 
    [2975.000, 2987.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   2809.069 us/op
     p(50.0000) =   2884.891 us/op
     p(90.0000) =   2948.654 us/op
     p(95.0000) =   2951.384 us/op
     p(99.0000) =   2951.384 us/op
     p(99.9000) =   2951.384 us/op
     p(99.9900) =   2951.384 us/op
     p(99.9990) =   2951.384 us/op
     p(99.9999) =   2951.384 us/op
    p(100.0000) =   2951.384 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.875)

# Run progress: 99.24% complete, ETA 00:00:21
# Fork: 1 of 2
# Warmup Iteration   1: 4950.366 us/op
# Warmup Iteration   2: 4641.872 us/op
# Warmup Iteration   3: 4705.141 us/op
# Warmup Iteration   4: 3899.017 us/op
# Warmup Iteration   5: 3916.057 us/op
Iteration   1: 2830.104 us/op
Iteration   2: 3704.610 us/op
Iteration   3: 2834.514 us/op
Iteration   4: 2839.231 us/op
Iteration   5: 2872.228 us/op

# Run progress: 99.43% complete, ETA 00:00:15
# Fork: 2 of 2
# Warmup Iteration   1: 5137.874 us/op
# Warmup Iteration   2: 4773.883 us/op
# Warmup Iteration   3: 4392.605 us/op
# Warmup Iteration   4: 3982.555 us/op
# Warmup Iteration   5: 3958.233 us/op
Iteration   1: 2887.343 us/op
Iteration   2: 2927.578 us/op
Iteration   3: 2887.379 us/op
Iteration   4: 2908.606 us/op
Iteration   5: 2912.714 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2960.431 ±(99.9%) 398.675 us/op

  Histogram, us/op:
    [2800.000, 2900.000) = 6 
    [2900.000, 3000.000) = 3 
    [3000.000, 3100.000) = 0 
    [3100.000, 3200.000) = 0 
    [3200.000, 3300.000) = 0 
    [3300.000, 3400.000) = 0 
    [3400.000, 3500.000) = 0 
    [3500.000, 3600.000) = 0 
    [3600.000, 3700.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2830.104 us/op
     p(50.0000) =   2887.361 us/op
     p(90.0000) =   3626.907 us/op
     p(95.0000) =   3704.610 us/op
     p(99.0000) =   3704.610 us/op
     p(99.9000) =   3704.610 us/op
     p(99.9900) =   3704.610 us/op
     p(99.9990) =   3704.610 us/op
     p(99.9999) =   3704.610 us/op
    p(100.0000) =   3704.610 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 1000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 1)

# Run progress: 99.62% complete, ETA 00:00:10
# Fork: 1 of 2
# Warmup Iteration   1: 5259.915 us/op
# Warmup Iteration   2: 5044.813 us/op
# Warmup Iteration   3: 4218.769 us/op
# Warmup Iteration   4: 3996.291 us/op
# Warmup Iteration   5: 4067.770 us/op
Iteration   1: 2939.587 us/op
Iteration   2: 3076.380 us/op
Iteration   3: 2920.508 us/op
Iteration   4: 3657.658 us/op
Iteration   5: 3161.627 us/op

# Run progress: 99.81% complete, ETA 00:00:05
# Fork: 2 of 2
# Warmup Iteration   1: 4910.870 us/op
# Warmup Iteration   2: 4816.033 us/op
# Warmup Iteration   3: 3962.486 us/op
# Warmup Iteration   4: 4057.350 us/op
# Warmup Iteration   5: 3950.733 us/op
Iteration   1: 2927.904 us/op
Iteration   2: 2911.516 us/op
Iteration   3: 2914.236 us/op
Iteration   4: 2901.723 us/op
Iteration   5: 2920.796 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   3033.194 ±(99.9%) 356.254 us/op

  Histogram, us/op:
    [2900.000, 2950.000) = 7 
    [2950.000, 3000.000) = 0 
    [3000.000, 3050.000) = 0 
    [3050.000, 3100.000) = 1 
    [3100.000, 3150.000) = 0 
    [3150.000, 3200.000) = 1 
    [3200.000, 3250.000) = 0 
    [3250.000, 3300.000) = 0 
    [3300.000, 3350.000) = 0 
    [3350.000, 3400.000) = 0 
    [3400.000, 3450.000) = 0 
    [3450.000, 3500.000) = 0 
    [3500.000, 3550.000) = 0 
    [3550.000, 3600.000) = 0 
    [3600.000, 3650.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2901.723 us/op
     p(50.0000) =   2924.350 us/op
     p(90.0000) =   3608.055 us/op
     p(95.0000) =   3657.658 us/op
     p(99.0000) =   3657.658 us/op
     p(99.9000) =   3657.658 us/op
     p(99.9900) =   3657.658 us/op
     p(99.9990) =   3657.658 us/op
     p(99.9999) =   3657.658 us/op
    p(100.0000) =   3657.658 us/op


# Run complete. Total time: 00:46:17

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                    (initialCapacity)  (loadFactor)  Mode  Cnt     Score     Error  Units
JavaHashMapBenchMarkPut.put                                 16         0.125    ss   10   180.796 ±  82.168  us/op
JavaHashMapBenchMarkPut.put                                 16         0.250    ss   10   195.461 ±  51.914  us/op
JavaHashMapBenchMarkPut.put                                 16         0.375    ss   10   205.966 ±  82.202  us/op
JavaHashMapBenchMarkPut.put                                 16           0.5    ss   10   181.849 ±  74.940  us/op
JavaHashMapBenchMarkPut.put                                 16         0.625    ss   10   190.448 ±  86.066  us/op
JavaHashMapBenchMarkPut.put                                 16          0.75    ss   10   174.273 ±  49.577  us/op
JavaHashMapBenchMarkPut.put                                 16         0.875    ss   10   180.760 ±  61.487  us/op
JavaHashMapBenchMarkPut.put                                 16             1    ss   10   156.672 ±  50.385  us/op
JavaHashMapBenchMarkPut.put                                100         0.125    ss   10   196.561 ±  41.475  us/op
JavaHashMapBenchMarkPut.put                                100         0.250    ss   10   184.885 ±  56.750  us/op
JavaHashMapBenchMarkPut.put                                100         0.375    ss   10   221.827 ± 104.603  us/op
JavaHashMapBenchMarkPut.put                                100           0.5    ss   10   177.972 ±  98.347  us/op
JavaHashMapBenchMarkPut.put                                100         0.625    ss   10   168.692 ±  37.728  us/op
JavaHashMapBenchMarkPut.put                                100          0.75    ss   10   155.192 ±  42.250  us/op
JavaHashMapBenchMarkPut.put                                100         0.875    ss   10   171.479 ±  49.341  us/op
JavaHashMapBenchMarkPut.put                                100             1    ss   10   145.691 ±  30.143  us/op
JavaHashMapBenchMarkPut.put                               1024         0.125    ss   10   163.015 ±  29.947  us/op
JavaHashMapBenchMarkPut.put                               1024         0.250    ss   10   180.421 ±  66.359  us/op
JavaHashMapBenchMarkPut.put                               1024         0.375    ss   10   171.177 ±  82.293  us/op
JavaHashMapBenchMarkPut.put                               1024           0.5    ss   10   177.794 ± 113.531  us/op
JavaHashMapBenchMarkPut.put                               1024         0.625    ss   10   129.289 ±  23.222  us/op
JavaHashMapBenchMarkPut.put                               1024          0.75    ss   10   139.629 ±  50.775  us/op
JavaHashMapBenchMarkPut.put                               1024         0.875    ss   10   134.852 ±  37.415  us/op
JavaHashMapBenchMarkPut.put                               1024             1    ss   10   116.020 ±  48.090  us/op
JavaHashMapBenchMarkPut.put                               1000         0.125    ss   10   146.690 ±  39.373  us/op
JavaHashMapBenchMarkPut.put                               1000         0.250    ss   10   145.116 ±  32.641  us/op
JavaHashMapBenchMarkPut.put                               1000         0.375    ss   10   173.587 ±  63.631  us/op
JavaHashMapBenchMarkPut.put                               1000           0.5    ss   10   153.936 ±  99.063  us/op
JavaHashMapBenchMarkPut.put                               1000         0.625    ss   10   126.434 ±  22.889  us/op
JavaHashMapBenchMarkPut.put                               1000          0.75    ss   10   130.244 ±  25.308  us/op
JavaHashMapBenchMarkPut.put                               1000         0.875    ss   10   126.647 ±  19.105  us/op
JavaHashMapBenchMarkPut.put                               1000             1    ss   10   104.708 ±  27.125  us/op
JavaHashMapBenchMarkPut.put                              10000         0.125    ss   10   128.652 ±  34.878  us/op
JavaHashMapBenchMarkPut.put                              10000         0.250    ss   10   124.494 ±  18.477  us/op
JavaHashMapBenchMarkPut.put                              10000         0.375    ss   10   135.992 ±  28.143  us/op
JavaHashMapBenchMarkPut.put                              10000           0.5    ss   10   122.996 ±  27.093  us/op
JavaHashMapBenchMarkPut.put                              10000         0.625    ss   10   118.837 ±  26.214  us/op
JavaHashMapBenchMarkPut.put                              10000          0.75    ss   10   121.611 ±  23.246  us/op
JavaHashMapBenchMarkPut.put                              10000         0.875    ss   10   130.311 ±  37.623  us/op
JavaHashMapBenchMarkPut.put                              10000             1    ss   10   125.589 ±  31.991  us/op
JavaHashMapBenchMarkPut.put                              65536         0.125    ss   10   191.880 ±  28.952  us/op
JavaHashMapBenchMarkPut.put                              65536         0.250    ss   10   197.566 ±  41.655  us/op
JavaHashMapBenchMarkPut.put                              65536         0.375    ss   10   211.541 ±  49.483  us/op
JavaHashMapBenchMarkPut.put                              65536           0.5    ss   10   209.563 ±  59.645  us/op
JavaHashMapBenchMarkPut.put                              65536         0.625    ss   10   187.627 ±  32.735  us/op
JavaHashMapBenchMarkPut.put                              65536          0.75    ss   10   205.291 ±  52.842  us/op
JavaHashMapBenchMarkPut.put                              65536         0.875    ss   10   211.409 ±  69.065  us/op
JavaHashMapBenchMarkPut.put                              65536             1    ss   10   191.613 ±  28.064  us/op
JavaHashMapBenchMarkPut.put                             100000         0.125    ss   10   290.578 ±  44.432  us/op
JavaHashMapBenchMarkPut.put                             100000         0.250    ss   10   280.690 ±  46.873  us/op
JavaHashMapBenchMarkPut.put                             100000         0.375    ss   10   280.114 ±  39.590  us/op
JavaHashMapBenchMarkPut.put                             100000           0.5    ss   10   303.417 ±  42.626  us/op
JavaHashMapBenchMarkPut.put                             100000         0.625    ss   10   282.265 ±  36.019  us/op
JavaHashMapBenchMarkPut.put                             100000          0.75    ss   10   280.791 ±  38.272  us/op
JavaHashMapBenchMarkPut.put                             100000         0.875    ss   10   275.739 ±  30.457  us/op
JavaHashMapBenchMarkPut.put                             100000             1    ss   10   291.834 ±  47.503  us/op
JavaHashMapBenchMarkPut.put                             524288         0.125    ss   10   817.651 ±  41.639  us/op
JavaHashMapBenchMarkPut.put                             524288         0.250    ss   10   827.480 ± 128.462  us/op
JavaHashMapBenchMarkPut.put                             524288         0.375    ss   10   807.259 ±  36.799  us/op
JavaHashMapBenchMarkPut.put                             524288           0.5    ss   10   826.522 ±  46.054  us/op
JavaHashMapBenchMarkPut.put                             524288         0.625    ss   10   822.588 ±  39.389  us/op
JavaHashMapBenchMarkPut.put                             524288          0.75    ss   10   847.571 ±  69.037  us/op
JavaHashMapBenchMarkPut.put                             524288         0.875    ss   10   842.756 ±  76.291  us/op
JavaHashMapBenchMarkPut.put                             524288             1    ss   10   814.011 ±  37.011  us/op
JavaHashMapBenchMarkPut.put                            1000000         0.125    ss   10  1543.936 ± 112.934  us/op
JavaHashMapBenchMarkPut.put                            1000000         0.250    ss   10  1488.646 ±  44.607  us/op
JavaHashMapBenchMarkPut.put                            1000000         0.375    ss   10  1490.796 ±  69.624  us/op
JavaHashMapBenchMarkPut.put                            1000000           0.5    ss   10  1517.220 ±  94.732  us/op
JavaHashMapBenchMarkPut.put                            1000000         0.625    ss   10  1492.486 ±  94.870  us/op
JavaHashMapBenchMarkPut.put                            1000000          0.75    ss   10  1493.748 ±  52.405  us/op
JavaHashMapBenchMarkPut.put                            1000000         0.875    ss   10  1528.979 ±  85.191  us/op
JavaHashMapBenchMarkPut.put                            1000000             1    ss   10  1524.636 ± 104.766  us/op
JavaHashMapBenchMarkPut.put                            1048576         0.125    ss   10  1502.010 ±  31.340  us/op
JavaHashMapBenchMarkPut.put                            1048576         0.250    ss   10  1497.494 ±  47.524  us/op
JavaHashMapBenchMarkPut.put                            1048576         0.375    ss   10  1514.449 ±  43.620  us/op
JavaHashMapBenchMarkPut.put                            1048576           0.5    ss   10  1510.505 ±  34.364  us/op
JavaHashMapBenchMarkPut.put                            1048576         0.625    ss   10  1509.380 ±  39.398  us/op
JavaHashMapBenchMarkPut.put                            1048576          0.75    ss   10  1502.934 ±  73.372  us/op
JavaHashMapBenchMarkPut.put                            1048576         0.875    ss   10  1530.914 ±  94.940  us/op
JavaHashMapBenchMarkPut.put                            1048576             1    ss   10  1527.752 ±  66.097  us/op
JavaHashMapBenchMarkPut.put                            2097152         0.125    ss   10  2871.776 ±  53.380  us/op
JavaHashMapBenchMarkPut.put                            2097152         0.250    ss   10  2915.495 ±  67.572  us/op
JavaHashMapBenchMarkPut.put                            2097152         0.375    ss   10  2982.850 ± 116.332  us/op
JavaHashMapBenchMarkPut.put                            2097152           0.5    ss   10  2914.679 ±  81.459  us/op
JavaHashMapBenchMarkPut.put                            2097152         0.625    ss   10  3375.349 ± 706.296  us/op
JavaHashMapBenchMarkPut.put                            2097152          0.75    ss   10  2930.436 ±  67.992  us/op
JavaHashMapBenchMarkPut.put                            2097152         0.875    ss   10  2847.518 ±  66.384  us/op
JavaHashMapBenchMarkPut.put                            2097152             1    ss   10  2886.109 ±  45.642  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16         0.125    ss   10   158.634 ±  43.994  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16         0.250    ss   10   183.500 ±  54.940  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16         0.375    ss   10   193.264 ±  64.022  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16           0.5    ss   10   171.237 ±  70.399  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16         0.625    ss   10   149.790 ±  28.914  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16          0.75    ss   10   165.663 ±  40.050  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16         0.875    ss   10   156.843 ±  19.676  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16             1    ss   10   134.635 ±  30.689  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100         0.125    ss   10   195.104 ±  57.689  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100         0.250    ss   10   171.025 ±  29.932  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100         0.375    ss   10   199.543 ±  78.398  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100           0.5    ss   10   163.629 ±  80.228  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100         0.625    ss   10   148.010 ±  32.853  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100          0.75    ss   10   149.857 ±  28.449  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100         0.875    ss   10   156.762 ±  28.297  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100             1    ss   10   136.773 ±  40.817  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024         0.125    ss   10   160.777 ±  36.048  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024         0.250    ss   10   147.467 ±  30.171  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024         0.375    ss   10   181.576 ±  99.276  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024           0.5    ss   10   154.825 ±  82.360  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024         0.625    ss   10   146.626 ±  53.894  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024          0.75    ss   10   145.571 ±  35.608  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024         0.875    ss   10   137.679 ±  26.570  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024             1    ss   10   120.683 ±  37.643  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000         0.125    ss   10   146.891 ±  23.572  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000         0.250    ss   10   153.091 ±  40.125  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000         0.375    ss   10   167.113 ±  52.489  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000           0.5    ss   10   146.424 ±  63.847  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000         0.625    ss   10   133.550 ±  28.076  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000          0.75    ss   10   137.301 ±  55.330  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000         0.875    ss   10   143.750 ±  42.630  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000             1    ss   10   109.251 ±  33.726  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000         0.125    ss   10   133.762 ±  37.245  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000         0.250    ss   10   122.355 ±  25.841  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000         0.375    ss   10   133.583 ±  34.161  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000           0.5    ss   10   133.333 ±  23.040  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000         0.625    ss   10   145.715 ±  68.299  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000          0.75    ss   10   134.309 ±  43.175  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000         0.875    ss   10   136.252 ±  40.950  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000             1    ss   10   151.821 ±  36.628  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536         0.125    ss   10   203.884 ±  46.633  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536         0.250    ss   10   195.319 ±  50.294  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536         0.375    ss   10   204.335 ±  47.152  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536           0.5    ss   10   202.842 ±  50.428  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536         0.625    ss   10   195.203 ±  29.906  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536          0.75    ss   10   193.206 ±  60.151  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536         0.875    ss   10   200.668 ±  55.177  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536             1    ss   10   197.777 ±  48.026  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000         0.125    ss   10   287.276 ±  46.157  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000         0.250    ss   10   282.592 ±  46.307  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000         0.375    ss   10   282.644 ±  38.800  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000           0.5    ss   10   290.361 ±  42.795  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000         0.625    ss   10   285.052 ±  42.475  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000          0.75    ss   10   288.124 ±  40.223  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000         0.875    ss   10   284.705 ±  42.498  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000             1    ss   10   281.812 ±  41.771  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288         0.125    ss   10   813.267 ±  50.207  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288         0.250    ss   10   810.297 ±  50.522  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288         0.375    ss   10   824.767 ±  80.614  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288           0.5    ss   10   827.304 ±  28.879  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288         0.625    ss   10   805.147 ±  49.064  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288          0.75    ss   10   821.296 ±  59.376  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288         0.875    ss   10   820.935 ±  35.489  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288             1    ss   10   829.644 ±  50.253  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000         0.125    ss   10  1502.107 ±  50.976  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000         0.250    ss   10  1499.514 ±  57.256  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000         0.375    ss   10  1479.648 ±  83.013  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000           0.5    ss   10  1540.606 ±  79.379  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000         0.625    ss   10  1502.467 ±  76.563  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000          0.75    ss   10  1522.819 ±  70.189  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000         0.875    ss   10  1515.372 ±  44.246  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000             1    ss   10  1507.708 ± 117.020  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576         0.125    ss   10  1537.491 ±  70.313  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576         0.250    ss   10  1488.144 ±  61.282  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576         0.375    ss   10  1553.902 ±  50.085  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576           0.5    ss   10  1513.781 ±  40.769  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576         0.625    ss   10  1520.745 ±  43.072  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576          0.75    ss   10  1516.593 ±  65.491  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576         0.875    ss   10  1495.984 ±  99.709  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576             1    ss   10  1523.096 ±  52.130  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152         0.125    ss   10  2966.463 ± 215.207  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152         0.250    ss   10  2857.042 ±  55.626  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152         0.375    ss   10  3230.386 ± 540.758  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152           0.5    ss   10  2861.140 ± 123.889  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152         0.625    ss   10  2867.089 ±  46.959  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152          0.75    ss   10  2909.545 ±  92.032  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152         0.875    ss   10  2865.939 ±  89.002  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152             1    ss   10  2959.376 ±  54.201  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16         0.125    ss   10   153.935 ±  47.305  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16         0.250    ss   10   164.981 ±  40.478  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16         0.375    ss   10   176.612 ±  61.171  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16           0.5    ss   10   152.716 ±  56.470  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16         0.625    ss   10   160.898 ±  66.543  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16          0.75    ss   10   148.229 ±  33.508  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16         0.875    ss   10   169.137 ±  45.746  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16             1    ss   10   136.766 ±  55.193  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100         0.125    ss   10   194.717 ±  60.167  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100         0.250    ss   10   159.790 ±  38.929  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100         0.375    ss   10   183.611 ±  89.382  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100           0.5    ss   10   166.523 ±  91.518  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100         0.625    ss   10   145.475 ±  24.350  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100          0.75    ss   10   143.739 ±  28.869  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100         0.875    ss   10   157.580 ±  39.458  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100             1    ss   10   156.183 ±  80.736  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024         0.125    ss   10   141.150 ±  41.434  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024         0.250    ss   10   142.232 ±  24.765  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024         0.375    ss   10   167.563 ±  68.455  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024           0.5    ss   10   131.752 ±  59.630  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024         0.625    ss   10   133.550 ±  53.494  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024          0.75    ss   10   131.251 ±  37.110  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024         0.875    ss   10   123.195 ±  14.322  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024             1    ss   10   112.060 ±  42.909  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000         0.125    ss   10   142.949 ±  28.467  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000         0.250    ss   10   143.397 ±  36.160  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000         0.375    ss   10   160.326 ±  92.515  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000           0.5    ss   10   134.616 ±  66.212  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000         0.625    ss   10   127.113 ±  51.965  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000          0.75    ss   10   116.284 ±   7.532  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000         0.875    ss   10   137.783 ±  46.780  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000             1    ss   10   103.223 ±  19.868  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000         0.125    ss   10   129.205 ±  32.899  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000         0.250    ss   10   128.440 ±  43.937  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000         0.375    ss   10   130.112 ±  30.601  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000           0.5    ss   10   119.116 ±  27.844  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000         0.625    ss   10   121.579 ±  35.505  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000          0.75    ss   10   128.330 ±  36.020  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000         0.875    ss   10   119.886 ±  26.562  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000             1    ss   10   117.357 ±  19.749  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536         0.125    ss   10   201.743 ±  59.503  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536         0.250    ss   10   215.127 ± 101.458  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536         0.375    ss   10   195.238 ±  37.554  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536           0.5    ss   10   203.951 ±  48.944  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536         0.625    ss   10   202.474 ±  40.243  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536          0.75    ss   10   194.346 ±  32.072  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536         0.875    ss   10   192.315 ±  25.223  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536             1    ss   10   193.279 ±  32.356  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000         0.125    ss   10   279.866 ±  27.398  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000         0.250    ss   10   347.209 ±  97.186  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000         0.375    ss   10   323.957 ± 121.613  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000           0.5    ss   10   282.006 ±  32.952  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000         0.625    ss   10   285.832 ±  31.354  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000          0.75    ss   10   280.025 ±  33.313  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000         0.875    ss   10   280.518 ±  41.791  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000             1    ss   10   290.122 ±  44.697  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288         0.125    ss   10   820.887 ±  51.437  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288         0.250    ss   10   848.338 ±  47.909  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288         0.375    ss   10   860.914 ± 216.511  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288           0.5    ss   10   853.983 ± 130.530  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288         0.625    ss   10   818.046 ±  18.634  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288          0.75    ss   10   834.426 ±  54.286  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288         0.875    ss   10   848.541 ±  83.416  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288             1    ss   10   862.798 ± 149.193  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000         0.125    ss   10  1592.142 ± 166.595  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000         0.250    ss   10  1539.705 ± 114.112  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000         0.375    ss   10  1547.511 ±  88.359  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000           0.5    ss   10  1500.578 ±  25.421  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000         0.625    ss   10  1520.887 ±  44.541  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000          0.75    ss   10  1590.821 ± 175.615  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000         0.875    ss   10  1527.652 ±  42.536  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000             1    ss   10  1544.584 ±  60.980  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576         0.125    ss   10  1538.035 ± 152.227  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576         0.250    ss   10  1539.374 ±  97.618  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576         0.375    ss   10  1543.475 ±  97.078  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576           0.5    ss   10  1535.387 ±  68.545  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576         0.625    ss   10  1525.420 ±  94.609  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576          0.75    ss   10  1663.688 ± 423.853  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576         0.875    ss   10  1539.548 ±  41.730  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576             1    ss   10  1531.013 ±  55.919  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152         0.125    ss   10  3376.655 ± 508.723  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152         0.250    ss   10  3301.282 ± 723.177  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152         0.375    ss   10  2931.926 ±  59.281  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152           0.5    ss   10  2946.990 ±  56.911  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152         0.625    ss   10  2937.461 ±  80.673  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152          0.75    ss   10  2884.132 ±  58.924  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152         0.875    ss   10  2960.431 ± 398.675  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152             1    ss   10  3033.194 ± 356.254  us/op

Benchmark result is saved to results/machine_out_1000.csv
