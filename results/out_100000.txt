# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.125)

# Run progress: 0.00% complete, ETA 00:00:05
# Fork: 1 of 2
# Warmup Iteration   1: 2932.393 us/op
# Warmup Iteration   2: 2422.368 us/op
# Warmup Iteration   3: 2062.182 us/op
# Warmup Iteration   4: 2097.293 us/op
# Warmup Iteration   5: 1909.727 us/op
Iteration   1: 16181.237 us/op
Iteration   2: 20544.633 us/op
Iteration   3: 12163.153 us/op
Iteration   4: 22022.644 us/op
Iteration   5: 11956.938 us/op

# Run progress: 0.19% complete, ETA 00:47:22
# Fork: 2 of 2
# Warmup Iteration   1: 2935.526 us/op
# Warmup Iteration   2: 2425.779 us/op
# Warmup Iteration   3: 1867.297 us/op
# Warmup Iteration   4: 1846.450 us/op
# Warmup Iteration   5: 1787.917 us/op
Iteration   1: 16522.890 us/op
Iteration   2: 20557.556 us/op
Iteration   3: 12503.297 us/op
Iteration   4: 21351.626 us/op
Iteration   5: 11962.900 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  16576.687 ±(99.9%) 6432.269 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 3 
    [12500.000, 13750.000) = 1 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 1 
    [16250.000, 17500.000) = 1 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 2 
    [21250.000, 22500.000) = 2 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  11956.938 us/op
     p(50.0000) =  16352.064 us/op
     p(90.0000) =  21955.542 us/op
     p(95.0000) =  22022.644 us/op
     p(99.0000) =  22022.644 us/op
     p(99.9000) =  22022.644 us/op
     p(99.9900) =  22022.644 us/op
     p(99.9990) =  22022.644 us/op
     p(99.9999) =  22022.644 us/op
    p(100.0000) =  22022.644 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.250)

# Run progress: 0.38% complete, ETA 00:47:11
# Fork: 1 of 2
# Warmup Iteration   1: 2821.382 us/op
# Warmup Iteration   2: 1940.026 us/op
# Warmup Iteration   3: 1752.949 us/op
# Warmup Iteration   4: 1517.334 us/op
# Warmup Iteration   5: 1682.930 us/op
Iteration   1: 12781.790 us/op
Iteration   2: 18030.970 us/op
Iteration   3: 9329.678 us/op
Iteration   4: 18800.982 us/op
Iteration   5: 9156.144 us/op

# Run progress: 0.57% complete, ETA 00:47:03
# Fork: 2 of 2
# Warmup Iteration   1: 2592.969 us/op
# Warmup Iteration   2: 1852.574 us/op
# Warmup Iteration   3: 1695.216 us/op
# Warmup Iteration   4: 1532.214 us/op
# Warmup Iteration   5: 1596.524 us/op
Iteration   1: 12631.807 us/op
Iteration   2: 18171.849 us/op
Iteration   3: 9665.867 us/op
Iteration   4: 18772.704 us/op
Iteration   5: 9155.176 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  13649.697 ±(99.9%) 6554.132 us/op

  Histogram, us/op:
    [ 9000.000, 10000.000) = 4 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 2 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 0 
    [17000.000, 18000.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   9155.176 us/op
     p(50.0000) =  12706.799 us/op
     p(90.0000) =  18798.154 us/op
     p(95.0000) =  18800.982 us/op
     p(99.0000) =  18800.982 us/op
     p(99.9000) =  18800.982 us/op
     p(99.9900) =  18800.982 us/op
     p(99.9990) =  18800.982 us/op
     p(99.9999) =  18800.982 us/op
    p(100.0000) =  18800.982 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.375)

# Run progress: 0.76% complete, ETA 00:46:54
# Fork: 1 of 2
# Warmup Iteration   1: 2850.243 us/op
# Warmup Iteration   2: 1711.335 us/op
# Warmup Iteration   3: 1660.291 us/op
# Warmup Iteration   4: 1352.616 us/op
# Warmup Iteration   5: 1281.884 us/op
Iteration   1: 14309.109 us/op
Iteration   2: 20631.834 us/op
Iteration   3: 10479.660 us/op
Iteration   4: 18763.498 us/op
Iteration   5: 10214.942 us/op

# Run progress: 0.95% complete, ETA 00:46:47
# Fork: 2 of 2
# Warmup Iteration   1: 3293.754 us/op
# Warmup Iteration   2: 1635.496 us/op
# Warmup Iteration   3: 1437.825 us/op
# Warmup Iteration   4: 1376.775 us/op
# Warmup Iteration   5: 1240.262 us/op
Iteration   1: 14138.692 us/op
Iteration   2: 20494.308 us/op
Iteration   3: 10368.665 us/op
Iteration   4: 18549.417 us/op
Iteration   5: 10149.267 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  14809.939 ±(99.9%) 6720.434 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 4 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 2 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 1 
    [18750.000, 20000.000) = 1 
    [20000.000, 21250.000) = 2 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10149.267 us/op
     p(50.0000) =  14223.901 us/op
     p(90.0000) =  20618.081 us/op
     p(95.0000) =  20631.834 us/op
     p(99.0000) =  20631.834 us/op
     p(99.9000) =  20631.834 us/op
     p(99.9900) =  20631.834 us/op
     p(99.9990) =  20631.834 us/op
     p(99.9999) =  20631.834 us/op
    p(100.0000) =  20631.834 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.5)

# Run progress: 1.14% complete, ETA 00:46:41
# Fork: 1 of 2
# Warmup Iteration   1: 2761.395 us/op
# Warmup Iteration   2: 1847.409 us/op
# Warmup Iteration   3: 1444.312 us/op
# Warmup Iteration   4: 1547.225 us/op
# Warmup Iteration   5: 1472.409 us/op
Iteration   1: 11554.572 us/op
Iteration   2: 14995.894 us/op
Iteration   3: 7866.333 us/op
Iteration   4: 7453.214 us/op
Iteration   5: 8785.149 us/op

# Run progress: 1.33% complete, ETA 00:46:33
# Fork: 2 of 2
# Warmup Iteration   1: 2492.464 us/op
# Warmup Iteration   2: 1814.038 us/op
# Warmup Iteration   3: 1541.335 us/op
# Warmup Iteration   4: 1389.026 us/op
# Warmup Iteration   5: 1355.132 us/op
Iteration   1: 11782.608 us/op
Iteration   2: 15301.451 us/op
Iteration   3: 8025.877 us/op
Iteration   4: 7489.414 us/op
Iteration   5: 9021.090 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  10227.560 ±(99.9%) 4558.301 us/op

  Histogram, us/op:
    [ 7000.000,  7500.000) = 2 
    [ 7500.000,  8000.000) = 1 
    [ 8000.000,  8500.000) = 1 
    [ 8500.000,  9000.000) = 1 
    [ 9000.000,  9500.000) = 1 
    [ 9500.000, 10000.000) = 0 
    [10000.000, 10500.000) = 0 
    [10500.000, 11000.000) = 0 
    [11000.000, 11500.000) = 0 
    [11500.000, 12000.000) = 2 
    [12000.000, 12500.000) = 0 
    [12500.000, 13000.000) = 0 
    [13000.000, 13500.000) = 0 
    [13500.000, 14000.000) = 0 
    [14000.000, 14500.000) = 0 
    [14500.000, 15000.000) = 1 
    [15000.000, 15500.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   7453.214 us/op
     p(50.0000) =   8903.120 us/op
     p(90.0000) =  15270.895 us/op
     p(95.0000) =  15301.451 us/op
     p(99.0000) =  15301.451 us/op
     p(99.9000) =  15301.451 us/op
     p(99.9900) =  15301.451 us/op
     p(99.9990) =  15301.451 us/op
     p(99.9999) =  15301.451 us/op
    p(100.0000) =  15301.451 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.625)

# Run progress: 1.52% complete, ETA 00:46:25
# Fork: 1 of 2
# Warmup Iteration   1: 2332.130 us/op
# Warmup Iteration   2: 1527.188 us/op
# Warmup Iteration   3: 1523.707 us/op
# Warmup Iteration   4: 1252.365 us/op
# Warmup Iteration   5: 1154.768 us/op
Iteration   1: 12787.770 us/op
Iteration   2: 16499.941 us/op
Iteration   3: 8824.103 us/op
Iteration   4: 8524.172 us/op
Iteration   5: 9573.993 us/op

# Run progress: 1.70% complete, ETA 00:46:19
# Fork: 2 of 2
# Warmup Iteration   1: 2505.743 us/op
# Warmup Iteration   2: 1527.674 us/op
# Warmup Iteration   3: 1464.768 us/op
# Warmup Iteration   4: 1291.065 us/op
# Warmup Iteration   5: 1156.696 us/op
Iteration   1: 12918.978 us/op
Iteration   2: 16435.535 us/op
Iteration   3: 8597.548 us/op
Iteration   4: 8607.720 us/op
Iteration   5: 9475.999 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  11224.576 ±(99.9%) 4856.903 us/op

  Histogram, us/op:
    [ 8000.000,  8500.000) = 0 
    [ 8500.000,  9000.000) = 4 
    [ 9000.000,  9500.000) = 1 
    [ 9500.000, 10000.000) = 1 
    [10000.000, 10500.000) = 0 
    [10500.000, 11000.000) = 0 
    [11000.000, 11500.000) = 0 
    [11500.000, 12000.000) = 0 
    [12000.000, 12500.000) = 0 
    [12500.000, 13000.000) = 2 
    [13000.000, 13500.000) = 0 
    [13500.000, 14000.000) = 0 
    [14000.000, 14500.000) = 0 
    [14500.000, 15000.000) = 0 
    [15000.000, 15500.000) = 0 
    [15500.000, 16000.000) = 0 
    [16000.000, 16500.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   8524.172 us/op
     p(50.0000) =   9524.996 us/op
     p(90.0000) =  16493.500 us/op
     p(95.0000) =  16499.941 us/op
     p(99.0000) =  16499.941 us/op
     p(99.9000) =  16499.941 us/op
     p(99.9900) =  16499.941 us/op
     p(99.9990) =  16499.941 us/op
     p(99.9999) =  16499.941 us/op
    p(100.0000) =  16499.941 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.75)

# Run progress: 1.89% complete, ETA 00:46:13
# Fork: 1 of 2
# Warmup Iteration   1: 2404.467 us/op
# Warmup Iteration   2: 1576.486 us/op
# Warmup Iteration   3: 1454.294 us/op
# Warmup Iteration   4: 1352.154 us/op
# Warmup Iteration   5: 1210.026 us/op
Iteration   1: 14993.531 us/op
Iteration   2: 18402.601 us/op
Iteration   3: 9416.536 us/op
Iteration   4: 9418.928 us/op
Iteration   5: 10840.766 us/op

# Run progress: 2.08% complete, ETA 00:46:07
# Fork: 2 of 2
# Warmup Iteration   1: 2530.129 us/op
# Warmup Iteration   2: 1579.691 us/op
# Warmup Iteration   3: 1456.391 us/op
# Warmup Iteration   4: 1303.307 us/op
# Warmup Iteration   5: 1180.157 us/op
Iteration   1: 14401.597 us/op
Iteration   2: 17587.081 us/op
Iteration   3: 9551.858 us/op
Iteration   4: 9589.749 us/op
Iteration   5: 10788.459 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  12499.111 ±(99.9%) 5342.779 us/op

  Histogram, us/op:
    [ 9000.000, 10000.000) = 4 
    [10000.000, 11000.000) = 2 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 2 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 0 
    [17000.000, 18000.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   9416.536 us/op
     p(50.0000) =  10814.613 us/op
     p(90.0000) =  18321.049 us/op
     p(95.0000) =  18402.601 us/op
     p(99.0000) =  18402.601 us/op
     p(99.9000) =  18402.601 us/op
     p(99.9900) =  18402.601 us/op
     p(99.9990) =  18402.601 us/op
     p(99.9999) =  18402.601 us/op
    p(100.0000) =  18402.601 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.875)

# Run progress: 2.27% complete, ETA 00:46:01
# Fork: 1 of 2
# Warmup Iteration   1: 2730.503 us/op
# Warmup Iteration   2: 1655.942 us/op
# Warmup Iteration   3: 1615.901 us/op
# Warmup Iteration   4: 1379.598 us/op
# Warmup Iteration   5: 1284.183 us/op
Iteration   1: 12200.542 us/op
Iteration   2: 17140.576 us/op
Iteration   3: 7938.613 us/op
Iteration   4: 7906.760 us/op
Iteration   5: 8142.529 us/op

# Run progress: 2.46% complete, ETA 00:45:55
# Fork: 2 of 2
# Warmup Iteration   1: 2807.236 us/op
# Warmup Iteration   2: 1611.064 us/op
# Warmup Iteration   3: 1413.597 us/op
# Warmup Iteration   4: 1262.132 us/op
# Warmup Iteration   5: 1255.460 us/op
Iteration   1: 11916.505 us/op
Iteration   2: 17235.908 us/op
Iteration   3: 8240.929 us/op
Iteration   4: 7671.944 us/op
Iteration   5: 7710.476 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  10610.478 ±(99.9%) 5833.062 us/op

  Histogram, us/op:
    [ 7000.000,  8000.000) = 4 
    [ 8000.000,  9000.000) = 2 
    [ 9000.000, 10000.000) = 0 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 1 
    [12000.000, 13000.000) = 1 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   7671.944 us/op
     p(50.0000) =   8191.729 us/op
     p(90.0000) =  17226.375 us/op
     p(95.0000) =  17235.908 us/op
     p(99.0000) =  17235.908 us/op
     p(99.9000) =  17235.908 us/op
     p(99.9900) =  17235.908 us/op
     p(99.9990) =  17235.908 us/op
     p(99.9999) =  17235.908 us/op
    p(100.0000) =  17235.908 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 1)

# Run progress: 2.65% complete, ETA 00:45:48
# Fork: 1 of 2
# Warmup Iteration   1: 2394.781 us/op
# Warmup Iteration   2: 1715.355 us/op
# Warmup Iteration   3: 1542.916 us/op
# Warmup Iteration   4: 1630.904 us/op
# Warmup Iteration   5: 1317.004 us/op
Iteration   1: 11935.162 us/op
Iteration   2: 17033.991 us/op
Iteration   3: 8341.209 us/op
Iteration   4: 8027.028 us/op
Iteration   5: 9784.495 us/op

# Run progress: 2.84% complete, ETA 00:45:43
# Fork: 2 of 2
# Warmup Iteration   1: 2450.997 us/op
# Warmup Iteration   2: 1732.441 us/op
# Warmup Iteration   3: 1643.396 us/op
# Warmup Iteration   4: 1317.595 us/op
# Warmup Iteration   5: 1335.778 us/op
Iteration   1: 12272.345 us/op
Iteration   2: 17258.408 us/op
Iteration   3: 8182.268 us/op
Iteration   4: 7911.691 us/op
Iteration   5: 9896.707 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  11064.330 ±(99.9%) 5383.298 us/op

  Histogram, us/op:
    [ 7000.000,  8000.000) = 1 
    [ 8000.000,  9000.000) = 3 
    [ 9000.000, 10000.000) = 2 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 1 
    [12000.000, 13000.000) = 1 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   7911.691 us/op
     p(50.0000) =   9840.601 us/op
     p(90.0000) =  17235.966 us/op
     p(95.0000) =  17258.408 us/op
     p(99.0000) =  17258.408 us/op
     p(99.9000) =  17258.408 us/op
     p(99.9900) =  17258.408 us/op
     p(99.9990) =  17258.408 us/op
     p(99.9999) =  17258.408 us/op
    p(100.0000) =  17258.408 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.125)

# Run progress: 3.03% complete, ETA 00:45:37
# Fork: 1 of 2
# Warmup Iteration   1: 2985.711 us/op
# Warmup Iteration   2: 2522.291 us/op
# Warmup Iteration   3: 2140.594 us/op
# Warmup Iteration   4: 1965.195 us/op
# Warmup Iteration   5: 1988.101 us/op
Iteration   1: 17475.119 us/op
Iteration   2: 20997.479 us/op
Iteration   3: 12440.405 us/op
Iteration   4: 22145.173 us/op
Iteration   5: 12161.724 us/op

# Run progress: 3.22% complete, ETA 00:45:32
# Fork: 2 of 2
# Warmup Iteration   1: 2858.460 us/op
# Warmup Iteration   2: 2393.250 us/op
# Warmup Iteration   3: 2219.020 us/op
# Warmup Iteration   4: 1982.388 us/op
# Warmup Iteration   5: 1874.510 us/op
Iteration   1: 17331.206 us/op
Iteration   2: 20685.591 us/op
Iteration   3: 11918.301 us/op
Iteration   4: 22514.938 us/op
Iteration   5: 12120.402 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  16979.034 ±(99.9%) 6772.768 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 4 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 2 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 2 
    [21250.000, 22500.000) = 1 
    [22500.000, 23750.000) = 1 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  11918.301 us/op
     p(50.0000) =  17403.163 us/op
     p(90.0000) =  22477.961 us/op
     p(95.0000) =  22514.938 us/op
     p(99.0000) =  22514.938 us/op
     p(99.9000) =  22514.938 us/op
     p(99.9900) =  22514.938 us/op
     p(99.9990) =  22514.938 us/op
     p(99.9999) =  22514.938 us/op
    p(100.0000) =  22514.938 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.250)

# Run progress: 3.41% complete, ETA 00:45:27
# Fork: 1 of 2
# Warmup Iteration   1: 3173.082 us/op
# Warmup Iteration   2: 1908.951 us/op
# Warmup Iteration   3: 1737.757 us/op
# Warmup Iteration   4: 1694.113 us/op
# Warmup Iteration   5: 1558.944 us/op
Iteration   1: 13821.943 us/op
Iteration   2: 19661.806 us/op
Iteration   3: 9039.587 us/op
Iteration   4: 18506.692 us/op
Iteration   5: 10051.348 us/op

# Run progress: 3.60% complete, ETA 00:45:22
# Fork: 2 of 2
# Warmup Iteration   1: 2551.595 us/op
# Warmup Iteration   2: 1898.169 us/op
# Warmup Iteration   3: 1633.025 us/op
# Warmup Iteration   4: 1497.726 us/op
# Warmup Iteration   5: 1639.373 us/op
Iteration   1: 12214.527 us/op
Iteration   2: 18291.977 us/op
Iteration   3: 9160.414 us/op
Iteration   4: 18595.296 us/op
Iteration   5: 8920.665 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  13826.426 ±(99.9%) 6840.424 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 0 
    [ 7500.000,  8750.000) = 0 
    [ 8750.000, 10000.000) = 3 
    [10000.000, 11250.000) = 1 
    [11250.000, 12500.000) = 1 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 1 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 3 

  Percentiles, us/op:
      p(0.0000) =   8920.665 us/op
     p(50.0000) =  13018.235 us/op
     p(90.0000) =  19555.155 us/op
     p(95.0000) =  19661.806 us/op
     p(99.0000) =  19661.806 us/op
     p(99.9000) =  19661.806 us/op
     p(99.9900) =  19661.806 us/op
     p(99.9990) =  19661.806 us/op
     p(99.9999) =  19661.806 us/op
    p(100.0000) =  19661.806 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.375)

# Run progress: 3.79% complete, ETA 00:45:16
# Fork: 1 of 2
# Warmup Iteration   1: 2810.833 us/op
# Warmup Iteration   2: 1639.610 us/op
# Warmup Iteration   3: 1523.806 us/op
# Warmup Iteration   4: 1356.509 us/op
# Warmup Iteration   5: 1292.138 us/op
Iteration   1: 14225.464 us/op
Iteration   2: 20551.267 us/op
Iteration   3: 10491.971 us/op
Iteration   4: 18642.574 us/op
Iteration   5: 10394.028 us/op

# Run progress: 3.98% complete, ETA 00:45:11
# Fork: 2 of 2
# Warmup Iteration   1: 2926.967 us/op
# Warmup Iteration   2: 1591.715 us/op
# Warmup Iteration   3: 1317.469 us/op
# Warmup Iteration   4: 1267.026 us/op
# Warmup Iteration   5: 1259.207 us/op
Iteration   1: 14250.421 us/op
Iteration   2: 20519.631 us/op
Iteration   3: 10369.004 us/op
Iteration   4: 18149.999 us/op
Iteration   5: 10381.229 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  14797.559 ±(99.9%) 6561.882 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 4 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 2 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 2 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 2 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10369.004 us/op
     p(50.0000) =  14237.943 us/op
     p(90.0000) =  20548.103 us/op
     p(95.0000) =  20551.267 us/op
     p(99.0000) =  20551.267 us/op
     p(99.9000) =  20551.267 us/op
     p(99.9900) =  20551.267 us/op
     p(99.9990) =  20551.267 us/op
     p(99.9999) =  20551.267 us/op
    p(100.0000) =  20551.267 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.5)

# Run progress: 4.17% complete, ETA 00:45:06
# Fork: 1 of 2
# Warmup Iteration   1: 2398.004 us/op
# Warmup Iteration   2: 1884.610 us/op
# Warmup Iteration   3: 1617.931 us/op
# Warmup Iteration   4: 1507.610 us/op
# Warmup Iteration   5: 1380.814 us/op
Iteration   1: 11612.402 us/op
Iteration   2: 14713.926 us/op
Iteration   3: 8060.598 us/op
Iteration   4: 7595.002 us/op
Iteration   5: 8899.832 us/op

# Run progress: 4.36% complete, ETA 00:45:00
# Fork: 2 of 2
# Warmup Iteration   1: 3048.174 us/op
# Warmup Iteration   2: 1775.217 us/op
# Warmup Iteration   3: 1632.474 us/op
# Warmup Iteration   4: 1408.659 us/op
# Warmup Iteration   5: 1358.206 us/op
Iteration   1: 12000.500 us/op
Iteration   2: 15192.789 us/op
Iteration   3: 8071.312 us/op
Iteration   4: 7490.305 us/op
Iteration   5: 8710.564 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  10234.723 ±(99.9%) 4441.470 us/op

  Histogram, us/op:
    [ 7000.000,  7500.000) = 1 
    [ 7500.000,  8000.000) = 1 
    [ 8000.000,  8500.000) = 2 
    [ 8500.000,  9000.000) = 2 
    [ 9000.000,  9500.000) = 0 
    [ 9500.000, 10000.000) = 0 
    [10000.000, 10500.000) = 0 
    [10500.000, 11000.000) = 0 
    [11000.000, 11500.000) = 0 
    [11500.000, 12000.000) = 1 
    [12000.000, 12500.000) = 1 
    [12500.000, 13000.000) = 0 
    [13000.000, 13500.000) = 0 
    [13500.000, 14000.000) = 0 
    [14000.000, 14500.000) = 0 
    [14500.000, 15000.000) = 1 
    [15000.000, 15500.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   7490.305 us/op
     p(50.0000) =   8805.198 us/op
     p(90.0000) =  15144.903 us/op
     p(95.0000) =  15192.789 us/op
     p(99.0000) =  15192.789 us/op
     p(99.9000) =  15192.789 us/op
     p(99.9900) =  15192.789 us/op
     p(99.9990) =  15192.789 us/op
     p(99.9999) =  15192.789 us/op
    p(100.0000) =  15192.789 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.625)

# Run progress: 4.55% complete, ETA 00:44:54
# Fork: 1 of 2
# Warmup Iteration   1: 2399.306 us/op
# Warmup Iteration   2: 1673.806 us/op
# Warmup Iteration   3: 1433.461 us/op
# Warmup Iteration   4: 1255.857 us/op
# Warmup Iteration   5: 1131.147 us/op
Iteration   1: 12807.024 us/op
Iteration   2: 17443.966 us/op
Iteration   3: 8542.014 us/op
Iteration   4: 8441.028 us/op
Iteration   5: 9839.415 us/op

# Run progress: 4.73% complete, ETA 00:44:49
# Fork: 2 of 2
# Warmup Iteration   1: 2649.095 us/op
# Warmup Iteration   2: 1575.680 us/op
# Warmup Iteration   3: 1560.076 us/op
# Warmup Iteration   4: 1289.599 us/op
# Warmup Iteration   5: 1132.699 us/op
Iteration   1: 13187.481 us/op
Iteration   2: 16873.467 us/op
Iteration   3: 8887.777 us/op
Iteration   4: 8648.217 us/op
Iteration   5: 9749.861 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  11442.025 ±(99.9%) 5227.789 us/op

  Histogram, us/op:
    [ 8000.000,  9000.000) = 4 
    [ 9000.000, 10000.000) = 2 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 1 
    [13000.000, 14000.000) = 1 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   8441.028 us/op
     p(50.0000) =   9794.638 us/op
     p(90.0000) =  17386.916 us/op
     p(95.0000) =  17443.966 us/op
     p(99.0000) =  17443.966 us/op
     p(99.9000) =  17443.966 us/op
     p(99.9900) =  17443.966 us/op
     p(99.9990) =  17443.966 us/op
     p(99.9999) =  17443.966 us/op
    p(100.0000) =  17443.966 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.75)

# Run progress: 4.92% complete, ETA 00:44:43
# Fork: 1 of 2
# Warmup Iteration   1: 2503.718 us/op
# Warmup Iteration   2: 1609.793 us/op
# Warmup Iteration   3: 1481.243 us/op
# Warmup Iteration   4: 1341.866 us/op
# Warmup Iteration   5: 1222.037 us/op
Iteration   1: 14342.924 us/op
Iteration   2: 17994.886 us/op
Iteration   3: 9385.877 us/op
Iteration   4: 9332.587 us/op
Iteration   5: 10273.994 us/op

# Run progress: 5.11% complete, ETA 00:44:38
# Fork: 2 of 2
# Warmup Iteration   1: 2692.403 us/op
# Warmup Iteration   2: 1589.414 us/op
# Warmup Iteration   3: 1610.633 us/op
# Warmup Iteration   4: 1459.486 us/op
# Warmup Iteration   5: 1184.830 us/op
Iteration   1: 13540.821 us/op
Iteration   2: 17787.344 us/op
Iteration   3: 9290.633 us/op
Iteration   4: 9371.317 us/op
Iteration   5: 10766.010 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  12208.639 ±(99.9%) 5274.948 us/op

  Histogram, us/op:
    [ 9000.000,  9500.000) = 4 
    [ 9500.000, 10000.000) = 0 
    [10000.000, 10500.000) = 1 
    [10500.000, 11000.000) = 1 
    [11000.000, 11500.000) = 0 
    [11500.000, 12000.000) = 0 
    [12000.000, 12500.000) = 0 
    [12500.000, 13000.000) = 0 
    [13000.000, 13500.000) = 0 
    [13500.000, 14000.000) = 1 
    [14000.000, 14500.000) = 1 
    [14500.000, 15000.000) = 0 
    [15000.000, 15500.000) = 0 
    [15500.000, 16000.000) = 0 
    [16000.000, 16500.000) = 0 
    [16500.000, 17000.000) = 0 
    [17000.000, 17500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   9290.633 us/op
     p(50.0000) =  10520.002 us/op
     p(90.0000) =  17974.132 us/op
     p(95.0000) =  17994.886 us/op
     p(99.0000) =  17994.886 us/op
     p(99.9000) =  17994.886 us/op
     p(99.9900) =  17994.886 us/op
     p(99.9990) =  17994.886 us/op
     p(99.9999) =  17994.886 us/op
    p(100.0000) =  17994.886 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.875)

# Run progress: 5.30% complete, ETA 00:44:32
# Fork: 1 of 2
# Warmup Iteration   1: 2785.728 us/op
# Warmup Iteration   2: 1627.135 us/op
# Warmup Iteration   3: 1537.281 us/op
# Warmup Iteration   4: 1346.648 us/op
# Warmup Iteration   5: 1216.253 us/op
Iteration   1: 12106.981 us/op
Iteration   2: 16950.470 us/op
Iteration   3: 8124.814 us/op
Iteration   4: 7547.477 us/op
Iteration   5: 7631.899 us/op

# Run progress: 5.49% complete, ETA 00:44:27
# Fork: 2 of 2
# Warmup Iteration   1: 2860.252 us/op
# Warmup Iteration   2: 1656.040 us/op
# Warmup Iteration   3: 1431.677 us/op
# Warmup Iteration   4: 1313.513 us/op
# Warmup Iteration   5: 1326.836 us/op
Iteration   1: 12583.846 us/op
Iteration   2: 17201.323 us/op
Iteration   3: 8023.458 us/op
Iteration   4: 7533.890 us/op
Iteration   5: 7567.114 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  10527.127 ±(99.9%) 5953.287 us/op

  Histogram, us/op:
    [ 7000.000,  8000.000) = 4 
    [ 8000.000,  9000.000) = 2 
    [ 9000.000, 10000.000) = 0 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 2 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   7533.890 us/op
     p(50.0000) =   8074.136 us/op
     p(90.0000) =  17176.238 us/op
     p(95.0000) =  17201.323 us/op
     p(99.0000) =  17201.323 us/op
     p(99.9000) =  17201.323 us/op
     p(99.9900) =  17201.323 us/op
     p(99.9990) =  17201.323 us/op
     p(99.9999) =  17201.323 us/op
    p(100.0000) =  17201.323 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 1)

# Run progress: 5.68% complete, ETA 00:44:21
# Fork: 1 of 2
# Warmup Iteration   1: 2764.268 us/op
# Warmup Iteration   2: 1660.638 us/op
# Warmup Iteration   3: 1424.154 us/op
# Warmup Iteration   4: 1319.808 us/op
# Warmup Iteration   5: 1369.824 us/op
Iteration   1: 11768.021 us/op
Iteration   2: 17196.961 us/op
Iteration   3: 8319.560 us/op
Iteration   4: 7889.948 us/op
Iteration   5: 9658.032 us/op

# Run progress: 5.87% complete, ETA 00:44:15
# Fork: 2 of 2
# Warmup Iteration   1: 2931.600 us/op
# Warmup Iteration   2: 1661.270 us/op
# Warmup Iteration   3: 1543.084 us/op
# Warmup Iteration   4: 1478.920 us/op
# Warmup Iteration   5: 1350.442 us/op
Iteration   1: 13071.789 us/op
Iteration   2: 18468.975 us/op
Iteration   3: 9053.161 us/op
Iteration   4: 8070.032 us/op
Iteration   5: 9822.830 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  11331.931 ±(99.9%) 5754.488 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 0 
    [ 7500.000,  8750.000) = 3 
    [ 8750.000, 10000.000) = 3 
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 1 
    [12500.000, 13750.000) = 1 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 1 
    [17500.000, 18750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   7889.948 us/op
     p(50.0000) =   9740.431 us/op
     p(90.0000) =  18341.774 us/op
     p(95.0000) =  18468.975 us/op
     p(99.0000) =  18468.975 us/op
     p(99.9000) =  18468.975 us/op
     p(99.9900) =  18468.975 us/op
     p(99.9990) =  18468.975 us/op
     p(99.9999) =  18468.975 us/op
    p(100.0000) =  18468.975 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.125)

# Run progress: 6.06% complete, ETA 00:44:10
# Fork: 1 of 2
# Warmup Iteration   1: 3052.787 us/op
# Warmup Iteration   2: 2501.884 us/op
# Warmup Iteration   3: 1923.755 us/op
# Warmup Iteration   4: 1891.867 us/op
# Warmup Iteration   5: 1853.908 us/op
Iteration   1: 15960.161 us/op
Iteration   2: 20777.304 us/op
Iteration   3: 12412.215 us/op
Iteration   4: 22077.024 us/op
Iteration   5: 12394.693 us/op

# Run progress: 6.25% complete, ETA 00:44:05
# Fork: 2 of 2
# Warmup Iteration   1: 3118.956 us/op
# Warmup Iteration   2: 2521.984 us/op
# Warmup Iteration   3: 1878.211 us/op
# Warmup Iteration   4: 1790.864 us/op
# Warmup Iteration   5: 1688.069 us/op
Iteration   1: 17438.040 us/op
Iteration   2: 21306.896 us/op
Iteration   3: 13594.298 us/op
Iteration   4: 26982.600 us/op
Iteration   5: 16944.360 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  17988.759 ±(99.9%) 7190.839 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 2 
    [12500.000, 13750.000) = 1 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 1 
    [16250.000, 17500.000) = 2 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 1 
    [21250.000, 22500.000) = 2 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 1 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  12394.693 us/op
     p(50.0000) =  17191.200 us/op
     p(90.0000) =  26492.042 us/op
     p(95.0000) =  26982.600 us/op
     p(99.0000) =  26982.600 us/op
     p(99.9000) =  26982.600 us/op
     p(99.9900) =  26982.600 us/op
     p(99.9990) =  26982.600 us/op
     p(99.9999) =  26982.600 us/op
    p(100.0000) =  26982.600 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.250)

# Run progress: 6.44% complete, ETA 00:44:00
# Fork: 1 of 2
# Warmup Iteration   1: 2708.322 us/op
# Warmup Iteration   2: 1985.138 us/op
# Warmup Iteration   3: 1722.446 us/op
# Warmup Iteration   4: 1498.027 us/op
# Warmup Iteration   5: 1547.198 us/op
Iteration   1: 12490.994 us/op
Iteration   2: 18257.861 us/op
Iteration   3: 9343.908 us/op
Iteration   4: 18722.824 us/op
Iteration   5: 8947.836 us/op

# Run progress: 6.63% complete, ETA 00:43:55
# Fork: 2 of 2
# Warmup Iteration   1: 2822.614 us/op
# Warmup Iteration   2: 2061.883 us/op
# Warmup Iteration   3: 1605.042 us/op
# Warmup Iteration   4: 1462.057 us/op
# Warmup Iteration   5: 1506.601 us/op
Iteration   1: 12372.597 us/op
Iteration   2: 18539.265 us/op
Iteration   3: 9053.819 us/op
Iteration   4: 18633.165 us/op
Iteration   5: 9104.594 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  13546.686 ±(99.9%) 6780.164 us/op

  Histogram, us/op:
    [ 8000.000,  9000.000) = 1 
    [ 9000.000, 10000.000) = 3 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 2 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 0 
    [17000.000, 18000.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8947.836 us/op
     p(50.0000) =  12431.796 us/op
     p(90.0000) =  18713.858 us/op
     p(95.0000) =  18722.824 us/op
     p(99.0000) =  18722.824 us/op
     p(99.9000) =  18722.824 us/op
     p(99.9900) =  18722.824 us/op
     p(99.9990) =  18722.824 us/op
     p(99.9999) =  18722.824 us/op
    p(100.0000) =  18722.824 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.375)

# Run progress: 6.82% complete, ETA 00:43:50
# Fork: 1 of 2
# Warmup Iteration   1: 2381.302 us/op
# Warmup Iteration   2: 1605.313 us/op
# Warmup Iteration   3: 1337.203 us/op
# Warmup Iteration   4: 1250.656 us/op
# Warmup Iteration   5: 1276.770 us/op
Iteration   1: 14450.369 us/op
Iteration   2: 21286.445 us/op
Iteration   3: 10279.268 us/op
Iteration   4: 18645.476 us/op
Iteration   5: 10415.294 us/op

# Run progress: 7.01% complete, ETA 00:43:44
# Fork: 2 of 2
# Warmup Iteration   1: 2658.219 us/op
# Warmup Iteration   2: 1613.679 us/op
# Warmup Iteration   3: 1332.981 us/op
# Warmup Iteration   4: 1296.228 us/op
# Warmup Iteration   5: 1264.730 us/op
Iteration   1: 14581.390 us/op
Iteration   2: 20951.865 us/op
Iteration   3: 10368.270 us/op
Iteration   4: 18757.665 us/op
Iteration   5: 10128.490 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  14986.453 ±(99.9%) 6970.566 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 4 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 2 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 1 
    [18750.000, 20000.000) = 1 
    [20000.000, 21250.000) = 1 
    [21250.000, 22500.000) = 1 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10128.490 us/op
     p(50.0000) =  14515.880 us/op
     p(90.0000) =  21252.987 us/op
     p(95.0000) =  21286.445 us/op
     p(99.0000) =  21286.445 us/op
     p(99.9000) =  21286.445 us/op
     p(99.9900) =  21286.445 us/op
     p(99.9990) =  21286.445 us/op
     p(99.9999) =  21286.445 us/op
    p(100.0000) =  21286.445 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.5)

# Run progress: 7.20% complete, ETA 00:43:39
# Fork: 1 of 2
# Warmup Iteration   1: 2430.471 us/op
# Warmup Iteration   2: 1776.075 us/op
# Warmup Iteration   3: 1528.339 us/op
# Warmup Iteration   4: 1402.735 us/op
# Warmup Iteration   5: 1358.404 us/op
Iteration   1: 11723.223 us/op
Iteration   2: 15155.871 us/op
Iteration   3: 8201.071 us/op
Iteration   4: 7484.145 us/op
Iteration   5: 12864.381 us/op

# Run progress: 7.39% complete, ETA 00:43:33
# Fork: 2 of 2
# Warmup Iteration   1: 2553.962 us/op
# Warmup Iteration   2: 1741.245 us/op
# Warmup Iteration   3: 1589.995 us/op
# Warmup Iteration   4: 1629.863 us/op
# Warmup Iteration   5: 1329.936 us/op
Iteration   1: 11610.596 us/op
Iteration   2: 15274.441 us/op
Iteration   3: 8105.950 us/op
Iteration   4: 7502.493 us/op
Iteration   5: 12944.626 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  11086.680 ±(99.9%) 4630.433 us/op

  Histogram, us/op:
    [ 7000.000,  7500.000) = 1 
    [ 7500.000,  8000.000) = 1 
    [ 8000.000,  8500.000) = 2 
    [ 8500.000,  9000.000) = 0 
    [ 9000.000,  9500.000) = 0 
    [ 9500.000, 10000.000) = 0 
    [10000.000, 10500.000) = 0 
    [10500.000, 11000.000) = 0 
    [11000.000, 11500.000) = 0 
    [11500.000, 12000.000) = 2 
    [12000.000, 12500.000) = 0 
    [12500.000, 13000.000) = 2 
    [13000.000, 13500.000) = 0 
    [13500.000, 14000.000) = 0 
    [14000.000, 14500.000) = 0 
    [14500.000, 15000.000) = 0 
    [15000.000, 15500.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   7484.145 us/op
     p(50.0000) =  11666.910 us/op
     p(90.0000) =  15262.584 us/op
     p(95.0000) =  15274.441 us/op
     p(99.0000) =  15274.441 us/op
     p(99.9000) =  15274.441 us/op
     p(99.9900) =  15274.441 us/op
     p(99.9990) =  15274.441 us/op
     p(99.9999) =  15274.441 us/op
    p(100.0000) =  15274.441 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.625)

# Run progress: 7.58% complete, ETA 00:43:28
# Fork: 1 of 2
# Warmup Iteration   1: 2340.213 us/op
# Warmup Iteration   2: 1636.931 us/op
# Warmup Iteration   3: 1466.071 us/op
# Warmup Iteration   4: 1172.975 us/op
# Warmup Iteration   5: 1135.351 us/op
Iteration   1: 13082.395 us/op
Iteration   2: 17038.230 us/op
Iteration   3: 9143.717 us/op
Iteration   4: 8564.365 us/op
Iteration   5: 9433.579 us/op

# Run progress: 7.77% complete, ETA 00:43:22
# Fork: 2 of 2
# Warmup Iteration   1: 2310.477 us/op
# Warmup Iteration   2: 1492.308 us/op
# Warmup Iteration   3: 1399.924 us/op
# Warmup Iteration   4: 1194.131 us/op
# Warmup Iteration   5: 1144.542 us/op
Iteration   1: 12918.780 us/op
Iteration   2: 16996.120 us/op
Iteration   3: 8890.147 us/op
Iteration   4: 8634.558 us/op
Iteration   5: 10185.505 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  11488.740 ±(99.9%) 5054.245 us/op

  Histogram, us/op:
    [ 8000.000,  9000.000) = 3 
    [ 9000.000, 10000.000) = 2 
    [10000.000, 11000.000) = 1 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 1 
    [13000.000, 14000.000) = 1 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   8564.365 us/op
     p(50.0000) =   9809.542 us/op
     p(90.0000) =  17034.019 us/op
     p(95.0000) =  17038.230 us/op
     p(99.0000) =  17038.230 us/op
     p(99.9000) =  17038.230 us/op
     p(99.9900) =  17038.230 us/op
     p(99.9990) =  17038.230 us/op
     p(99.9999) =  17038.230 us/op
    p(100.0000) =  17038.230 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.75)

# Run progress: 7.95% complete, ETA 00:43:17
# Fork: 1 of 2
# Warmup Iteration   1: 2385.370 us/op
# Warmup Iteration   2: 1580.199 us/op
# Warmup Iteration   3: 1552.056 us/op
# Warmup Iteration   4: 1234.341 us/op
# Warmup Iteration   5: 1172.555 us/op
Iteration   1: 13659.315 us/op
Iteration   2: 17424.052 us/op
Iteration   3: 9518.252 us/op
Iteration   4: 9434.527 us/op
Iteration   5: 10261.062 us/op

# Run progress: 8.14% complete, ETA 00:43:11
# Fork: 2 of 2
# Warmup Iteration   1: 2558.986 us/op
# Warmup Iteration   2: 1666.756 us/op
# Warmup Iteration   3: 1491.399 us/op
# Warmup Iteration   4: 1345.210 us/op
# Warmup Iteration   5: 1204.676 us/op
Iteration   1: 14052.769 us/op
Iteration   2: 17829.013 us/op
Iteration   3: 9489.565 us/op
Iteration   4: 9438.277 us/op
Iteration   5: 10479.532 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  12158.636 ±(99.9%) 5066.024 us/op

  Histogram, us/op:
    [ 9000.000,  9500.000) = 3 
    [ 9500.000, 10000.000) = 1 
    [10000.000, 10500.000) = 2 
    [10500.000, 11000.000) = 0 
    [11000.000, 11500.000) = 0 
    [11500.000, 12000.000) = 0 
    [12000.000, 12500.000) = 0 
    [12500.000, 13000.000) = 0 
    [13000.000, 13500.000) = 0 
    [13500.000, 14000.000) = 1 
    [14000.000, 14500.000) = 1 
    [14500.000, 15000.000) = 0 
    [15000.000, 15500.000) = 0 
    [15500.000, 16000.000) = 0 
    [16000.000, 16500.000) = 0 
    [16500.000, 17000.000) = 0 
    [17000.000, 17500.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   9434.527 us/op
     p(50.0000) =  10370.297 us/op
     p(90.0000) =  17788.517 us/op
     p(95.0000) =  17829.013 us/op
     p(99.0000) =  17829.013 us/op
     p(99.9000) =  17829.013 us/op
     p(99.9900) =  17829.013 us/op
     p(99.9990) =  17829.013 us/op
     p(99.9999) =  17829.013 us/op
    p(100.0000) =  17829.013 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.875)

# Run progress: 8.33% complete, ETA 00:43:06
# Fork: 1 of 2
# Warmup Iteration   1: 2719.248 us/op
# Warmup Iteration   2: 1678.840 us/op
# Warmup Iteration   3: 1340.772 us/op
# Warmup Iteration   4: 1314.462 us/op
# Warmup Iteration   5: 1312.953 us/op
Iteration   1: 12418.571 us/op
Iteration   2: 18842.384 us/op
Iteration   3: 8311.618 us/op
Iteration   4: 7786.570 us/op
Iteration   5: 8367.316 us/op

# Run progress: 8.52% complete, ETA 00:43:01
# Fork: 2 of 2
# Warmup Iteration   1: 2594.175 us/op
# Warmup Iteration   2: 1620.569 us/op
# Warmup Iteration   3: 1468.053 us/op
# Warmup Iteration   4: 1387.677 us/op
# Warmup Iteration   5: 1240.655 us/op
Iteration   1: 11868.359 us/op
Iteration   2: 16449.838 us/op
Iteration   3: 8120.123 us/op
Iteration   4: 7420.318 us/op
Iteration   5: 7574.270 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  10715.937 ±(99.9%) 6182.229 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 1 
    [ 7500.000,  8750.000) = 5 
    [ 8750.000, 10000.000) = 0 
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 2 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 1 
    [17500.000, 18750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   7420.318 us/op
     p(50.0000) =   8339.467 us/op
     p(90.0000) =  18603.129 us/op
     p(95.0000) =  18842.384 us/op
     p(99.0000) =  18842.384 us/op
     p(99.9000) =  18842.384 us/op
     p(99.9900) =  18842.384 us/op
     p(99.9990) =  18842.384 us/op
     p(99.9999) =  18842.384 us/op
    p(100.0000) =  18842.384 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 1)

# Run progress: 8.71% complete, ETA 00:42:55
# Fork: 1 of 2
# Warmup Iteration   1: 2833.374 us/op
# Warmup Iteration   2: 1698.637 us/op
# Warmup Iteration   3: 1436.283 us/op
# Warmup Iteration   4: 1295.017 us/op
# Warmup Iteration   5: 1284.833 us/op
Iteration   1: 11766.979 us/op
Iteration   2: 17246.395 us/op
Iteration   3: 8178.316 us/op
Iteration   4: 7715.361 us/op
Iteration   5: 9754.011 us/op

# Run progress: 8.90% complete, ETA 00:42:50
# Fork: 2 of 2
# Warmup Iteration   1: 2899.568 us/op
# Warmup Iteration   2: 1671.100 us/op
# Warmup Iteration   3: 1584.507 us/op
# Warmup Iteration   4: 1411.176 us/op
# Warmup Iteration   5: 1272.524 us/op
Iteration   1: 11814.635 us/op
Iteration   2: 17217.073 us/op
Iteration   3: 8429.582 us/op
Iteration   4: 7961.872 us/op
Iteration   5: 9752.755 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  10983.698 ±(99.9%) 5442.099 us/op

  Histogram, us/op:
    [ 7000.000,  8000.000) = 2 
    [ 8000.000,  9000.000) = 2 
    [ 9000.000, 10000.000) = 2 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 2 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   7715.361 us/op
     p(50.0000) =   9753.383 us/op
     p(90.0000) =  17243.463 us/op
     p(95.0000) =  17246.395 us/op
     p(99.0000) =  17246.395 us/op
     p(99.9000) =  17246.395 us/op
     p(99.9900) =  17246.395 us/op
     p(99.9990) =  17246.395 us/op
     p(99.9999) =  17246.395 us/op
    p(100.0000) =  17246.395 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.125)

# Run progress: 9.09% complete, ETA 00:42:44
# Fork: 1 of 2
# Warmup Iteration   1: 2966.966 us/op
# Warmup Iteration   2: 2411.531 us/op
# Warmup Iteration   3: 1931.203 us/op
# Warmup Iteration   4: 1748.736 us/op
# Warmup Iteration   5: 1644.144 us/op
Iteration   1: 16313.045 us/op
Iteration   2: 20636.380 us/op
Iteration   3: 12450.302 us/op
Iteration   4: 21157.460 us/op
Iteration   5: 12033.634 us/op

# Run progress: 9.28% complete, ETA 00:42:39
# Fork: 2 of 2
# Warmup Iteration   1: 2904.297 us/op
# Warmup Iteration   2: 2300.205 us/op
# Warmup Iteration   3: 1942.369 us/op
# Warmup Iteration   4: 1720.577 us/op
# Warmup Iteration   5: 1708.632 us/op
Iteration   1: 16316.910 us/op
Iteration   2: 20881.109 us/op
Iteration   3: 12342.684 us/op
Iteration   4: 21890.148 us/op
Iteration   5: 12077.437 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  16609.911 ±(99.9%) 6378.292 us/op

  Histogram, us/op:
    [12000.000, 13000.000) = 4 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 2 
    [17000.000, 18000.000) = 0 
    [18000.000, 19000.000) = 0 
    [19000.000, 20000.000) = 0 
    [20000.000, 21000.000) = 2 

  Percentiles, us/op:
      p(0.0000) =  12033.634 us/op
     p(50.0000) =  16314.978 us/op
     p(90.0000) =  21816.879 us/op
     p(95.0000) =  21890.148 us/op
     p(99.0000) =  21890.148 us/op
     p(99.9000) =  21890.148 us/op
     p(99.9900) =  21890.148 us/op
     p(99.9990) =  21890.148 us/op
     p(99.9999) =  21890.148 us/op
    p(100.0000) =  21890.148 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.250)

# Run progress: 9.47% complete, ETA 00:42:34
# Fork: 1 of 2
# Warmup Iteration   1: 2802.741 us/op
# Warmup Iteration   2: 1834.164 us/op
# Warmup Iteration   3: 1554.675 us/op
# Warmup Iteration   4: 1474.946 us/op
# Warmup Iteration   5: 1517.959 us/op
Iteration   1: 12548.831 us/op
Iteration   2: 18137.000 us/op
Iteration   3: 9208.333 us/op
Iteration   4: 18698.945 us/op
Iteration   5: 9289.521 us/op

# Run progress: 9.66% complete, ETA 00:42:29
# Fork: 2 of 2
# Warmup Iteration   1: 2742.819 us/op
# Warmup Iteration   2: 1901.103 us/op
# Warmup Iteration   3: 1578.978 us/op
# Warmup Iteration   4: 1436.484 us/op
# Warmup Iteration   5: 1550.881 us/op
Iteration   1: 12357.787 us/op
Iteration   2: 17793.831 us/op
Iteration   3: 9297.823 us/op
Iteration   4: 18525.809 us/op
Iteration   5: 8888.900 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  13474.678 ±(99.9%) 6561.000 us/op

  Histogram, us/op:
    [ 8000.000,  9000.000) = 1 
    [ 9000.000, 10000.000) = 3 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 2 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 0 
    [17000.000, 18000.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   8888.900 us/op
     p(50.0000) =  12453.309 us/op
     p(90.0000) =  18681.631 us/op
     p(95.0000) =  18698.945 us/op
     p(99.0000) =  18698.945 us/op
     p(99.9000) =  18698.945 us/op
     p(99.9900) =  18698.945 us/op
     p(99.9990) =  18698.945 us/op
     p(99.9999) =  18698.945 us/op
    p(100.0000) =  18698.945 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.375)

# Run progress: 9.85% complete, ETA 00:42:24
# Fork: 1 of 2
# Warmup Iteration   1: 2629.498 us/op
# Warmup Iteration   2: 1668.217 us/op
# Warmup Iteration   3: 1473.954 us/op
# Warmup Iteration   4: 1345.760 us/op
# Warmup Iteration   5: 1312.725 us/op
Iteration   1: 14453.481 us/op
Iteration   2: 21463.431 us/op
Iteration   3: 10339.174 us/op
Iteration   4: 18596.347 us/op
Iteration   5: 10197.827 us/op

# Run progress: 10.04% complete, ETA 00:42:18
# Fork: 2 of 2
# Warmup Iteration   1: 2614.519 us/op
# Warmup Iteration   2: 1722.046 us/op
# Warmup Iteration   3: 1421.213 us/op
# Warmup Iteration   4: 1245.640 us/op
# Warmup Iteration   5: 1213.699 us/op
Iteration   1: 14870.442 us/op
Iteration   2: 20996.611 us/op
Iteration   3: 10279.206 us/op
Iteration   4: 18574.249 us/op
Iteration   5: 10053.608 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  14982.438 ±(99.9%) 7042.607 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 4 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 2 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 2 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 1 
    [21250.000, 22500.000) = 1 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10053.608 us/op
     p(50.0000) =  14661.962 us/op
     p(90.0000) =  21416.749 us/op
     p(95.0000) =  21463.431 us/op
     p(99.0000) =  21463.431 us/op
     p(99.9000) =  21463.431 us/op
     p(99.9900) =  21463.431 us/op
     p(99.9990) =  21463.431 us/op
     p(99.9999) =  21463.431 us/op
    p(100.0000) =  21463.431 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.5)

# Run progress: 10.23% complete, ETA 00:42:13
# Fork: 1 of 2
# Warmup Iteration   1: 2547.075 us/op
# Warmup Iteration   2: 1701.419 us/op
# Warmup Iteration   3: 1464.109 us/op
# Warmup Iteration   4: 1420.508 us/op
# Warmup Iteration   5: 1377.281 us/op
Iteration   1: 11659.095 us/op
Iteration   2: 15425.751 us/op
Iteration   3: 7952.986 us/op
Iteration   4: 7457.786 us/op
Iteration   5: 12787.502 us/op

# Run progress: 10.42% complete, ETA 00:42:08
# Fork: 2 of 2
# Warmup Iteration   1: 2514.830 us/op
# Warmup Iteration   2: 1802.384 us/op
# Warmup Iteration   3: 1443.566 us/op
# Warmup Iteration   4: 1333.253 us/op
# Warmup Iteration   5: 1330.278 us/op
Iteration   1: 11544.425 us/op
Iteration   2: 15101.814 us/op
Iteration   3: 8065.673 us/op
Iteration   4: 7586.853 us/op
Iteration   5: 13083.703 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  11066.559 ±(99.9%) 4693.176 us/op

  Histogram, us/op:
    [ 7000.000,  7500.000) = 1 
    [ 7500.000,  8000.000) = 2 
    [ 8000.000,  8500.000) = 1 
    [ 8500.000,  9000.000) = 0 
    [ 9000.000,  9500.000) = 0 
    [ 9500.000, 10000.000) = 0 
    [10000.000, 10500.000) = 0 
    [10500.000, 11000.000) = 0 
    [11000.000, 11500.000) = 0 
    [11500.000, 12000.000) = 2 
    [12000.000, 12500.000) = 0 
    [12500.000, 13000.000) = 1 
    [13000.000, 13500.000) = 1 
    [13500.000, 14000.000) = 0 
    [14000.000, 14500.000) = 0 
    [14500.000, 15000.000) = 0 
    [15000.000, 15500.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   7457.786 us/op
     p(50.0000) =  11601.760 us/op
     p(90.0000) =  15393.357 us/op
     p(95.0000) =  15425.751 us/op
     p(99.0000) =  15425.751 us/op
     p(99.9000) =  15425.751 us/op
     p(99.9900) =  15425.751 us/op
     p(99.9990) =  15425.751 us/op
     p(99.9999) =  15425.751 us/op
    p(100.0000) =  15425.751 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.625)

# Run progress: 10.61% complete, ETA 00:42:02
# Fork: 1 of 2
# Warmup Iteration   1: 2756.928 us/op
# Warmup Iteration   2: 1722.534 us/op
# Warmup Iteration   3: 1461.926 us/op
# Warmup Iteration   4: 1260.463 us/op
# Warmup Iteration   5: 1135.796 us/op
Iteration   1: 16089.767 us/op
Iteration   2: 17848.433 us/op
Iteration   3: 8852.482 us/op
Iteration   4: 8627.293 us/op
Iteration   5: 9629.018 us/op

# Run progress: 10.80% complete, ETA 00:41:57
# Fork: 2 of 2
# Warmup Iteration   1: 2426.755 us/op
# Warmup Iteration   2: 1594.960 us/op
# Warmup Iteration   3: 1437.149 us/op
# Warmup Iteration   4: 1162.060 us/op
# Warmup Iteration   5: 1149.594 us/op
Iteration   1: 13135.260 us/op
Iteration   2: 17177.191 us/op
Iteration   3: 8802.391 us/op
Iteration   4: 8553.683 us/op
Iteration   5: 9946.287 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  11866.180 ±(99.9%) 5791.432 us/op

  Histogram, us/op:
    [ 8000.000,  9000.000) = 4 
    [ 9000.000, 10000.000) = 2 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 1 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   8553.683 us/op
     p(50.0000) =   9787.653 us/op
     p(90.0000) =  17781.309 us/op
     p(95.0000) =  17848.433 us/op
     p(99.0000) =  17848.433 us/op
     p(99.9000) =  17848.433 us/op
     p(99.9900) =  17848.433 us/op
     p(99.9990) =  17848.433 us/op
     p(99.9999) =  17848.433 us/op
    p(100.0000) =  17848.433 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.75)

# Run progress: 10.98% complete, ETA 00:41:51
# Fork: 1 of 2
# Warmup Iteration   1: 2609.452 us/op
# Warmup Iteration   2: 1715.760 us/op
# Warmup Iteration   3: 1525.759 us/op
# Warmup Iteration   4: 1330.325 us/op
# Warmup Iteration   5: 1148.906 us/op
Iteration   1: 13983.451 us/op
Iteration   2: 17317.836 us/op
Iteration   3: 10104.197 us/op
Iteration   4: 9483.480 us/op
Iteration   5: 10575.196 us/op

# Run progress: 11.17% complete, ETA 00:41:46
# Fork: 2 of 2
# Warmup Iteration   1: 2664.057 us/op
# Warmup Iteration   2: 1559.083 us/op
# Warmup Iteration   3: 1495.738 us/op
# Warmup Iteration   4: 1267.240 us/op
# Warmup Iteration   5: 1202.186 us/op
Iteration   1: 13977.606 us/op
Iteration   2: 17493.104 us/op
Iteration   3: 9424.522 us/op
Iteration   4: 9300.093 us/op
Iteration   5: 10339.731 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  12199.922 ±(99.9%) 4899.884 us/op

  Histogram, us/op:
    [ 9000.000,  9500.000) = 3 
    [ 9500.000, 10000.000) = 0 
    [10000.000, 10500.000) = 2 
    [10500.000, 11000.000) = 1 
    [11000.000, 11500.000) = 0 
    [11500.000, 12000.000) = 0 
    [12000.000, 12500.000) = 0 
    [12500.000, 13000.000) = 0 
    [13000.000, 13500.000) = 0 
    [13500.000, 14000.000) = 2 
    [14000.000, 14500.000) = 0 
    [14500.000, 15000.000) = 0 
    [15000.000, 15500.000) = 0 
    [15500.000, 16000.000) = 0 
    [16000.000, 16500.000) = 0 
    [16500.000, 17000.000) = 0 
    [17000.000, 17500.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   9300.093 us/op
     p(50.0000) =  10457.464 us/op
     p(90.0000) =  17475.577 us/op
     p(95.0000) =  17493.104 us/op
     p(99.0000) =  17493.104 us/op
     p(99.9000) =  17493.104 us/op
     p(99.9900) =  17493.104 us/op
     p(99.9990) =  17493.104 us/op
     p(99.9999) =  17493.104 us/op
    p(100.0000) =  17493.104 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.875)

# Run progress: 11.36% complete, ETA 00:41:41
# Fork: 1 of 2
# Warmup Iteration   1: 2692.545 us/op
# Warmup Iteration   2: 1598.968 us/op
# Warmup Iteration   3: 1457.654 us/op
# Warmup Iteration   4: 1310.508 us/op
# Warmup Iteration   5: 1212.639 us/op
Iteration   1: 11655.799 us/op
Iteration   2: 16210.512 us/op
Iteration   3: 7959.486 us/op
Iteration   4: 7510.813 us/op
Iteration   5: 7587.851 us/op

# Run progress: 11.55% complete, ETA 00:41:35
# Fork: 2 of 2
# Warmup Iteration   1: 2587.779 us/op
# Warmup Iteration   2: 1613.877 us/op
# Warmup Iteration   3: 1480.522 us/op
# Warmup Iteration   4: 1484.043 us/op
# Warmup Iteration   5: 1262.274 us/op
Iteration   1: 11666.215 us/op
Iteration   2: 15951.713 us/op
Iteration   3: 8094.598 us/op
Iteration   4: 7519.518 us/op
Iteration   5: 7928.874 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  10208.538 ±(99.9%) 5269.317 us/op

  Histogram, us/op:
    [ 7000.000,  8000.000) = 5 
    [ 8000.000,  9000.000) = 1 
    [ 9000.000, 10000.000) = 0 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 2 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   7510.813 us/op
     p(50.0000) =   8027.042 us/op
     p(90.0000) =  16184.632 us/op
     p(95.0000) =  16210.512 us/op
     p(99.0000) =  16210.512 us/op
     p(99.9000) =  16210.512 us/op
     p(99.9900) =  16210.512 us/op
     p(99.9990) =  16210.512 us/op
     p(99.9999) =  16210.512 us/op
    p(100.0000) =  16210.512 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 1)

# Run progress: 11.74% complete, ETA 00:41:30
# Fork: 1 of 2
# Warmup Iteration   1: 2751.726 us/op
# Warmup Iteration   2: 1694.349 us/op
# Warmup Iteration   3: 1749.817 us/op
# Warmup Iteration   4: 1329.366 us/op
# Warmup Iteration   5: 1263.038 us/op
Iteration   1: 12033.127 us/op
Iteration   2: 17174.998 us/op
Iteration   3: 8159.090 us/op
Iteration   4: 7789.297 us/op
Iteration   5: 9914.354 us/op

# Run progress: 11.93% complete, ETA 00:41:24
# Fork: 2 of 2
# Warmup Iteration   1: 2415.667 us/op
# Warmup Iteration   2: 1881.740 us/op
# Warmup Iteration   3: 1335.978 us/op
# Warmup Iteration   4: 1269.578 us/op
# Warmup Iteration   5: 1271.078 us/op
Iteration   1: 11991.175 us/op
Iteration   2: 17010.767 us/op
Iteration   3: 8332.382 us/op
Iteration   4: 7736.623 us/op
Iteration   5: 10044.845 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  11018.666 ±(99.9%) 5393.524 us/op

  Histogram, us/op:
    [ 7000.000,  8000.000) = 2 
    [ 8000.000,  9000.000) = 2 
    [ 9000.000, 10000.000) = 1 
    [10000.000, 11000.000) = 1 
    [11000.000, 12000.000) = 1 
    [12000.000, 13000.000) = 1 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   7736.623 us/op
     p(50.0000) =   9979.600 us/op
     p(90.0000) =  17158.575 us/op
     p(95.0000) =  17174.998 us/op
     p(99.0000) =  17174.998 us/op
     p(99.9000) =  17174.998 us/op
     p(99.9900) =  17174.998 us/op
     p(99.9990) =  17174.998 us/op
     p(99.9999) =  17174.998 us/op
    p(100.0000) =  17174.998 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.125)

# Run progress: 12.12% complete, ETA 00:41:19
# Fork: 1 of 2
# Warmup Iteration   1: 3084.342 us/op
# Warmup Iteration   2: 2343.837 us/op
# Warmup Iteration   3: 1663.874 us/op
# Warmup Iteration   4: 1672.879 us/op
# Warmup Iteration   5: 1530.914 us/op
Iteration   1: 16393.747 us/op
Iteration   2: 20985.156 us/op
Iteration   3: 12284.349 us/op
Iteration   4: 21703.866 us/op
Iteration   5: 11763.629 us/op

# Run progress: 12.31% complete, ETA 00:41:13
# Fork: 2 of 2
# Warmup Iteration   1: 3202.332 us/op
# Warmup Iteration   2: 2200.136 us/op
# Warmup Iteration   3: 1693.234 us/op
# Warmup Iteration   4: 1637.907 us/op
# Warmup Iteration   5: 1587.646 us/op
Iteration   1: 15885.010 us/op
Iteration   2: 20492.105 us/op
Iteration   3: 11875.336 us/op
Iteration   4: 21491.545 us/op
Iteration   5: 11899.918 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  16477.466 ±(99.9%) 6593.633 us/op

  Histogram, us/op:
    [11000.000, 12000.000) = 3 
    [12000.000, 13000.000) = 1 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 1 
    [16000.000, 17000.000) = 1 
    [17000.000, 18000.000) = 0 
    [18000.000, 19000.000) = 0 
    [19000.000, 20000.000) = 0 
    [20000.000, 21000.000) = 2 

  Percentiles, us/op:
      p(0.0000) =  11763.629 us/op
     p(50.0000) =  16139.378 us/op
     p(90.0000) =  21682.634 us/op
     p(95.0000) =  21703.866 us/op
     p(99.0000) =  21703.866 us/op
     p(99.9000) =  21703.866 us/op
     p(99.9900) =  21703.866 us/op
     p(99.9990) =  21703.866 us/op
     p(99.9999) =  21703.866 us/op
    p(100.0000) =  21703.866 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.250)

# Run progress: 12.50% complete, ETA 00:41:08
# Fork: 1 of 2
# Warmup Iteration   1: 2762.661 us/op
# Warmup Iteration   2: 1695.913 us/op
# Warmup Iteration   3: 1529.222 us/op
# Warmup Iteration   4: 1364.796 us/op
# Warmup Iteration   5: 1347.096 us/op
Iteration   1: 13041.573 us/op
Iteration   2: 18032.439 us/op
Iteration   3: 9031.470 us/op
Iteration   4: 18678.020 us/op
Iteration   5: 9068.632 us/op

# Run progress: 12.69% complete, ETA 00:41:03
# Fork: 2 of 2
# Warmup Iteration   1: 2922.864 us/op
# Warmup Iteration   2: 1859.825 us/op
# Warmup Iteration   3: 1431.698 us/op
# Warmup Iteration   4: 1398.381 us/op
# Warmup Iteration   5: 1389.311 us/op
Iteration   1: 13229.949 us/op
Iteration   2: 18049.315 us/op
Iteration   3: 8999.956 us/op
Iteration   4: 18663.925 us/op
Iteration   5: 8838.329 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  13563.361 ±(99.9%) 6696.058 us/op

  Histogram, us/op:
    [ 8000.000,  9000.000) = 2 
    [ 9000.000, 10000.000) = 2 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 2 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 0 
    [17000.000, 18000.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8838.329 us/op
     p(50.0000) =  13135.761 us/op
     p(90.0000) =  18676.611 us/op
     p(95.0000) =  18678.020 us/op
     p(99.0000) =  18678.020 us/op
     p(99.9000) =  18678.020 us/op
     p(99.9900) =  18678.020 us/op
     p(99.9990) =  18678.020 us/op
     p(99.9999) =  18678.020 us/op
    p(100.0000) =  18678.020 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.375)

# Run progress: 12.88% complete, ETA 00:40:58
# Fork: 1 of 2
# Warmup Iteration   1: 2375.547 us/op
# Warmup Iteration   2: 1359.472 us/op
# Warmup Iteration   3: 1340.015 us/op
# Warmup Iteration   4: 1214.665 us/op
# Warmup Iteration   5: 1080.512 us/op
Iteration   1: 14509.856 us/op
Iteration   2: 20896.823 us/op
Iteration   3: 12173.544 us/op
Iteration   4: 24061.078 us/op
Iteration   5: 13219.373 us/op

# Run progress: 13.07% complete, ETA 00:40:52
# Fork: 2 of 2
# Warmup Iteration   1: 2814.139 us/op
# Warmup Iteration   2: 1543.978 us/op
# Warmup Iteration   3: 1344.311 us/op
# Warmup Iteration   4: 1240.136 us/op
# Warmup Iteration   5: 1063.565 us/op
Iteration   1: 14184.961 us/op
Iteration   2: 21307.300 us/op
Iteration   3: 10262.689 us/op
Iteration   4: 18293.826 us/op
Iteration   5: 10982.693 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  15989.214 ±(99.9%) 7274.504 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 2 
    [11250.000, 12500.000) = 1 
    [12500.000, 13750.000) = 1 
    [13750.000, 15000.000) = 2 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 1 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 1 
    [21250.000, 22500.000) = 1 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 1 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10262.689 us/op
     p(50.0000) =  14347.409 us/op
     p(90.0000) =  23785.700 us/op
     p(95.0000) =  24061.078 us/op
     p(99.0000) =  24061.078 us/op
     p(99.9000) =  24061.078 us/op
     p(99.9900) =  24061.078 us/op
     p(99.9990) =  24061.078 us/op
     p(99.9999) =  24061.078 us/op
    p(100.0000) =  24061.078 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.5)

# Run progress: 13.26% complete, ETA 00:40:47
# Fork: 1 of 2
# Warmup Iteration   1: 2532.861 us/op
# Warmup Iteration   2: 1491.751 us/op
# Warmup Iteration   3: 1342.687 us/op
# Warmup Iteration   4: 1244.275 us/op
# Warmup Iteration   5: 1172.807 us/op
Iteration   1: 11549.541 us/op
Iteration   2: 15921.850 us/op
Iteration   3: 7924.710 us/op
Iteration   4: 7417.419 us/op
Iteration   5: 8438.681 us/op

# Run progress: 13.45% complete, ETA 00:40:42
# Fork: 2 of 2
# Warmup Iteration   1: 2478.474 us/op
# Warmup Iteration   2: 1416.281 us/op
# Warmup Iteration   3: 1611.752 us/op
# Warmup Iteration   4: 1319.467 us/op
# Warmup Iteration   5: 1106.284 us/op
Iteration   1: 11584.800 us/op
Iteration   2: 15901.689 us/op
Iteration   3: 7588.566 us/op
Iteration   4: 7337.177 us/op
Iteration   5: 8682.998 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  10234.743 ±(99.9%) 5097.505 us/op

  Histogram, us/op:
    [ 7000.000,  7500.000) = 2 
    [ 7500.000,  8000.000) = 2 
    [ 8000.000,  8500.000) = 1 
    [ 8500.000,  9000.000) = 1 
    [ 9000.000,  9500.000) = 0 
    [ 9500.000, 10000.000) = 0 
    [10000.000, 10500.000) = 0 
    [10500.000, 11000.000) = 0 
    [11000.000, 11500.000) = 0 
    [11500.000, 12000.000) = 2 
    [12000.000, 12500.000) = 0 
    [12500.000, 13000.000) = 0 
    [13000.000, 13500.000) = 0 
    [13500.000, 14000.000) = 0 
    [14000.000, 14500.000) = 0 
    [14500.000, 15000.000) = 0 
    [15000.000, 15500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   7337.177 us/op
     p(50.0000) =   8560.840 us/op
     p(90.0000) =  15919.834 us/op
     p(95.0000) =  15921.850 us/op
     p(99.0000) =  15921.850 us/op
     p(99.9000) =  15921.850 us/op
     p(99.9900) =  15921.850 us/op
     p(99.9990) =  15921.850 us/op
     p(99.9999) =  15921.850 us/op
    p(100.0000) =  15921.850 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.625)

# Run progress: 13.64% complete, ETA 00:40:36
# Fork: 1 of 2
# Warmup Iteration   1: 1729.803 us/op
# Warmup Iteration   2: 1298.501 us/op
# Warmup Iteration   3: 925.023 us/op
# Warmup Iteration   4: 893.992 us/op
# Warmup Iteration   5: 865.310 us/op
Iteration   1: 13503.826 us/op
Iteration   2: 17035.323 us/op
Iteration   3: 8773.582 us/op
Iteration   4: 8424.917 us/op
Iteration   5: 11513.531 us/op

# Run progress: 13.83% complete, ETA 00:40:31
# Fork: 2 of 2
# Warmup Iteration   1: 1834.011 us/op
# Warmup Iteration   2: 1267.233 us/op
# Warmup Iteration   3: 1165.526 us/op
# Warmup Iteration   4: 1032.710 us/op
# Warmup Iteration   5: 868.630 us/op
Iteration   1: 13626.019 us/op
Iteration   2: 16912.965 us/op
Iteration   3: 8577.953 us/op
Iteration   4: 8221.529 us/op
Iteration   5: 11421.983 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  11801.163 ±(99.9%) 5133.165 us/op

  Histogram, us/op:
    [ 8000.000,  9000.000) = 4 
    [ 9000.000, 10000.000) = 0 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 2 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 2 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   8221.529 us/op
     p(50.0000) =  11467.757 us/op
     p(90.0000) =  17023.087 us/op
     p(95.0000) =  17035.323 us/op
     p(99.0000) =  17035.323 us/op
     p(99.9000) =  17035.323 us/op
     p(99.9900) =  17035.323 us/op
     p(99.9990) =  17035.323 us/op
     p(99.9999) =  17035.323 us/op
    p(100.0000) =  17035.323 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.75)

# Run progress: 14.02% complete, ETA 00:40:26
# Fork: 1 of 2
# Warmup Iteration   1: 1720.261 us/op
# Warmup Iteration   2: 1253.730 us/op
# Warmup Iteration   3: 1143.874 us/op
# Warmup Iteration   4: 1029.811 us/op
# Warmup Iteration   5: 877.059 us/op
Iteration   1: 15313.536 us/op
Iteration   2: 19559.449 us/op
Iteration   3: 9232.462 us/op
Iteration   4: 9295.536 us/op
Iteration   5: 12328.058 us/op

# Run progress: 14.20% complete, ETA 00:40:20
# Fork: 2 of 2
# Warmup Iteration   1: 1702.483 us/op
# Warmup Iteration   2: 1214.845 us/op
# Warmup Iteration   3: 929.647 us/op
# Warmup Iteration   4: 950.823 us/op
# Warmup Iteration   5: 867.545 us/op
Iteration   1: 15412.137 us/op
Iteration   2: 18366.465 us/op
Iteration   3: 9224.307 us/op
Iteration   4: 9031.283 us/op
Iteration   5: 12277.727 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  13004.096 ±(99.9%) 6003.027 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 0 
    [ 7500.000,  8750.000) = 0 
    [ 8750.000, 10000.000) = 4 
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 2 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 2 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   9031.283 us/op
     p(50.0000) =  12302.893 us/op
     p(90.0000) =  19440.151 us/op
     p(95.0000) =  19559.449 us/op
     p(99.0000) =  19559.449 us/op
     p(99.9000) =  19559.449 us/op
     p(99.9900) =  19559.449 us/op
     p(99.9990) =  19559.449 us/op
     p(99.9999) =  19559.449 us/op
    p(100.0000) =  19559.449 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.875)

# Run progress: 14.39% complete, ETA 00:40:15
# Fork: 1 of 2
# Warmup Iteration   1: 1757.041 us/op
# Warmup Iteration   2: 1286.121 us/op
# Warmup Iteration   3: 1131.515 us/op
# Warmup Iteration   4: 1014.622 us/op
# Warmup Iteration   5: 929.563 us/op
Iteration   1: 13453.173 us/op
Iteration   2: 17444.901 us/op
Iteration   3: 8870.069 us/op
Iteration   4: 7117.900 us/op
Iteration   5: 7297.875 us/op

# Run progress: 14.58% complete, ETA 00:40:09
# Fork: 2 of 2
# Warmup Iteration   1: 1638.526 us/op
# Warmup Iteration   2: 1220.972 us/op
# Warmup Iteration   3: 1117.110 us/op
# Warmup Iteration   4: 1013.978 us/op
# Warmup Iteration   5: 860.448 us/op
Iteration   1: 13233.584 us/op
Iteration   2: 17618.170 us/op
Iteration   3: 8586.484 us/op
Iteration   4: 7104.296 us/op
Iteration   5: 7544.279 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  10827.073 ±(99.9%) 6420.232 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 3 
    [ 7500.000,  8750.000) = 2 
    [ 8750.000, 10000.000) = 1 
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 2 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 1 
    [17500.000, 18750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   7104.296 us/op
     p(50.0000) =   8728.277 us/op
     p(90.0000) =  17600.843 us/op
     p(95.0000) =  17618.170 us/op
     p(99.0000) =  17618.170 us/op
     p(99.9000) =  17618.170 us/op
     p(99.9900) =  17618.170 us/op
     p(99.9990) =  17618.170 us/op
     p(99.9999) =  17618.170 us/op
    p(100.0000) =  17618.170 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 1)

# Run progress: 14.77% complete, ETA 00:40:04
# Fork: 1 of 2
# Warmup Iteration   1: 1802.579 us/op
# Warmup Iteration   2: 1242.700 us/op
# Warmup Iteration   3: 1170.309 us/op
# Warmup Iteration   4: 1001.619 us/op
# Warmup Iteration   5: 963.018 us/op
Iteration   1: 14371.333 us/op
Iteration   2: 18184.654 us/op
Iteration   3: 8267.092 us/op
Iteration   4: 7564.684 us/op
Iteration   5: 9012.813 us/op

# Run progress: 14.96% complete, ETA 00:39:59
# Fork: 2 of 2
# Warmup Iteration   1: 1852.237 us/op
# Warmup Iteration   2: 1368.603 us/op
# Warmup Iteration   3: 1120.333 us/op
# Warmup Iteration   4: 1038.404 us/op
# Warmup Iteration   5: 879.516 us/op
Iteration   1: 14287.064 us/op
Iteration   2: 18384.509 us/op
Iteration   3: 8044.642 us/op
Iteration   4: 7504.963 us/op
Iteration   5: 8955.435 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  11457.719 ±(99.9%) 6658.556 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 0 
    [ 7500.000,  8750.000) = 4 
    [ 8750.000, 10000.000) = 2 
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 2 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   7504.963 us/op
     p(50.0000) =   8984.124 us/op
     p(90.0000) =  18364.524 us/op
     p(95.0000) =  18384.509 us/op
     p(99.0000) =  18384.509 us/op
     p(99.9000) =  18384.509 us/op
     p(99.9900) =  18384.509 us/op
     p(99.9990) =  18384.509 us/op
     p(99.9999) =  18384.509 us/op
    p(100.0000) =  18384.509 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.125)

# Run progress: 15.15% complete, ETA 00:39:53
# Fork: 1 of 2
# Warmup Iteration   1: 3336.180 us/op
# Warmup Iteration   2: 1748.314 us/op
# Warmup Iteration   3: 1436.443 us/op
# Warmup Iteration   4: 1311.596 us/op
# Warmup Iteration   5: 1265.045 us/op
Iteration   1: 15533.721 us/op
Iteration   2: 21143.396 us/op
Iteration   3: 11972.227 us/op
Iteration   4: 22438.156 us/op
Iteration   5: 11672.052 us/op

# Run progress: 15.34% complete, ETA 00:39:48
# Fork: 2 of 2
# Warmup Iteration   1: 3145.200 us/op
# Warmup Iteration   2: 1843.944 us/op
# Warmup Iteration   3: 1432.766 us/op
# Warmup Iteration   4: 1301.356 us/op
# Warmup Iteration   5: 1289.155 us/op
Iteration   1: 15974.989 us/op
Iteration   2: 20958.958 us/op
Iteration   3: 12384.903 us/op
Iteration   4: 22327.657 us/op
Iteration   5: 11508.114 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  16591.417 ±(99.9%) 7081.477 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 4 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 2 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 2 
    [21250.000, 22500.000) = 2 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  11508.114 us/op
     p(50.0000) =  15754.355 us/op
     p(90.0000) =  22427.106 us/op
     p(95.0000) =  22438.156 us/op
     p(99.0000) =  22438.156 us/op
     p(99.9000) =  22438.156 us/op
     p(99.9900) =  22438.156 us/op
     p(99.9990) =  22438.156 us/op
     p(99.9999) =  22438.156 us/op
    p(100.0000) =  22438.156 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.250)

# Run progress: 15.53% complete, ETA 00:39:43
# Fork: 1 of 2
# Warmup Iteration   1: 1776.488 us/op
# Warmup Iteration   2: 1343.503 us/op
# Warmup Iteration   3: 1190.566 us/op
# Warmup Iteration   4: 1033.127 us/op
# Warmup Iteration   5: 956.196 us/op
Iteration   1: 17824.667 us/op
Iteration   2: 19235.845 us/op
Iteration   3: 9082.855 us/op
Iteration   4: 8809.266 us/op
Iteration   5: 18768.333 us/op

# Run progress: 15.72% complete, ETA 00:39:37
# Fork: 2 of 2
# Warmup Iteration   1: 1911.383 us/op
# Warmup Iteration   2: 1224.459 us/op
# Warmup Iteration   3: 1002.100 us/op
# Warmup Iteration   4: 983.642 us/op
# Warmup Iteration   5: 977.298 us/op
Iteration   1: 16698.471 us/op
Iteration   2: 19961.021 us/op
Iteration   3: 9264.743 us/op
Iteration   4: 8735.852 us/op
Iteration   5: 18686.275 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  14706.733 ±(99.9%) 7573.000 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 0 
    [ 7500.000,  8750.000) = 1 
    [ 8750.000, 10000.000) = 3 
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 1 
    [17500.000, 18750.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   8735.852 us/op
     p(50.0000) =  17261.569 us/op
     p(90.0000) =  19888.503 us/op
     p(95.0000) =  19961.021 us/op
     p(99.0000) =  19961.021 us/op
     p(99.9000) =  19961.021 us/op
     p(99.9900) =  19961.021 us/op
     p(99.9990) =  19961.021 us/op
     p(99.9999) =  19961.021 us/op
    p(100.0000) =  19961.021 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.375)

# Run progress: 15.91% complete, ETA 00:39:32
# Fork: 1 of 2
# Warmup Iteration   1: 1770.123 us/op
# Warmup Iteration   2: 1338.927 us/op
# Warmup Iteration   3: 997.200 us/op
# Warmup Iteration   4: 966.082 us/op
# Warmup Iteration   5: 953.522 us/op
Iteration   1: 18790.953 us/op
Iteration   2: 21927.976 us/op
Iteration   3: 10379.301 us/op
Iteration   4: 9429.683 us/op
Iteration   5: 21346.954 us/op

# Run progress: 16.10% complete, ETA 00:39:27
# Fork: 2 of 2
# Warmup Iteration   1: 1630.778 us/op
# Warmup Iteration   2: 1322.011 us/op
# Warmup Iteration   3: 1151.986 us/op
# Warmup Iteration   4: 916.262 us/op
# Warmup Iteration   5: 915.013 us/op
Iteration   1: 18624.507 us/op
Iteration   2: 21868.048 us/op
Iteration   3: 9702.467 us/op
Iteration   4: 9417.351 us/op
Iteration   5: 20868.723 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  16235.596 ±(99.9%) 8637.209 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 3 
    [10000.000, 12500.000) = 1 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 2 
    [20000.000, 22500.000) = 4 
    [22500.000, 25000.000) = 0 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   9417.351 us/op
     p(50.0000) =  18707.730 us/op
     p(90.0000) =  21921.983 us/op
     p(95.0000) =  21927.976 us/op
     p(99.0000) =  21927.976 us/op
     p(99.9000) =  21927.976 us/op
     p(99.9900) =  21927.976 us/op
     p(99.9990) =  21927.976 us/op
     p(99.9999) =  21927.976 us/op
    p(100.0000) =  21927.976 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.5)

# Run progress: 16.29% complete, ETA 00:39:21
# Fork: 1 of 2
# Warmup Iteration   1: 1963.712 us/op
# Warmup Iteration   2: 1232.107 us/op
# Warmup Iteration   3: 1130.796 us/op
# Warmup Iteration   4: 1142.171 us/op
# Warmup Iteration   5: 894.234 us/op
Iteration   1: 14997.833 us/op
Iteration   2: 15206.306 us/op
Iteration   3: 7774.238 us/op
Iteration   4: 7008.997 us/op
Iteration   5: 8383.793 us/op

# Run progress: 16.48% complete, ETA 00:39:16
# Fork: 2 of 2
# Warmup Iteration   1: 1829.763 us/op
# Warmup Iteration   2: 1246.554 us/op
# Warmup Iteration   3: 1038.918 us/op
# Warmup Iteration   4: 939.021 us/op
# Warmup Iteration   5: 932.280 us/op
Iteration   1: 14968.684 us/op
Iteration   2: 14686.928 us/op
Iteration   3: 7577.336 us/op
Iteration   4: 7089.870 us/op
Iteration   5: 8109.660 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  10580.365 ±(99.9%) 5741.401 us/op

  Histogram, us/op:
    [ 7000.000,  7500.000) = 2 
    [ 7500.000,  8000.000) = 2 
    [ 8000.000,  8500.000) = 2 
    [ 8500.000,  9000.000) = 0 
    [ 9000.000,  9500.000) = 0 
    [ 9500.000, 10000.000) = 0 
    [10000.000, 10500.000) = 0 
    [10500.000, 11000.000) = 0 
    [11000.000, 11500.000) = 0 
    [11500.000, 12000.000) = 0 
    [12000.000, 12500.000) = 0 
    [12500.000, 13000.000) = 0 
    [13000.000, 13500.000) = 0 
    [13500.000, 14000.000) = 0 
    [14000.000, 14500.000) = 0 
    [14500.000, 15000.000) = 3 
    [15000.000, 15500.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   7008.997 us/op
     p(50.0000) =   8246.727 us/op
     p(90.0000) =  15185.459 us/op
     p(95.0000) =  15206.306 us/op
     p(99.0000) =  15206.306 us/op
     p(99.9000) =  15206.306 us/op
     p(99.9900) =  15206.306 us/op
     p(99.9990) =  15206.306 us/op
     p(99.9999) =  15206.306 us/op
    p(100.0000) =  15206.306 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.625)

# Run progress: 16.67% complete, ETA 00:39:10
# Fork: 1 of 2
# Warmup Iteration   1: 1854.339 us/op
# Warmup Iteration   2: 1272.805 us/op
# Warmup Iteration   3: 1232.868 us/op
# Warmup Iteration   4: 1098.502 us/op
# Warmup Iteration   5: 928.896 us/op
Iteration   1: 16599.578 us/op
Iteration   2: 17076.478 us/op
Iteration   3: 8255.247 us/op
Iteration   4: 7665.435 us/op
Iteration   5: 8763.698 us/op

# Run progress: 16.86% complete, ETA 00:39:05
# Fork: 2 of 2
# Warmup Iteration   1: 2000.426 us/op
# Warmup Iteration   2: 1236.779 us/op
# Warmup Iteration   3: 998.007 us/op
# Warmup Iteration   4: 918.488 us/op
# Warmup Iteration   5: 904.586 us/op
Iteration   1: 16518.877 us/op
Iteration   2: 17466.758 us/op
Iteration   3: 7955.488 us/op
Iteration   4: 7709.370 us/op
Iteration   5: 8928.399 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  11693.933 ±(99.9%) 6831.916 us/op

  Histogram, us/op:
    [ 7000.000,  8000.000) = 3 
    [ 8000.000,  9000.000) = 3 
    [ 9000.000, 10000.000) = 0 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   7665.435 us/op
     p(50.0000) =   8846.049 us/op
     p(90.0000) =  17427.730 us/op
     p(95.0000) =  17466.758 us/op
     p(99.0000) =  17466.758 us/op
     p(99.9000) =  17466.758 us/op
     p(99.9900) =  17466.758 us/op
     p(99.9990) =  17466.758 us/op
     p(99.9999) =  17466.758 us/op
    p(100.0000) =  17466.758 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.75)

# Run progress: 17.05% complete, ETA 00:39:00
# Fork: 1 of 2
# Warmup Iteration   1: 1845.370 us/op
# Warmup Iteration   2: 1298.157 us/op
# Warmup Iteration   3: 1313.435 us/op
# Warmup Iteration   4: 1125.221 us/op
# Warmup Iteration   5: 929.421 us/op
Iteration   1: 16942.370 us/op
Iteration   2: 17396.027 us/op
Iteration   3: 9029.188 us/op
Iteration   4: 8459.423 us/op
Iteration   5: 9353.706 us/op

# Run progress: 17.23% complete, ETA 00:38:54
# Fork: 2 of 2
# Warmup Iteration   1: 1764.248 us/op
# Warmup Iteration   2: 1261.343 us/op
# Warmup Iteration   3: 1135.181 us/op
# Warmup Iteration   4: 1078.952 us/op
# Warmup Iteration   5: 916.567 us/op
Iteration   1: 16969.703 us/op
Iteration   2: 17529.807 us/op
Iteration   3: 8820.874 us/op
Iteration   4: 8336.090 us/op
Iteration   5: 9271.052 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  12210.824 ±(99.9%) 6526.503 us/op

  Histogram, us/op:
    [ 8000.000,  9000.000) = 3 
    [ 9000.000, 10000.000) = 3 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   8336.090 us/op
     p(50.0000) =   9312.379 us/op
     p(90.0000) =  17516.429 us/op
     p(95.0000) =  17529.807 us/op
     p(99.0000) =  17529.807 us/op
     p(99.9000) =  17529.807 us/op
     p(99.9900) =  17529.807 us/op
     p(99.9990) =  17529.807 us/op
     p(99.9999) =  17529.807 us/op
    p(100.0000) =  17529.807 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.875)

# Run progress: 17.42% complete, ETA 00:38:49
# Fork: 1 of 2
# Warmup Iteration   1: 1622.298 us/op
# Warmup Iteration   2: 1347.778 us/op
# Warmup Iteration   3: 1107.736 us/op
# Warmup Iteration   4: 1001.178 us/op
# Warmup Iteration   5: 930.903 us/op
Iteration   1: 13341.111 us/op
Iteration   2: 16398.019 us/op
Iteration   3: 7262.450 us/op
Iteration   4: 6696.252 us/op
Iteration   5: 6749.105 us/op

# Run progress: 17.61% complete, ETA 00:38:43
# Fork: 2 of 2
# Warmup Iteration   1: 1732.760 us/op
# Warmup Iteration   2: 1278.671 us/op
# Warmup Iteration   3: 1140.978 us/op
# Warmup Iteration   4: 1075.408 us/op
# Warmup Iteration   5: 905.258 us/op
Iteration   1: 12568.133 us/op
Iteration   2: 16674.548 us/op
Iteration   3: 7159.621 us/op
Iteration   4: 6499.763 us/op
Iteration   5: 6574.422 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   9992.342 ±(99.9%) 6459.114 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 6 
    [ 7500.000,  8750.000) = 0 
    [ 8750.000, 10000.000) = 0 
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 2 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 2 
    [17500.000, 18750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   6499.763 us/op
     p(50.0000) =   7211.036 us/op
     p(90.0000) =  16646.895 us/op
     p(95.0000) =  16674.548 us/op
     p(99.0000) =  16674.548 us/op
     p(99.9000) =  16674.548 us/op
     p(99.9900) =  16674.548 us/op
     p(99.9990) =  16674.548 us/op
     p(99.9999) =  16674.548 us/op
    p(100.0000) =  16674.548 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 1)

# Run progress: 17.80% complete, ETA 00:38:38
# Fork: 1 of 2
# Warmup Iteration   1: 2281.549 us/op
# Warmup Iteration   2: 1289.925 us/op
# Warmup Iteration   3: 988.957 us/op
# Warmup Iteration   4: 1006.598 us/op
# Warmup Iteration   5: 925.403 us/op
Iteration   1: 15639.003 us/op
Iteration   2: 17439.662 us/op
Iteration   3: 7661.030 us/op
Iteration   4: 7017.378 us/op
Iteration   5: 6962.726 us/op

# Run progress: 17.99% complete, ETA 00:38:33
# Fork: 2 of 2
# Warmup Iteration   1: 1632.011 us/op
# Warmup Iteration   2: 1256.947 us/op
# Warmup Iteration   3: 1103.262 us/op
# Warmup Iteration   4: 1007.736 us/op
# Warmup Iteration   5: 915.624 us/op
Iteration   1: 13514.210 us/op
Iteration   2: 17452.956 us/op
Iteration   3: 7279.177 us/op
Iteration   4: 6878.721 us/op
Iteration   5: 6908.672 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  10675.354 ±(99.9%) 7140.769 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 5 
    [ 7500.000,  8750.000) = 1 
    [ 8750.000, 10000.000) = 0 
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 1 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 1 
    [16250.000, 17500.000) = 2 
    [17500.000, 18750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   6878.721 us/op
     p(50.0000) =   7470.103 us/op
     p(90.0000) =  17451.627 us/op
     p(95.0000) =  17452.956 us/op
     p(99.0000) =  17452.956 us/op
     p(99.9000) =  17452.956 us/op
     p(99.9900) =  17452.956 us/op
     p(99.9990) =  17452.956 us/op
     p(99.9999) =  17452.956 us/op
    p(100.0000) =  17452.956 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.125)

# Run progress: 18.18% complete, ETA 00:38:27
# Fork: 1 of 2
# Warmup Iteration   1: 1974.407 us/op
# Warmup Iteration   2: 1356.358 us/op
# Warmup Iteration   3: 1254.775 us/op
# Warmup Iteration   4: 1125.127 us/op
# Warmup Iteration   5: 1014.473 us/op
Iteration   1: 21813.676 us/op
Iteration   2: 21911.445 us/op
Iteration   3: 12351.755 us/op
Iteration   4: 11850.248 us/op
Iteration   5: 22642.402 us/op

# Run progress: 18.37% complete, ETA 00:38:22
# Fork: 2 of 2
# Warmup Iteration   1: 1869.573 us/op
# Warmup Iteration   2: 1413.748 us/op
# Warmup Iteration   3: 1217.745 us/op
# Warmup Iteration   4: 1006.884 us/op
# Warmup Iteration   5: 1000.679 us/op
Iteration   1: 22219.702 us/op
Iteration   2: 21854.530 us/op
Iteration   3: 12235.750 us/op
Iteration   4: 11513.180 us/op
Iteration   5: 22525.132 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  18091.782 ±(99.9%) 7959.878 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 4 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 0 
    [21250.000, 22500.000) = 4 
    [22500.000, 23750.000) = 2 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  11513.180 us/op
     p(50.0000) =  21834.103 us/op
     p(90.0000) =  22630.675 us/op
     p(95.0000) =  22642.402 us/op
     p(99.0000) =  22642.402 us/op
     p(99.9000) =  22642.402 us/op
     p(99.9900) =  22642.402 us/op
     p(99.9990) =  22642.402 us/op
     p(99.9999) =  22642.402 us/op
    p(100.0000) =  22642.402 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.250)

# Run progress: 18.56% complete, ETA 00:38:17
# Fork: 1 of 2
# Warmup Iteration   1: 1841.733 us/op
# Warmup Iteration   2: 1399.397 us/op
# Warmup Iteration   3: 1266.319 us/op
# Warmup Iteration   4: 1097.668 us/op
# Warmup Iteration   5: 1027.909 us/op
Iteration   1: 16029.953 us/op
Iteration   2: 19264.324 us/op
Iteration   3: 8751.274 us/op
Iteration   4: 8412.747 us/op
Iteration   5: 18862.031 us/op

# Run progress: 18.75% complete, ETA 00:38:11
# Fork: 2 of 2
# Warmup Iteration   1: 1945.186 us/op
# Warmup Iteration   2: 1602.382 us/op
# Warmup Iteration   3: 1179.087 us/op
# Warmup Iteration   4: 1096.583 us/op
# Warmup Iteration   5: 1001.253 us/op
Iteration   1: 16203.490 us/op
Iteration   2: 18761.353 us/op
Iteration   3: 8695.207 us/op
Iteration   4: 8424.420 us/op
Iteration   5: 19181.354 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  14258.615 ±(99.9%) 7595.669 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 0 
    [ 7500.000,  8750.000) = 3 
    [ 8750.000, 10000.000) = 1 
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 2 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8412.747 us/op
     p(50.0000) =  16116.722 us/op
     p(90.0000) =  19256.027 us/op
     p(95.0000) =  19264.324 us/op
     p(99.0000) =  19264.324 us/op
     p(99.9000) =  19264.324 us/op
     p(99.9900) =  19264.324 us/op
     p(99.9990) =  19264.324 us/op
     p(99.9999) =  19264.324 us/op
    p(100.0000) =  19264.324 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.375)

# Run progress: 18.94% complete, ETA 00:38:06
# Fork: 1 of 2
# Warmup Iteration   1: 1842.932 us/op
# Warmup Iteration   2: 1410.788 us/op
# Warmup Iteration   3: 1201.976 us/op
# Warmup Iteration   4: 1110.849 us/op
# Warmup Iteration   5: 1002.059 us/op
Iteration   1: 16455.470 us/op
Iteration   2: 19750.225 us/op
Iteration   3: 9733.949 us/op
Iteration   4: 9211.305 us/op
Iteration   5: 21121.738 us/op

# Run progress: 19.13% complete, ETA 00:38:01
# Fork: 2 of 2
# Warmup Iteration   1: 1857.021 us/op
# Warmup Iteration   2: 1542.503 us/op
# Warmup Iteration   3: 1334.729 us/op
# Warmup Iteration   4: 1113.367 us/op
# Warmup Iteration   5: 998.180 us/op
Iteration   1: 16504.997 us/op
Iteration   2: 20025.201 us/op
Iteration   3: 9567.595 us/op
Iteration   4: 8993.017 us/op
Iteration   5: 20792.362 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  15215.586 ±(99.9%) 7961.782 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 0 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 2 
    [17500.000, 20000.000) = 1 
    [20000.000, 22500.000) = 3 
    [22500.000, 25000.000) = 0 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8993.017 us/op
     p(50.0000) =  16480.234 us/op
     p(90.0000) =  21088.800 us/op
     p(95.0000) =  21121.738 us/op
     p(99.0000) =  21121.738 us/op
     p(99.9000) =  21121.738 us/op
     p(99.9900) =  21121.738 us/op
     p(99.9990) =  21121.738 us/op
     p(99.9999) =  21121.738 us/op
    p(100.0000) =  21121.738 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.5)

# Run progress: 19.32% complete, ETA 00:37:55
# Fork: 1 of 2
# Warmup Iteration   1: 1916.510 us/op
# Warmup Iteration   2: 1472.411 us/op
# Warmup Iteration   3: 1165.751 us/op
# Warmup Iteration   4: 1026.378 us/op
# Warmup Iteration   5: 1008.432 us/op
Iteration   1: 14119.463 us/op
Iteration   2: 14340.830 us/op
Iteration   3: 7277.013 us/op
Iteration   4: 6294.119 us/op
Iteration   5: 7353.122 us/op

# Run progress: 19.51% complete, ETA 00:37:50
# Fork: 2 of 2
# Warmup Iteration   1: 1763.978 us/op
# Warmup Iteration   2: 1344.709 us/op
# Warmup Iteration   3: 1264.214 us/op
# Warmup Iteration   4: 1075.280 us/op
# Warmup Iteration   5: 988.223 us/op
Iteration   1: 13581.958 us/op
Iteration   2: 14266.641 us/op
Iteration   3: 7199.900 us/op
Iteration   4: 6630.246 us/op
Iteration   5: 7492.859 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   9855.615 ±(99.9%) 5526.837 us/op

  Histogram, us/op:
    [ 6000.000,  6500.000) = 1 
    [ 6500.000,  7000.000) = 1 
    [ 7000.000,  7500.000) = 4 
    [ 7500.000,  8000.000) = 0 
    [ 8000.000,  8500.000) = 0 
    [ 8500.000,  9000.000) = 0 
    [ 9000.000,  9500.000) = 0 
    [ 9500.000, 10000.000) = 0 
    [10000.000, 10500.000) = 0 
    [10500.000, 11000.000) = 0 
    [11000.000, 11500.000) = 0 
    [11500.000, 12000.000) = 0 
    [12000.000, 12500.000) = 0 
    [12500.000, 13000.000) = 0 
    [13000.000, 13500.000) = 0 
    [13500.000, 14000.000) = 1 
    [14000.000, 14500.000) = 3 

  Percentiles, us/op:
      p(0.0000) =   6294.119 us/op
     p(50.0000) =   7422.991 us/op
     p(90.0000) =  14333.411 us/op
     p(95.0000) =  14340.830 us/op
     p(99.0000) =  14340.830 us/op
     p(99.9000) =  14340.830 us/op
     p(99.9900) =  14340.830 us/op
     p(99.9990) =  14340.830 us/op
     p(99.9999) =  14340.830 us/op
    p(100.0000) =  14340.830 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.625)

# Run progress: 19.70% complete, ETA 00:37:45
# Fork: 1 of 2
# Warmup Iteration   1: 1815.271 us/op
# Warmup Iteration   2: 1349.718 us/op
# Warmup Iteration   3: 1275.488 us/op
# Warmup Iteration   4: 1079.879 us/op
# Warmup Iteration   5: 1002.440 us/op
Iteration   1: 16189.773 us/op
Iteration   2: 14552.118 us/op
Iteration   3: 8383.666 us/op
Iteration   4: 7218.285 us/op
Iteration   5: 8007.214 us/op

# Run progress: 19.89% complete, ETA 00:37:39
# Fork: 2 of 2
# Warmup Iteration   1: 1890.019 us/op
# Warmup Iteration   2: 1418.643 us/op
# Warmup Iteration   3: 1261.726 us/op
# Warmup Iteration   4: 1150.228 us/op
# Warmup Iteration   5: 1044.387 us/op
Iteration   1: 15628.689 us/op
Iteration   2: 15552.040 us/op
Iteration   3: 8306.186 us/op
Iteration   4: 7056.033 us/op
Iteration   5: 7816.096 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  10871.010 ±(99.9%) 6059.655 us/op

  Histogram, us/op:
    [ 7000.000,  8000.000) = 3 
    [ 8000.000,  9000.000) = 3 
    [ 9000.000, 10000.000) = 0 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 1 
    [15000.000, 16000.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   7056.033 us/op
     p(50.0000) =   8344.926 us/op
     p(90.0000) =  16133.665 us/op
     p(95.0000) =  16189.773 us/op
     p(99.0000) =  16189.773 us/op
     p(99.9000) =  16189.773 us/op
     p(99.9900) =  16189.773 us/op
     p(99.9990) =  16189.773 us/op
     p(99.9999) =  16189.773 us/op
    p(100.0000) =  16189.773 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.75)

# Run progress: 20.08% complete, ETA 00:37:34
# Fork: 1 of 2
# Warmup Iteration   1: 2020.784 us/op
# Warmup Iteration   2: 1397.512 us/op
# Warmup Iteration   3: 1276.010 us/op
# Warmup Iteration   4: 1026.793 us/op
# Warmup Iteration   5: 996.495 us/op
Iteration   1: 16479.041 us/op
Iteration   2: 16087.463 us/op
Iteration   3: 8742.019 us/op
Iteration   4: 7803.682 us/op
Iteration   5: 8833.440 us/op

# Run progress: 20.27% complete, ETA 00:37:28
# Fork: 2 of 2
# Warmup Iteration   1: 1646.563 us/op
# Warmup Iteration   2: 1390.458 us/op
# Warmup Iteration   3: 1311.333 us/op
# Warmup Iteration   4: 1092.864 us/op
# Warmup Iteration   5: 1112.991 us/op
Iteration   1: 16769.453 us/op
Iteration   2: 15414.145 us/op
Iteration   3: 8810.143 us/op
Iteration   4: 7756.452 us/op
Iteration   5: 8684.702 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  11538.054 ±(99.9%) 6098.949 us/op

  Histogram, us/op:
    [ 7000.000,  8000.000) = 2 
    [ 8000.000,  9000.000) = 4 
    [ 9000.000, 10000.000) = 0 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   7756.452 us/op
     p(50.0000) =   8821.792 us/op
     p(90.0000) =  16740.412 us/op
     p(95.0000) =  16769.453 us/op
     p(99.0000) =  16769.453 us/op
     p(99.9000) =  16769.453 us/op
     p(99.9900) =  16769.453 us/op
     p(99.9990) =  16769.453 us/op
     p(99.9999) =  16769.453 us/op
    p(100.0000) =  16769.453 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.875)

# Run progress: 20.45% complete, ETA 00:37:23
# Fork: 1 of 2
# Warmup Iteration   1: 1876.479 us/op
# Warmup Iteration   2: 1390.347 us/op
# Warmup Iteration   3: 1051.485 us/op
# Warmup Iteration   4: 1019.966 us/op
# Warmup Iteration   5: 1025.751 us/op
Iteration   1: 8532.425 us/op
Iteration   2: 14277.668 us/op
Iteration   3: 6322.821 us/op
Iteration   4: 5502.278 us/op
Iteration   5: 5695.873 us/op

# Run progress: 20.64% complete, ETA 00:37:18
# Fork: 2 of 2
# Warmup Iteration   1: 1986.216 us/op
# Warmup Iteration   2: 1386.001 us/op
# Warmup Iteration   3: 1040.014 us/op
# Warmup Iteration   4: 1018.788 us/op
# Warmup Iteration   5: 1038.174 us/op
Iteration   1: 8452.409 us/op
Iteration   2: 13455.071 us/op
Iteration   3: 6272.961 us/op
Iteration   4: 5545.839 us/op
Iteration   5: 5725.723 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   7978.307 ±(99.9%) 4993.678 us/op

  Histogram, us/op:
    [ 5000.000,  6000.000) = 4 
    [ 6000.000,  7000.000) = 2 
    [ 7000.000,  8000.000) = 0 
    [ 8000.000,  9000.000) = 2 
    [ 9000.000, 10000.000) = 0 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   5502.278 us/op
     p(50.0000) =   6297.891 us/op
     p(90.0000) =  14195.408 us/op
     p(95.0000) =  14277.668 us/op
     p(99.0000) =  14277.668 us/op
     p(99.9000) =  14277.668 us/op
     p(99.9900) =  14277.668 us/op
     p(99.9990) =  14277.668 us/op
     p(99.9999) =  14277.668 us/op
    p(100.0000) =  14277.668 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 1)

# Run progress: 20.83% complete, ETA 00:37:12
# Fork: 1 of 2
# Warmup Iteration   1: 1839.369 us/op
# Warmup Iteration   2: 1407.764 us/op
# Warmup Iteration   3: 1345.602 us/op
# Warmup Iteration   4: 1141.489 us/op
# Warmup Iteration   5: 1127.068 us/op
Iteration   1: 8496.935 us/op
Iteration   2: 14388.820 us/op
Iteration   3: 6110.248 us/op
Iteration   4: 5480.156 us/op
Iteration   5: 5557.047 us/op

# Run progress: 21.02% complete, ETA 00:37:07
# Fork: 2 of 2
# Warmup Iteration   1: 1892.489 us/op
# Warmup Iteration   2: 1447.541 us/op
# Warmup Iteration   3: 1298.659 us/op
# Warmup Iteration   4: 1104.610 us/op
# Warmup Iteration   5: 1019.985 us/op
Iteration   1: 8511.524 us/op
Iteration   2: 14290.513 us/op
Iteration   3: 6210.252 us/op
Iteration   4: 5669.811 us/op
Iteration   5: 5674.818 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   8039.012 ±(99.9%) 5304.903 us/op

  Histogram, us/op:
    [ 5000.000,  6000.000) = 4 
    [ 6000.000,  7000.000) = 2 
    [ 7000.000,  8000.000) = 0 
    [ 8000.000,  9000.000) = 2 
    [ 9000.000, 10000.000) = 0 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   5480.156 us/op
     p(50.0000) =   6160.250 us/op
     p(90.0000) =  14378.989 us/op
     p(95.0000) =  14388.820 us/op
     p(99.0000) =  14388.820 us/op
     p(99.9000) =  14388.820 us/op
     p(99.9900) =  14388.820 us/op
     p(99.9990) =  14388.820 us/op
     p(99.9999) =  14388.820 us/op
    p(100.0000) =  14388.820 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.125)

# Run progress: 21.21% complete, ETA 00:37:01
# Fork: 1 of 2
# Warmup Iteration   1: 2380.907 us/op
# Warmup Iteration   2: 2193.055 us/op
# Warmup Iteration   3: 2292.180 us/op
# Warmup Iteration   4: 1581.620 us/op
# Warmup Iteration   5: 1721.156 us/op
Iteration   1: 22479.552 us/op
Iteration   2: 15136.609 us/op
Iteration   3: 23029.232 us/op
Iteration   4: 11179.786 us/op
Iteration   5: 11252.637 us/op

# Run progress: 21.40% complete, ETA 00:36:56
# Fork: 2 of 2
# Warmup Iteration   1: 2569.248 us/op
# Warmup Iteration   2: 2055.895 us/op
# Warmup Iteration   3: 2237.048 us/op
# Warmup Iteration   4: 1674.407 us/op
# Warmup Iteration   5: 1788.244 us/op
Iteration   1: 22657.724 us/op
Iteration   2: 15360.626 us/op
Iteration   3: 23140.428 us/op
Iteration   4: 11266.840 us/op
Iteration   5: 11427.808 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  16693.124 ±(99.9%) 8313.465 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 1 
    [11250.000, 12500.000) = 3 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 2 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 0 
    [21250.000, 22500.000) = 1 
    [22500.000, 23750.000) = 3 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  11179.786 us/op
     p(50.0000) =  15248.618 us/op
     p(90.0000) =  23129.308 us/op
     p(95.0000) =  23140.428 us/op
     p(99.0000) =  23140.428 us/op
     p(99.9000) =  23140.428 us/op
     p(99.9900) =  23140.428 us/op
     p(99.9990) =  23140.428 us/op
     p(99.9999) =  23140.428 us/op
    p(100.0000) =  23140.428 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.250)

# Run progress: 21.59% complete, ETA 00:36:51
# Fork: 1 of 2
# Warmup Iteration   1: 2447.963 us/op
# Warmup Iteration   2: 2283.387 us/op
# Warmup Iteration   3: 2285.174 us/op
# Warmup Iteration   4: 1637.212 us/op
# Warmup Iteration   5: 1778.107 us/op
Iteration   1: 9753.928 us/op
Iteration   2: 10410.700 us/op
Iteration   3: 19908.555 us/op
Iteration   4: 7011.932 us/op
Iteration   5: 6892.991 us/op

# Run progress: 21.78% complete, ETA 00:36:45
# Fork: 2 of 2
# Warmup Iteration   1: 2421.272 us/op
# Warmup Iteration   2: 2313.919 us/op
# Warmup Iteration   3: 2211.233 us/op
# Warmup Iteration   4: 1598.167 us/op
# Warmup Iteration   5: 1682.276 us/op
Iteration   1: 9655.104 us/op
Iteration   2: 10409.990 us/op
Iteration   3: 19924.895 us/op
Iteration   4: 7185.157 us/op
Iteration   5: 6997.259 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  10815.051 ±(99.9%) 7577.374 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 4 
    [ 7500.000,  8750.000) = 0 
    [ 8750.000, 10000.000) = 2 
    [10000.000, 11250.000) = 2 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   6892.991 us/op
     p(50.0000) =   9704.516 us/op
     p(90.0000) =  19923.261 us/op
     p(95.0000) =  19924.895 us/op
     p(99.0000) =  19924.895 us/op
     p(99.9000) =  19924.895 us/op
     p(99.9900) =  19924.895 us/op
     p(99.9990) =  19924.895 us/op
     p(99.9999) =  19924.895 us/op
    p(100.0000) =  19924.895 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.375)

# Run progress: 21.97% complete, ETA 00:36:40
# Fork: 1 of 2
# Warmup Iteration   1: 2353.572 us/op
# Warmup Iteration   2: 2172.259 us/op
# Warmup Iteration   3: 2371.345 us/op
# Warmup Iteration   4: 1640.343 us/op
# Warmup Iteration   5: 1718.463 us/op
Iteration   1: 9964.729 us/op
Iteration   2: 10795.792 us/op
Iteration   3: 19880.437 us/op
Iteration   4: 7187.253 us/op
Iteration   5: 7044.275 us/op

# Run progress: 22.16% complete, ETA 00:36:35
# Fork: 2 of 2
# Warmup Iteration   1: 2439.403 us/op
# Warmup Iteration   2: 2008.225 us/op
# Warmup Iteration   3: 2085.089 us/op
# Warmup Iteration   4: 1581.838 us/op
# Warmup Iteration   5: 1750.110 us/op
Iteration   1: 9903.619 us/op
Iteration   2: 10717.778 us/op
Iteration   3: 19694.060 us/op
Iteration   4: 7272.142 us/op
Iteration   5: 7114.355 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  10957.444 ±(99.9%) 7406.659 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 4 
    [ 7500.000,  8750.000) = 0 
    [ 8750.000, 10000.000) = 2 
    [10000.000, 11250.000) = 2 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   7044.275 us/op
     p(50.0000) =   9934.174 us/op
     p(90.0000) =  19861.799 us/op
     p(95.0000) =  19880.437 us/op
     p(99.0000) =  19880.437 us/op
     p(99.9000) =  19880.437 us/op
     p(99.9900) =  19880.437 us/op
     p(99.9990) =  19880.437 us/op
     p(99.9999) =  19880.437 us/op
    p(100.0000) =  19880.437 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.5)

# Run progress: 22.35% complete, ETA 00:36:29
# Fork: 1 of 2
# Warmup Iteration   1: 2459.483 us/op
# Warmup Iteration   2: 2080.989 us/op
# Warmup Iteration   3: 2438.953 us/op
# Warmup Iteration   4: 1623.746 us/op
# Warmup Iteration   5: 1750.531 us/op
Iteration   1: 9582.814 us/op
Iteration   2: 10541.059 us/op
Iteration   3: 19867.893 us/op
Iteration   4: 6884.650 us/op
Iteration   5: 7047.751 us/op

# Run progress: 22.54% complete, ETA 00:36:24
# Fork: 2 of 2
# Warmup Iteration   1: 2436.854 us/op
# Warmup Iteration   2: 2057.405 us/op
# Warmup Iteration   3: 2156.846 us/op
# Warmup Iteration   4: 1631.008 us/op
# Warmup Iteration   5: 1789.620 us/op
Iteration   1: 9395.884 us/op
Iteration   2: 10428.770 us/op
Iteration   3: 20269.702 us/op
Iteration   4: 7263.147 us/op
Iteration   5: 7116.641 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  10839.831 ±(99.9%) 7659.908 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 4 
    [ 7500.000, 10000.000) = 2 
    [10000.000, 12500.000) = 2 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 1 
    [20000.000, 22500.000) = 1 
    [22500.000, 25000.000) = 0 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   6884.650 us/op
     p(50.0000) =   9489.349 us/op
     p(90.0000) =  20229.521 us/op
     p(95.0000) =  20269.702 us/op
     p(99.0000) =  20269.702 us/op
     p(99.9000) =  20269.702 us/op
     p(99.9900) =  20269.702 us/op
     p(99.9990) =  20269.702 us/op
     p(99.9999) =  20269.702 us/op
    p(100.0000) =  20269.702 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.625)

# Run progress: 22.73% complete, ETA 00:36:18
# Fork: 1 of 2
# Warmup Iteration   1: 2566.991 us/op
# Warmup Iteration   2: 2053.064 us/op
# Warmup Iteration   3: 1990.430 us/op
# Warmup Iteration   4: 1576.137 us/op
# Warmup Iteration   5: 1718.393 us/op
Iteration   1: 9720.559 us/op
Iteration   2: 10712.534 us/op
Iteration   3: 20191.206 us/op
Iteration   4: 6986.881 us/op
Iteration   5: 6841.132 us/op

# Run progress: 22.92% complete, ETA 00:36:13
# Fork: 2 of 2
# Warmup Iteration   1: 2429.300 us/op
# Warmup Iteration   2: 2259.243 us/op
# Warmup Iteration   3: 1932.951 us/op
# Warmup Iteration   4: 1619.041 us/op
# Warmup Iteration   5: 1691.986 us/op
Iteration   1: 9752.361 us/op
Iteration   2: 10539.923 us/op
Iteration   3: 19759.713 us/op
Iteration   4: 7097.869 us/op
Iteration   5: 7278.715 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  10888.089 ±(99.9%) 7593.635 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 4 
    [ 7500.000, 10000.000) = 2 
    [10000.000, 12500.000) = 2 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 1 
    [20000.000, 22500.000) = 1 
    [22500.000, 25000.000) = 0 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   6841.132 us/op
     p(50.0000) =   9736.460 us/op
     p(90.0000) =  20148.057 us/op
     p(95.0000) =  20191.206 us/op
     p(99.0000) =  20191.206 us/op
     p(99.9000) =  20191.206 us/op
     p(99.9900) =  20191.206 us/op
     p(99.9990) =  20191.206 us/op
     p(99.9999) =  20191.206 us/op
    p(100.0000) =  20191.206 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.75)

# Run progress: 23.11% complete, ETA 00:36:08
# Fork: 1 of 2
# Warmup Iteration   1: 2377.982 us/op
# Warmup Iteration   2: 2078.298 us/op
# Warmup Iteration   3: 2185.688 us/op
# Warmup Iteration   4: 1742.522 us/op
# Warmup Iteration   5: 1706.018 us/op
Iteration   1: 9466.595 us/op
Iteration   2: 10320.639 us/op
Iteration   3: 20132.514 us/op
Iteration   4: 7149.616 us/op
Iteration   5: 7132.205 us/op

# Run progress: 23.30% complete, ETA 00:36:02
# Fork: 2 of 2
# Warmup Iteration   1: 2413.241 us/op
# Warmup Iteration   2: 2042.447 us/op
# Warmup Iteration   3: 2295.869 us/op
# Warmup Iteration   4: 1613.125 us/op
# Warmup Iteration   5: 1776.788 us/op
Iteration   1: 9710.197 us/op
Iteration   2: 10517.633 us/op
Iteration   3: 19901.973 us/op
Iteration   4: 7060.274 us/op
Iteration   5: 6985.799 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  10837.744 ±(99.9%) 7618.093 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 4 
    [ 7500.000, 10000.000) = 2 
    [10000.000, 12500.000) = 2 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 1 
    [20000.000, 22500.000) = 1 
    [22500.000, 25000.000) = 0 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   6985.799 us/op
     p(50.0000) =   9588.396 us/op
     p(90.0000) =  20109.460 us/op
     p(95.0000) =  20132.514 us/op
     p(99.0000) =  20132.514 us/op
     p(99.9000) =  20132.514 us/op
     p(99.9900) =  20132.514 us/op
     p(99.9990) =  20132.514 us/op
     p(99.9999) =  20132.514 us/op
    p(100.0000) =  20132.514 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.875)

# Run progress: 23.48% complete, ETA 00:35:57
# Fork: 1 of 2
# Warmup Iteration   1: 2409.890 us/op
# Warmup Iteration   2: 2005.294 us/op
# Warmup Iteration   3: 2330.604 us/op
# Warmup Iteration   4: 1632.357 us/op
# Warmup Iteration   5: 1722.516 us/op
Iteration   1: 9742.547 us/op
Iteration   2: 10700.059 us/op
Iteration   3: 21082.035 us/op
Iteration   4: 6967.004 us/op
Iteration   5: 7095.372 us/op

# Run progress: 23.67% complete, ETA 00:35:52
# Fork: 2 of 2
# Warmup Iteration   1: 2562.063 us/op
# Warmup Iteration   2: 2097.283 us/op
# Warmup Iteration   3: 2110.385 us/op
# Warmup Iteration   4: 1641.318 us/op
# Warmup Iteration   5: 1855.164 us/op
Iteration   1: 9673.705 us/op
Iteration   2: 10462.749 us/op
Iteration   3: 20444.410 us/op
Iteration   4: 7139.040 us/op
Iteration   5: 7039.529 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  11034.645 ±(99.9%) 8073.543 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 4 
    [ 7500.000, 10000.000) = 2 
    [10000.000, 12500.000) = 2 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 0 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   6967.004 us/op
     p(50.0000) =   9708.126 us/op
     p(90.0000) =  21018.273 us/op
     p(95.0000) =  21082.035 us/op
     p(99.0000) =  21082.035 us/op
     p(99.9000) =  21082.035 us/op
     p(99.9900) =  21082.035 us/op
     p(99.9990) =  21082.035 us/op
     p(99.9999) =  21082.035 us/op
    p(100.0000) =  21082.035 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 1)

# Run progress: 23.86% complete, ETA 00:35:46
# Fork: 1 of 2
# Warmup Iteration   1: 2609.244 us/op
# Warmup Iteration   2: 2091.650 us/op
# Warmup Iteration   3: 2250.672 us/op
# Warmup Iteration   4: 1659.736 us/op
# Warmup Iteration   5: 1764.660 us/op
Iteration   1: 9488.749 us/op
Iteration   2: 10713.373 us/op
Iteration   3: 20333.199 us/op
Iteration   4: 6977.740 us/op
Iteration   5: 6894.183 us/op

# Run progress: 24.05% complete, ETA 00:35:41
# Fork: 2 of 2
# Warmup Iteration   1: 2386.377 us/op
# Warmup Iteration   2: 2076.734 us/op
# Warmup Iteration   3: 2359.365 us/op
# Warmup Iteration   4: 1624.162 us/op
# Warmup Iteration   5: 1731.687 us/op
Iteration   1: 9623.545 us/op
Iteration   2: 10373.209 us/op
Iteration   3: 19832.428 us/op
Iteration   4: 7098.523 us/op
Iteration   5: 7121.015 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  10845.596 ±(99.9%) 7689.856 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 4 
    [ 7500.000, 10000.000) = 2 
    [10000.000, 12500.000) = 2 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 1 
    [20000.000, 22500.000) = 1 
    [22500.000, 25000.000) = 0 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   6894.183 us/op
     p(50.0000) =   9556.147 us/op
     p(90.0000) =  20283.122 us/op
     p(95.0000) =  20333.199 us/op
     p(99.0000) =  20333.199 us/op
     p(99.9000) =  20333.199 us/op
     p(99.9900) =  20333.199 us/op
     p(99.9990) =  20333.199 us/op
     p(99.9999) =  20333.199 us/op
    p(100.0000) =  20333.199 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.125)

# Run progress: 24.24% complete, ETA 00:35:36
# Fork: 1 of 2
# Warmup Iteration   1: 3148.039 us/op
# Warmup Iteration   2: 3098.286 us/op
# Warmup Iteration   3: 2648.050 us/op
# Warmup Iteration   4: 2439.042 us/op
# Warmup Iteration   5: 2389.151 us/op
Iteration   1: 12002.860 us/op
Iteration   2: 12408.223 us/op
Iteration   3: 22543.152 us/op
Iteration   4: 8756.788 us/op
Iteration   5: 8820.265 us/op

# Run progress: 24.43% complete, ETA 00:35:30
# Fork: 2 of 2
# Warmup Iteration   1: 3281.377 us/op
# Warmup Iteration   2: 3247.689 us/op
# Warmup Iteration   3: 2578.813 us/op
# Warmup Iteration   4: 2373.311 us/op
# Warmup Iteration   5: 2350.230 us/op
Iteration   1: 11576.607 us/op
Iteration   2: 12250.166 us/op
Iteration   3: 22595.447 us/op
Iteration   4: 8683.191 us/op
Iteration   5: 8623.762 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  12826.046 ±(99.9%) 8126.549 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 4 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 0 
    [22500.000, 25000.000) = 2 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8623.762 us/op
     p(50.0000) =  11789.734 us/op
     p(90.0000) =  22590.218 us/op
     p(95.0000) =  22595.447 us/op
     p(99.0000) =  22595.447 us/op
     p(99.9000) =  22595.447 us/op
     p(99.9900) =  22595.447 us/op
     p(99.9990) =  22595.447 us/op
     p(99.9999) =  22595.447 us/op
    p(100.0000) =  22595.447 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.250)

# Run progress: 24.62% complete, ETA 00:35:25
# Fork: 1 of 2
# Warmup Iteration   1: 3299.906 us/op
# Warmup Iteration   2: 3150.573 us/op
# Warmup Iteration   3: 2754.775 us/op
# Warmup Iteration   4: 2399.661 us/op
# Warmup Iteration   5: 2478.199 us/op
Iteration   1: 11508.283 us/op
Iteration   2: 12524.031 us/op
Iteration   3: 22156.160 us/op
Iteration   4: 8725.964 us/op
Iteration   5: 8661.272 us/op

# Run progress: 24.81% complete, ETA 00:35:20
# Fork: 2 of 2
# Warmup Iteration   1: 3165.454 us/op
# Warmup Iteration   2: 3116.644 us/op
# Warmup Iteration   3: 2570.293 us/op
# Warmup Iteration   4: 2370.959 us/op
# Warmup Iteration   5: 2386.966 us/op
Iteration   1: 11912.102 us/op
Iteration   2: 12490.640 us/op
Iteration   3: 22360.167 us/op
Iteration   4: 9053.668 us/op
Iteration   5: 8732.947 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  12812.523 ±(99.9%) 7902.008 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 3 
    [12500.000, 15000.000) = 1 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 0 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8661.272 us/op
     p(50.0000) =  11710.193 us/op
     p(90.0000) =  22339.766 us/op
     p(95.0000) =  22360.167 us/op
     p(99.0000) =  22360.167 us/op
     p(99.9000) =  22360.167 us/op
     p(99.9900) =  22360.167 us/op
     p(99.9990) =  22360.167 us/op
     p(99.9999) =  22360.167 us/op
    p(100.0000) =  22360.167 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.375)

# Run progress: 25.00% complete, ETA 00:35:14
# Fork: 1 of 2
# Warmup Iteration   1: 3349.026 us/op
# Warmup Iteration   2: 3194.051 us/op
# Warmup Iteration   3: 2751.176 us/op
# Warmup Iteration   4: 2410.288 us/op
# Warmup Iteration   5: 2392.717 us/op
Iteration   1: 11802.933 us/op
Iteration   2: 12540.700 us/op
Iteration   3: 22873.821 us/op
Iteration   4: 8781.417 us/op
Iteration   5: 8724.846 us/op

# Run progress: 25.19% complete, ETA 00:35:09
# Fork: 2 of 2
# Warmup Iteration   1: 3481.513 us/op
# Warmup Iteration   2: 3203.163 us/op
# Warmup Iteration   3: 2915.045 us/op
# Warmup Iteration   4: 2532.880 us/op
# Warmup Iteration   5: 2359.010 us/op
Iteration   1: 11767.967 us/op
Iteration   2: 12457.175 us/op
Iteration   3: 22472.819 us/op
Iteration   4: 8983.616 us/op
Iteration   5: 8786.226 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  12919.152 ±(99.9%) 8135.022 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 3 
    [12500.000, 15000.000) = 1 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 1 
    [22500.000, 25000.000) = 1 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8724.846 us/op
     p(50.0000) =  11785.450 us/op
     p(90.0000) =  22833.721 us/op
     p(95.0000) =  22873.821 us/op
     p(99.0000) =  22873.821 us/op
     p(99.9000) =  22873.821 us/op
     p(99.9900) =  22873.821 us/op
     p(99.9990) =  22873.821 us/op
     p(99.9999) =  22873.821 us/op
    p(100.0000) =  22873.821 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.5)

# Run progress: 25.38% complete, ETA 00:35:04
# Fork: 1 of 2
# Warmup Iteration   1: 3288.335 us/op
# Warmup Iteration   2: 3196.817 us/op
# Warmup Iteration   3: 2542.153 us/op
# Warmup Iteration   4: 2529.647 us/op
# Warmup Iteration   5: 2461.800 us/op
Iteration   1: 11574.865 us/op
Iteration   2: 12436.100 us/op
Iteration   3: 22609.753 us/op
Iteration   4: 9065.719 us/op
Iteration   5: 8821.958 us/op

# Run progress: 25.57% complete, ETA 00:34:58
# Fork: 2 of 2
# Warmup Iteration   1: 3001.212 us/op
# Warmup Iteration   2: 3133.070 us/op
# Warmup Iteration   3: 2786.681 us/op
# Warmup Iteration   4: 2319.649 us/op
# Warmup Iteration   5: 2461.252 us/op
Iteration   1: 11424.540 us/op
Iteration   2: 12528.560 us/op
Iteration   3: 22212.587 us/op
Iteration   4: 9019.486 us/op
Iteration   5: 8889.653 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  12858.322 ±(99.9%) 7932.182 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 3 
    [12500.000, 15000.000) = 1 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 1 
    [22500.000, 25000.000) = 1 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8821.958 us/op
     p(50.0000) =  11499.703 us/op
     p(90.0000) =  22570.036 us/op
     p(95.0000) =  22609.753 us/op
     p(99.0000) =  22609.753 us/op
     p(99.9000) =  22609.753 us/op
     p(99.9900) =  22609.753 us/op
     p(99.9990) =  22609.753 us/op
     p(99.9999) =  22609.753 us/op
    p(100.0000) =  22609.753 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.625)

# Run progress: 25.76% complete, ETA 00:34:53
# Fork: 1 of 2
# Warmup Iteration   1: 3097.597 us/op
# Warmup Iteration   2: 3185.081 us/op
# Warmup Iteration   3: 2660.144 us/op
# Warmup Iteration   4: 2377.317 us/op
# Warmup Iteration   5: 2400.806 us/op
Iteration   1: 11769.480 us/op
Iteration   2: 12556.886 us/op
Iteration   3: 22430.800 us/op
Iteration   4: 8788.063 us/op
Iteration   5: 8915.960 us/op

# Run progress: 25.95% complete, ETA 00:34:48
# Fork: 2 of 2
# Warmup Iteration   1: 3257.593 us/op
# Warmup Iteration   2: 3117.243 us/op
# Warmup Iteration   3: 3035.098 us/op
# Warmup Iteration   4: 2375.430 us/op
# Warmup Iteration   5: 2327.448 us/op
Iteration   1: 11829.850 us/op
Iteration   2: 12488.103 us/op
Iteration   3: 22515.392 us/op
Iteration   4: 8873.387 us/op
Iteration   5: 8732.069 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  12889.999 ±(99.9%) 8005.827 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 3 
    [12500.000, 15000.000) = 1 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 1 
    [22500.000, 25000.000) = 1 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8732.069 us/op
     p(50.0000) =  11799.665 us/op
     p(90.0000) =  22506.933 us/op
     p(95.0000) =  22515.392 us/op
     p(99.0000) =  22515.392 us/op
     p(99.9000) =  22515.392 us/op
     p(99.9900) =  22515.392 us/op
     p(99.9990) =  22515.392 us/op
     p(99.9999) =  22515.392 us/op
    p(100.0000) =  22515.392 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.75)

# Run progress: 26.14% complete, ETA 00:34:42
# Fork: 1 of 2
# Warmup Iteration   1: 3186.452 us/op
# Warmup Iteration   2: 3083.775 us/op
# Warmup Iteration   3: 2661.638 us/op
# Warmup Iteration   4: 2337.584 us/op
# Warmup Iteration   5: 2368.327 us/op
Iteration   1: 11659.205 us/op
Iteration   2: 12237.964 us/op
Iteration   3: 22621.563 us/op
Iteration   4: 8670.913 us/op
Iteration   5: 8675.055 us/op

# Run progress: 26.33% complete, ETA 00:34:37
# Fork: 2 of 2
# Warmup Iteration   1: 3111.676 us/op
# Warmup Iteration   2: 3073.551 us/op
# Warmup Iteration   3: 2766.115 us/op
# Warmup Iteration   4: 2396.211 us/op
# Warmup Iteration   5: 2428.016 us/op
Iteration   1: 11564.613 us/op
Iteration   2: 12353.101 us/op
Iteration   3: 22163.616 us/op
Iteration   4: 8842.840 us/op
Iteration   5: 9174.527 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  12796.340 ±(99.9%) 7973.782 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 4 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 1 
    [22500.000, 25000.000) = 1 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8670.913 us/op
     p(50.0000) =  11611.909 us/op
     p(90.0000) =  22575.768 us/op
     p(95.0000) =  22621.563 us/op
     p(99.0000) =  22621.563 us/op
     p(99.9000) =  22621.563 us/op
     p(99.9900) =  22621.563 us/op
     p(99.9990) =  22621.563 us/op
     p(99.9999) =  22621.563 us/op
    p(100.0000) =  22621.563 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.875)

# Run progress: 26.52% complete, ETA 00:34:32
# Fork: 1 of 2
# Warmup Iteration   1: 3156.763 us/op
# Warmup Iteration   2: 3160.545 us/op
# Warmup Iteration   3: 2655.965 us/op
# Warmup Iteration   4: 2313.205 us/op
# Warmup Iteration   5: 2512.910 us/op
Iteration   1: 11603.639 us/op
Iteration   2: 12460.069 us/op
Iteration   3: 22630.328 us/op
Iteration   4: 9014.237 us/op
Iteration   5: 8922.934 us/op

# Run progress: 26.70% complete, ETA 00:34:26
# Fork: 2 of 2
# Warmup Iteration   1: 3206.212 us/op
# Warmup Iteration   2: 3266.100 us/op
# Warmup Iteration   3: 2633.340 us/op
# Warmup Iteration   4: 2461.123 us/op
# Warmup Iteration   5: 2398.886 us/op
Iteration   1: 11473.483 us/op
Iteration   2: 12127.865 us/op
Iteration   3: 22342.668 us/op
Iteration   4: 8829.483 us/op
Iteration   5: 8750.567 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  12815.527 ±(99.9%) 8015.541 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 4 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 1 
    [22500.000, 25000.000) = 1 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8750.567 us/op
     p(50.0000) =  11538.561 us/op
     p(90.0000) =  22601.562 us/op
     p(95.0000) =  22630.328 us/op
     p(99.0000) =  22630.328 us/op
     p(99.9000) =  22630.328 us/op
     p(99.9900) =  22630.328 us/op
     p(99.9990) =  22630.328 us/op
     p(99.9999) =  22630.328 us/op
    p(100.0000) =  22630.328 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 1)

# Run progress: 26.89% complete, ETA 00:34:21
# Fork: 1 of 2
# Warmup Iteration   1: 3101.119 us/op
# Warmup Iteration   2: 3224.434 us/op
# Warmup Iteration   3: 2716.615 us/op
# Warmup Iteration   4: 2408.306 us/op
# Warmup Iteration   5: 2323.331 us/op
Iteration   1: 11456.004 us/op
Iteration   2: 12386.691 us/op
Iteration   3: 22535.232 us/op
Iteration   4: 8759.276 us/op
Iteration   5: 8930.110 us/op

# Run progress: 27.08% complete, ETA 00:34:16
# Fork: 2 of 2
# Warmup Iteration   1: 3230.318 us/op
# Warmup Iteration   2: 3094.691 us/op
# Warmup Iteration   3: 2541.407 us/op
# Warmup Iteration   4: 2350.821 us/op
# Warmup Iteration   5: 2444.247 us/op
Iteration   1: 11470.365 us/op
Iteration   2: 12631.495 us/op
Iteration   3: 22265.267 us/op
Iteration   4: 9071.532 us/op
Iteration   5: 8839.190 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  12834.516 ±(99.9%) 7952.564 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 3 
    [12500.000, 15000.000) = 1 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 1 
    [22500.000, 25000.000) = 1 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8759.276 us/op
     p(50.0000) =  11463.185 us/op
     p(90.0000) =  22508.236 us/op
     p(95.0000) =  22535.232 us/op
     p(99.0000) =  22535.232 us/op
     p(99.9000) =  22535.232 us/op
     p(99.9900) =  22535.232 us/op
     p(99.9990) =  22535.232 us/op
     p(99.9999) =  22535.232 us/op
    p(100.0000) =  22535.232 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.125)

# Run progress: 27.27% complete, ETA 00:34:10
# Fork: 1 of 2
# Warmup Iteration   1: 3236.326 us/op
# Warmup Iteration   2: 3138.664 us/op
# Warmup Iteration   3: 2738.077 us/op
# Warmup Iteration   4: 2424.971 us/op
# Warmup Iteration   5: 2418.944 us/op
Iteration   1: 11906.407 us/op
Iteration   2: 12363.431 us/op
Iteration   3: 22531.196 us/op
Iteration   4: 8754.168 us/op
Iteration   5: 8833.151 us/op

# Run progress: 27.46% complete, ETA 00:34:05
# Fork: 2 of 2
# Warmup Iteration   1: 3416.707 us/op
# Warmup Iteration   2: 3320.431 us/op
# Warmup Iteration   3: 2541.250 us/op
# Warmup Iteration   4: 2376.185 us/op
# Warmup Iteration   5: 2359.418 us/op
Iteration   1: 11632.365 us/op
Iteration   2: 12225.216 us/op
Iteration   3: 22163.002 us/op
Iteration   4: 8801.966 us/op
Iteration   5: 8795.044 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  12800.595 ±(99.9%) 7955.004 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 4 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 1 
    [22500.000, 25000.000) = 1 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8754.168 us/op
     p(50.0000) =  11769.386 us/op
     p(90.0000) =  22494.377 us/op
     p(95.0000) =  22531.196 us/op
     p(99.0000) =  22531.196 us/op
     p(99.9000) =  22531.196 us/op
     p(99.9900) =  22531.196 us/op
     p(99.9990) =  22531.196 us/op
     p(99.9999) =  22531.196 us/op
    p(100.0000) =  22531.196 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.250)

# Run progress: 27.65% complete, ETA 00:34:00
# Fork: 1 of 2
# Warmup Iteration   1: 3297.551 us/op
# Warmup Iteration   2: 3284.822 us/op
# Warmup Iteration   3: 2673.078 us/op
# Warmup Iteration   4: 2519.141 us/op
# Warmup Iteration   5: 2449.854 us/op
Iteration   1: 11951.728 us/op
Iteration   2: 12308.336 us/op
Iteration   3: 22688.657 us/op
Iteration   4: 8962.816 us/op
Iteration   5: 8926.333 us/op

# Run progress: 27.84% complete, ETA 00:33:54
# Fork: 2 of 2
# Warmup Iteration   1: 3227.884 us/op
# Warmup Iteration   2: 3115.220 us/op
# Warmup Iteration   3: 2958.108 us/op
# Warmup Iteration   4: 2358.176 us/op
# Warmup Iteration   5: 2351.743 us/op
Iteration   1: 11849.722 us/op
Iteration   2: 12397.639 us/op
Iteration   3: 22265.574 us/op
Iteration   4: 8948.142 us/op
Iteration   5: 8647.408 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  12894.635 ±(99.9%) 7986.166 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 4 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 1 
    [22500.000, 25000.000) = 1 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8647.408 us/op
     p(50.0000) =  11900.725 us/op
     p(90.0000) =  22646.349 us/op
     p(95.0000) =  22688.657 us/op
     p(99.0000) =  22688.657 us/op
     p(99.9000) =  22688.657 us/op
     p(99.9900) =  22688.657 us/op
     p(99.9990) =  22688.657 us/op
     p(99.9999) =  22688.657 us/op
    p(100.0000) =  22688.657 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.375)

# Run progress: 28.03% complete, ETA 00:33:49
# Fork: 1 of 2
# Warmup Iteration   1: 3386.112 us/op
# Warmup Iteration   2: 3145.437 us/op
# Warmup Iteration   3: 2666.928 us/op
# Warmup Iteration   4: 2450.852 us/op
# Warmup Iteration   5: 2400.610 us/op
Iteration   1: 11445.545 us/op
Iteration   2: 12444.999 us/op
Iteration   3: 22674.196 us/op
Iteration   4: 8750.544 us/op
Iteration   5: 9024.889 us/op

# Run progress: 28.22% complete, ETA 00:33:44
# Fork: 2 of 2
# Warmup Iteration   1: 3146.740 us/op
# Warmup Iteration   2: 3200.573 us/op
# Warmup Iteration   3: 3021.438 us/op
# Warmup Iteration   4: 2377.673 us/op
# Warmup Iteration   5: 2319.549 us/op
Iteration   1: 11375.008 us/op
Iteration   2: 12195.112 us/op
Iteration   3: 22777.481 us/op
Iteration   4: 8743.314 us/op
Iteration   5: 8749.591 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  12818.068 ±(99.9%) 8202.447 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 4 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 0 
    [22500.000, 25000.000) = 2 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8743.314 us/op
     p(50.0000) =  11410.277 us/op
     p(90.0000) =  22767.153 us/op
     p(95.0000) =  22777.481 us/op
     p(99.0000) =  22777.481 us/op
     p(99.9000) =  22777.481 us/op
     p(99.9900) =  22777.481 us/op
     p(99.9990) =  22777.481 us/op
     p(99.9999) =  22777.481 us/op
    p(100.0000) =  22777.481 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.5)

# Run progress: 28.41% complete, ETA 00:33:39
# Fork: 1 of 2
# Warmup Iteration   1: 3200.256 us/op
# Warmup Iteration   2: 3198.790 us/op
# Warmup Iteration   3: 2793.758 us/op
# Warmup Iteration   4: 2529.200 us/op
# Warmup Iteration   5: 2396.025 us/op
Iteration   1: 11516.571 us/op
Iteration   2: 12476.088 us/op
Iteration   3: 22391.627 us/op
Iteration   4: 9008.883 us/op
Iteration   5: 8765.275 us/op

# Run progress: 28.60% complete, ETA 00:33:33
# Fork: 2 of 2
# Warmup Iteration   1: 3334.902 us/op
# Warmup Iteration   2: 3141.111 us/op
# Warmup Iteration   3: 2795.431 us/op
# Warmup Iteration   4: 2451.198 us/op
# Warmup Iteration   5: 2314.435 us/op
Iteration   1: 11529.373 us/op
Iteration   2: 12449.278 us/op
Iteration   3: 22636.326 us/op
Iteration   4: 8655.791 us/op
Iteration   5: 8648.728 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  12807.794 ±(99.9%) 8083.697 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 4 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 1 
    [22500.000, 25000.000) = 1 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8648.728 us/op
     p(50.0000) =  11522.972 us/op
     p(90.0000) =  22611.856 us/op
     p(95.0000) =  22636.326 us/op
     p(99.0000) =  22636.326 us/op
     p(99.9000) =  22636.326 us/op
     p(99.9900) =  22636.326 us/op
     p(99.9990) =  22636.326 us/op
     p(99.9999) =  22636.326 us/op
    p(100.0000) =  22636.326 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.625)

# Run progress: 28.79% complete, ETA 00:33:28
# Fork: 1 of 2
# Warmup Iteration   1: 3366.605 us/op
# Warmup Iteration   2: 3186.628 us/op
# Warmup Iteration   3: 2468.537 us/op
# Warmup Iteration   4: 2368.832 us/op
# Warmup Iteration   5: 2468.568 us/op
Iteration   1: 11602.171 us/op
Iteration   2: 12381.265 us/op
Iteration   3: 22263.332 us/op
Iteration   4: 8818.227 us/op
Iteration   5: 8736.135 us/op

# Run progress: 28.98% complete, ETA 00:33:23
# Fork: 2 of 2
# Warmup Iteration   1: 3184.371 us/op
# Warmup Iteration   2: 3154.382 us/op
# Warmup Iteration   3: 2767.858 us/op
# Warmup Iteration   4: 2388.309 us/op
# Warmup Iteration   5: 2394.454 us/op
Iteration   1: 11597.873 us/op
Iteration   2: 12428.611 us/op
Iteration   3: 22763.807 us/op
Iteration   4: 8843.010 us/op
Iteration   5: 8747.779 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  12818.221 ±(99.9%) 8070.633 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 4 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 1 
    [22500.000, 25000.000) = 1 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8736.135 us/op
     p(50.0000) =  11600.022 us/op
     p(90.0000) =  22713.760 us/op
     p(95.0000) =  22763.807 us/op
     p(99.0000) =  22763.807 us/op
     p(99.9000) =  22763.807 us/op
     p(99.9900) =  22763.807 us/op
     p(99.9990) =  22763.807 us/op
     p(99.9999) =  22763.807 us/op
    p(100.0000) =  22763.807 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.75)

# Run progress: 29.17% complete, ETA 00:33:17
# Fork: 1 of 2
# Warmup Iteration   1: 3660.657 us/op
# Warmup Iteration   2: 3138.196 us/op
# Warmup Iteration   3: 2684.366 us/op
# Warmup Iteration   4: 2334.231 us/op
# Warmup Iteration   5: 2356.764 us/op
Iteration   1: 11662.332 us/op
Iteration   2: 12434.845 us/op
Iteration   3: 22244.712 us/op
Iteration   4: 8876.344 us/op
Iteration   5: 8803.893 us/op

# Run progress: 29.36% complete, ETA 00:33:12
# Fork: 2 of 2
# Warmup Iteration   1: 3340.931 us/op
# Warmup Iteration   2: 3360.557 us/op
# Warmup Iteration   3: 2672.008 us/op
# Warmup Iteration   4: 2414.442 us/op
# Warmup Iteration   5: 2412.822 us/op
Iteration   1: 11314.954 us/op
Iteration   2: 12511.217 us/op
Iteration   3: 22575.247 us/op
Iteration   4: 8737.953 us/op
Iteration   5: 8816.508 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  12797.801 ±(99.9%) 8003.278 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 3 
    [12500.000, 15000.000) = 1 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 1 
    [22500.000, 25000.000) = 1 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8737.953 us/op
     p(50.0000) =  11488.643 us/op
     p(90.0000) =  22542.194 us/op
     p(95.0000) =  22575.247 us/op
     p(99.0000) =  22575.247 us/op
     p(99.9000) =  22575.247 us/op
     p(99.9900) =  22575.247 us/op
     p(99.9990) =  22575.247 us/op
     p(99.9999) =  22575.247 us/op
    p(100.0000) =  22575.247 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.875)

# Run progress: 29.55% complete, ETA 00:33:07
# Fork: 1 of 2
# Warmup Iteration   1: 3264.277 us/op
# Warmup Iteration   2: 3238.168 us/op
# Warmup Iteration   3: 2538.349 us/op
# Warmup Iteration   4: 2471.827 us/op
# Warmup Iteration   5: 2336.874 us/op
Iteration   1: 11425.965 us/op
Iteration   2: 12424.967 us/op
Iteration   3: 22216.875 us/op
Iteration   4: 9052.592 us/op
Iteration   5: 8769.980 us/op

# Run progress: 29.73% complete, ETA 00:33:01
# Fork: 2 of 2
# Warmup Iteration   1: 3199.032 us/op
# Warmup Iteration   2: 2999.914 us/op
# Warmup Iteration   3: 2524.111 us/op
# Warmup Iteration   4: 2368.642 us/op
# Warmup Iteration   5: 2487.991 us/op
Iteration   1: 11817.220 us/op
Iteration   2: 12521.034 us/op
Iteration   3: 22126.253 us/op
Iteration   4: 8671.774 us/op
Iteration   5: 8680.886 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  12770.755 ±(99.9%) 7856.063 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 3 
    [12500.000, 15000.000) = 1 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 0 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8671.774 us/op
     p(50.0000) =  11621.592 us/op
     p(90.0000) =  22207.813 us/op
     p(95.0000) =  22216.875 us/op
     p(99.0000) =  22216.875 us/op
     p(99.9000) =  22216.875 us/op
     p(99.9900) =  22216.875 us/op
     p(99.9990) =  22216.875 us/op
     p(99.9999) =  22216.875 us/op
    p(100.0000) =  22216.875 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 1)

# Run progress: 29.92% complete, ETA 00:32:56
# Fork: 1 of 2
# Warmup Iteration   1: 3305.620 us/op
# Warmup Iteration   2: 3363.044 us/op
# Warmup Iteration   3: 2522.224 us/op
# Warmup Iteration   4: 2318.362 us/op
# Warmup Iteration   5: 2399.042 us/op
Iteration   1: 11900.827 us/op
Iteration   2: 12427.901 us/op
Iteration   3: 22167.298 us/op
Iteration   4: 8773.707 us/op
Iteration   5: 8718.365 us/op

# Run progress: 30.11% complete, ETA 00:32:51
# Fork: 2 of 2
# Warmup Iteration   1: 3285.386 us/op
# Warmup Iteration   2: 3354.403 us/op
# Warmup Iteration   3: 2455.624 us/op
# Warmup Iteration   4: 2432.313 us/op
# Warmup Iteration   5: 2378.088 us/op
Iteration   1: 11683.936 us/op
Iteration   2: 12669.222 us/op
Iteration   3: 22641.816 us/op
Iteration   4: 8606.870 us/op
Iteration   5: 8790.810 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  12838.075 ±(99.9%) 8021.072 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 3 
    [12500.000, 15000.000) = 1 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 1 
    [22500.000, 25000.000) = 1 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8606.870 us/op
     p(50.0000) =  11792.382 us/op
     p(90.0000) =  22594.364 us/op
     p(95.0000) =  22641.816 us/op
     p(99.0000) =  22641.816 us/op
     p(99.9000) =  22641.816 us/op
     p(99.9900) =  22641.816 us/op
     p(99.9990) =  22641.816 us/op
     p(99.9999) =  22641.816 us/op
    p(100.0000) =  22641.816 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.125)

# Run progress: 30.30% complete, ETA 00:32:45
# Fork: 1 of 2
# Warmup Iteration   1: 4645.806 us/op
# Warmup Iteration   2: 4704.037 us/op
# Warmup Iteration   3: 4006.161 us/op
# Warmup Iteration   4: 3923.239 us/op
# Warmup Iteration   5: 3885.733 us/op
Iteration   1: 14809.635 us/op
Iteration   2: 15513.496 us/op
Iteration   3: 26039.408 us/op
Iteration   4: 10964.950 us/op
Iteration   5: 10793.694 us/op

# Run progress: 30.49% complete, ETA 00:32:40
# Fork: 2 of 2
# Warmup Iteration   1: 4743.071 us/op
# Warmup Iteration   2: 4666.520 us/op
# Warmup Iteration   3: 4051.870 us/op
# Warmup Iteration   4: 3953.134 us/op
# Warmup Iteration   5: 4054.353 us/op
Iteration   1: 15252.930 us/op
Iteration   2: 15564.993 us/op
Iteration   3: 25779.859 us/op
Iteration   4: 10679.172 us/op
Iteration   5: 10583.204 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  15598.134 ±(99.9%) 8834.728 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 4 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 1 
    [15000.000, 16250.000) = 3 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 0 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 2 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10583.204 us/op
     p(50.0000) =  15031.283 us/op
     p(90.0000) =  26013.453 us/op
     p(95.0000) =  26039.408 us/op
     p(99.0000) =  26039.408 us/op
     p(99.9000) =  26039.408 us/op
     p(99.9900) =  26039.408 us/op
     p(99.9990) =  26039.408 us/op
     p(99.9999) =  26039.408 us/op
    p(100.0000) =  26039.408 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.250)

# Run progress: 30.68% complete, ETA 00:32:35
# Fork: 1 of 2
# Warmup Iteration   1: 4868.229 us/op
# Warmup Iteration   2: 4807.029 us/op
# Warmup Iteration   3: 4138.826 us/op
# Warmup Iteration   4: 4035.409 us/op
# Warmup Iteration   5: 4091.321 us/op
Iteration   1: 14943.758 us/op
Iteration   2: 15388.312 us/op
Iteration   3: 26230.323 us/op
Iteration   4: 10672.220 us/op
Iteration   5: 10892.621 us/op

# Run progress: 30.87% complete, ETA 00:32:29
# Fork: 2 of 2
# Warmup Iteration   1: 4576.261 us/op
# Warmup Iteration   2: 4862.283 us/op
# Warmup Iteration   3: 4038.759 us/op
# Warmup Iteration   4: 3858.047 us/op
# Warmup Iteration   5: 3798.406 us/op
Iteration   1: 14541.556 us/op
Iteration   2: 15477.748 us/op
Iteration   3: 25713.435 us/op
Iteration   4: 11093.694 us/op
Iteration   5: 10492.999 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  15544.667 ±(99.9%) 8868.648 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 4 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 2 
    [15000.000, 16250.000) = 2 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 0 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 2 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10492.999 us/op
     p(50.0000) =  14742.657 us/op
     p(90.0000) =  26178.634 us/op
     p(95.0000) =  26230.323 us/op
     p(99.0000) =  26230.323 us/op
     p(99.9000) =  26230.323 us/op
     p(99.9900) =  26230.323 us/op
     p(99.9990) =  26230.323 us/op
     p(99.9999) =  26230.323 us/op
    p(100.0000) =  26230.323 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.375)

# Run progress: 31.06% complete, ETA 00:32:24
# Fork: 1 of 2
# Warmup Iteration   1: 4585.611 us/op
# Warmup Iteration   2: 4483.403 us/op
# Warmup Iteration   3: 3972.662 us/op
# Warmup Iteration   4: 3992.116 us/op
# Warmup Iteration   5: 3856.708 us/op
Iteration   1: 14787.040 us/op
Iteration   2: 15487.030 us/op
Iteration   3: 26109.613 us/op
Iteration   4: 10956.091 us/op
Iteration   5: 10924.989 us/op

# Run progress: 31.25% complete, ETA 00:32:19
# Fork: 2 of 2
# Warmup Iteration   1: 4910.885 us/op
# Warmup Iteration   2: 4652.042 us/op
# Warmup Iteration   3: 4033.324 us/op
# Warmup Iteration   4: 4112.470 us/op
# Warmup Iteration   5: 4154.469 us/op
Iteration   1: 14545.102 us/op
Iteration   2: 15347.801 us/op
Iteration   3: 26576.251 us/op
Iteration   4: 10805.553 us/op
Iteration   5: 10841.383 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  15638.085 ±(99.9%) 9040.553 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 4 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 2 
    [15000.000, 16250.000) = 2 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 0 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 1 
    [26250.000, 27500.000) = 1 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10805.553 us/op
     p(50.0000) =  14666.071 us/op
     p(90.0000) =  26529.587 us/op
     p(95.0000) =  26576.251 us/op
     p(99.0000) =  26576.251 us/op
     p(99.9000) =  26576.251 us/op
     p(99.9900) =  26576.251 us/op
     p(99.9990) =  26576.251 us/op
     p(99.9999) =  26576.251 us/op
    p(100.0000) =  26576.251 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.5)

# Run progress: 31.44% complete, ETA 00:32:14
# Fork: 1 of 2
# Warmup Iteration   1: 4757.434 us/op
# Warmup Iteration   2: 4732.170 us/op
# Warmup Iteration   3: 4155.577 us/op
# Warmup Iteration   4: 4124.011 us/op
# Warmup Iteration   5: 3753.955 us/op
Iteration   1: 14562.394 us/op
Iteration   2: 15481.316 us/op
Iteration   3: 25528.747 us/op
Iteration   4: 10675.118 us/op
Iteration   5: 10694.902 us/op

# Run progress: 31.63% complete, ETA 00:32:08
# Fork: 2 of 2
# Warmup Iteration   1: 4657.795 us/op
# Warmup Iteration   2: 4675.848 us/op
# Warmup Iteration   3: 4012.551 us/op
# Warmup Iteration   4: 3986.569 us/op
# Warmup Iteration   5: 4002.763 us/op
Iteration   1: 14845.798 us/op
Iteration   2: 15380.759 us/op
Iteration   3: 25672.923 us/op
Iteration   4: 10960.208 us/op
Iteration   5: 10699.893 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  15450.206 ±(99.9%) 8661.243 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 4 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 2 
    [15000.000, 16250.000) = 2 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 0 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 2 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10675.118 us/op
     p(50.0000) =  14704.096 us/op
     p(90.0000) =  25658.505 us/op
     p(95.0000) =  25672.923 us/op
     p(99.0000) =  25672.923 us/op
     p(99.9000) =  25672.923 us/op
     p(99.9900) =  25672.923 us/op
     p(99.9990) =  25672.923 us/op
     p(99.9999) =  25672.923 us/op
    p(100.0000) =  25672.923 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.625)

# Run progress: 31.82% complete, ETA 00:32:03
# Fork: 1 of 2
# Warmup Iteration   1: 4772.978 us/op
# Warmup Iteration   2: 4999.662 us/op
# Warmup Iteration   3: 4012.616 us/op
# Warmup Iteration   4: 4026.128 us/op
# Warmup Iteration   5: 4016.445 us/op
Iteration   1: 14677.874 us/op
Iteration   2: 15652.320 us/op
Iteration   3: 26106.817 us/op
Iteration   4: 11068.193 us/op
Iteration   5: 10865.602 us/op

# Run progress: 32.01% complete, ETA 00:31:58
# Fork: 2 of 2
# Warmup Iteration   1: 4695.906 us/op
# Warmup Iteration   2: 4813.494 us/op
# Warmup Iteration   3: 4222.846 us/op
# Warmup Iteration   4: 4052.059 us/op
# Warmup Iteration   5: 3918.174 us/op
Iteration   1: 15050.432 us/op
Iteration   2: 15296.231 us/op
Iteration   3: 26114.556 us/op
Iteration   4: 10906.839 us/op
Iteration   5: 10816.008 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  15655.487 ±(99.9%) 8873.425 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 4 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 1 
    [15000.000, 16250.000) = 3 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 0 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 2 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10816.008 us/op
     p(50.0000) =  14864.153 us/op
     p(90.0000) =  26113.782 us/op
     p(95.0000) =  26114.556 us/op
     p(99.0000) =  26114.556 us/op
     p(99.9000) =  26114.556 us/op
     p(99.9900) =  26114.556 us/op
     p(99.9990) =  26114.556 us/op
     p(99.9999) =  26114.556 us/op
    p(100.0000) =  26114.556 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.75)

# Run progress: 32.20% complete, ETA 00:31:52
# Fork: 1 of 2
# Warmup Iteration   1: 4723.157 us/op
# Warmup Iteration   2: 4894.151 us/op
# Warmup Iteration   3: 4070.695 us/op
# Warmup Iteration   4: 3920.333 us/op
# Warmup Iteration   5: 4007.179 us/op
Iteration   1: 15010.239 us/op
Iteration   2: 15240.459 us/op
Iteration   3: 26069.102 us/op
Iteration   4: 10987.685 us/op
Iteration   5: 11022.432 us/op

# Run progress: 32.39% complete, ETA 00:31:47
# Fork: 2 of 2
# Warmup Iteration   1: 4634.993 us/op
# Warmup Iteration   2: 4729.848 us/op
# Warmup Iteration   3: 3949.069 us/op
# Warmup Iteration   4: 3883.105 us/op
# Warmup Iteration   5: 3927.648 us/op
Iteration   1: 14607.067 us/op
Iteration   2: 15626.035 us/op
Iteration   3: 26121.255 us/op
Iteration   4: 10995.048 us/op
Iteration   5: 10796.191 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  15647.551 ±(99.9%) 8847.914 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 4 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 1 
    [15000.000, 16250.000) = 3 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 0 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 2 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10796.191 us/op
     p(50.0000) =  14808.653 us/op
     p(90.0000) =  26116.040 us/op
     p(95.0000) =  26121.255 us/op
     p(99.0000) =  26121.255 us/op
     p(99.9000) =  26121.255 us/op
     p(99.9900) =  26121.255 us/op
     p(99.9990) =  26121.255 us/op
     p(99.9999) =  26121.255 us/op
    p(100.0000) =  26121.255 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.875)

# Run progress: 32.58% complete, ETA 00:31:42
# Fork: 1 of 2
# Warmup Iteration   1: 4626.637 us/op
# Warmup Iteration   2: 4830.690 us/op
# Warmup Iteration   3: 4182.293 us/op
# Warmup Iteration   4: 3923.770 us/op
# Warmup Iteration   5: 3880.586 us/op
Iteration   1: 14651.288 us/op
Iteration   2: 15562.219 us/op
Iteration   3: 26136.395 us/op
Iteration   4: 10733.022 us/op
Iteration   5: 10542.514 us/op

# Run progress: 32.77% complete, ETA 00:31:36
# Fork: 2 of 2
# Warmup Iteration   1: 4614.540 us/op
# Warmup Iteration   2: 4694.858 us/op
# Warmup Iteration   3: 3928.660 us/op
# Warmup Iteration   4: 3891.207 us/op
# Warmup Iteration   5: 3860.091 us/op
Iteration   1: 15116.382 us/op
Iteration   2: 15358.872 us/op
Iteration   3: 26138.468 us/op
Iteration   4: 10959.956 us/op
Iteration   5: 10752.921 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  15595.204 ±(99.9%) 8980.512 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 4 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 1 
    [15000.000, 16250.000) = 3 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 0 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 2 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10542.514 us/op
     p(50.0000) =  14883.835 us/op
     p(90.0000) =  26138.261 us/op
     p(95.0000) =  26138.468 us/op
     p(99.0000) =  26138.468 us/op
     p(99.9000) =  26138.468 us/op
     p(99.9900) =  26138.468 us/op
     p(99.9990) =  26138.468 us/op
     p(99.9999) =  26138.468 us/op
    p(100.0000) =  26138.468 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 1)

# Run progress: 32.95% complete, ETA 00:31:31
# Fork: 1 of 2
# Warmup Iteration   1: 4710.070 us/op
# Warmup Iteration   2: 4716.208 us/op
# Warmup Iteration   3: 3967.295 us/op
# Warmup Iteration   4: 3854.149 us/op
# Warmup Iteration   5: 3814.553 us/op
Iteration   1: 14858.595 us/op
Iteration   2: 15290.180 us/op
Iteration   3: 26107.201 us/op
Iteration   4: 10835.751 us/op
Iteration   5: 10729.119 us/op

# Run progress: 33.14% complete, ETA 00:31:26
# Fork: 2 of 2
# Warmup Iteration   1: 4730.503 us/op
# Warmup Iteration   2: 4617.185 us/op
# Warmup Iteration   3: 4025.208 us/op
# Warmup Iteration   4: 3944.139 us/op
# Warmup Iteration   5: 3862.918 us/op
Iteration   1: 14936.474 us/op
Iteration   2: 15474.525 us/op
Iteration   3: 25705.972 us/op
Iteration   4: 10822.907 us/op
Iteration   5: 10863.141 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =  15562.387 ±(99.9%) 8805.500 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 4 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 2 
    [15000.000, 16250.000) = 2 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 0 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 2 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10729.119 us/op
     p(50.0000) =  14897.535 us/op
     p(90.0000) =  26067.078 us/op
     p(95.0000) =  26107.201 us/op
     p(99.0000) =  26107.201 us/op
     p(99.9000) =  26107.201 us/op
     p(99.9900) =  26107.201 us/op
     p(99.9990) =  26107.201 us/op
     p(99.9999) =  26107.201 us/op
    p(100.0000) =  26107.201 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.125)

# Run progress: 33.33% complete, ETA 00:31:21
# Fork: 1 of 2
# Warmup Iteration   1: 3406.656 us/op
# Warmup Iteration   2: 2373.938 us/op
# Warmup Iteration   3: 2173.974 us/op
# Warmup Iteration   4: 1823.918 us/op
# Warmup Iteration   5: 1705.086 us/op
Iteration   1: 21978.880 us/op
Iteration   2: 15422.288 us/op
Iteration   3: 12356.894 us/op
Iteration   4: 21170.450 us/op
Iteration   5: 12163.885 us/op

# Run progress: 33.52% complete, ETA 00:31:15
# Fork: 2 of 2
# Warmup Iteration   1: 3442.043 us/op
# Warmup Iteration   2: 2411.385 us/op
# Warmup Iteration   3: 2143.142 us/op
# Warmup Iteration   4: 1750.438 us/op
# Warmup Iteration   5: 1802.410 us/op
Iteration   1: 22500.990 us/op
Iteration   2: 15504.871 us/op
Iteration   3: 12507.484 us/op
Iteration   4: 21126.646 us/op
Iteration   5: 12155.512 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  16688.790 ±(99.9%) 6795.444 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 3 
    [12500.000, 13750.000) = 1 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 2 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 2 
    [21250.000, 22500.000) = 1 
    [22500.000, 23750.000) = 1 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  12155.512 us/op
     p(50.0000) =  15463.580 us/op
     p(90.0000) =  22448.779 us/op
     p(95.0000) =  22500.990 us/op
     p(99.0000) =  22500.990 us/op
     p(99.9000) =  22500.990 us/op
     p(99.9900) =  22500.990 us/op
     p(99.9990) =  22500.990 us/op
     p(99.9999) =  22500.990 us/op
    p(100.0000) =  22500.990 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.250)

# Run progress: 33.71% complete, ETA 00:31:10
# Fork: 1 of 2
# Warmup Iteration   1: 3031.849 us/op
# Warmup Iteration   2: 2131.256 us/op
# Warmup Iteration   3: 1680.781 us/op
# Warmup Iteration   4: 1509.291 us/op
# Warmup Iteration   5: 1575.791 us/op
Iteration   1: 12912.828 us/op
Iteration   2: 19081.711 us/op
Iteration   3: 9642.819 us/op
Iteration   4: 17398.032 us/op
Iteration   5: 9146.283 us/op

# Run progress: 33.90% complete, ETA 00:31:05
# Fork: 2 of 2
# Warmup Iteration   1: 3219.610 us/op
# Warmup Iteration   2: 2153.869 us/op
# Warmup Iteration   3: 1683.954 us/op
# Warmup Iteration   4: 1529.765 us/op
# Warmup Iteration   5: 1606.656 us/op
Iteration   1: 13402.161 us/op
Iteration   2: 19323.900 us/op
Iteration   3: 9547.622 us/op
Iteration   4: 17619.936 us/op
Iteration   5: 9184.357 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  13725.965 ±(99.9%) 6476.609 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 0 
    [ 7500.000,  8750.000) = 0 
    [ 8750.000, 10000.000) = 4 
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 2 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 1 
    [17500.000, 18750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   9146.283 us/op
     p(50.0000) =  13157.495 us/op
     p(90.0000) =  19299.681 us/op
     p(95.0000) =  19323.900 us/op
     p(99.0000) =  19323.900 us/op
     p(99.9000) =  19323.900 us/op
     p(99.9900) =  19323.900 us/op
     p(99.9990) =  19323.900 us/op
     p(99.9999) =  19323.900 us/op
    p(100.0000) =  19323.900 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.375)

# Run progress: 34.09% complete, ETA 00:30:59
# Fork: 1 of 2
# Warmup Iteration   1: 2826.681 us/op
# Warmup Iteration   2: 1727.578 us/op
# Warmup Iteration   3: 1904.741 us/op
# Warmup Iteration   4: 1361.308 us/op
# Warmup Iteration   5: 1330.421 us/op
Iteration   1: 15124.313 us/op
Iteration   2: 21030.728 us/op
Iteration   3: 10741.330 us/op
Iteration   4: 18590.062 us/op
Iteration   5: 10608.707 us/op

# Run progress: 34.28% complete, ETA 00:30:54
# Fork: 2 of 2
# Warmup Iteration   1: 2655.563 us/op
# Warmup Iteration   2: 1754.196 us/op
# Warmup Iteration   3: 1699.667 us/op
# Warmup Iteration   4: 1316.624 us/op
# Warmup Iteration   5: 1297.306 us/op
Iteration   1: 15020.613 us/op
Iteration   2: 21137.989 us/op
Iteration   3: 10795.522 us/op
Iteration   4: 19446.304 us/op
Iteration   5: 11560.186 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  15405.575 ±(99.9%) 6609.340 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 3 
    [11250.000, 12500.000) = 1 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 2 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 1 
    [18750.000, 20000.000) = 1 
    [20000.000, 21250.000) = 2 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10608.707 us/op
     p(50.0000) =  15072.463 us/op
     p(90.0000) =  21127.263 us/op
     p(95.0000) =  21137.989 us/op
     p(99.0000) =  21137.989 us/op
     p(99.9000) =  21137.989 us/op
     p(99.9900) =  21137.989 us/op
     p(99.9990) =  21137.989 us/op
     p(99.9999) =  21137.989 us/op
    p(100.0000) =  21137.989 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.5)

# Run progress: 34.47% complete, ETA 00:30:49
# Fork: 1 of 2
# Warmup Iteration   1: 3257.509 us/op
# Warmup Iteration   2: 1880.541 us/op
# Warmup Iteration   3: 1860.117 us/op
# Warmup Iteration   4: 1522.299 us/op
# Warmup Iteration   5: 1498.584 us/op
Iteration   1: 12506.317 us/op
Iteration   2: 14058.853 us/op
Iteration   3: 8051.627 us/op
Iteration   4: 7546.973 us/op
Iteration   5: 14108.204 us/op

# Run progress: 34.66% complete, ETA 00:30:43
# Fork: 2 of 2
# Warmup Iteration   1: 2855.048 us/op
# Warmup Iteration   2: 1889.241 us/op
# Warmup Iteration   3: 1936.838 us/op
# Warmup Iteration   4: 1493.692 us/op
# Warmup Iteration   5: 1405.789 us/op
Iteration   1: 12220.153 us/op
Iteration   2: 14418.127 us/op
Iteration   3: 8067.895 us/op
Iteration   4: 7530.778 us/op
Iteration   5: 14346.548 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  11285.547 ±(99.9%) 4675.960 us/op

  Histogram, us/op:
    [ 7000.000,  7500.000) = 0 
    [ 7500.000,  8000.000) = 2 
    [ 8000.000,  8500.000) = 2 
    [ 8500.000,  9000.000) = 0 
    [ 9000.000,  9500.000) = 0 
    [ 9500.000, 10000.000) = 0 
    [10000.000, 10500.000) = 0 
    [10500.000, 11000.000) = 0 
    [11000.000, 11500.000) = 0 
    [11500.000, 12000.000) = 0 
    [12000.000, 12500.000) = 1 
    [12500.000, 13000.000) = 1 
    [13000.000, 13500.000) = 0 
    [13500.000, 14000.000) = 0 
    [14000.000, 14500.000) = 4 

  Percentiles, us/op:
      p(0.0000) =   7530.778 us/op
     p(50.0000) =  12363.235 us/op
     p(90.0000) =  14410.969 us/op
     p(95.0000) =  14418.127 us/op
     p(99.0000) =  14418.127 us/op
     p(99.9000) =  14418.127 us/op
     p(99.9900) =  14418.127 us/op
     p(99.9990) =  14418.127 us/op
     p(99.9999) =  14418.127 us/op
    p(100.0000) =  14418.127 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.625)

# Run progress: 34.85% complete, ETA 00:30:38
# Fork: 1 of 2
# Warmup Iteration   1: 2545.261 us/op
# Warmup Iteration   2: 1820.867 us/op
# Warmup Iteration   3: 1552.532 us/op
# Warmup Iteration   4: 1216.540 us/op
# Warmup Iteration   5: 1222.601 us/op
Iteration   1: 13217.427 us/op
Iteration   2: 16920.262 us/op
Iteration   3: 8373.032 us/op
Iteration   4: 8157.457 us/op
Iteration   5: 11159.097 us/op

# Run progress: 35.04% complete, ETA 00:30:33
# Fork: 2 of 2
# Warmup Iteration   1: 2970.750 us/op
# Warmup Iteration   2: 1562.942 us/op
# Warmup Iteration   3: 1564.300 us/op
# Warmup Iteration   4: 1311.557 us/op
# Warmup Iteration   5: 1233.930 us/op
Iteration   1: 13305.115 us/op
Iteration   2: 16442.235 us/op
Iteration   3: 8518.470 us/op
Iteration   4: 8519.651 us/op
Iteration   5: 10775.062 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  11538.781 ±(99.9%) 5023.427 us/op

  Histogram, us/op:
    [ 8000.000,  8500.000) = 2 
    [ 8500.000,  9000.000) = 2 
    [ 9000.000,  9500.000) = 0 
    [ 9500.000, 10000.000) = 0 
    [10000.000, 10500.000) = 0 
    [10500.000, 11000.000) = 1 
    [11000.000, 11500.000) = 1 
    [11500.000, 12000.000) = 0 
    [12000.000, 12500.000) = 0 
    [12500.000, 13000.000) = 0 
    [13000.000, 13500.000) = 2 
    [13500.000, 14000.000) = 0 
    [14000.000, 14500.000) = 0 
    [14500.000, 15000.000) = 0 
    [15000.000, 15500.000) = 0 
    [15500.000, 16000.000) = 0 
    [16000.000, 16500.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   8157.457 us/op
     p(50.0000) =  10967.080 us/op
     p(90.0000) =  16872.459 us/op
     p(95.0000) =  16920.262 us/op
     p(99.0000) =  16920.262 us/op
     p(99.9000) =  16920.262 us/op
     p(99.9900) =  16920.262 us/op
     p(99.9990) =  16920.262 us/op
     p(99.9999) =  16920.262 us/op
    p(100.0000) =  16920.262 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.75)

# Run progress: 35.23% complete, ETA 00:30:27
# Fork: 1 of 2
# Warmup Iteration   1: 3639.616 us/op
# Warmup Iteration   2: 1640.506 us/op
# Warmup Iteration   3: 1659.546 us/op
# Warmup Iteration   4: 1303.764 us/op
# Warmup Iteration   5: 1296.924 us/op
Iteration   1: 14776.537 us/op
Iteration   2: 17107.312 us/op
Iteration   3: 9608.923 us/op
Iteration   4: 9591.362 us/op
Iteration   5: 14814.047 us/op

# Run progress: 35.42% complete, ETA 00:30:22
# Fork: 2 of 2
# Warmup Iteration   1: 3015.123 us/op
# Warmup Iteration   2: 1830.335 us/op
# Warmup Iteration   3: 1527.969 us/op
# Warmup Iteration   4: 1670.147 us/op
# Warmup Iteration   5: 1307.390 us/op
Iteration   1: 14876.903 us/op
Iteration   2: 16822.173 us/op
Iteration   3: 9540.684 us/op
Iteration   4: 9455.877 us/op
Iteration   5: 14936.363 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  13153.018 ±(99.9%) 4849.737 us/op

  Histogram, us/op:
    [ 9000.000,  9500.000) = 1 
    [ 9500.000, 10000.000) = 3 
    [10000.000, 10500.000) = 0 
    [10500.000, 11000.000) = 0 
    [11000.000, 11500.000) = 0 
    [11500.000, 12000.000) = 0 
    [12000.000, 12500.000) = 0 
    [12500.000, 13000.000) = 0 
    [13000.000, 13500.000) = 0 
    [13500.000, 14000.000) = 0 
    [14000.000, 14500.000) = 0 
    [14500.000, 15000.000) = 4 
    [15000.000, 15500.000) = 0 
    [15500.000, 16000.000) = 0 
    [16000.000, 16500.000) = 0 
    [16500.000, 17000.000) = 1 
    [17000.000, 17500.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   9455.877 us/op
     p(50.0000) =  14795.292 us/op
     p(90.0000) =  17078.798 us/op
     p(95.0000) =  17107.312 us/op
     p(99.0000) =  17107.312 us/op
     p(99.9000) =  17107.312 us/op
     p(99.9900) =  17107.312 us/op
     p(99.9990) =  17107.312 us/op
     p(99.9999) =  17107.312 us/op
    p(100.0000) =  17107.312 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.875)

# Run progress: 35.61% complete, ETA 00:30:17
# Fork: 1 of 2
# Warmup Iteration   1: 2614.850 us/op
# Warmup Iteration   2: 1743.089 us/op
# Warmup Iteration   3: 1744.655 us/op
# Warmup Iteration   4: 1687.864 us/op
# Warmup Iteration   5: 1332.255 us/op
Iteration   1: 12269.702 us/op
Iteration   2: 16077.120 us/op
Iteration   3: 8219.945 us/op
Iteration   4: 7597.737 us/op
Iteration   5: 8821.766 us/op

# Run progress: 35.80% complete, ETA 00:30:11
# Fork: 2 of 2
# Warmup Iteration   1: 2809.035 us/op
# Warmup Iteration   2: 1798.871 us/op
# Warmup Iteration   3: 1820.513 us/op
# Warmup Iteration   4: 1335.735 us/op
# Warmup Iteration   5: 1306.166 us/op
Iteration   1: 12679.980 us/op
Iteration   2: 15790.443 us/op
Iteration   3: 8216.436 us/op
Iteration   4: 7760.680 us/op
Iteration   5: 8988.939 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  10642.275 ±(99.9%) 4994.341 us/op

  Histogram, us/op:
    [ 7000.000,  8000.000) = 2 
    [ 8000.000,  9000.000) = 4 
    [ 9000.000, 10000.000) = 0 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 2 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   7597.737 us/op
     p(50.0000) =   8905.353 us/op
     p(90.0000) =  16048.452 us/op
     p(95.0000) =  16077.120 us/op
     p(99.0000) =  16077.120 us/op
     p(99.9000) =  16077.120 us/op
     p(99.9900) =  16077.120 us/op
     p(99.9990) =  16077.120 us/op
     p(99.9999) =  16077.120 us/op
    p(100.0000) =  16077.120 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 1)

# Run progress: 35.98% complete, ETA 00:30:06
# Fork: 1 of 2
# Warmup Iteration   1: 2724.272 us/op
# Warmup Iteration   2: 1754.955 us/op
# Warmup Iteration   3: 1619.118 us/op
# Warmup Iteration   4: 1706.988 us/op
# Warmup Iteration   5: 1411.983 us/op
Iteration   1: 13117.715 us/op
Iteration   2: 15851.605 us/op
Iteration   3: 8389.869 us/op
Iteration   4: 8040.608 us/op
Iteration   5: 10589.137 us/op

# Run progress: 36.17% complete, ETA 00:30:00
# Fork: 2 of 2
# Warmup Iteration   1: 2703.572 us/op
# Warmup Iteration   2: 1731.455 us/op
# Warmup Iteration   3: 1846.241 us/op
# Warmup Iteration   4: 1411.361 us/op
# Warmup Iteration   5: 1402.362 us/op
Iteration   1: 12698.262 us/op
Iteration   2: 16444.740 us/op
Iteration   3: 8150.412 us/op
Iteration   4: 7901.013 us/op
Iteration   5: 11184.181 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  11236.754 ±(99.9%) 4872.700 us/op

  Histogram, us/op:
    [ 7000.000,  8000.000) = 1 
    [ 8000.000,  9000.000) = 3 
    [ 9000.000, 10000.000) = 0 
    [10000.000, 11000.000) = 1 
    [11000.000, 12000.000) = 1 
    [12000.000, 13000.000) = 1 
    [13000.000, 14000.000) = 1 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   7901.013 us/op
     p(50.0000) =  10886.659 us/op
     p(90.0000) =  16385.427 us/op
     p(95.0000) =  16444.740 us/op
     p(99.0000) =  16444.740 us/op
     p(99.9000) =  16444.740 us/op
     p(99.9900) =  16444.740 us/op
     p(99.9990) =  16444.740 us/op
     p(99.9999) =  16444.740 us/op
    p(100.0000) =  16444.740 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.125)

# Run progress: 36.36% complete, ETA 00:29:55
# Fork: 1 of 2
# Warmup Iteration   1: 3288.092 us/op
# Warmup Iteration   2: 2538.008 us/op
# Warmup Iteration   3: 2346.755 us/op
# Warmup Iteration   4: 2004.670 us/op
# Warmup Iteration   5: 1890.546 us/op
Iteration   1: 22998.463 us/op
Iteration   2: 15772.058 us/op
Iteration   3: 12636.655 us/op
Iteration   4: 21314.932 us/op
Iteration   5: 12145.002 us/op

# Run progress: 36.55% complete, ETA 00:29:50
# Fork: 2 of 2
# Warmup Iteration   1: 3469.056 us/op
# Warmup Iteration   2: 2581.272 us/op
# Warmup Iteration   3: 2293.398 us/op
# Warmup Iteration   4: 1987.664 us/op
# Warmup Iteration   5: 1872.913 us/op
Iteration   1: 23421.712 us/op
Iteration   2: 15722.264 us/op
Iteration   3: 12610.525 us/op
Iteration   4: 21427.659 us/op
Iteration   5: 12189.489 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  17023.876 ±(99.9%) 7190.746 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 2 
    [12500.000, 13750.000) = 2 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 2 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 0 
    [21250.000, 22500.000) = 2 
    [22500.000, 23750.000) = 2 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  12145.002 us/op
     p(50.0000) =  15747.161 us/op
     p(90.0000) =  23379.387 us/op
     p(95.0000) =  23421.712 us/op
     p(99.0000) =  23421.712 us/op
     p(99.9000) =  23421.712 us/op
     p(99.9900) =  23421.712 us/op
     p(99.9990) =  23421.712 us/op
     p(99.9999) =  23421.712 us/op
    p(100.0000) =  23421.712 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.250)

# Run progress: 36.74% complete, ETA 00:29:45
# Fork: 1 of 2
# Warmup Iteration   1: 3071.157 us/op
# Warmup Iteration   2: 1926.016 us/op
# Warmup Iteration   3: 1908.442 us/op
# Warmup Iteration   4: 1534.657 us/op
# Warmup Iteration   5: 1590.440 us/op
Iteration   1: 12948.219 us/op
Iteration   2: 18735.665 us/op
Iteration   3: 9584.586 us/op
Iteration   4: 17303.924 us/op
Iteration   5: 8827.903 us/op

# Run progress: 36.93% complete, ETA 00:29:39
# Fork: 2 of 2
# Warmup Iteration   1: 3068.214 us/op
# Warmup Iteration   2: 1969.781 us/op
# Warmup Iteration   3: 1990.361 us/op
# Warmup Iteration   4: 1531.279 us/op
# Warmup Iteration   5: 1580.711 us/op
Iteration   1: 12873.199 us/op
Iteration   2: 19078.850 us/op
Iteration   3: 9551.199 us/op
Iteration   4: 17489.623 us/op
Iteration   5: 8965.930 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  13535.910 ±(99.9%) 6432.394 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 0 
    [ 7500.000,  8750.000) = 0 
    [ 8750.000, 10000.000) = 4 
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 2 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 2 
    [17500.000, 18750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   8827.903 us/op
     p(50.0000) =  12910.709 us/op
     p(90.0000) =  19044.531 us/op
     p(95.0000) =  19078.850 us/op
     p(99.0000) =  19078.850 us/op
     p(99.9000) =  19078.850 us/op
     p(99.9900) =  19078.850 us/op
     p(99.9990) =  19078.850 us/op
     p(99.9999) =  19078.850 us/op
    p(100.0000) =  19078.850 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.375)

# Run progress: 37.12% complete, ETA 00:29:34
# Fork: 1 of 2
# Warmup Iteration   1: 3283.712 us/op
# Warmup Iteration   2: 1863.901 us/op
# Warmup Iteration   3: 1505.813 us/op
# Warmup Iteration   4: 1621.281 us/op
# Warmup Iteration   5: 1340.585 us/op
Iteration   1: 14875.188 us/op
Iteration   2: 21035.013 us/op
Iteration   3: 10835.019 us/op
Iteration   4: 20198.631 us/op
Iteration   5: 11852.896 us/op

# Run progress: 37.31% complete, ETA 00:29:29
# Fork: 2 of 2
# Warmup Iteration   1: 2861.442 us/op
# Warmup Iteration   2: 1768.412 us/op
# Warmup Iteration   3: 1795.324 us/op
# Warmup Iteration   4: 1420.868 us/op
# Warmup Iteration   5: 1272.211 us/op
Iteration   1: 14830.140 us/op
Iteration   2: 21193.779 us/op
Iteration   3: 10953.083 us/op
Iteration   4: 18275.785 us/op
Iteration   5: 10602.564 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  15465.210 ±(99.9%) 6635.876 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 3 
    [11250.000, 12500.000) = 1 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 2 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 1 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 3 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10602.564 us/op
     p(50.0000) =  14852.664 us/op
     p(90.0000) =  21177.902 us/op
     p(95.0000) =  21193.779 us/op
     p(99.0000) =  21193.779 us/op
     p(99.9000) =  21193.779 us/op
     p(99.9900) =  21193.779 us/op
     p(99.9990) =  21193.779 us/op
     p(99.9999) =  21193.779 us/op
    p(100.0000) =  21193.779 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.5)

# Run progress: 37.50% complete, ETA 00:29:23
# Fork: 1 of 2
# Warmup Iteration   1: 3385.526 us/op
# Warmup Iteration   2: 2004.666 us/op
# Warmup Iteration   3: 1452.661 us/op
# Warmup Iteration   4: 1504.061 us/op
# Warmup Iteration   5: 1444.601 us/op
Iteration   1: 12475.657 us/op
Iteration   2: 14997.647 us/op
Iteration   3: 7973.223 us/op
Iteration   4: 7394.468 us/op
Iteration   5: 13928.605 us/op

# Run progress: 37.69% complete, ETA 00:29:18
# Fork: 2 of 2
# Warmup Iteration   1: 2793.961 us/op
# Warmup Iteration   2: 1878.999 us/op
# Warmup Iteration   3: 1877.598 us/op
# Warmup Iteration   4: 1467.112 us/op
# Warmup Iteration   5: 1419.454 us/op
Iteration   1: 12846.263 us/op
Iteration   2: 14909.630 us/op
Iteration   3: 8056.079 us/op
Iteration   4: 7758.580 us/op
Iteration   5: 14304.412 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  11464.456 ±(99.9%) 4925.501 us/op

  Histogram, us/op:
    [ 7000.000,  7500.000) = 1 
    [ 7500.000,  8000.000) = 2 
    [ 8000.000,  8500.000) = 1 
    [ 8500.000,  9000.000) = 0 
    [ 9000.000,  9500.000) = 0 
    [ 9500.000, 10000.000) = 0 
    [10000.000, 10500.000) = 0 
    [10500.000, 11000.000) = 0 
    [11000.000, 11500.000) = 0 
    [11500.000, 12000.000) = 0 
    [12000.000, 12500.000) = 1 
    [12500.000, 13000.000) = 1 
    [13000.000, 13500.000) = 0 
    [13500.000, 14000.000) = 1 
    [14000.000, 14500.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   7394.468 us/op
     p(50.0000) =  12660.960 us/op
     p(90.0000) =  14988.845 us/op
     p(95.0000) =  14997.647 us/op
     p(99.0000) =  14997.647 us/op
     p(99.9000) =  14997.647 us/op
     p(99.9900) =  14997.647 us/op
     p(99.9990) =  14997.647 us/op
     p(99.9999) =  14997.647 us/op
    p(100.0000) =  14997.647 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.625)

# Run progress: 37.88% complete, ETA 00:29:12
# Fork: 1 of 2
# Warmup Iteration   1: 2859.308 us/op
# Warmup Iteration   2: 1700.263 us/op
# Warmup Iteration   3: 1351.876 us/op
# Warmup Iteration   4: 1214.695 us/op
# Warmup Iteration   5: 1226.653 us/op
Iteration   1: 13701.293 us/op
Iteration   2: 17475.196 us/op
Iteration   3: 8504.664 us/op
Iteration   4: 8175.344 us/op
Iteration   5: 10500.735 us/op

# Run progress: 38.07% complete, ETA 00:29:07
# Fork: 2 of 2
# Warmup Iteration   1: 3120.225 us/op
# Warmup Iteration   2: 1657.862 us/op
# Warmup Iteration   3: 1616.932 us/op
# Warmup Iteration   4: 1238.465 us/op
# Warmup Iteration   5: 1219.998 us/op
Iteration   1: 14727.559 us/op
Iteration   2: 17308.430 us/op
Iteration   3: 8474.395 us/op
Iteration   4: 8444.340 us/op
Iteration   5: 10737.956 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  11804.991 ±(99.9%) 5608.821 us/op

  Histogram, us/op:
    [ 8000.000,  9000.000) = 4 
    [ 9000.000, 10000.000) = 0 
    [10000.000, 11000.000) = 2 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 1 
    [14000.000, 15000.000) = 1 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8175.344 us/op
     p(50.0000) =  10619.346 us/op
     p(90.0000) =  17458.519 us/op
     p(95.0000) =  17475.196 us/op
     p(99.0000) =  17475.196 us/op
     p(99.9000) =  17475.196 us/op
     p(99.9900) =  17475.196 us/op
     p(99.9990) =  17475.196 us/op
     p(99.9999) =  17475.196 us/op
    p(100.0000) =  17475.196 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.75)

# Run progress: 38.26% complete, ETA 00:29:02
# Fork: 1 of 2
# Warmup Iteration   1: 3173.056 us/op
# Warmup Iteration   2: 1585.430 us/op
# Warmup Iteration   3: 1692.654 us/op
# Warmup Iteration   4: 1293.677 us/op
# Warmup Iteration   5: 1292.479 us/op
Iteration   1: 18267.153 us/op
Iteration   2: 17409.550 us/op
Iteration   3: 9593.864 us/op
Iteration   4: 9408.641 us/op
Iteration   5: 14961.767 us/op

# Run progress: 38.45% complete, ETA 00:28:56
# Fork: 2 of 2
# Warmup Iteration   1: 2751.951 us/op
# Warmup Iteration   2: 1640.230 us/op
# Warmup Iteration   3: 1597.725 us/op
# Warmup Iteration   4: 1592.940 us/op
# Warmup Iteration   5: 1257.593 us/op
Iteration   1: 14750.584 us/op
Iteration   2: 17348.576 us/op
Iteration   3: 9606.418 us/op
Iteration   4: 9529.991 us/op
Iteration   5: 14686.079 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  13556.262 ±(99.9%) 5539.255 us/op

  Histogram, us/op:
    [ 9000.000, 10000.000) = 4 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 3 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 0 
    [17000.000, 18000.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   9408.641 us/op
     p(50.0000) =  14718.332 us/op
     p(90.0000) =  18181.393 us/op
     p(95.0000) =  18267.153 us/op
     p(99.0000) =  18267.153 us/op
     p(99.9000) =  18267.153 us/op
     p(99.9900) =  18267.153 us/op
     p(99.9990) =  18267.153 us/op
     p(99.9999) =  18267.153 us/op
    p(100.0000) =  18267.153 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.875)

# Run progress: 38.64% complete, ETA 00:28:51
# Fork: 1 of 2
# Warmup Iteration   1: 2876.312 us/op
# Warmup Iteration   2: 1652.108 us/op
# Warmup Iteration   3: 1630.704 us/op
# Warmup Iteration   4: 1650.332 us/op
# Warmup Iteration   5: 1308.518 us/op
Iteration   1: 12910.740 us/op
Iteration   2: 16619.850 us/op
Iteration   3: 8118.128 us/op
Iteration   4: 7682.366 us/op
Iteration   5: 8545.146 us/op

# Run progress: 38.83% complete, ETA 00:28:46
# Fork: 2 of 2
# Warmup Iteration   1: 3325.850 us/op
# Warmup Iteration   2: 1690.028 us/op
# Warmup Iteration   3: 1890.944 us/op
# Warmup Iteration   4: 1369.310 us/op
# Warmup Iteration   5: 1355.483 us/op
Iteration   1: 13752.608 us/op
Iteration   2: 16410.265 us/op
Iteration   3: 7972.242 us/op
Iteration   4: 7473.539 us/op
Iteration   5: 8670.033 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  10815.492 ±(99.9%) 5614.293 us/op

  Histogram, us/op:
    [ 7000.000,  8000.000) = 3 
    [ 8000.000,  9000.000) = 3 
    [ 9000.000, 10000.000) = 0 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 1 
    [13000.000, 14000.000) = 1 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   7473.539 us/op
     p(50.0000) =   8607.590 us/op
     p(90.0000) =  16598.891 us/op
     p(95.0000) =  16619.850 us/op
     p(99.0000) =  16619.850 us/op
     p(99.9000) =  16619.850 us/op
     p(99.9900) =  16619.850 us/op
     p(99.9990) =  16619.850 us/op
     p(99.9999) =  16619.850 us/op
    p(100.0000) =  16619.850 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 1)

# Run progress: 39.02% complete, ETA 00:28:40
# Fork: 1 of 2
# Warmup Iteration   1: 2893.560 us/op
# Warmup Iteration   2: 1754.716 us/op
# Warmup Iteration   3: 1592.987 us/op
# Warmup Iteration   4: 1686.493 us/op
# Warmup Iteration   5: 1379.446 us/op
Iteration   1: 12325.614 us/op
Iteration   2: 17533.357 us/op
Iteration   3: 8208.429 us/op
Iteration   4: 7782.057 us/op
Iteration   5: 10700.879 us/op

# Run progress: 39.20% complete, ETA 00:28:35
# Fork: 2 of 2
# Warmup Iteration   1: 2796.688 us/op
# Warmup Iteration   2: 2023.802 us/op
# Warmup Iteration   3: 2011.246 us/op
# Warmup Iteration   4: 1758.079 us/op
# Warmup Iteration   5: 1374.811 us/op
Iteration   1: 12576.389 us/op
Iteration   2: 17072.001 us/op
Iteration   3: 8420.977 us/op
Iteration   4: 8042.409 us/op
Iteration   5: 10813.225 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  11347.534 ±(99.9%) 5433.801 us/op

  Histogram, us/op:
    [ 7000.000,  8000.000) = 1 
    [ 8000.000,  9000.000) = 3 
    [ 9000.000, 10000.000) = 0 
    [10000.000, 11000.000) = 2 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 2 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   7782.057 us/op
     p(50.0000) =  10757.052 us/op
     p(90.0000) =  17487.221 us/op
     p(95.0000) =  17533.357 us/op
     p(99.0000) =  17533.357 us/op
     p(99.9000) =  17533.357 us/op
     p(99.9900) =  17533.357 us/op
     p(99.9990) =  17533.357 us/op
     p(99.9999) =  17533.357 us/op
    p(100.0000) =  17533.357 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.125)

# Run progress: 39.39% complete, ETA 00:28:30
# Fork: 1 of 2
# Warmup Iteration   1: 3441.491 us/op
# Warmup Iteration   2: 2367.204 us/op
# Warmup Iteration   3: 2118.053 us/op
# Warmup Iteration   4: 1749.029 us/op
# Warmup Iteration   5: 1760.851 us/op
Iteration   1: 21865.666 us/op
Iteration   2: 15648.728 us/op
Iteration   3: 12396.436 us/op
Iteration   4: 21499.418 us/op
Iteration   5: 11894.788 us/op

# Run progress: 39.58% complete, ETA 00:28:24
# Fork: 2 of 2
# Warmup Iteration   1: 3246.841 us/op
# Warmup Iteration   2: 2440.556 us/op
# Warmup Iteration   3: 2001.889 us/op
# Warmup Iteration   4: 1785.516 us/op
# Warmup Iteration   5: 1683.755 us/op
Iteration   1: 22207.438 us/op
Iteration   2: 15472.869 us/op
Iteration   3: 12542.991 us/op
Iteration   4: 21373.053 us/op
Iteration   5: 12248.966 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  16715.035 ±(99.9%) 6821.061 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 3 
    [12500.000, 13750.000) = 1 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 2 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 0 
    [21250.000, 22500.000) = 4 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  11894.788 us/op
     p(50.0000) =  15560.799 us/op
     p(90.0000) =  22173.261 us/op
     p(95.0000) =  22207.438 us/op
     p(99.0000) =  22207.438 us/op
     p(99.9000) =  22207.438 us/op
     p(99.9900) =  22207.438 us/op
     p(99.9990) =  22207.438 us/op
     p(99.9999) =  22207.438 us/op
    p(100.0000) =  22207.438 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.250)

# Run progress: 39.77% complete, ETA 00:28:19
# Fork: 1 of 2
# Warmup Iteration   1: 3205.968 us/op
# Warmup Iteration   2: 2028.928 us/op
# Warmup Iteration   3: 1629.414 us/op
# Warmup Iteration   4: 1539.380 us/op
# Warmup Iteration   5: 1568.737 us/op
Iteration   1: 12907.666 us/op
Iteration   2: 18038.938 us/op
Iteration   3: 9423.318 us/op
Iteration   4: 17501.127 us/op
Iteration   5: 9211.084 us/op

# Run progress: 39.96% complete, ETA 00:28:14
# Fork: 2 of 2
# Warmup Iteration   1: 3085.061 us/op
# Warmup Iteration   2: 2092.868 us/op
# Warmup Iteration   3: 1698.325 us/op
# Warmup Iteration   4: 1523.578 us/op
# Warmup Iteration   5: 1560.583 us/op
Iteration   1: 13125.812 us/op
Iteration   2: 18032.161 us/op
Iteration   3: 9460.412 us/op
Iteration   4: 17238.284 us/op
Iteration   5: 8894.485 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  13383.329 ±(99.9%) 6047.936 us/op

  Histogram, us/op:
    [ 8000.000,  9000.000) = 1 
    [ 9000.000, 10000.000) = 3 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 1 
    [13000.000, 14000.000) = 1 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 0 
    [17000.000, 18000.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   8894.485 us/op
     p(50.0000) =  13016.739 us/op
     p(90.0000) =  18038.260 us/op
     p(95.0000) =  18038.938 us/op
     p(99.0000) =  18038.938 us/op
     p(99.9000) =  18038.938 us/op
     p(99.9900) =  18038.938 us/op
     p(99.9990) =  18038.938 us/op
     p(99.9999) =  18038.938 us/op
    p(100.0000) =  18038.938 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.375)

# Run progress: 40.15% complete, ETA 00:28:08
# Fork: 1 of 2
# Warmup Iteration   1: 2913.212 us/op
# Warmup Iteration   2: 1849.402 us/op
# Warmup Iteration   3: 1515.591 us/op
# Warmup Iteration   4: 1583.279 us/op
# Warmup Iteration   5: 1314.597 us/op
Iteration   1: 15084.028 us/op
Iteration   2: 21232.478 us/op
Iteration   3: 10752.281 us/op
Iteration   4: 18607.021 us/op
Iteration   5: 10603.467 us/op

# Run progress: 40.34% complete, ETA 00:28:03
# Fork: 2 of 2
# Warmup Iteration   1: 2874.629 us/op
# Warmup Iteration   2: 1814.428 us/op
# Warmup Iteration   3: 1787.235 us/op
# Warmup Iteration   4: 1346.854 us/op
# Warmup Iteration   5: 1274.057 us/op
Iteration   1: 15161.758 us/op
Iteration   2: 20718.358 us/op
Iteration   3: 11029.990 us/op
Iteration   4: 18274.445 us/op
Iteration   5: 10352.966 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  15181.679 ±(99.9%) 6565.084 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 4 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 2 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 2 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 2 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10352.966 us/op
     p(50.0000) =  15122.893 us/op
     p(90.0000) =  21181.066 us/op
     p(95.0000) =  21232.478 us/op
     p(99.0000) =  21232.478 us/op
     p(99.9000) =  21232.478 us/op
     p(99.9900) =  21232.478 us/op
     p(99.9990) =  21232.478 us/op
     p(99.9999) =  21232.478 us/op
    p(100.0000) =  21232.478 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.5)

# Run progress: 40.53% complete, ETA 00:27:58
# Fork: 1 of 2
# Warmup Iteration   1: 2950.917 us/op
# Warmup Iteration   2: 1800.973 us/op
# Warmup Iteration   3: 1685.625 us/op
# Warmup Iteration   4: 1655.762 us/op
# Warmup Iteration   5: 1361.264 us/op
Iteration   1: 12686.989 us/op
Iteration   2: 14894.794 us/op
Iteration   3: 7680.823 us/op
Iteration   4: 7335.587 us/op
Iteration   5: 14044.660 us/op

# Run progress: 40.72% complete, ETA 00:27:52
# Fork: 2 of 2
# Warmup Iteration   1: 2863.237 us/op
# Warmup Iteration   2: 1996.785 us/op
# Warmup Iteration   3: 1524.578 us/op
# Warmup Iteration   4: 1518.940 us/op
# Warmup Iteration   5: 1376.481 us/op
Iteration   1: 12004.251 us/op
Iteration   2: 14326.910 us/op
Iteration   3: 8017.619 us/op
Iteration   4: 7467.816 us/op
Iteration   5: 13895.780 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  11235.523 ±(99.9%) 4860.170 us/op

  Histogram, us/op:
    [ 7000.000,  7500.000) = 2 
    [ 7500.000,  8000.000) = 1 
    [ 8000.000,  8500.000) = 1 
    [ 8500.000,  9000.000) = 0 
    [ 9000.000,  9500.000) = 0 
    [ 9500.000, 10000.000) = 0 
    [10000.000, 10500.000) = 0 
    [10500.000, 11000.000) = 0 
    [11000.000, 11500.000) = 0 
    [11500.000, 12000.000) = 0 
    [12000.000, 12500.000) = 1 
    [12500.000, 13000.000) = 1 
    [13000.000, 13500.000) = 0 
    [13500.000, 14000.000) = 1 
    [14000.000, 14500.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   7335.587 us/op
     p(50.0000) =  12345.620 us/op
     p(90.0000) =  14838.006 us/op
     p(95.0000) =  14894.794 us/op
     p(99.0000) =  14894.794 us/op
     p(99.9000) =  14894.794 us/op
     p(99.9900) =  14894.794 us/op
     p(99.9990) =  14894.794 us/op
     p(99.9999) =  14894.794 us/op
    p(100.0000) =  14894.794 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.625)

# Run progress: 40.91% complete, ETA 00:27:47
# Fork: 1 of 2
# Warmup Iteration   1: 2635.031 us/op
# Warmup Iteration   2: 1538.108 us/op
# Warmup Iteration   3: 1511.832 us/op
# Warmup Iteration   4: 1413.613 us/op
# Warmup Iteration   5: 1199.195 us/op
Iteration   1: 15016.248 us/op
Iteration   2: 17412.620 us/op
Iteration   3: 8617.417 us/op
Iteration   4: 8182.969 us/op
Iteration   5: 10466.803 us/op

# Run progress: 41.10% complete, ETA 00:27:42
# Fork: 2 of 2
# Warmup Iteration   1: 2779.746 us/op
# Warmup Iteration   2: 1542.397 us/op
# Warmup Iteration   3: 1618.973 us/op
# Warmup Iteration   4: 1305.287 us/op
# Warmup Iteration   5: 1243.763 us/op
Iteration   1: 14889.169 us/op
Iteration   2: 16941.081 us/op
Iteration   3: 8598.040 us/op
Iteration   4: 8362.223 us/op
Iteration   5: 11323.824 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  11981.039 ±(99.9%) 5629.364 us/op

  Histogram, us/op:
    [ 8000.000,  9000.000) = 4 
    [ 9000.000, 10000.000) = 0 
    [10000.000, 11000.000) = 1 
    [11000.000, 12000.000) = 1 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 1 
    [15000.000, 16000.000) = 1 
    [16000.000, 17000.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   8182.969 us/op
     p(50.0000) =  10895.314 us/op
     p(90.0000) =  17365.466 us/op
     p(95.0000) =  17412.620 us/op
     p(99.0000) =  17412.620 us/op
     p(99.9000) =  17412.620 us/op
     p(99.9900) =  17412.620 us/op
     p(99.9990) =  17412.620 us/op
     p(99.9999) =  17412.620 us/op
    p(100.0000) =  17412.620 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.75)

# Run progress: 41.29% complete, ETA 00:27:36
# Fork: 1 of 2
# Warmup Iteration   1: 2774.282 us/op
# Warmup Iteration   2: 1709.508 us/op
# Warmup Iteration   3: 1493.977 us/op
# Warmup Iteration   4: 1539.941 us/op
# Warmup Iteration   5: 1228.075 us/op
Iteration   1: 14542.179 us/op
Iteration   2: 16830.991 us/op
Iteration   3: 9566.593 us/op
Iteration   4: 9645.963 us/op
Iteration   5: 14798.321 us/op

# Run progress: 41.48% complete, ETA 00:27:31
# Fork: 2 of 2
# Warmup Iteration   1: 2818.443 us/op
# Warmup Iteration   2: 1644.110 us/op
# Warmup Iteration   3: 1515.013 us/op
# Warmup Iteration   4: 1573.346 us/op
# Warmup Iteration   5: 1308.728 us/op
Iteration   1: 14346.709 us/op
Iteration   2: 17132.374 us/op
Iteration   3: 9269.287 us/op
Iteration   4: 9069.688 us/op
Iteration   5: 14785.232 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  12998.734 ±(99.9%) 4905.955 us/op

  Histogram, us/op:
    [ 9000.000,  9500.000) = 2 
    [ 9500.000, 10000.000) = 2 
    [10000.000, 10500.000) = 0 
    [10500.000, 11000.000) = 0 
    [11000.000, 11500.000) = 0 
    [11500.000, 12000.000) = 0 
    [12000.000, 12500.000) = 0 
    [12500.000, 13000.000) = 0 
    [13000.000, 13500.000) = 0 
    [13500.000, 14000.000) = 0 
    [14000.000, 14500.000) = 1 
    [14500.000, 15000.000) = 3 
    [15000.000, 15500.000) = 0 
    [15500.000, 16000.000) = 0 
    [16000.000, 16500.000) = 0 
    [16500.000, 17000.000) = 1 
    [17000.000, 17500.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   9069.688 us/op
     p(50.0000) =  14444.444 us/op
     p(90.0000) =  17102.236 us/op
     p(95.0000) =  17132.374 us/op
     p(99.0000) =  17132.374 us/op
     p(99.9000) =  17132.374 us/op
     p(99.9900) =  17132.374 us/op
     p(99.9990) =  17132.374 us/op
     p(99.9999) =  17132.374 us/op
    p(100.0000) =  17132.374 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.875)

# Run progress: 41.67% complete, ETA 00:27:26
# Fork: 1 of 2
# Warmup Iteration   1: 3157.248 us/op
# Warmup Iteration   2: 1642.221 us/op
# Warmup Iteration   3: 1616.955 us/op
# Warmup Iteration   4: 1581.669 us/op
# Warmup Iteration   5: 1285.587 us/op
Iteration   1: 12409.069 us/op
Iteration   2: 16586.210 us/op
Iteration   3: 8060.824 us/op
Iteration   4: 7570.705 us/op
Iteration   5: 8679.638 us/op

# Run progress: 41.86% complete, ETA 00:27:20
# Fork: 2 of 2
# Warmup Iteration   1: 3098.932 us/op
# Warmup Iteration   2: 1708.442 us/op
# Warmup Iteration   3: 1637.124 us/op
# Warmup Iteration   4: 1614.729 us/op
# Warmup Iteration   5: 1279.902 us/op
Iteration   1: 12472.845 us/op
Iteration   2: 15344.097 us/op
Iteration   3: 7948.374 us/op
Iteration   4: 7398.100 us/op
Iteration   5: 8679.645 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  10514.951 ±(99.9%) 5172.133 us/op

  Histogram, us/op:
    [ 7000.000,  8000.000) = 3 
    [ 8000.000,  9000.000) = 3 
    [ 9000.000, 10000.000) = 0 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 2 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   7398.100 us/op
     p(50.0000) =   8679.642 us/op
     p(90.0000) =  16461.999 us/op
     p(95.0000) =  16586.210 us/op
     p(99.0000) =  16586.210 us/op
     p(99.9000) =  16586.210 us/op
     p(99.9900) =  16586.210 us/op
     p(99.9990) =  16586.210 us/op
     p(99.9999) =  16586.210 us/op
    p(100.0000) =  16586.210 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 1)

# Run progress: 42.05% complete, ETA 00:27:15
# Fork: 1 of 2
# Warmup Iteration   1: 3559.274 us/op
# Warmup Iteration   2: 1709.687 us/op
# Warmup Iteration   3: 1593.113 us/op
# Warmup Iteration   4: 1801.855 us/op
# Warmup Iteration   5: 1367.781 us/op
Iteration   1: 12373.996 us/op
Iteration   2: 16114.962 us/op
Iteration   3: 8185.314 us/op
Iteration   4: 7929.721 us/op
Iteration   5: 11129.170 us/op

# Run progress: 42.23% complete, ETA 00:27:09
# Fork: 2 of 2
# Warmup Iteration   1: 2763.654 us/op
# Warmup Iteration   2: 1736.645 us/op
# Warmup Iteration   3: 1645.360 us/op
# Warmup Iteration   4: 1703.991 us/op
# Warmup Iteration   5: 1381.022 us/op
Iteration   1: 12788.108 us/op
Iteration   2: 16395.843 us/op
Iteration   3: 8177.159 us/op
Iteration   4: 8030.550 us/op
Iteration   5: 10481.796 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  11160.662 ±(99.9%) 4899.636 us/op

  Histogram, us/op:
    [ 7000.000,  8000.000) = 1 
    [ 8000.000,  9000.000) = 3 
    [ 9000.000, 10000.000) = 0 
    [10000.000, 11000.000) = 1 
    [11000.000, 12000.000) = 1 
    [12000.000, 13000.000) = 2 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   7929.721 us/op
     p(50.0000) =  10805.483 us/op
     p(90.0000) =  16367.755 us/op
     p(95.0000) =  16395.843 us/op
     p(99.0000) =  16395.843 us/op
     p(99.9000) =  16395.843 us/op
     p(99.9900) =  16395.843 us/op
     p(99.9990) =  16395.843 us/op
     p(99.9999) =  16395.843 us/op
    p(100.0000) =  16395.843 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.125)

# Run progress: 42.42% complete, ETA 00:27:04
# Fork: 1 of 2
# Warmup Iteration   1: 3389.268 us/op
# Warmup Iteration   2: 2457.781 us/op
# Warmup Iteration   3: 2160.882 us/op
# Warmup Iteration   4: 1849.411 us/op
# Warmup Iteration   5: 1723.213 us/op
Iteration   1: 21339.994 us/op
Iteration   2: 15546.126 us/op
Iteration   3: 12148.447 us/op
Iteration   4: 21432.809 us/op
Iteration   5: 11962.413 us/op

# Run progress: 42.61% complete, ETA 00:26:59
# Fork: 2 of 2
# Warmup Iteration   1: 3222.364 us/op
# Warmup Iteration   2: 2592.404 us/op
# Warmup Iteration   3: 2167.489 us/op
# Warmup Iteration   4: 1840.193 us/op
# Warmup Iteration   5: 1749.299 us/op
Iteration   1: 22065.886 us/op
Iteration   2: 15746.256 us/op
Iteration   3: 12717.557 us/op
Iteration   4: 21136.385 us/op
Iteration   5: 12241.612 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  16633.748 ±(99.9%) 6638.010 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 3 
    [12500.000, 13750.000) = 1 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 2 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 1 
    [21250.000, 22500.000) = 3 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  11962.413 us/op
     p(50.0000) =  15646.191 us/op
     p(90.0000) =  22002.578 us/op
     p(95.0000) =  22065.886 us/op
     p(99.0000) =  22065.886 us/op
     p(99.9000) =  22065.886 us/op
     p(99.9900) =  22065.886 us/op
     p(99.9990) =  22065.886 us/op
     p(99.9999) =  22065.886 us/op
    p(100.0000) =  22065.886 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.250)

# Run progress: 42.80% complete, ETA 00:26:53
# Fork: 1 of 2
# Warmup Iteration   1: 3417.149 us/op
# Warmup Iteration   2: 1999.005 us/op
# Warmup Iteration   3: 2041.855 us/op
# Warmup Iteration   4: 1563.187 us/op
# Warmup Iteration   5: 1587.595 us/op
Iteration   1: 13133.259 us/op
Iteration   2: 18430.699 us/op
Iteration   3: 9497.278 us/op
Iteration   4: 17298.992 us/op
Iteration   5: 8815.047 us/op

# Run progress: 42.99% complete, ETA 00:26:48
# Fork: 2 of 2
# Warmup Iteration   1: 3343.766 us/op
# Warmup Iteration   2: 2080.399 us/op
# Warmup Iteration   3: 1686.315 us/op
# Warmup Iteration   4: 1473.820 us/op
# Warmup Iteration   5: 1534.412 us/op
Iteration   1: 12889.677 us/op
Iteration   2: 18678.663 us/op
Iteration   3: 9069.349 us/op
Iteration   4: 17047.560 us/op
Iteration   5: 9126.603 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  13398.713 ±(99.9%) 6279.824 us/op

  Histogram, us/op:
    [ 8000.000,  9000.000) = 1 
    [ 9000.000, 10000.000) = 3 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 1 
    [13000.000, 14000.000) = 1 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 0 
    [17000.000, 18000.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   8815.047 us/op
     p(50.0000) =  13011.468 us/op
     p(90.0000) =  18653.867 us/op
     p(95.0000) =  18678.663 us/op
     p(99.0000) =  18678.663 us/op
     p(99.9000) =  18678.663 us/op
     p(99.9900) =  18678.663 us/op
     p(99.9990) =  18678.663 us/op
     p(99.9999) =  18678.663 us/op
    p(100.0000) =  18678.663 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.375)

# Run progress: 43.18% complete, ETA 00:26:43
# Fork: 1 of 2
# Warmup Iteration   1: 2858.469 us/op
# Warmup Iteration   2: 1709.224 us/op
# Warmup Iteration   3: 1479.380 us/op
# Warmup Iteration   4: 1552.369 us/op
# Warmup Iteration   5: 1258.739 us/op
Iteration   1: 15071.163 us/op
Iteration   2: 20639.138 us/op
Iteration   3: 10826.922 us/op
Iteration   4: 19722.024 us/op
Iteration   5: 11365.268 us/op

# Run progress: 43.37% complete, ETA 00:26:37
# Fork: 2 of 2
# Warmup Iteration   1: 3037.530 us/op
# Warmup Iteration   2: 1714.239 us/op
# Warmup Iteration   3: 1671.793 us/op
# Warmup Iteration   4: 1379.574 us/op
# Warmup Iteration   5: 1341.683 us/op
Iteration   1: 15313.346 us/op
Iteration   2: 21272.270 us/op
Iteration   3: 10841.880 us/op
Iteration   4: 19857.715 us/op
Iteration   5: 11673.859 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  15658.359 ±(99.9%) 6605.124 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 2 
    [11250.000, 12500.000) = 2 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 2 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 2 
    [20000.000, 21250.000) = 1 
    [21250.000, 22500.000) = 1 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10826.922 us/op
     p(50.0000) =  15192.255 us/op
     p(90.0000) =  21208.957 us/op
     p(95.0000) =  21272.270 us/op
     p(99.0000) =  21272.270 us/op
     p(99.9000) =  21272.270 us/op
     p(99.9900) =  21272.270 us/op
     p(99.9990) =  21272.270 us/op
     p(99.9999) =  21272.270 us/op
    p(100.0000) =  21272.270 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.5)

# Run progress: 43.56% complete, ETA 00:26:32
# Fork: 1 of 2
# Warmup Iteration   1: 2752.977 us/op
# Warmup Iteration   2: 1861.937 us/op
# Warmup Iteration   3: 1796.144 us/op
# Warmup Iteration   4: 1436.365 us/op
# Warmup Iteration   5: 1378.649 us/op
Iteration   1: 12588.468 us/op
Iteration   2: 14460.327 us/op
Iteration   3: 8048.835 us/op
Iteration   4: 7581.368 us/op
Iteration   5: 14238.929 us/op

# Run progress: 43.75% complete, ETA 00:26:27
# Fork: 2 of 2
# Warmup Iteration   1: 2943.259 us/op
# Warmup Iteration   2: 1855.344 us/op
# Warmup Iteration   3: 1772.236 us/op
# Warmup Iteration   4: 1434.695 us/op
# Warmup Iteration   5: 1386.591 us/op
Iteration   1: 12407.310 us/op
Iteration   2: 14768.903 us/op
Iteration   3: 7730.735 us/op
Iteration   4: 7320.450 us/op
Iteration   5: 13887.470 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  11303.280 ±(99.9%) 4865.535 us/op

  Histogram, us/op:
    [ 7000.000,  7500.000) = 1 
    [ 7500.000,  8000.000) = 2 
    [ 8000.000,  8500.000) = 1 
    [ 8500.000,  9000.000) = 0 
    [ 9000.000,  9500.000) = 0 
    [ 9500.000, 10000.000) = 0 
    [10000.000, 10500.000) = 0 
    [10500.000, 11000.000) = 0 
    [11000.000, 11500.000) = 0 
    [11500.000, 12000.000) = 0 
    [12000.000, 12500.000) = 1 
    [12500.000, 13000.000) = 1 
    [13000.000, 13500.000) = 0 
    [13500.000, 14000.000) = 1 
    [14000.000, 14500.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   7320.450 us/op
     p(50.0000) =  12497.889 us/op
     p(90.0000) =  14738.045 us/op
     p(95.0000) =  14768.903 us/op
     p(99.0000) =  14768.903 us/op
     p(99.9000) =  14768.903 us/op
     p(99.9900) =  14768.903 us/op
     p(99.9990) =  14768.903 us/op
     p(99.9999) =  14768.903 us/op
    p(100.0000) =  14768.903 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.625)

# Run progress: 43.94% complete, ETA 00:26:21
# Fork: 1 of 2
# Warmup Iteration   1: 2717.113 us/op
# Warmup Iteration   2: 1511.572 us/op
# Warmup Iteration   3: 1640.220 us/op
# Warmup Iteration   4: 1253.711 us/op
# Warmup Iteration   5: 1214.975 us/op
Iteration   1: 14805.922 us/op
Iteration   2: 16967.375 us/op
Iteration   3: 8489.725 us/op
Iteration   4: 8376.099 us/op
Iteration   5: 10609.243 us/op

# Run progress: 44.13% complete, ETA 00:26:16
# Fork: 2 of 2
# Warmup Iteration   1: 2891.743 us/op
# Warmup Iteration   2: 1523.065 us/op
# Warmup Iteration   3: 1738.200 us/op
# Warmup Iteration   4: 1223.053 us/op
# Warmup Iteration   5: 1211.192 us/op
Iteration   1: 13507.488 us/op
Iteration   2: 16347.552 us/op
Iteration   3: 8557.106 us/op
Iteration   4: 8388.852 us/op
Iteration   5: 10811.842 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  11686.120 ±(99.9%) 5199.047 us/op

  Histogram, us/op:
    [ 8000.000,  8500.000) = 3 
    [ 8500.000,  9000.000) = 1 
    [ 9000.000,  9500.000) = 0 
    [ 9500.000, 10000.000) = 0 
    [10000.000, 10500.000) = 0 
    [10500.000, 11000.000) = 2 
    [11000.000, 11500.000) = 0 
    [11500.000, 12000.000) = 0 
    [12000.000, 12500.000) = 0 
    [12500.000, 13000.000) = 0 
    [13000.000, 13500.000) = 0 
    [13500.000, 14000.000) = 1 
    [14000.000, 14500.000) = 0 
    [14500.000, 15000.000) = 1 
    [15000.000, 15500.000) = 0 
    [15500.000, 16000.000) = 0 
    [16000.000, 16500.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   8376.099 us/op
     p(50.0000) =  10710.543 us/op
     p(90.0000) =  16905.393 us/op
     p(95.0000) =  16967.375 us/op
     p(99.0000) =  16967.375 us/op
     p(99.9000) =  16967.375 us/op
     p(99.9900) =  16967.375 us/op
     p(99.9990) =  16967.375 us/op
     p(99.9999) =  16967.375 us/op
    p(100.0000) =  16967.375 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.75)

# Run progress: 44.32% complete, ETA 00:26:11
# Fork: 1 of 2
# Warmup Iteration   1: 2951.000 us/op
# Warmup Iteration   2: 1542.273 us/op
# Warmup Iteration   3: 1558.978 us/op
# Warmup Iteration   4: 1582.520 us/op
# Warmup Iteration   5: 1238.164 us/op
Iteration   1: 14626.590 us/op
Iteration   2: 16803.033 us/op
Iteration   3: 9507.093 us/op
Iteration   4: 9450.087 us/op
Iteration   5: 14839.923 us/op

# Run progress: 44.51% complete, ETA 00:26:05
# Fork: 2 of 2
# Warmup Iteration   1: 2783.803 us/op
# Warmup Iteration   2: 1662.957 us/op
# Warmup Iteration   3: 1547.644 us/op
# Warmup Iteration   4: 1499.460 us/op
# Warmup Iteration   5: 1215.699 us/op
Iteration   1: 14512.364 us/op
Iteration   2: 17415.040 us/op
Iteration   3: 9708.947 us/op
Iteration   4: 9495.669 us/op
Iteration   5: 14809.576 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  13116.832 ±(99.9%) 4868.444 us/op

  Histogram, us/op:
    [ 9000.000,  9500.000) = 2 
    [ 9500.000, 10000.000) = 2 
    [10000.000, 10500.000) = 0 
    [10500.000, 11000.000) = 0 
    [11000.000, 11500.000) = 0 
    [11500.000, 12000.000) = 0 
    [12000.000, 12500.000) = 0 
    [12500.000, 13000.000) = 0 
    [13000.000, 13500.000) = 0 
    [13500.000, 14000.000) = 0 
    [14000.000, 14500.000) = 0 
    [14500.000, 15000.000) = 4 
    [15000.000, 15500.000) = 0 
    [15500.000, 16000.000) = 0 
    [16000.000, 16500.000) = 0 
    [16500.000, 17000.000) = 1 
    [17000.000, 17500.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   9450.087 us/op
     p(50.0000) =  14569.477 us/op
     p(90.0000) =  17353.839 us/op
     p(95.0000) =  17415.040 us/op
     p(99.0000) =  17415.040 us/op
     p(99.9000) =  17415.040 us/op
     p(99.9900) =  17415.040 us/op
     p(99.9990) =  17415.040 us/op
     p(99.9999) =  17415.040 us/op
    p(100.0000) =  17415.040 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.875)

# Run progress: 44.70% complete, ETA 00:26:00
# Fork: 1 of 2
# Warmup Iteration   1: 2799.196 us/op
# Warmup Iteration   2: 1758.688 us/op
# Warmup Iteration   3: 1617.726 us/op
# Warmup Iteration   4: 1620.223 us/op
# Warmup Iteration   5: 1323.820 us/op
Iteration   1: 12505.616 us/op
Iteration   2: 15883.147 us/op
Iteration   3: 7979.700 us/op
Iteration   4: 7556.731 us/op
Iteration   5: 8807.603 us/op

# Run progress: 44.89% complete, ETA 00:25:55
# Fork: 2 of 2
# Warmup Iteration   1: 2954.957 us/op
# Warmup Iteration   2: 1642.590 us/op
# Warmup Iteration   3: 1562.163 us/op
# Warmup Iteration   4: 1710.946 us/op
# Warmup Iteration   5: 1315.039 us/op
Iteration   1: 12496.817 us/op
Iteration   2: 16669.033 us/op
Iteration   3: 7863.055 us/op
Iteration   4: 7398.145 us/op
Iteration   5: 8692.586 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  10585.243 ±(99.9%) 5349.807 us/op

  Histogram, us/op:
    [ 7000.000,  8000.000) = 4 
    [ 8000.000,  9000.000) = 2 
    [ 9000.000, 10000.000) = 0 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 2 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   7398.145 us/op
     p(50.0000) =   8750.095 us/op
     p(90.0000) =  16590.444 us/op
     p(95.0000) =  16669.033 us/op
     p(99.0000) =  16669.033 us/op
     p(99.9000) =  16669.033 us/op
     p(99.9900) =  16669.033 us/op
     p(99.9990) =  16669.033 us/op
     p(99.9999) =  16669.033 us/op
    p(100.0000) =  16669.033 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 1)

# Run progress: 45.08% complete, ETA 00:25:49
# Fork: 1 of 2
# Warmup Iteration   1: 2856.809 us/op
# Warmup Iteration   2: 1766.095 us/op
# Warmup Iteration   3: 1808.067 us/op
# Warmup Iteration   4: 1569.869 us/op
# Warmup Iteration   5: 1350.364 us/op
Iteration   1: 12784.773 us/op
Iteration   2: 16506.472 us/op
Iteration   3: 8321.262 us/op
Iteration   4: 8016.234 us/op
Iteration   5: 10663.383 us/op

# Run progress: 45.27% complete, ETA 00:25:44
# Fork: 2 of 2
# Warmup Iteration   1: 2781.024 us/op
# Warmup Iteration   2: 1872.023 us/op
# Warmup Iteration   3: 1750.442 us/op
# Warmup Iteration   4: 1638.454 us/op
# Warmup Iteration   5: 1415.481 us/op
Iteration   1: 12519.493 us/op
Iteration   2: 16591.868 us/op
Iteration   3: 8399.321 us/op
Iteration   4: 7991.835 us/op
Iteration   5: 10500.854 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  11229.550 ±(99.9%) 5009.478 us/op

  Histogram, us/op:
    [ 7000.000,  8000.000) = 1 
    [ 8000.000,  9000.000) = 3 
    [ 9000.000, 10000.000) = 0 
    [10000.000, 11000.000) = 2 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 2 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   7991.835 us/op
     p(50.0000) =  10582.119 us/op
     p(90.0000) =  16583.328 us/op
     p(95.0000) =  16591.868 us/op
     p(99.0000) =  16591.868 us/op
     p(99.9000) =  16591.868 us/op
     p(99.9900) =  16591.868 us/op
     p(99.9990) =  16591.868 us/op
     p(99.9999) =  16591.868 us/op
    p(100.0000) =  16591.868 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.125)

# Run progress: 45.45% complete, ETA 00:25:39
# Fork: 1 of 2
# Warmup Iteration   1: 3587.551 us/op
# Warmup Iteration   2: 2412.230 us/op
# Warmup Iteration   3: 1943.885 us/op
# Warmup Iteration   4: 1655.566 us/op
# Warmup Iteration   5: 1589.910 us/op
Iteration   1: 21742.586 us/op
Iteration   2: 15485.332 us/op
Iteration   3: 12224.553 us/op
Iteration   4: 21251.789 us/op
Iteration   5: 12283.095 us/op

# Run progress: 45.64% complete, ETA 00:25:33
# Fork: 2 of 2
# Warmup Iteration   1: 3489.967 us/op
# Warmup Iteration   2: 2346.428 us/op
# Warmup Iteration   3: 2061.156 us/op
# Warmup Iteration   4: 1753.211 us/op
# Warmup Iteration   5: 1586.940 us/op
Iteration   1: 22555.880 us/op
Iteration   2: 15478.119 us/op
Iteration   3: 12728.664 us/op
Iteration   4: 21017.713 us/op
Iteration   5: 12285.517 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  16705.325 ±(99.9%) 6701.741 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 3 
    [12500.000, 13750.000) = 1 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 2 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 1 
    [21250.000, 22500.000) = 2 
    [22500.000, 23750.000) = 1 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  12224.553 us/op
     p(50.0000) =  15481.726 us/op
     p(90.0000) =  22474.551 us/op
     p(95.0000) =  22555.880 us/op
     p(99.0000) =  22555.880 us/op
     p(99.9000) =  22555.880 us/op
     p(99.9900) =  22555.880 us/op
     p(99.9990) =  22555.880 us/op
     p(99.9999) =  22555.880 us/op
    p(100.0000) =  22555.880 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.250)

# Run progress: 45.83% complete, ETA 00:25:28
# Fork: 1 of 2
# Warmup Iteration   1: 3236.601 us/op
# Warmup Iteration   2: 1917.450 us/op
# Warmup Iteration   3: 1807.675 us/op
# Warmup Iteration   4: 1482.187 us/op
# Warmup Iteration   5: 1478.748 us/op
Iteration   1: 13451.309 us/op
Iteration   2: 18689.583 us/op
Iteration   3: 9315.159 us/op
Iteration   4: 17617.985 us/op
Iteration   5: 9075.582 us/op

# Run progress: 46.02% complete, ETA 00:25:23
# Fork: 2 of 2
# Warmup Iteration   1: 3367.664 us/op
# Warmup Iteration   2: 1867.900 us/op
# Warmup Iteration   3: 1909.902 us/op
# Warmup Iteration   4: 1401.751 us/op
# Warmup Iteration   5: 1493.477 us/op
Iteration   1: 13370.962 us/op
Iteration   2: 18175.484 us/op
Iteration   3: 9800.815 us/op
Iteration   4: 17092.646 us/op
Iteration   5: 9043.469 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  13563.299 ±(99.9%) 6157.069 us/op

  Histogram, us/op:
    [ 9000.000, 10000.000) = 4 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 2 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 0 
    [17000.000, 18000.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   9043.469 us/op
     p(50.0000) =  13411.136 us/op
     p(90.0000) =  18638.173 us/op
     p(95.0000) =  18689.583 us/op
     p(99.0000) =  18689.583 us/op
     p(99.9000) =  18689.583 us/op
     p(99.9900) =  18689.583 us/op
     p(99.9990) =  18689.583 us/op
     p(99.9999) =  18689.583 us/op
    p(100.0000) =  18689.583 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.375)

# Run progress: 46.21% complete, ETA 00:25:17
# Fork: 1 of 2
# Warmup Iteration   1: 2809.044 us/op
# Warmup Iteration   2: 1654.478 us/op
# Warmup Iteration   3: 1210.496 us/op
# Warmup Iteration   4: 1129.085 us/op
# Warmup Iteration   5: 1152.936 us/op
Iteration   1: 15653.461 us/op
Iteration   2: 22488.520 us/op
Iteration   3: 10128.393 us/op
Iteration   4: 18824.588 us/op
Iteration   5: 10108.929 us/op

# Run progress: 46.40% complete, ETA 00:25:12
# Fork: 2 of 2
# Warmup Iteration   1: 2580.537 us/op
# Warmup Iteration   2: 1503.806 us/op
# Warmup Iteration   3: 1566.331 us/op
# Warmup Iteration   4: 1106.055 us/op
# Warmup Iteration   5: 1154.139 us/op
Iteration   1: 14774.000 us/op
Iteration   2: 21607.199 us/op
Iteration   3: 10389.071 us/op
Iteration   4: 19349.852 us/op
Iteration   5: 10283.980 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  15360.799 ±(99.9%) 7535.979 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 4 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 1 
    [15000.000, 16250.000) = 1 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 2 
    [20000.000, 21250.000) = 0 
    [21250.000, 22500.000) = 2 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10108.929 us/op
     p(50.0000) =  15213.731 us/op
     p(90.0000) =  22400.388 us/op
     p(95.0000) =  22488.520 us/op
     p(99.0000) =  22488.520 us/op
     p(99.9000) =  22488.520 us/op
     p(99.9900) =  22488.520 us/op
     p(99.9990) =  22488.520 us/op
     p(99.9999) =  22488.520 us/op
    p(100.0000) =  22488.520 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.5)

# Run progress: 46.59% complete, ETA 00:25:07
# Fork: 1 of 2
# Warmup Iteration   1: 3094.368 us/op
# Warmup Iteration   2: 1573.963 us/op
# Warmup Iteration   3: 1534.608 us/op
# Warmup Iteration   4: 1215.036 us/op
# Warmup Iteration   5: 1202.277 us/op
Iteration   1: 12642.928 us/op
Iteration   2: 16163.547 us/op
Iteration   3: 8119.116 us/op
Iteration   4: 7291.560 us/op
Iteration   5: 9580.727 us/op

# Run progress: 46.78% complete, ETA 00:25:01
# Fork: 2 of 2
# Warmup Iteration   1: 2797.639 us/op
# Warmup Iteration   2: 1592.517 us/op
# Warmup Iteration   3: 1574.964 us/op
# Warmup Iteration   4: 1202.393 us/op
# Warmup Iteration   5: 1221.540 us/op
Iteration   1: 12258.910 us/op
Iteration   2: 14653.444 us/op
Iteration   3: 8181.933 us/op
Iteration   4: 7410.436 us/op
Iteration   5: 9694.572 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  10599.717 ±(99.9%) 4761.981 us/op

  Histogram, us/op:
    [ 7000.000,  8000.000) = 2 
    [ 8000.000,  9000.000) = 2 
    [ 9000.000, 10000.000) = 2 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 2 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 1 
    [15000.000, 16000.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   7291.560 us/op
     p(50.0000) =   9637.650 us/op
     p(90.0000) =  16012.537 us/op
     p(95.0000) =  16163.547 us/op
     p(99.0000) =  16163.547 us/op
     p(99.9000) =  16163.547 us/op
     p(99.9900) =  16163.547 us/op
     p(99.9990) =  16163.547 us/op
     p(99.9999) =  16163.547 us/op
    p(100.0000) =  16163.547 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.625)

# Run progress: 46.97% complete, ETA 00:24:56
# Fork: 1 of 2
# Warmup Iteration   1: 2007.217 us/op
# Warmup Iteration   2: 1299.402 us/op
# Warmup Iteration   3: 1156.918 us/op
# Warmup Iteration   4: 1258.635 us/op
# Warmup Iteration   5: 911.757 us/op
Iteration   1: 14467.618 us/op
Iteration   2: 16512.909 us/op
Iteration   3: 8708.145 us/op
Iteration   4: 8022.529 us/op
Iteration   5: 12747.280 us/op

# Run progress: 47.16% complete, ETA 00:24:50
# Fork: 2 of 2
# Warmup Iteration   1: 2020.704 us/op
# Warmup Iteration   2: 1231.225 us/op
# Warmup Iteration   3: 1342.201 us/op
# Warmup Iteration   4: 898.815 us/op
# Warmup Iteration   5: 908.396 us/op
Iteration   1: 14557.726 us/op
Iteration   2: 16809.616 us/op
Iteration   3: 8505.536 us/op
Iteration   4: 7903.159 us/op
Iteration   5: 12594.883 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  12082.940 ±(99.9%) 5348.200 us/op

  Histogram, us/op:
    [ 7000.000,  8000.000) = 1 
    [ 8000.000,  9000.000) = 3 
    [ 9000.000, 10000.000) = 0 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 2 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 2 
    [15000.000, 16000.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   7903.159 us/op
     p(50.0000) =  12671.082 us/op
     p(90.0000) =  16779.945 us/op
     p(95.0000) =  16809.616 us/op
     p(99.0000) =  16809.616 us/op
     p(99.9000) =  16809.616 us/op
     p(99.9900) =  16809.616 us/op
     p(99.9990) =  16809.616 us/op
     p(99.9999) =  16809.616 us/op
    p(100.0000) =  16809.616 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.75)

# Run progress: 47.35% complete, ETA 00:24:45
# Fork: 1 of 2
# Warmup Iteration   1: 2260.164 us/op
# Warmup Iteration   2: 1335.584 us/op
# Warmup Iteration   3: 1177.306 us/op
# Warmup Iteration   4: 1266.381 us/op
# Warmup Iteration   5: 945.013 us/op
Iteration   1: 15901.846 us/op
Iteration   2: 17338.060 us/op
Iteration   3: 9681.193 us/op
Iteration   4: 8971.686 us/op
Iteration   5: 13754.441 us/op

# Run progress: 47.54% complete, ETA 00:24:40
# Fork: 2 of 2
# Warmup Iteration   1: 2064.691 us/op
# Warmup Iteration   2: 1301.432 us/op
# Warmup Iteration   3: 1185.296 us/op
# Warmup Iteration   4: 1214.734 us/op
# Warmup Iteration   5: 899.964 us/op
Iteration   1: 15832.256 us/op
Iteration   2: 17083.735 us/op
Iteration   3: 9562.332 us/op
Iteration   4: 9205.957 us/op
Iteration   5: 13798.696 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  13113.020 ±(99.9%) 5200.035 us/op

  Histogram, us/op:
    [ 8000.000,  9000.000) = 1 
    [ 9000.000, 10000.000) = 3 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 2 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 2 
    [16000.000, 17000.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8971.686 us/op
     p(50.0000) =  13776.569 us/op
     p(90.0000) =  17312.628 us/op
     p(95.0000) =  17338.060 us/op
     p(99.0000) =  17338.060 us/op
     p(99.9000) =  17338.060 us/op
     p(99.9900) =  17338.060 us/op
     p(99.9990) =  17338.060 us/op
     p(99.9999) =  17338.060 us/op
    p(100.0000) =  17338.060 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.875)

# Run progress: 47.73% complete, ETA 00:24:34
# Fork: 1 of 2
# Warmup Iteration   1: 2044.701 us/op
# Warmup Iteration   2: 1252.993 us/op
# Warmup Iteration   3: 1207.825 us/op
# Warmup Iteration   4: 1237.752 us/op
# Warmup Iteration   5: 948.706 us/op
Iteration   1: 14247.695 us/op
Iteration   2: 17676.554 us/op
Iteration   3: 8961.441 us/op
Iteration   4: 7311.836 us/op
Iteration   5: 11105.966 us/op

# Run progress: 47.92% complete, ETA 00:24:29
# Fork: 2 of 2
# Warmup Iteration   1: 2702.846 us/op
# Warmup Iteration   2: 1296.052 us/op
# Warmup Iteration   3: 1238.522 us/op
# Warmup Iteration   4: 930.659 us/op
# Warmup Iteration   5: 937.128 us/op
Iteration   1: 13815.665 us/op
Iteration   2: 17016.437 us/op
Iteration   3: 8531.932 us/op
Iteration   4: 7421.003 us/op
Iteration   5: 11137.890 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  11722.642 ±(99.9%) 5761.752 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 2 
    [ 7500.000,  8750.000) = 1 
    [ 8750.000, 10000.000) = 1 
    [10000.000, 11250.000) = 2 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 2 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 1 
    [17500.000, 18750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   7311.836 us/op
     p(50.0000) =  11121.928 us/op
     p(90.0000) =  17610.542 us/op
     p(95.0000) =  17676.554 us/op
     p(99.0000) =  17676.554 us/op
     p(99.9000) =  17676.554 us/op
     p(99.9900) =  17676.554 us/op
     p(99.9990) =  17676.554 us/op
     p(99.9999) =  17676.554 us/op
    p(100.0000) =  17676.554 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 1)

# Run progress: 48.11% complete, ETA 00:24:24
# Fork: 1 of 2
# Warmup Iteration   1: 2205.779 us/op
# Warmup Iteration   2: 1261.100 us/op
# Warmup Iteration   3: 1339.692 us/op
# Warmup Iteration   4: 1190.735 us/op
# Warmup Iteration   5: 908.917 us/op
Iteration   1: 15133.517 us/op
Iteration   2: 17197.215 us/op
Iteration   3: 7971.192 us/op
Iteration   4: 7627.574 us/op
Iteration   5: 12427.825 us/op

# Run progress: 48.30% complete, ETA 00:24:18
# Fork: 2 of 2
# Warmup Iteration   1: 2071.742 us/op
# Warmup Iteration   2: 1308.586 us/op
# Warmup Iteration   3: 1380.719 us/op
# Warmup Iteration   4: 924.072 us/op
# Warmup Iteration   5: 924.014 us/op
Iteration   1: 14814.209 us/op
Iteration   2: 16758.277 us/op
Iteration   3: 8285.113 us/op
Iteration   4: 7493.683 us/op
Iteration   5: 12509.290 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  12021.790 ±(99.9%) 5904.750 us/op

  Histogram, us/op:
    [ 7000.000,  8000.000) = 3 
    [ 8000.000,  9000.000) = 1 
    [ 9000.000, 10000.000) = 0 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 2 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 1 
    [15000.000, 16000.000) = 1 
    [16000.000, 17000.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   7493.683 us/op
     p(50.0000) =  12468.558 us/op
     p(90.0000) =  17153.321 us/op
     p(95.0000) =  17197.215 us/op
     p(99.0000) =  17197.215 us/op
     p(99.9000) =  17197.215 us/op
     p(99.9900) =  17197.215 us/op
     p(99.9990) =  17197.215 us/op
     p(99.9999) =  17197.215 us/op
    p(100.0000) =  17197.215 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.125)

# Run progress: 48.48% complete, ETA 00:24:13
# Fork: 1 of 2
# Warmup Iteration   1: 3516.128 us/op
# Warmup Iteration   2: 1789.595 us/op
# Warmup Iteration   3: 1761.742 us/op
# Warmup Iteration   4: 1359.371 us/op
# Warmup Iteration   5: 1350.922 us/op
Iteration   1: 16382.637 us/op
Iteration   2: 21486.371 us/op
Iteration   3: 12662.892 us/op
Iteration   4: 21589.266 us/op
Iteration   5: 11873.140 us/op

# Run progress: 48.67% complete, ETA 00:24:08
# Fork: 2 of 2
# Warmup Iteration   1: 3547.816 us/op
# Warmup Iteration   2: 1993.189 us/op
# Warmup Iteration   3: 1428.986 us/op
# Warmup Iteration   4: 1366.109 us/op
# Warmup Iteration   5: 1339.356 us/op
Iteration   1: 16685.606 us/op
Iteration   2: 21848.846 us/op
Iteration   3: 12336.111 us/op
Iteration   4: 21427.895 us/op
Iteration   5: 12043.703 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  16833.647 ±(99.9%) 6684.196 us/op

  Histogram, us/op:
    [11000.000, 12000.000) = 1 
    [12000.000, 13000.000) = 3 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 2 
    [17000.000, 18000.000) = 0 
    [18000.000, 19000.000) = 0 
    [19000.000, 20000.000) = 0 
    [20000.000, 21000.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  11873.140 us/op
     p(50.0000) =  16534.122 us/op
     p(90.0000) =  21822.888 us/op
     p(95.0000) =  21848.846 us/op
     p(99.0000) =  21848.846 us/op
     p(99.9000) =  21848.846 us/op
     p(99.9900) =  21848.846 us/op
     p(99.9990) =  21848.846 us/op
     p(99.9999) =  21848.846 us/op
    p(100.0000) =  21848.846 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.250)

# Run progress: 48.86% complete, ETA 00:24:02
# Fork: 1 of 2
# Warmup Iteration   1: 2177.504 us/op
# Warmup Iteration   2: 1286.325 us/op
# Warmup Iteration   3: 1174.193 us/op
# Warmup Iteration   4: 1253.159 us/op
# Warmup Iteration   5: 958.178 us/op
Iteration   1: 17066.988 us/op
Iteration   2: 18731.204 us/op
Iteration   3: 9590.049 us/op
Iteration   4: 17294.719 us/op
Iteration   5: 8720.818 us/op

# Run progress: 49.05% complete, ETA 00:23:57
# Fork: 2 of 2
# Warmup Iteration   1: 2511.338 us/op
# Warmup Iteration   2: 1316.869 us/op
# Warmup Iteration   3: 1265.868 us/op
# Warmup Iteration   4: 956.833 us/op
# Warmup Iteration   5: 953.116 us/op
Iteration   1: 17296.626 us/op
Iteration   2: 19131.555 us/op
Iteration   3: 9275.191 us/op
Iteration   4: 17522.299 us/op
Iteration   5: 8943.790 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  14357.324 ±(99.9%) 6876.371 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 0 
    [ 7500.000,  8750.000) = 1 
    [ 8750.000, 10000.000) = 3 
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 3 
    [17500.000, 18750.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   8720.818 us/op
     p(50.0000) =  17180.854 us/op
     p(90.0000) =  19091.520 us/op
     p(95.0000) =  19131.555 us/op
     p(99.0000) =  19131.555 us/op
     p(99.9000) =  19131.555 us/op
     p(99.9900) =  19131.555 us/op
     p(99.9990) =  19131.555 us/op
     p(99.9999) =  19131.555 us/op
    p(100.0000) =  19131.555 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.375)

# Run progress: 49.24% complete, ETA 00:23:52
# Fork: 1 of 2
# Warmup Iteration   1: 2145.284 us/op
# Warmup Iteration   2: 1389.421 us/op
# Warmup Iteration   3: 1196.432 us/op
# Warmup Iteration   4: 1237.914 us/op
# Warmup Iteration   5: 944.991 us/op
Iteration   1: 18988.362 us/op
Iteration   2: 21008.652 us/op
Iteration   3: 10440.397 us/op
Iteration   4: 19158.340 us/op
Iteration   5: 10135.111 us/op

# Run progress: 49.43% complete, ETA 00:23:46
# Fork: 2 of 2
# Warmup Iteration   1: 2404.651 us/op
# Warmup Iteration   2: 1346.281 us/op
# Warmup Iteration   3: 1168.325 us/op
# Warmup Iteration   4: 1356.403 us/op
# Warmup Iteration   5: 942.138 us/op
Iteration   1: 19142.066 us/op
Iteration   2: 20868.101 us/op
Iteration   3: 10299.069 us/op
Iteration   4: 18538.152 us/op
Iteration   5: 10444.330 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  15902.258 ±(99.9%) 7347.721 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 4 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 1 
    [18750.000, 20000.000) = 3 
    [20000.000, 21250.000) = 2 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10135.111 us/op
     p(50.0000) =  18763.257 us/op
     p(90.0000) =  20994.597 us/op
     p(95.0000) =  21008.652 us/op
     p(99.0000) =  21008.652 us/op
     p(99.9000) =  21008.652 us/op
     p(99.9900) =  21008.652 us/op
     p(99.9990) =  21008.652 us/op
     p(99.9999) =  21008.652 us/op
    p(100.0000) =  21008.652 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.5)

# Run progress: 49.62% complete, ETA 00:23:41
# Fork: 1 of 2
# Warmup Iteration   1: 2156.469 us/op
# Warmup Iteration   2: 1333.896 us/op
# Warmup Iteration   3: 1156.229 us/op
# Warmup Iteration   4: 1231.640 us/op
# Warmup Iteration   5: 966.043 us/op
Iteration   1: 15716.327 us/op
Iteration   2: 14659.911 us/op
Iteration   3: 7854.262 us/op
Iteration   4: 7090.883 us/op
Iteration   5: 9547.632 us/op

# Run progress: 49.81% complete, ETA 00:23:36
# Fork: 2 of 2
# Warmup Iteration   1: 2215.864 us/op
# Warmup Iteration   2: 1315.568 us/op
# Warmup Iteration   3: 1171.568 us/op
# Warmup Iteration   4: 1392.364 us/op
# Warmup Iteration   5: 988.665 us/op
Iteration   1: 15758.820 us/op
Iteration   2: 14338.225 us/op
Iteration   3: 7726.499 us/op
Iteration   4: 7026.606 us/op
Iteration   5: 9047.268 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  10876.643 ±(99.9%) 5676.565 us/op

  Histogram, us/op:
    [ 7000.000,  7500.000) = 2 
    [ 7500.000,  8000.000) = 2 
    [ 8000.000,  8500.000) = 0 
    [ 8500.000,  9000.000) = 0 
    [ 9000.000,  9500.000) = 1 
    [ 9500.000, 10000.000) = 1 
    [10000.000, 10500.000) = 0 
    [10500.000, 11000.000) = 0 
    [11000.000, 11500.000) = 0 
    [11500.000, 12000.000) = 0 
    [12000.000, 12500.000) = 0 
    [12500.000, 13000.000) = 0 
    [13000.000, 13500.000) = 0 
    [13500.000, 14000.000) = 0 
    [14000.000, 14500.000) = 1 
    [14500.000, 15000.000) = 1 
    [15000.000, 15500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   7026.606 us/op
     p(50.0000) =   9297.450 us/op
     p(90.0000) =  15754.571 us/op
     p(95.0000) =  15758.820 us/op
     p(99.0000) =  15758.820 us/op
     p(99.9000) =  15758.820 us/op
     p(99.9900) =  15758.820 us/op
     p(99.9990) =  15758.820 us/op
     p(99.9999) =  15758.820 us/op
    p(100.0000) =  15758.820 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.625)

# Run progress: 50.00% complete, ETA 00:23:30
# Fork: 1 of 2
# Warmup Iteration   1: 2175.143 us/op
# Warmup Iteration   2: 1347.450 us/op
# Warmup Iteration   3: 1293.833 us/op
# Warmup Iteration   4: 994.380 us/op
# Warmup Iteration   5: 970.720 us/op
Iteration   1: 17550.861 us/op
Iteration   2: 17293.826 us/op
Iteration   3: 8217.467 us/op
Iteration   4: 7582.574 us/op
Iteration   5: 9833.641 us/op

# Run progress: 50.19% complete, ETA 00:23:25
# Fork: 2 of 2
# Warmup Iteration   1: 2118.431 us/op
# Warmup Iteration   2: 1349.667 us/op
# Warmup Iteration   3: 1498.552 us/op
# Warmup Iteration   4: 959.171 us/op
# Warmup Iteration   5: 935.497 us/op
Iteration   1: 16621.665 us/op
Iteration   2: 17510.965 us/op
Iteration   3: 8952.465 us/op
Iteration   4: 7458.030 us/op
Iteration   5: 9718.508 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  12074.000 ±(99.9%) 6838.709 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 1 
    [ 7500.000,  8750.000) = 2 
    [ 8750.000, 10000.000) = 3 
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 2 
    [17500.000, 18750.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   7458.030 us/op
     p(50.0000) =   9776.074 us/op
     p(90.0000) =  17546.871 us/op
     p(95.0000) =  17550.861 us/op
     p(99.0000) =  17550.861 us/op
     p(99.9000) =  17550.861 us/op
     p(99.9900) =  17550.861 us/op
     p(99.9990) =  17550.861 us/op
     p(99.9999) =  17550.861 us/op
    p(100.0000) =  17550.861 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.75)

# Run progress: 50.38% complete, ETA 00:23:20
# Fork: 1 of 2
# Warmup Iteration   1: 2126.874 us/op
# Warmup Iteration   2: 1345.193 us/op
# Warmup Iteration   3: 1236.318 us/op
# Warmup Iteration   4: 1351.951 us/op
# Warmup Iteration   5: 984.320 us/op
Iteration   1: 17266.307 us/op
Iteration   2: 17383.671 us/op
Iteration   3: 9137.747 us/op
Iteration   4: 8393.373 us/op
Iteration   5: 13098.326 us/op

# Run progress: 50.57% complete, ETA 00:23:14
# Fork: 2 of 2
# Warmup Iteration   1: 2093.721 us/op
# Warmup Iteration   2: 1477.805 us/op
# Warmup Iteration   3: 1381.062 us/op
# Warmup Iteration   4: 976.039 us/op
# Warmup Iteration   5: 942.735 us/op
Iteration   1: 16919.947 us/op
Iteration   2: 17493.130 us/op
Iteration   3: 9041.719 us/op
Iteration   4: 8421.100 us/op
Iteration   5: 13140.189 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  13029.551 ±(99.9%) 6084.379 us/op

  Histogram, us/op:
    [ 8000.000,  9000.000) = 2 
    [ 9000.000, 10000.000) = 2 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 2 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   8393.373 us/op
     p(50.0000) =  13119.258 us/op
     p(90.0000) =  17482.184 us/op
     p(95.0000) =  17493.130 us/op
     p(99.0000) =  17493.130 us/op
     p(99.9000) =  17493.130 us/op
     p(99.9900) =  17493.130 us/op
     p(99.9990) =  17493.130 us/op
     p(99.9999) =  17493.130 us/op
    p(100.0000) =  17493.130 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.875)

# Run progress: 50.76% complete, ETA 00:23:09
# Fork: 1 of 2
# Warmup Iteration   1: 2153.442 us/op
# Warmup Iteration   2: 1394.561 us/op
# Warmup Iteration   3: 1154.038 us/op
# Warmup Iteration   4: 1201.942 us/op
# Warmup Iteration   5: 945.476 us/op
Iteration   1: 13040.106 us/op
Iteration   2: 16007.787 us/op
Iteration   3: 7750.180 us/op
Iteration   4: 6962.173 us/op
Iteration   5: 7544.750 us/op

# Run progress: 50.95% complete, ETA 00:23:03
# Fork: 2 of 2
# Warmup Iteration   1: 1979.208 us/op
# Warmup Iteration   2: 1361.622 us/op
# Warmup Iteration   3: 1307.679 us/op
# Warmup Iteration   4: 1306.625 us/op
# Warmup Iteration   5: 973.342 us/op
Iteration   1: 13159.834 us/op
Iteration   2: 15240.860 us/op
Iteration   3: 7919.060 us/op
Iteration   4: 6995.188 us/op
Iteration   5: 7653.274 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  10227.321 ±(99.9%) 5553.886 us/op

  Histogram, us/op:
    [ 6000.000,  7000.000) = 2 
    [ 7000.000,  8000.000) = 4 
    [ 8000.000,  9000.000) = 0 
    [ 9000.000, 10000.000) = 0 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 2 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   6962.173 us/op
     p(50.0000) =   7834.620 us/op
     p(90.0000) =  15931.094 us/op
     p(95.0000) =  16007.787 us/op
     p(99.0000) =  16007.787 us/op
     p(99.9000) =  16007.787 us/op
     p(99.9900) =  16007.787 us/op
     p(99.9990) =  16007.787 us/op
     p(99.9999) =  16007.787 us/op
    p(100.0000) =  16007.787 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 1)

# Run progress: 51.14% complete, ETA 00:22:58
# Fork: 1 of 2
# Warmup Iteration   1: 1964.439 us/op
# Warmup Iteration   2: 1348.264 us/op
# Warmup Iteration   3: 1314.224 us/op
# Warmup Iteration   4: 1370.244 us/op
# Warmup Iteration   5: 983.527 us/op
Iteration   1: 13759.949 us/op
Iteration   2: 16299.743 us/op
Iteration   3: 7790.550 us/op
Iteration   4: 7081.070 us/op
Iteration   5: 7704.401 us/op

# Run progress: 51.33% complete, ETA 00:22:53
# Fork: 2 of 2
# Warmup Iteration   1: 2111.338 us/op
# Warmup Iteration   2: 1351.839 us/op
# Warmup Iteration   3: 1250.181 us/op
# Warmup Iteration   4: 990.165 us/op
# Warmup Iteration   5: 977.825 us/op
Iteration   1: 13838.481 us/op
Iteration   2: 16626.659 us/op
Iteration   3: 7721.631 us/op
Iteration   4: 7162.604 us/op
Iteration   5: 7952.168 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  10593.726 ±(99.9%) 6069.488 us/op

  Histogram, us/op:
    [ 7000.000,  8000.000) = 6 
    [ 8000.000,  9000.000) = 0 
    [ 9000.000, 10000.000) = 0 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 2 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   7081.070 us/op
     p(50.0000) =   7871.359 us/op
     p(90.0000) =  16593.967 us/op
     p(95.0000) =  16626.659 us/op
     p(99.0000) =  16626.659 us/op
     p(99.9000) =  16626.659 us/op
     p(99.9900) =  16626.659 us/op
     p(99.9990) =  16626.659 us/op
     p(99.9999) =  16626.659 us/op
    p(100.0000) =  16626.659 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.125)

# Run progress: 51.52% complete, ETA 00:22:47
# Fork: 1 of 2
# Warmup Iteration   1: 2126.584 us/op
# Warmup Iteration   2: 1406.446 us/op
# Warmup Iteration   3: 1425.700 us/op
# Warmup Iteration   4: 1293.379 us/op
# Warmup Iteration   5: 1083.331 us/op
Iteration   1: 22700.183 us/op
Iteration   2: 22253.476 us/op
Iteration   3: 12528.662 us/op
Iteration   4: 20728.794 us/op
Iteration   5: 14366.265 us/op

# Run progress: 51.70% complete, ETA 00:22:42
# Fork: 2 of 2
# Warmup Iteration   1: 2398.943 us/op
# Warmup Iteration   2: 1419.935 us/op
# Warmup Iteration   3: 1367.462 us/op
# Warmup Iteration   4: 1060.249 us/op
# Warmup Iteration   5: 1084.266 us/op
Iteration   1: 22653.382 us/op
Iteration   2: 22128.453 us/op
Iteration   3: 12146.794 us/op
Iteration   4: 21266.378 us/op
Iteration   5: 12159.859 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  18293.225 ±(99.9%) 7261.891 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 2 
    [12500.000, 13750.000) = 1 
    [13750.000, 15000.000) = 1 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 1 
    [21250.000, 22500.000) = 3 
    [22500.000, 23750.000) = 2 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  12146.794 us/op
     p(50.0000) =  20997.586 us/op
     p(90.0000) =  22695.503 us/op
     p(95.0000) =  22700.183 us/op
     p(99.0000) =  22700.183 us/op
     p(99.9000) =  22700.183 us/op
     p(99.9900) =  22700.183 us/op
     p(99.9990) =  22700.183 us/op
     p(99.9999) =  22700.183 us/op
    p(100.0000) =  22700.183 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.250)

# Run progress: 51.89% complete, ETA 00:22:37
# Fork: 1 of 2
# Warmup Iteration   1: 2166.272 us/op
# Warmup Iteration   2: 1497.280 us/op
# Warmup Iteration   3: 1455.223 us/op
# Warmup Iteration   4: 1351.807 us/op
# Warmup Iteration   5: 1080.508 us/op
Iteration   1: 16225.966 us/op
Iteration   2: 19527.319 us/op
Iteration   3: 9881.514 us/op
Iteration   4: 17575.328 us/op
Iteration   5: 8811.747 us/op

# Run progress: 52.08% complete, ETA 00:22:31
# Fork: 2 of 2
# Warmup Iteration   1: 2232.877 us/op
# Warmup Iteration   2: 1481.150 us/op
# Warmup Iteration   3: 1330.872 us/op
# Warmup Iteration   4: 1065.804 us/op
# Warmup Iteration   5: 1077.608 us/op
Iteration   1: 16570.891 us/op
Iteration   2: 18495.337 us/op
Iteration   3: 9067.944 us/op
Iteration   4: 17251.221 us/op
Iteration   5: 8647.270 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  14205.454 ±(99.9%) 6800.778 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 0 
    [ 7500.000,  8750.000) = 1 
    [ 8750.000, 10000.000) = 3 
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 1 
    [16250.000, 17500.000) = 2 
    [17500.000, 18750.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   8647.270 us/op
     p(50.0000) =  16398.429 us/op
     p(90.0000) =  19424.121 us/op
     p(95.0000) =  19527.319 us/op
     p(99.0000) =  19527.319 us/op
     p(99.9000) =  19527.319 us/op
     p(99.9900) =  19527.319 us/op
     p(99.9990) =  19527.319 us/op
     p(99.9999) =  19527.319 us/op
    p(100.0000) =  19527.319 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.375)

# Run progress: 52.27% complete, ETA 00:22:26
# Fork: 1 of 2
# Warmup Iteration   1: 2371.973 us/op
# Warmup Iteration   2: 1461.478 us/op
# Warmup Iteration   3: 1266.773 us/op
# Warmup Iteration   4: 1364.251 us/op
# Warmup Iteration   5: 1053.408 us/op
Iteration   1: 17359.228 us/op
Iteration   2: 20671.892 us/op
Iteration   3: 10159.574 us/op
Iteration   4: 20205.959 us/op
Iteration   5: 11701.741 us/op

# Run progress: 52.46% complete, ETA 00:22:21
# Fork: 2 of 2
# Warmup Iteration   1: 2339.052 us/op
# Warmup Iteration   2: 1414.191 us/op
# Warmup Iteration   3: 1430.542 us/op
# Warmup Iteration   4: 1055.738 us/op
# Warmup Iteration   5: 1229.813 us/op
Iteration   1: 17337.729 us/op
Iteration   2: 20946.121 us/op
Iteration   3: 10161.641 us/op
Iteration   4: 19616.929 us/op
Iteration   5: 10140.276 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  15830.109 ±(99.9%) 7152.215 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 3 
    [11250.000, 12500.000) = 1 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 2 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 1 
    [20000.000, 21250.000) = 3 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10140.276 us/op
     p(50.0000) =  17348.478 us/op
     p(90.0000) =  20918.698 us/op
     p(95.0000) =  20946.121 us/op
     p(99.0000) =  20946.121 us/op
     p(99.9000) =  20946.121 us/op
     p(99.9900) =  20946.121 us/op
     p(99.9990) =  20946.121 us/op
     p(99.9999) =  20946.121 us/op
    p(100.0000) =  20946.121 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.5)

# Run progress: 52.65% complete, ETA 00:22:15
# Fork: 1 of 2
# Warmup Iteration   1: 2333.215 us/op
# Warmup Iteration   2: 1548.683 us/op
# Warmup Iteration   3: 1291.546 us/op
# Warmup Iteration   4: 1333.310 us/op
# Warmup Iteration   5: 1079.049 us/op
Iteration   1: 15086.122 us/op
Iteration   2: 13714.084 us/op
Iteration   3: 7028.452 us/op
Iteration   4: 6332.967 us/op
Iteration   5: 8448.464 us/op

# Run progress: 52.84% complete, ETA 00:22:10
# Fork: 2 of 2
# Warmup Iteration   1: 2393.805 us/op
# Warmup Iteration   2: 1419.458 us/op
# Warmup Iteration   3: 1304.993 us/op
# Warmup Iteration   4: 1353.451 us/op
# Warmup Iteration   5: 1091.401 us/op
Iteration   1: 14761.628 us/op
Iteration   2: 13664.503 us/op
Iteration   3: 7104.237 us/op
Iteration   4: 6335.547 us/op
Iteration   5: 8338.033 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  10081.404 ±(99.9%) 5633.430 us/op

  Histogram, us/op:
    [ 6000.000,  7000.000) = 2 
    [ 7000.000,  8000.000) = 2 
    [ 8000.000,  9000.000) = 2 
    [ 9000.000, 10000.000) = 0 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 2 
    [14000.000, 15000.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   6332.967 us/op
     p(50.0000) =   8393.249 us/op
     p(90.0000) =  15053.673 us/op
     p(95.0000) =  15086.122 us/op
     p(99.0000) =  15086.122 us/op
     p(99.9000) =  15086.122 us/op
     p(99.9900) =  15086.122 us/op
     p(99.9990) =  15086.122 us/op
     p(99.9999) =  15086.122 us/op
    p(100.0000) =  15086.122 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.625)

# Run progress: 53.03% complete, ETA 00:22:05
# Fork: 1 of 2
# Warmup Iteration   1: 2254.364 us/op
# Warmup Iteration   2: 1548.901 us/op
# Warmup Iteration   3: 1309.096 us/op
# Warmup Iteration   4: 1453.917 us/op
# Warmup Iteration   5: 1065.817 us/op
Iteration   1: 16343.371 us/op
Iteration   2: 14850.547 us/op
Iteration   3: 8170.165 us/op
Iteration   4: 6911.654 us/op
Iteration   5: 9182.799 us/op

# Run progress: 53.22% complete, ETA 00:21:59
# Fork: 2 of 2
# Warmup Iteration   1: 2453.320 us/op
# Warmup Iteration   2: 1460.300 us/op
# Warmup Iteration   3: 1423.476 us/op
# Warmup Iteration   4: 1095.273 us/op
# Warmup Iteration   5: 1062.475 us/op
Iteration   1: 16442.738 us/op
Iteration   2: 13789.352 us/op
Iteration   3: 8526.818 us/op
Iteration   4: 7321.672 us/op
Iteration   5: 9446.367 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  11098.548 ±(99.9%) 5762.941 us/op

  Histogram, us/op:
    [ 6000.000,  7000.000) = 1 
    [ 7000.000,  8000.000) = 1 
    [ 8000.000,  9000.000) = 2 
    [ 9000.000, 10000.000) = 2 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 1 
    [14000.000, 15000.000) = 1 
    [15000.000, 16000.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   6911.654 us/op
     p(50.0000) =   9314.583 us/op
     p(90.0000) =  16432.801 us/op
     p(95.0000) =  16442.738 us/op
     p(99.0000) =  16442.738 us/op
     p(99.9000) =  16442.738 us/op
     p(99.9900) =  16442.738 us/op
     p(99.9990) =  16442.738 us/op
     p(99.9999) =  16442.738 us/op
    p(100.0000) =  16442.738 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.75)

# Run progress: 53.41% complete, ETA 00:21:54
# Fork: 1 of 2
# Warmup Iteration   1: 2123.205 us/op
# Warmup Iteration   2: 1398.885 us/op
# Warmup Iteration   3: 1387.146 us/op
# Warmup Iteration   4: 1289.383 us/op
# Warmup Iteration   5: 1079.441 us/op
Iteration   1: 17639.892 us/op
Iteration   2: 15323.721 us/op
Iteration   3: 8501.107 us/op
Iteration   4: 7592.345 us/op
Iteration   5: 10173.504 us/op

# Run progress: 53.60% complete, ETA 00:21:49
# Fork: 2 of 2
# Warmup Iteration   1: 2444.643 us/op
# Warmup Iteration   2: 1458.761 us/op
# Warmup Iteration   3: 1453.528 us/op
# Warmup Iteration   4: 1033.616 us/op
# Warmup Iteration   5: 1028.786 us/op
Iteration   1: 17599.743 us/op
Iteration   2: 16036.112 us/op
Iteration   3: 8567.645 us/op
Iteration   4: 7684.490 us/op
Iteration   5: 9740.797 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  11885.936 ±(99.9%) 6392.198 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 0 
    [ 7500.000,  8750.000) = 4 
    [ 8750.000, 10000.000) = 1 
    [10000.000, 11250.000) = 1 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 2 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   7592.345 us/op
     p(50.0000) =   9957.151 us/op
     p(90.0000) =  17635.877 us/op
     p(95.0000) =  17639.892 us/op
     p(99.0000) =  17639.892 us/op
     p(99.9000) =  17639.892 us/op
     p(99.9900) =  17639.892 us/op
     p(99.9990) =  17639.892 us/op
     p(99.9999) =  17639.892 us/op
    p(100.0000) =  17639.892 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.875)

# Run progress: 53.79% complete, ETA 00:21:43
# Fork: 1 of 2
# Warmup Iteration   1: 2333.554 us/op
# Warmup Iteration   2: 1590.445 us/op
# Warmup Iteration   3: 1328.770 us/op
# Warmup Iteration   4: 1051.933 us/op
# Warmup Iteration   5: 1049.314 us/op
Iteration   1: 9144.019 us/op
Iteration   2: 12997.745 us/op
Iteration   3: 6293.024 us/op
Iteration   4: 5456.680 us/op
Iteration   5: 6049.343 us/op

# Run progress: 53.98% complete, ETA 00:21:38
# Fork: 2 of 2
# Warmup Iteration   1: 2222.374 us/op
# Warmup Iteration   2: 1434.208 us/op
# Warmup Iteration   3: 1299.764 us/op
# Warmup Iteration   4: 1291.875 us/op
# Warmup Iteration   5: 1070.241 us/op
Iteration   1: 8988.183 us/op
Iteration   2: 13455.505 us/op
Iteration   3: 6373.939 us/op
Iteration   4: 5410.749 us/op
Iteration   5: 5962.227 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   8013.141 ±(99.9%) 4610.866 us/op

  Histogram, us/op:
    [ 5000.000,  5500.000) = 2 
    [ 5500.000,  6000.000) = 1 
    [ 6000.000,  6500.000) = 3 
    [ 6500.000,  7000.000) = 0 
    [ 7000.000,  7500.000) = 0 
    [ 7500.000,  8000.000) = 0 
    [ 8000.000,  8500.000) = 0 
    [ 8500.000,  9000.000) = 1 
    [ 9000.000,  9500.000) = 1 
    [ 9500.000, 10000.000) = 0 
    [10000.000, 10500.000) = 0 
    [10500.000, 11000.000) = 0 
    [11000.000, 11500.000) = 0 
    [11500.000, 12000.000) = 0 
    [12000.000, 12500.000) = 0 
    [12500.000, 13000.000) = 1 
    [13000.000, 13500.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   5410.749 us/op
     p(50.0000) =   6333.482 us/op
     p(90.0000) =  13409.729 us/op
     p(95.0000) =  13455.505 us/op
     p(99.0000) =  13455.505 us/op
     p(99.9000) =  13455.505 us/op
     p(99.9900) =  13455.505 us/op
     p(99.9990) =  13455.505 us/op
     p(99.9999) =  13455.505 us/op
    p(100.0000) =  13455.505 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 1)

# Run progress: 54.17% complete, ETA 00:21:33
# Fork: 1 of 2
# Warmup Iteration   1: 2259.746 us/op
# Warmup Iteration   2: 1429.215 us/op
# Warmup Iteration   3: 1313.896 us/op
# Warmup Iteration   4: 1328.534 us/op
# Warmup Iteration   5: 1067.321 us/op
Iteration   1: 9369.482 us/op
Iteration   2: 13629.802 us/op
Iteration   3: 6130.732 us/op
Iteration   4: 5456.329 us/op
Iteration   5: 6084.487 us/op

# Run progress: 54.36% complete, ETA 00:21:27
# Fork: 2 of 2
# Warmup Iteration   1: 2232.071 us/op
# Warmup Iteration   2: 1605.136 us/op
# Warmup Iteration   3: 1486.054 us/op
# Warmup Iteration   4: 1422.818 us/op
# Warmup Iteration   5: 1078.015 us/op
Iteration   1: 9004.526 us/op
Iteration   2: 13529.158 us/op
Iteration   3: 6968.376 us/op
Iteration   4: 5261.544 us/op
Iteration   5: 6664.219 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   8209.866 ±(99.9%) 4746.036 us/op

  Histogram, us/op:
    [ 5000.000,  5500.000) = 2 
    [ 5500.000,  6000.000) = 0 
    [ 6000.000,  6500.000) = 2 
    [ 6500.000,  7000.000) = 2 
    [ 7000.000,  7500.000) = 0 
    [ 7500.000,  8000.000) = 0 
    [ 8000.000,  8500.000) = 0 
    [ 8500.000,  9000.000) = 0 
    [ 9000.000,  9500.000) = 2 
    [ 9500.000, 10000.000) = 0 
    [10000.000, 10500.000) = 0 
    [10500.000, 11000.000) = 0 
    [11000.000, 11500.000) = 0 
    [11500.000, 12000.000) = 0 
    [12000.000, 12500.000) = 0 
    [12500.000, 13000.000) = 0 
    [13000.000, 13500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   5261.544 us/op
     p(50.0000) =   6816.298 us/op
     p(90.0000) =  13619.738 us/op
     p(95.0000) =  13629.802 us/op
     p(99.0000) =  13629.802 us/op
     p(99.9000) =  13629.802 us/op
     p(99.9900) =  13629.802 us/op
     p(99.9990) =  13629.802 us/op
     p(99.9999) =  13629.802 us/op
    p(100.0000) =  13629.802 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.125)

# Run progress: 54.55% complete, ETA 00:21:22
# Fork: 1 of 2
# Warmup Iteration   1: 2978.156 us/op
# Warmup Iteration   2: 2140.531 us/op
# Warmup Iteration   3: 2575.080 us/op
# Warmup Iteration   4: 1661.812 us/op
# Warmup Iteration   5: 1854.714 us/op
Iteration   1: 22892.732 us/op
Iteration   2: 27498.079 us/op
Iteration   3: 11859.896 us/op
Iteration   4: 11496.721 us/op
Iteration   5: 24004.960 us/op

# Run progress: 54.73% complete, ETA 00:21:16
# Fork: 2 of 2
# Warmup Iteration   1: 2621.647 us/op
# Warmup Iteration   2: 2108.918 us/op
# Warmup Iteration   3: 2555.105 us/op
# Warmup Iteration   4: 1727.728 us/op
# Warmup Iteration   5: 1878.324 us/op
Iteration   1: 22945.085 us/op
Iteration   2: 27563.392 us/op
Iteration   3: 11702.651 us/op
Iteration   4: 11156.611 us/op
Iteration   5: 24290.239 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  19541.037 ±(99.9%) 10671.726 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 1 
    [11250.000, 12500.000) = 3 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 0 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 2 
    [23750.000, 25000.000) = 2 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 1 
    [27500.000, 28750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =  11156.611 us/op
     p(50.0000) =  22918.908 us/op
     p(90.0000) =  27556.861 us/op
     p(95.0000) =  27563.392 us/op
     p(99.0000) =  27563.392 us/op
     p(99.9000) =  27563.392 us/op
     p(99.9900) =  27563.392 us/op
     p(99.9990) =  27563.392 us/op
     p(99.9999) =  27563.392 us/op
    p(100.0000) =  27563.392 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.250)

# Run progress: 54.92% complete, ETA 00:21:11
# Fork: 1 of 2
# Warmup Iteration   1: 2738.487 us/op
# Warmup Iteration   2: 2122.363 us/op
# Warmup Iteration   3: 2666.048 us/op
# Warmup Iteration   4: 1703.084 us/op
# Warmup Iteration   5: 1648.030 us/op
Iteration   1: 10420.263 us/op
Iteration   2: 22396.059 us/op
Iteration   3: 7732.589 us/op
Iteration   4: 7148.828 us/op
Iteration   5: 18647.441 us/op

# Run progress: 55.11% complete, ETA 00:21:06
# Fork: 2 of 2
# Warmup Iteration   1: 2745.208 us/op
# Warmup Iteration   2: 2101.051 us/op
# Warmup Iteration   3: 2500.954 us/op
# Warmup Iteration   4: 1661.978 us/op
# Warmup Iteration   5: 1768.089 us/op
Iteration   1: 10115.948 us/op
Iteration   2: 22290.127 us/op
Iteration   3: 7683.505 us/op
Iteration   4: 7002.637 us/op
Iteration   5: 18720.319 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  13215.772 ±(99.9%) 9822.944 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 2 
    [ 7500.000, 10000.000) = 2 
    [10000.000, 12500.000) = 2 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 2 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 0 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   7002.637 us/op
     p(50.0000) =  10268.106 us/op
     p(90.0000) =  22385.466 us/op
     p(95.0000) =  22396.059 us/op
     p(99.0000) =  22396.059 us/op
     p(99.9000) =  22396.059 us/op
     p(99.9900) =  22396.059 us/op
     p(99.9990) =  22396.059 us/op
     p(99.9999) =  22396.059 us/op
    p(100.0000) =  22396.059 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.375)

# Run progress: 55.30% complete, ETA 00:21:00
# Fork: 1 of 2
# Warmup Iteration   1: 2816.988 us/op
# Warmup Iteration   2: 2049.097 us/op
# Warmup Iteration   3: 2480.661 us/op
# Warmup Iteration   4: 1675.928 us/op
# Warmup Iteration   5: 1807.914 us/op
Iteration   1: 10481.407 us/op
Iteration   2: 22044.822 us/op
Iteration   3: 7835.205 us/op
Iteration   4: 7309.820 us/op
Iteration   5: 18969.539 us/op

# Run progress: 55.49% complete, ETA 00:20:55
# Fork: 2 of 2
# Warmup Iteration   1: 2799.292 us/op
# Warmup Iteration   2: 2218.285 us/op
# Warmup Iteration   3: 2581.102 us/op
# Warmup Iteration   4: 1657.053 us/op
# Warmup Iteration   5: 1796.167 us/op
Iteration   1: 10508.621 us/op
Iteration   2: 22329.920 us/op
Iteration   3: 7560.202 us/op
Iteration   4: 6992.226 us/op
Iteration   5: 18975.033 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  13300.680 ±(99.9%) 9779.493 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 2 
    [ 7500.000, 10000.000) = 2 
    [10000.000, 12500.000) = 2 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 2 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 0 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   6992.226 us/op
     p(50.0000) =  10495.014 us/op
     p(90.0000) =  22301.410 us/op
     p(95.0000) =  22329.920 us/op
     p(99.0000) =  22329.920 us/op
     p(99.9000) =  22329.920 us/op
     p(99.9900) =  22329.920 us/op
     p(99.9990) =  22329.920 us/op
     p(99.9999) =  22329.920 us/op
    p(100.0000) =  22329.920 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.5)

# Run progress: 55.68% complete, ETA 00:20:50
# Fork: 1 of 2
# Warmup Iteration   1: 2769.501 us/op
# Warmup Iteration   2: 2167.070 us/op
# Warmup Iteration   3: 2564.250 us/op
# Warmup Iteration   4: 1674.833 us/op
# Warmup Iteration   5: 1857.258 us/op
Iteration   1: 10396.925 us/op
Iteration   2: 22982.582 us/op
Iteration   3: 8003.300 us/op
Iteration   4: 7168.469 us/op
Iteration   5: 19233.287 us/op

# Run progress: 55.87% complete, ETA 00:20:44
# Fork: 2 of 2
# Warmup Iteration   1: 2626.838 us/op
# Warmup Iteration   2: 2079.082 us/op
# Warmup Iteration   3: 2599.024 us/op
# Warmup Iteration   4: 1672.178 us/op
# Warmup Iteration   5: 1824.846 us/op
Iteration   1: 10470.085 us/op
Iteration   2: 22295.005 us/op
Iteration   3: 7757.684 us/op
Iteration   4: 7016.347 us/op
Iteration   5: 19432.747 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  13475.643 ±(99.9%) 10072.205 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 2 
    [ 7500.000, 10000.000) = 2 
    [10000.000, 12500.000) = 2 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 2 
    [20000.000, 22500.000) = 1 
    [22500.000, 25000.000) = 1 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   7016.347 us/op
     p(50.0000) =  10433.505 us/op
     p(90.0000) =  22913.824 us/op
     p(95.0000) =  22982.582 us/op
     p(99.0000) =  22982.582 us/op
     p(99.9000) =  22982.582 us/op
     p(99.9900) =  22982.582 us/op
     p(99.9990) =  22982.582 us/op
     p(99.9999) =  22982.582 us/op
    p(100.0000) =  22982.582 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.625)

# Run progress: 56.06% complete, ETA 00:20:39
# Fork: 1 of 2
# Warmup Iteration   1: 2875.090 us/op
# Warmup Iteration   2: 2074.099 us/op
# Warmup Iteration   3: 2678.621 us/op
# Warmup Iteration   4: 1662.298 us/op
# Warmup Iteration   5: 1803.562 us/op
Iteration   1: 10010.637 us/op
Iteration   2: 22077.697 us/op
Iteration   3: 7725.679 us/op
Iteration   4: 7190.855 us/op
Iteration   5: 18616.776 us/op

# Run progress: 56.25% complete, ETA 00:20:34
# Fork: 2 of 2
# Warmup Iteration   1: 3012.820 us/op
# Warmup Iteration   2: 2068.909 us/op
# Warmup Iteration   3: 2463.688 us/op
# Warmup Iteration   4: 1715.255 us/op
# Warmup Iteration   5: 1797.887 us/op
Iteration   1: 10364.289 us/op
Iteration   2: 22285.649 us/op
Iteration   3: 7772.613 us/op
Iteration   4: 7184.266 us/op
Iteration   5: 19310.316 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  13253.878 ±(99.9%) 9797.279 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 2 
    [ 7500.000, 10000.000) = 2 
    [10000.000, 12500.000) = 2 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 2 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 0 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   7184.266 us/op
     p(50.0000) =  10187.463 us/op
     p(90.0000) =  22264.854 us/op
     p(95.0000) =  22285.649 us/op
     p(99.0000) =  22285.649 us/op
     p(99.9000) =  22285.649 us/op
     p(99.9900) =  22285.649 us/op
     p(99.9990) =  22285.649 us/op
     p(99.9999) =  22285.649 us/op
    p(100.0000) =  22285.649 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.75)

# Run progress: 56.44% complete, ETA 00:20:28
# Fork: 1 of 2
# Warmup Iteration   1: 2816.915 us/op
# Warmup Iteration   2: 2130.596 us/op
# Warmup Iteration   3: 2592.682 us/op
# Warmup Iteration   4: 1679.021 us/op
# Warmup Iteration   5: 1745.722 us/op
Iteration   1: 10312.559 us/op
Iteration   2: 22579.796 us/op
Iteration   3: 7674.558 us/op
Iteration   4: 7216.466 us/op
Iteration   5: 18760.390 us/op

# Run progress: 56.63% complete, ETA 00:20:23
# Fork: 2 of 2
# Warmup Iteration   1: 2814.726 us/op
# Warmup Iteration   2: 2073.954 us/op
# Warmup Iteration   3: 2616.824 us/op
# Warmup Iteration   4: 1716.653 us/op
# Warmup Iteration   5: 1729.639 us/op
Iteration   1: 9906.287 us/op
Iteration   2: 22417.325 us/op
Iteration   3: 7614.931 us/op
Iteration   4: 7001.787 us/op
Iteration   5: 18776.013 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  13226.011 ±(99.9%) 9953.190 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 2 
    [ 7500.000, 10000.000) = 3 
    [10000.000, 12500.000) = 1 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 2 
    [20000.000, 22500.000) = 1 
    [22500.000, 25000.000) = 1 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   7001.787 us/op
     p(50.0000) =  10109.423 us/op
     p(90.0000) =  22563.549 us/op
     p(95.0000) =  22579.796 us/op
     p(99.0000) =  22579.796 us/op
     p(99.9000) =  22579.796 us/op
     p(99.9900) =  22579.796 us/op
     p(99.9990) =  22579.796 us/op
     p(99.9999) =  22579.796 us/op
    p(100.0000) =  22579.796 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.875)

# Run progress: 56.82% complete, ETA 00:20:18
# Fork: 1 of 2
# Warmup Iteration   1: 3071.893 us/op
# Warmup Iteration   2: 2127.374 us/op
# Warmup Iteration   3: 2569.622 us/op
# Warmup Iteration   4: 1659.496 us/op
# Warmup Iteration   5: 1822.984 us/op
Iteration   1: 9842.289 us/op
Iteration   2: 22492.623 us/op
Iteration   3: 7569.241 us/op
Iteration   4: 7028.182 us/op
Iteration   5: 18881.813 us/op

# Run progress: 57.01% complete, ETA 00:20:12
# Fork: 2 of 2
# Warmup Iteration   1: 3102.527 us/op
# Warmup Iteration   2: 2191.396 us/op
# Warmup Iteration   3: 2338.517 us/op
# Warmup Iteration   4: 1741.752 us/op
# Warmup Iteration   5: 1775.034 us/op
Iteration   1: 10488.979 us/op
Iteration   2: 21945.186 us/op
Iteration   3: 7726.990 us/op
Iteration   4: 7180.080 us/op
Iteration   5: 19162.935 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  13231.832 ±(99.9%) 9891.785 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 2 
    [ 7500.000, 10000.000) = 3 
    [10000.000, 12500.000) = 1 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 2 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 0 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   7028.182 us/op
     p(50.0000) =  10165.634 us/op
     p(90.0000) =  22437.879 us/op
     p(95.0000) =  22492.623 us/op
     p(99.0000) =  22492.623 us/op
     p(99.9000) =  22492.623 us/op
     p(99.9900) =  22492.623 us/op
     p(99.9990) =  22492.623 us/op
     p(99.9999) =  22492.623 us/op
    p(100.0000) =  22492.623 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 1)

# Run progress: 57.20% complete, ETA 00:20:07
# Fork: 1 of 2
# Warmup Iteration   1: 2767.226 us/op
# Warmup Iteration   2: 2236.782 us/op
# Warmup Iteration   3: 2588.332 us/op
# Warmup Iteration   4: 1699.302 us/op
# Warmup Iteration   5: 1780.588 us/op
Iteration   1: 10638.454 us/op
Iteration   2: 22059.481 us/op
Iteration   3: 7529.885 us/op
Iteration   4: 7126.601 us/op
Iteration   5: 18904.262 us/op

# Run progress: 57.39% complete, ETA 00:20:02
# Fork: 2 of 2
# Warmup Iteration   1: 3190.911 us/op
# Warmup Iteration   2: 2104.950 us/op
# Warmup Iteration   3: 2429.164 us/op
# Warmup Iteration   4: 1627.933 us/op
# Warmup Iteration   5: 1786.988 us/op
Iteration   1: 10453.812 us/op
Iteration   2: 22178.350 us/op
Iteration   3: 7729.059 us/op
Iteration   4: 7169.676 us/op
Iteration   5: 18941.942 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  13273.152 ±(99.9%) 9745.867 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 2 
    [ 7500.000, 10000.000) = 2 
    [10000.000, 12500.000) = 2 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 2 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 0 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   7126.601 us/op
     p(50.0000) =  10546.133 us/op
     p(90.0000) =  22166.463 us/op
     p(95.0000) =  22178.350 us/op
     p(99.0000) =  22178.350 us/op
     p(99.9000) =  22178.350 us/op
     p(99.9900) =  22178.350 us/op
     p(99.9990) =  22178.350 us/op
     p(99.9999) =  22178.350 us/op
    p(100.0000) =  22178.350 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.125)

# Run progress: 57.58% complete, ETA 00:19:56
# Fork: 1 of 2
# Warmup Iteration   1: 3650.194 us/op
# Warmup Iteration   2: 3304.687 us/op
# Warmup Iteration   3: 3048.879 us/op
# Warmup Iteration   4: 2407.150 us/op
# Warmup Iteration   5: 2366.374 us/op
Iteration   1: 12722.913 us/op
Iteration   2: 24588.234 us/op
Iteration   3: 9385.907 us/op
Iteration   4: 8857.337 us/op
Iteration   5: 21532.460 us/op

# Run progress: 57.77% complete, ETA 00:19:51
# Fork: 2 of 2
# Warmup Iteration   1: 3782.522 us/op
# Warmup Iteration   2: 3215.176 us/op
# Warmup Iteration   3: 2828.497 us/op
# Warmup Iteration   4: 2369.004 us/op
# Warmup Iteration   5: 2458.397 us/op
Iteration   1: 12271.851 us/op
Iteration   2: 24174.636 us/op
Iteration   3: 9753.783 us/op
Iteration   4: 9212.051 us/op
Iteration   5: 21469.620 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  15396.879 ±(99.9%) 10103.756 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 1 
    [12500.000, 15000.000) = 1 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 2 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8857.337 us/op
     p(50.0000) =  12497.382 us/op
     p(90.0000) =  24546.874 us/op
     p(95.0000) =  24588.234 us/op
     p(99.0000) =  24588.234 us/op
     p(99.9000) =  24588.234 us/op
     p(99.9900) =  24588.234 us/op
     p(99.9990) =  24588.234 us/op
     p(99.9999) =  24588.234 us/op
    p(100.0000) =  24588.234 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.250)

# Run progress: 57.95% complete, ETA 00:19:46
# Fork: 1 of 2
# Warmup Iteration   1: 3565.892 us/op
# Warmup Iteration   2: 3204.476 us/op
# Warmup Iteration   3: 3070.518 us/op
# Warmup Iteration   4: 2471.107 us/op
# Warmup Iteration   5: 2533.389 us/op
Iteration   1: 12378.881 us/op
Iteration   2: 24427.552 us/op
Iteration   3: 9488.859 us/op
Iteration   4: 9073.918 us/op
Iteration   5: 21147.061 us/op

# Run progress: 58.14% complete, ETA 00:19:40
# Fork: 2 of 2
# Warmup Iteration   1: 3591.048 us/op
# Warmup Iteration   2: 3296.972 us/op
# Warmup Iteration   3: 2554.108 us/op
# Warmup Iteration   4: 2494.557 us/op
# Warmup Iteration   5: 2461.219 us/op
Iteration   1: 12513.828 us/op
Iteration   2: 24553.584 us/op
Iteration   3: 9147.447 us/op
Iteration   4: 8613.608 us/op
Iteration   5: 20992.396 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  15233.713 ±(99.9%) 10165.352 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 1 
    [12500.000, 15000.000) = 1 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 2 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8613.608 us/op
     p(50.0000) =  12446.355 us/op
     p(90.0000) =  24540.981 us/op
     p(95.0000) =  24553.584 us/op
     p(99.0000) =  24553.584 us/op
     p(99.9000) =  24553.584 us/op
     p(99.9900) =  24553.584 us/op
     p(99.9990) =  24553.584 us/op
     p(99.9999) =  24553.584 us/op
    p(100.0000) =  24553.584 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.375)

# Run progress: 58.33% complete, ETA 00:19:35
# Fork: 1 of 2
# Warmup Iteration   1: 3703.132 us/op
# Warmup Iteration   2: 3208.254 us/op
# Warmup Iteration   3: 3025.981 us/op
# Warmup Iteration   4: 2384.874 us/op
# Warmup Iteration   5: 2396.054 us/op
Iteration   1: 12725.061 us/op
Iteration   2: 24978.581 us/op
Iteration   3: 9725.847 us/op
Iteration   4: 8947.503 us/op
Iteration   5: 21324.088 us/op

# Run progress: 58.52% complete, ETA 00:19:30
# Fork: 2 of 2
# Warmup Iteration   1: 3824.177 us/op
# Warmup Iteration   2: 3364.010 us/op
# Warmup Iteration   3: 3177.129 us/op
# Warmup Iteration   4: 2472.310 us/op
# Warmup Iteration   5: 2433.894 us/op
Iteration   1: 12589.011 us/op
Iteration   2: 24827.879 us/op
Iteration   3: 9593.912 us/op
Iteration   4: 9160.974 us/op
Iteration   5: 21229.468 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  15510.232 ±(99.9%) 10218.111 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 0 
    [12500.000, 15000.000) = 2 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 2 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8947.503 us/op
     p(50.0000) =  12657.036 us/op
     p(90.0000) =  24963.511 us/op
     p(95.0000) =  24978.581 us/op
     p(99.0000) =  24978.581 us/op
     p(99.9000) =  24978.581 us/op
     p(99.9900) =  24978.581 us/op
     p(99.9990) =  24978.581 us/op
     p(99.9999) =  24978.581 us/op
    p(100.0000) =  24978.581 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.5)

# Run progress: 58.71% complete, ETA 00:19:24
# Fork: 1 of 2
# Warmup Iteration   1: 3712.219 us/op
# Warmup Iteration   2: 3345.581 us/op
# Warmup Iteration   3: 2789.212 us/op
# Warmup Iteration   4: 2356.051 us/op
# Warmup Iteration   5: 2414.392 us/op
Iteration   1: 12144.515 us/op
Iteration   2: 24217.538 us/op
Iteration   3: 9649.653 us/op
Iteration   4: 8984.693 us/op
Iteration   5: 21151.662 us/op

# Run progress: 58.90% complete, ETA 00:19:19
# Fork: 2 of 2
# Warmup Iteration   1: 3403.185 us/op
# Warmup Iteration   2: 3115.071 us/op
# Warmup Iteration   3: 2975.498 us/op
# Warmup Iteration   4: 2386.218 us/op
# Warmup Iteration   5: 2434.449 us/op
Iteration   1: 12390.740 us/op
Iteration   2: 24372.445 us/op
Iteration   3: 9786.735 us/op
Iteration   4: 9098.559 us/op
Iteration   5: 20792.544 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  15258.908 ±(99.9%) 9892.231 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 2 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 2 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8984.693 us/op
     p(50.0000) =  12267.627 us/op
     p(90.0000) =  24356.954 us/op
     p(95.0000) =  24372.445 us/op
     p(99.0000) =  24372.445 us/op
     p(99.9000) =  24372.445 us/op
     p(99.9900) =  24372.445 us/op
     p(99.9990) =  24372.445 us/op
     p(99.9999) =  24372.445 us/op
    p(100.0000) =  24372.445 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.625)

# Run progress: 59.09% complete, ETA 00:19:14
# Fork: 1 of 2
# Warmup Iteration   1: 3607.450 us/op
# Warmup Iteration   2: 3205.117 us/op
# Warmup Iteration   3: 3044.729 us/op
# Warmup Iteration   4: 2433.021 us/op
# Warmup Iteration   5: 2476.859 us/op
Iteration   1: 12382.693 us/op
Iteration   2: 24323.558 us/op
Iteration   3: 9404.019 us/op
Iteration   4: 9031.954 us/op
Iteration   5: 21098.945 us/op

# Run progress: 59.28% complete, ETA 00:19:08
# Fork: 2 of 2
# Warmup Iteration   1: 3798.341 us/op
# Warmup Iteration   2: 3358.415 us/op
# Warmup Iteration   3: 2596.477 us/op
# Warmup Iteration   4: 2554.133 us/op
# Warmup Iteration   5: 2455.064 us/op
Iteration   1: 12087.730 us/op
Iteration   2: 24205.758 us/op
Iteration   3: 9695.858 us/op
Iteration   4: 9273.664 us/op
Iteration   5: 21654.552 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  15315.873 ±(99.9%) 10020.245 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 2 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 2 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   9031.954 us/op
     p(50.0000) =  12235.212 us/op
     p(90.0000) =  24311.778 us/op
     p(95.0000) =  24323.558 us/op
     p(99.0000) =  24323.558 us/op
     p(99.9000) =  24323.558 us/op
     p(99.9900) =  24323.558 us/op
     p(99.9990) =  24323.558 us/op
     p(99.9999) =  24323.558 us/op
    p(100.0000) =  24323.558 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.75)

# Run progress: 59.47% complete, ETA 00:19:03
# Fork: 1 of 2
# Warmup Iteration   1: 3577.890 us/op
# Warmup Iteration   2: 3353.443 us/op
# Warmup Iteration   3: 2913.410 us/op
# Warmup Iteration   4: 2470.042 us/op
# Warmup Iteration   5: 2393.857 us/op
Iteration   1: 12165.685 us/op
Iteration   2: 24261.105 us/op
Iteration   3: 9458.810 us/op
Iteration   4: 8909.947 us/op
Iteration   5: 20682.087 us/op

# Run progress: 59.66% complete, ETA 00:18:58
# Fork: 2 of 2
# Warmup Iteration   1: 3477.176 us/op
# Warmup Iteration   2: 3249.933 us/op
# Warmup Iteration   3: 2854.575 us/op
# Warmup Iteration   4: 2378.259 us/op
# Warmup Iteration   5: 2372.427 us/op
Iteration   1: 12100.576 us/op
Iteration   2: 24048.954 us/op
Iteration   3: 9729.331 us/op
Iteration   4: 9139.011 us/op
Iteration   5: 21183.712 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  15167.922 ±(99.9%) 9878.737 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 2 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 2 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8909.947 us/op
     p(50.0000) =  12133.131 us/op
     p(90.0000) =  24239.890 us/op
     p(95.0000) =  24261.105 us/op
     p(99.0000) =  24261.105 us/op
     p(99.9000) =  24261.105 us/op
     p(99.9900) =  24261.105 us/op
     p(99.9990) =  24261.105 us/op
     p(99.9999) =  24261.105 us/op
    p(100.0000) =  24261.105 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.875)

# Run progress: 59.85% complete, ETA 00:18:52
# Fork: 1 of 2
# Warmup Iteration   1: 3702.751 us/op
# Warmup Iteration   2: 3391.287 us/op
# Warmup Iteration   3: 2568.713 us/op
# Warmup Iteration   4: 2519.409 us/op
# Warmup Iteration   5: 2447.714 us/op
Iteration   1: 11887.984 us/op
Iteration   2: 24502.326 us/op
Iteration   3: 9521.768 us/op
Iteration   4: 9282.563 us/op
Iteration   5: 20968.575 us/op

# Run progress: 60.04% complete, ETA 00:18:47
# Fork: 2 of 2
# Warmup Iteration   1: 3563.466 us/op
# Warmup Iteration   2: 3306.806 us/op
# Warmup Iteration   3: 3288.516 us/op
# Warmup Iteration   4: 2437.840 us/op
# Warmup Iteration   5: 2457.465 us/op
Iteration   1: 12154.519 us/op
Iteration   2: 24510.430 us/op
Iteration   3: 9437.057 us/op
Iteration   4: 8686.455 us/op
Iteration   5: 20518.018 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  15146.970 ±(99.9%) 10052.400 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 2 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 2 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8686.455 us/op
     p(50.0000) =  12021.252 us/op
     p(90.0000) =  24509.620 us/op
     p(95.0000) =  24510.430 us/op
     p(99.0000) =  24510.430 us/op
     p(99.9000) =  24510.430 us/op
     p(99.9900) =  24510.430 us/op
     p(99.9990) =  24510.430 us/op
     p(99.9999) =  24510.430 us/op
    p(100.0000) =  24510.430 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 1)

# Run progress: 60.23% complete, ETA 00:18:42
# Fork: 1 of 2
# Warmup Iteration   1: 3553.908 us/op
# Warmup Iteration   2: 3271.969 us/op
# Warmup Iteration   3: 2950.085 us/op
# Warmup Iteration   4: 2413.792 us/op
# Warmup Iteration   5: 2393.634 us/op
Iteration   1: 12190.567 us/op
Iteration   2: 23988.527 us/op
Iteration   3: 9727.514 us/op
Iteration   4: 8905.520 us/op
Iteration   5: 21503.966 us/op

# Run progress: 60.42% complete, ETA 00:18:36
# Fork: 2 of 2
# Warmup Iteration   1: 3646.817 us/op
# Warmup Iteration   2: 3121.871 us/op
# Warmup Iteration   3: 2941.070 us/op
# Warmup Iteration   4: 2543.786 us/op
# Warmup Iteration   5: 2508.009 us/op
Iteration   1: 12037.960 us/op
Iteration   2: 24582.255 us/op
Iteration   3: 9508.174 us/op
Iteration   4: 9053.648 us/op
Iteration   5: 20896.913 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  15239.504 ±(99.9%) 10031.596 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 2 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 2 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8905.520 us/op
     p(50.0000) =  12114.264 us/op
     p(90.0000) =  24522.882 us/op
     p(95.0000) =  24582.255 us/op
     p(99.0000) =  24582.255 us/op
     p(99.9000) =  24582.255 us/op
     p(99.9900) =  24582.255 us/op
     p(99.9990) =  24582.255 us/op
     p(99.9999) =  24582.255 us/op
    p(100.0000) =  24582.255 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.125)

# Run progress: 60.61% complete, ETA 00:18:31
# Fork: 1 of 2
# Warmup Iteration   1: 3858.117 us/op
# Warmup Iteration   2: 3380.399 us/op
# Warmup Iteration   3: 2880.486 us/op
# Warmup Iteration   4: 2353.471 us/op
# Warmup Iteration   5: 2570.464 us/op
Iteration   1: 12276.514 us/op
Iteration   2: 24786.877 us/op
Iteration   3: 9592.993 us/op
Iteration   4: 9051.827 us/op
Iteration   5: 21023.531 us/op

# Run progress: 60.80% complete, ETA 00:18:26
# Fork: 2 of 2
# Warmup Iteration   1: 3549.448 us/op
# Warmup Iteration   2: 3408.510 us/op
# Warmup Iteration   3: 2600.588 us/op
# Warmup Iteration   4: 2484.419 us/op
# Warmup Iteration   5: 2536.843 us/op
Iteration   1: 12265.574 us/op
Iteration   2: 24448.221 us/op
Iteration   3: 9731.552 us/op
Iteration   4: 9160.337 us/op
Iteration   5: 21346.492 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  15368.392 ±(99.9%) 10099.498 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 2 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 2 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   9051.827 us/op
     p(50.0000) =  12271.044 us/op
     p(90.0000) =  24753.011 us/op
     p(95.0000) =  24786.877 us/op
     p(99.0000) =  24786.877 us/op
     p(99.9000) =  24786.877 us/op
     p(99.9900) =  24786.877 us/op
     p(99.9990) =  24786.877 us/op
     p(99.9999) =  24786.877 us/op
    p(100.0000) =  24786.877 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.250)

# Run progress: 60.98% complete, ETA 00:18:20
# Fork: 1 of 2
# Warmup Iteration   1: 3579.282 us/op
# Warmup Iteration   2: 3223.428 us/op
# Warmup Iteration   3: 3032.006 us/op
# Warmup Iteration   4: 2474.361 us/op
# Warmup Iteration   5: 2486.991 us/op
Iteration   1: 12225.002 us/op
Iteration   2: 24112.801 us/op
Iteration   3: 9461.193 us/op
Iteration   4: 8979.089 us/op
Iteration   5: 21341.363 us/op

# Run progress: 61.17% complete, ETA 00:18:15
# Fork: 2 of 2
# Warmup Iteration   1: 3655.253 us/op
# Warmup Iteration   2: 3364.050 us/op
# Warmup Iteration   3: 2809.652 us/op
# Warmup Iteration   4: 2440.102 us/op
# Warmup Iteration   5: 2452.876 us/op
Iteration   1: 12247.239 us/op
Iteration   2: 23814.733 us/op
Iteration   3: 9417.891 us/op
Iteration   4: 8820.428 us/op
Iteration   5: 20992.520 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  15141.226 ±(99.9%) 9929.545 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 2 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 2 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8820.428 us/op
     p(50.0000) =  12236.121 us/op
     p(90.0000) =  24082.994 us/op
     p(95.0000) =  24112.801 us/op
     p(99.0000) =  24112.801 us/op
     p(99.9000) =  24112.801 us/op
     p(99.9900) =  24112.801 us/op
     p(99.9990) =  24112.801 us/op
     p(99.9999) =  24112.801 us/op
    p(100.0000) =  24112.801 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.375)

# Run progress: 61.36% complete, ETA 00:18:10
# Fork: 1 of 2
# Warmup Iteration   1: 3681.190 us/op
# Warmup Iteration   2: 3164.967 us/op
# Warmup Iteration   3: 2838.698 us/op
# Warmup Iteration   4: 2433.815 us/op
# Warmup Iteration   5: 2448.094 us/op
Iteration   1: 12405.245 us/op
Iteration   2: 24437.570 us/op
Iteration   3: 9516.672 us/op
Iteration   4: 8961.904 us/op
Iteration   5: 21335.053 us/op

# Run progress: 61.55% complete, ETA 00:18:04
# Fork: 2 of 2
# Warmup Iteration   1: 3689.161 us/op
# Warmup Iteration   2: 3562.119 us/op
# Warmup Iteration   3: 2550.953 us/op
# Warmup Iteration   4: 2495.098 us/op
# Warmup Iteration   5: 2586.439 us/op
Iteration   1: 12618.484 us/op
Iteration   2: 24168.984 us/op
Iteration   3: 9518.050 us/op
Iteration   4: 8791.117 us/op
Iteration   5: 20856.896 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  15260.998 ±(99.9%) 10008.561 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 1 
    [12500.000, 15000.000) = 1 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 2 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8791.117 us/op
     p(50.0000) =  12511.865 us/op
     p(90.0000) =  24410.711 us/op
     p(95.0000) =  24437.570 us/op
     p(99.0000) =  24437.570 us/op
     p(99.9000) =  24437.570 us/op
     p(99.9900) =  24437.570 us/op
     p(99.9990) =  24437.570 us/op
     p(99.9999) =  24437.570 us/op
    p(100.0000) =  24437.570 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.5)

# Run progress: 61.74% complete, ETA 00:17:59
# Fork: 1 of 2
# Warmup Iteration   1: 3516.501 us/op
# Warmup Iteration   2: 3118.262 us/op
# Warmup Iteration   3: 2984.555 us/op
# Warmup Iteration   4: 2412.463 us/op
# Warmup Iteration   5: 2482.129 us/op
Iteration   1: 12561.753 us/op
Iteration   2: 23715.701 us/op
Iteration   3: 9521.389 us/op
Iteration   4: 8889.307 us/op
Iteration   5: 21303.781 us/op

# Run progress: 61.93% complete, ETA 00:17:54
# Fork: 2 of 2
# Warmup Iteration   1: 3431.439 us/op
# Warmup Iteration   2: 3158.931 us/op
# Warmup Iteration   3: 3029.869 us/op
# Warmup Iteration   4: 2523.083 us/op
# Warmup Iteration   5: 2448.311 us/op
Iteration   1: 12063.443 us/op
Iteration   2: 25000.230 us/op
Iteration   3: 9421.596 us/op
Iteration   4: 8904.453 us/op
Iteration   5: 21344.499 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  15272.615 ±(99.9%) 10147.025 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 1 
    [12500.000, 15000.000) = 1 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 1 
    [25000.000, 27500.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   8889.307 us/op
     p(50.0000) =  12312.598 us/op
     p(90.0000) =  24871.777 us/op
     p(95.0000) =  25000.230 us/op
     p(99.0000) =  25000.230 us/op
     p(99.9000) =  25000.230 us/op
     p(99.9900) =  25000.230 us/op
     p(99.9990) =  25000.230 us/op
     p(99.9999) =  25000.230 us/op
    p(100.0000) =  25000.230 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.625)

# Run progress: 62.12% complete, ETA 00:17:48
# Fork: 1 of 2
# Warmup Iteration   1: 3696.316 us/op
# Warmup Iteration   2: 3276.462 us/op
# Warmup Iteration   3: 3273.103 us/op
# Warmup Iteration   4: 2553.520 us/op
# Warmup Iteration   5: 2506.095 us/op
Iteration   1: 12475.727 us/op
Iteration   2: 24600.053 us/op
Iteration   3: 9287.376 us/op
Iteration   4: 8635.900 us/op
Iteration   5: 21026.082 us/op

# Run progress: 62.31% complete, ETA 00:17:43
# Fork: 2 of 2
# Warmup Iteration   1: 3393.802 us/op
# Warmup Iteration   2: 3152.389 us/op
# Warmup Iteration   3: 3031.287 us/op
# Warmup Iteration   4: 2397.822 us/op
# Warmup Iteration   5: 2431.155 us/op
Iteration   1: 11846.797 us/op
Iteration   2: 24204.298 us/op
Iteration   3: 9791.178 us/op
Iteration   4: 9020.788 us/op
Iteration   5: 21069.178 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  15195.738 ±(99.9%) 10103.949 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 2 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 2 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8635.900 us/op
     p(50.0000) =  12161.262 us/op
     p(90.0000) =  24560.478 us/op
     p(95.0000) =  24600.053 us/op
     p(99.0000) =  24600.053 us/op
     p(99.9000) =  24600.053 us/op
     p(99.9900) =  24600.053 us/op
     p(99.9990) =  24600.053 us/op
     p(99.9999) =  24600.053 us/op
    p(100.0000) =  24600.053 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.75)

# Run progress: 62.50% complete, ETA 00:17:38
# Fork: 1 of 2
# Warmup Iteration   1: 3687.201 us/op
# Warmup Iteration   2: 3169.929 us/op
# Warmup Iteration   3: 3030.309 us/op
# Warmup Iteration   4: 2532.696 us/op
# Warmup Iteration   5: 2497.348 us/op
Iteration   1: 12455.444 us/op
Iteration   2: 24030.822 us/op
Iteration   3: 9420.064 us/op
Iteration   4: 8757.170 us/op
Iteration   5: 20913.951 us/op

# Run progress: 62.69% complete, ETA 00:17:32
# Fork: 2 of 2
# Warmup Iteration   1: 3525.845 us/op
# Warmup Iteration   2: 3264.645 us/op
# Warmup Iteration   3: 2848.162 us/op
# Warmup Iteration   4: 2412.646 us/op
# Warmup Iteration   5: 2429.705 us/op
Iteration   1: 12355.740 us/op
Iteration   2: 24294.067 us/op
Iteration   3: 9389.042 us/op
Iteration   4: 9077.082 us/op
Iteration   5: 21798.654 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  15249.204 ±(99.9%) 10062.029 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 2 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 2 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8757.170 us/op
     p(50.0000) =  12405.592 us/op
     p(90.0000) =  24267.743 us/op
     p(95.0000) =  24294.067 us/op
     p(99.0000) =  24294.067 us/op
     p(99.9000) =  24294.067 us/op
     p(99.9900) =  24294.067 us/op
     p(99.9990) =  24294.067 us/op
     p(99.9999) =  24294.067 us/op
    p(100.0000) =  24294.067 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.875)

# Run progress: 62.88% complete, ETA 00:17:27
# Fork: 1 of 2
# Warmup Iteration   1: 3425.254 us/op
# Warmup Iteration   2: 3232.157 us/op
# Warmup Iteration   3: 2823.836 us/op
# Warmup Iteration   4: 2464.052 us/op
# Warmup Iteration   5: 2364.260 us/op
Iteration   1: 11895.645 us/op
Iteration   2: 24296.652 us/op
Iteration   3: 9704.169 us/op
Iteration   4: 9346.048 us/op
Iteration   5: 20812.569 us/op

# Run progress: 63.07% complete, ETA 00:17:22
# Fork: 2 of 2
# Warmup Iteration   1: 4038.154 us/op
# Warmup Iteration   2: 3191.392 us/op
# Warmup Iteration   3: 2826.268 us/op
# Warmup Iteration   4: 2500.843 us/op
# Warmup Iteration   5: 2529.247 us/op
Iteration   1: 12435.638 us/op
Iteration   2: 24346.909 us/op
Iteration   3: 9450.213 us/op
Iteration   4: 9016.796 us/op
Iteration   5: 21421.709 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  15272.635 ±(99.9%) 9963.718 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 2 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 2 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   9016.796 us/op
     p(50.0000) =  12165.642 us/op
     p(90.0000) =  24341.883 us/op
     p(95.0000) =  24346.909 us/op
     p(99.0000) =  24346.909 us/op
     p(99.9000) =  24346.909 us/op
     p(99.9900) =  24346.909 us/op
     p(99.9990) =  24346.909 us/op
     p(99.9999) =  24346.909 us/op
    p(100.0000) =  24346.909 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 1)

# Run progress: 63.26% complete, ETA 00:17:16
# Fork: 1 of 2
# Warmup Iteration   1: 3574.707 us/op
# Warmup Iteration   2: 3375.013 us/op
# Warmup Iteration   3: 2915.014 us/op
# Warmup Iteration   4: 2474.315 us/op
# Warmup Iteration   5: 2505.700 us/op
Iteration   1: 12463.350 us/op
Iteration   2: 24245.250 us/op
Iteration   3: 9405.115 us/op
Iteration   4: 8817.765 us/op
Iteration   5: 20858.731 us/op

# Run progress: 63.45% complete, ETA 00:17:11
# Fork: 2 of 2
# Warmup Iteration   1: 3722.778 us/op
# Warmup Iteration   2: 3398.534 us/op
# Warmup Iteration   3: 2565.703 us/op
# Warmup Iteration   4: 2492.795 us/op
# Warmup Iteration   5: 2523.946 us/op
Iteration   1: 12429.925 us/op
Iteration   2: 24758.025 us/op
Iteration   3: 9642.061 us/op
Iteration   4: 9034.184 us/op
Iteration   5: 21580.465 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  15323.487 ±(99.9%) 10131.019 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 2 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 2 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8817.765 us/op
     p(50.0000) =  12446.638 us/op
     p(90.0000) =  24706.748 us/op
     p(95.0000) =  24758.025 us/op
     p(99.0000) =  24758.025 us/op
     p(99.9000) =  24758.025 us/op
     p(99.9900) =  24758.025 us/op
     p(99.9990) =  24758.025 us/op
     p(99.9999) =  24758.025 us/op
    p(100.0000) =  24758.025 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.125)

# Run progress: 63.64% complete, ETA 00:17:06
# Fork: 1 of 2
# Warmup Iteration   1: 5087.658 us/op
# Warmup Iteration   2: 5133.443 us/op
# Warmup Iteration   3: 4110.291 us/op
# Warmup Iteration   4: 3984.864 us/op
# Warmup Iteration   5: 4035.257 us/op
Iteration   1: 15558.334 us/op
Iteration   2: 28541.838 us/op
Iteration   3: 13151.153 us/op
Iteration   4: 11147.948 us/op
Iteration   5: 24234.917 us/op

# Run progress: 63.83% complete, ETA 00:17:00
# Fork: 2 of 2
# Warmup Iteration   1: 5261.115 us/op
# Warmup Iteration   2: 5017.198 us/op
# Warmup Iteration   3: 4190.685 us/op
# Warmup Iteration   4: 4050.148 us/op
# Warmup Iteration   5: 4206.945 us/op
Iteration   1: 16592.213 us/op
Iteration   2: 28166.714 us/op
Iteration   3: 12979.333 us/op
Iteration   4: 11106.054 us/op
Iteration   5: 24194.468 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  18567.297 ±(99.9%) 10566.897 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 2 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 2 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 1 
    [16250.000, 17500.000) = 1 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 0 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 2 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 2 

  Percentiles, us/op:
      p(0.0000) =  11106.054 us/op
     p(50.0000) =  16075.274 us/op
     p(90.0000) =  28504.326 us/op
     p(95.0000) =  28541.838 us/op
     p(99.0000) =  28541.838 us/op
     p(99.9000) =  28541.838 us/op
     p(99.9900) =  28541.838 us/op
     p(99.9990) =  28541.838 us/op
     p(99.9999) =  28541.838 us/op
    p(100.0000) =  28541.838 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.250)

# Run progress: 64.02% complete, ETA 00:16:55
# Fork: 1 of 2
# Warmup Iteration   1: 5119.802 us/op
# Warmup Iteration   2: 4727.014 us/op
# Warmup Iteration   3: 4881.994 us/op
# Warmup Iteration   4: 4036.284 us/op
# Warmup Iteration   5: 4056.653 us/op
Iteration   1: 15655.444 us/op
Iteration   2: 28097.339 us/op
Iteration   3: 12881.935 us/op
Iteration   4: 11061.416 us/op
Iteration   5: 24405.453 us/op

# Run progress: 64.20% complete, ETA 00:16:50
# Fork: 2 of 2
# Warmup Iteration   1: 5171.777 us/op
# Warmup Iteration   2: 5158.580 us/op
# Warmup Iteration   3: 4068.847 us/op
# Warmup Iteration   4: 3977.442 us/op
# Warmup Iteration   5: 3988.815 us/op
Iteration   1: 15243.402 us/op
Iteration   2: 27932.655 us/op
Iteration   3: 11475.652 us/op
Iteration   4: 10954.709 us/op
Iteration   5: 24382.764 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  18209.077 ±(99.9%) 10827.167 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 2 
    [11250.000, 12500.000) = 1 
    [12500.000, 13750.000) = 1 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 2 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 0 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 2 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 2 

  Percentiles, us/op:
      p(0.0000) =  10954.709 us/op
     p(50.0000) =  15449.423 us/op
     p(90.0000) =  28080.871 us/op
     p(95.0000) =  28097.339 us/op
     p(99.0000) =  28097.339 us/op
     p(99.9000) =  28097.339 us/op
     p(99.9900) =  28097.339 us/op
     p(99.9990) =  28097.339 us/op
     p(99.9999) =  28097.339 us/op
    p(100.0000) =  28097.339 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.375)

# Run progress: 64.39% complete, ETA 00:16:44
# Fork: 1 of 2
# Warmup Iteration   1: 5358.778 us/op
# Warmup Iteration   2: 4952.113 us/op
# Warmup Iteration   3: 4084.475 us/op
# Warmup Iteration   4: 3924.694 us/op
# Warmup Iteration   5: 3912.251 us/op
Iteration   1: 15098.575 us/op
Iteration   2: 28220.381 us/op
Iteration   3: 12188.166 us/op
Iteration   4: 11229.034 us/op
Iteration   5: 24387.091 us/op

# Run progress: 64.58% complete, ETA 00:16:39
# Fork: 2 of 2
# Warmup Iteration   1: 4986.485 us/op
# Warmup Iteration   2: 4794.266 us/op
# Warmup Iteration   3: 4418.025 us/op
# Warmup Iteration   4: 3926.195 us/op
# Warmup Iteration   5: 3849.001 us/op
Iteration   1: 15169.452 us/op
Iteration   2: 28702.628 us/op
Iteration   3: 13527.671 us/op
Iteration   4: 11435.553 us/op
Iteration   5: 24437.986 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  18439.654 ±(99.9%) 10790.461 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 1 
    [11250.000, 12500.000) = 2 
    [12500.000, 13750.000) = 1 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 2 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 0 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 2 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 2 

  Percentiles, us/op:
      p(0.0000) =  11229.034 us/op
     p(50.0000) =  15134.014 us/op
     p(90.0000) =  28654.403 us/op
     p(95.0000) =  28702.628 us/op
     p(99.0000) =  28702.628 us/op
     p(99.9000) =  28702.628 us/op
     p(99.9900) =  28702.628 us/op
     p(99.9990) =  28702.628 us/op
     p(99.9999) =  28702.628 us/op
    p(100.0000) =  28702.628 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.5)

# Run progress: 64.77% complete, ETA 00:16:34
# Fork: 1 of 2
# Warmup Iteration   1: 5012.107 us/op
# Warmup Iteration   2: 4811.804 us/op
# Warmup Iteration   3: 4456.415 us/op
# Warmup Iteration   4: 3986.633 us/op
# Warmup Iteration   5: 3974.900 us/op
Iteration   1: 15330.379 us/op
Iteration   2: 28489.114 us/op
Iteration   3: 11967.791 us/op
Iteration   4: 10972.290 us/op
Iteration   5: 24396.175 us/op

# Run progress: 64.96% complete, ETA 00:16:28
# Fork: 2 of 2
# Warmup Iteration   1: 5008.966 us/op
# Warmup Iteration   2: 5285.168 us/op
# Warmup Iteration   3: 4264.581 us/op
# Warmup Iteration   4: 4156.046 us/op
# Warmup Iteration   5: 4160.472 us/op
Iteration   1: 15310.143 us/op
Iteration   2: 28286.957 us/op
Iteration   3: 12530.779 us/op
Iteration   4: 11094.924 us/op
Iteration   5: 24217.843 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  18259.639 ±(99.9%) 10954.127 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 2 
    [11250.000, 12500.000) = 1 
    [12500.000, 13750.000) = 1 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 2 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 0 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 2 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 2 

  Percentiles, us/op:
      p(0.0000) =  10972.290 us/op
     p(50.0000) =  15320.261 us/op
     p(90.0000) =  28468.898 us/op
     p(95.0000) =  28489.114 us/op
     p(99.0000) =  28489.114 us/op
     p(99.9000) =  28489.114 us/op
     p(99.9900) =  28489.114 us/op
     p(99.9990) =  28489.114 us/op
     p(99.9999) =  28489.114 us/op
    p(100.0000) =  28489.114 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.625)

# Run progress: 65.15% complete, ETA 00:16:23
# Fork: 1 of 2
# Warmup Iteration   1: 5266.773 us/op
# Warmup Iteration   2: 5125.972 us/op
# Warmup Iteration   3: 4181.401 us/op
# Warmup Iteration   4: 4002.827 us/op
# Warmup Iteration   5: 3970.357 us/op
Iteration   1: 15578.663 us/op
Iteration   2: 29779.901 us/op
Iteration   3: 11856.868 us/op
Iteration   4: 10691.736 us/op
Iteration   5: 24425.597 us/op

# Run progress: 65.34% complete, ETA 00:16:18
# Fork: 2 of 2
# Warmup Iteration   1: 5342.077 us/op
# Warmup Iteration   2: 5016.212 us/op
# Warmup Iteration   3: 4129.097 us/op
# Warmup Iteration   4: 4213.145 us/op
# Warmup Iteration   5: 4078.750 us/op
Iteration   1: 15432.493 us/op
Iteration   2: 28498.176 us/op
Iteration   3: 12697.486 us/op
Iteration   4: 11026.574 us/op
Iteration   5: 24148.371 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  18413.586 ±(99.9%) 11344.047 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 2 
    [11250.000, 12500.000) = 1 
    [12500.000, 13750.000) = 1 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 2 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 0 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 2 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =  10691.736 us/op
     p(50.0000) =  15505.578 us/op
     p(90.0000) =  29651.729 us/op
     p(95.0000) =  29779.901 us/op
     p(99.0000) =  29779.901 us/op
     p(99.9000) =  29779.901 us/op
     p(99.9900) =  29779.901 us/op
     p(99.9990) =  29779.901 us/op
     p(99.9999) =  29779.901 us/op
    p(100.0000) =  29779.901 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.75)

# Run progress: 65.53% complete, ETA 00:16:12
# Fork: 1 of 2
# Warmup Iteration   1: 4954.019 us/op
# Warmup Iteration   2: 4808.613 us/op
# Warmup Iteration   3: 4375.601 us/op
# Warmup Iteration   4: 4017.049 us/op
# Warmup Iteration   5: 3984.694 us/op
Iteration   1: 14957.299 us/op
Iteration   2: 28040.300 us/op
Iteration   3: 12810.197 us/op
Iteration   4: 10966.227 us/op
Iteration   5: 24507.517 us/op

# Run progress: 65.72% complete, ETA 00:16:07
# Fork: 2 of 2
# Warmup Iteration   1: 5084.228 us/op
# Warmup Iteration   2: 4983.775 us/op
# Warmup Iteration   3: 4123.089 us/op
# Warmup Iteration   4: 3969.913 us/op
# Warmup Iteration   5: 3985.305 us/op
Iteration   1: 15173.929 us/op
Iteration   2: 28272.594 us/op
Iteration   3: 11702.610 us/op
Iteration   4: 10880.456 us/op
Iteration   5: 23866.853 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  18117.798 ±(99.9%) 10890.044 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 2 
    [11250.000, 12500.000) = 1 
    [12500.000, 13750.000) = 1 
    [13750.000, 15000.000) = 1 
    [15000.000, 16250.000) = 1 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 0 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 2 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 2 

  Percentiles, us/op:
      p(0.0000) =  10880.456 us/op
     p(50.0000) =  15065.614 us/op
     p(90.0000) =  28249.365 us/op
     p(95.0000) =  28272.594 us/op
     p(99.0000) =  28272.594 us/op
     p(99.9000) =  28272.594 us/op
     p(99.9900) =  28272.594 us/op
     p(99.9990) =  28272.594 us/op
     p(99.9999) =  28272.594 us/op
    p(100.0000) =  28272.594 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.875)

# Run progress: 65.91% complete, ETA 00:16:02
# Fork: 1 of 2
# Warmup Iteration   1: 5108.392 us/op
# Warmup Iteration   2: 5070.374 us/op
# Warmup Iteration   3: 4088.988 us/op
# Warmup Iteration   4: 3984.588 us/op
# Warmup Iteration   5: 4037.260 us/op
Iteration   1: 15568.195 us/op
Iteration   2: 28975.850 us/op
Iteration   3: 13703.995 us/op
Iteration   4: 11198.776 us/op
Iteration   5: 24301.434 us/op

# Run progress: 66.10% complete, ETA 00:15:57
# Fork: 2 of 2
# Warmup Iteration   1: 5129.169 us/op
# Warmup Iteration   2: 5013.560 us/op
# Warmup Iteration   3: 4172.732 us/op
# Warmup Iteration   4: 4029.293 us/op
# Warmup Iteration   5: 4058.716 us/op
Iteration   1: 15588.729 us/op
Iteration   2: 28855.359 us/op
Iteration   3: 13201.165 us/op
Iteration   4: 10957.328 us/op
Iteration   5: 24315.763 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  18666.659 ±(99.9%) 10838.246 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 2 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 2 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 2 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 0 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 2 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10957.328 us/op
     p(50.0000) =  15578.462 us/op
     p(90.0000) =  28963.801 us/op
     p(95.0000) =  28975.850 us/op
     p(99.0000) =  28975.850 us/op
     p(99.9000) =  28975.850 us/op
     p(99.9900) =  28975.850 us/op
     p(99.9990) =  28975.850 us/op
     p(99.9999) =  28975.850 us/op
    p(100.0000) =  28975.850 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 1)

# Run progress: 66.29% complete, ETA 00:15:51
# Fork: 1 of 2
# Warmup Iteration   1: 4967.117 us/op
# Warmup Iteration   2: 5423.999 us/op
# Warmup Iteration   3: 4095.704 us/op
# Warmup Iteration   4: 4050.482 us/op
# Warmup Iteration   5: 4011.336 us/op
Iteration   1: 15085.843 us/op
Iteration   2: 28447.960 us/op
Iteration   3: 11442.158 us/op
Iteration   4: 10804.614 us/op
Iteration   5: 24262.494 us/op

# Run progress: 66.48% complete, ETA 00:15:46
# Fork: 2 of 2
# Warmup Iteration   1: 5073.485 us/op
# Warmup Iteration   2: 4911.298 us/op
# Warmup Iteration   3: 4333.641 us/op
# Warmup Iteration   4: 3908.556 us/op
# Warmup Iteration   5: 4104.237 us/op
Iteration   1: 15169.048 us/op
Iteration   2: 28858.750 us/op
Iteration   3: 11385.122 us/op
Iteration   4: 10806.146 us/op
Iteration   5: 24218.542 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =  18048.068 ±(99.9%) 11400.156 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 2 
    [11250.000, 12500.000) = 2 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 2 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 0 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 2 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =  10804.614 us/op
     p(50.0000) =  15127.446 us/op
     p(90.0000) =  28817.671 us/op
     p(95.0000) =  28858.750 us/op
     p(99.0000) =  28858.750 us/op
     p(99.9000) =  28858.750 us/op
     p(99.9900) =  28858.750 us/op
     p(99.9990) =  28858.750 us/op
     p(99.9999) =  28858.750 us/op
    p(100.0000) =  28858.750 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.125)

# Run progress: 66.67% complete, ETA 00:15:41
# Fork: 1 of 2
# Warmup Iteration   1: 3247.187 us/op
# Warmup Iteration   2: 2639.706 us/op
# Warmup Iteration   3: 2013.624 us/op
# Warmup Iteration   4: 1770.247 us/op
# Warmup Iteration   5: 1685.940 us/op
Iteration   1: 15804.276 us/op
Iteration   2: 20659.844 us/op
Iteration   3: 12394.182 us/op
Iteration   4: 22155.524 us/op
Iteration   5: 12086.124 us/op

# Run progress: 66.86% complete, ETA 00:15:35
# Fork: 2 of 2
# Warmup Iteration   1: 3445.349 us/op
# Warmup Iteration   2: 2418.014 us/op
# Warmup Iteration   3: 2118.084 us/op
# Warmup Iteration   4: 1796.718 us/op
# Warmup Iteration   5: 1708.996 us/op
Iteration   1: 16160.639 us/op
Iteration   2: 20981.086 us/op
Iteration   3: 12039.995 us/op
Iteration   4: 21336.059 us/op
Iteration   5: 12327.513 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  16594.524 ±(99.9%) 6510.707 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 4 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 2 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 2 
    [21250.000, 22500.000) = 2 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  12039.995 us/op
     p(50.0000) =  15982.458 us/op
     p(90.0000) =  22073.578 us/op
     p(95.0000) =  22155.524 us/op
     p(99.0000) =  22155.524 us/op
     p(99.9000) =  22155.524 us/op
     p(99.9900) =  22155.524 us/op
     p(99.9990) =  22155.524 us/op
     p(99.9999) =  22155.524 us/op
    p(100.0000) =  22155.524 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.250)

# Run progress: 67.05% complete, ETA 00:15:30
# Fork: 1 of 2
# Warmup Iteration   1: 3242.204 us/op
# Warmup Iteration   2: 2000.157 us/op
# Warmup Iteration   3: 1980.509 us/op
# Warmup Iteration   4: 1465.085 us/op
# Warmup Iteration   5: 1728.808 us/op
Iteration   1: 12670.382 us/op
Iteration   2: 18319.811 us/op
Iteration   3: 9264.661 us/op
Iteration   4: 18675.521 us/op
Iteration   5: 8928.973 us/op

# Run progress: 67.23% complete, ETA 00:15:25
# Fork: 2 of 2
# Warmup Iteration   1: 3327.488 us/op
# Warmup Iteration   2: 2065.748 us/op
# Warmup Iteration   3: 1677.117 us/op
# Warmup Iteration   4: 1492.588 us/op
# Warmup Iteration   5: 1523.075 us/op
Iteration   1: 12305.448 us/op
Iteration   2: 18883.320 us/op
Iteration   3: 9139.308 us/op
Iteration   4: 18605.390 us/op
Iteration   5: 8810.541 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  13560.336 ±(99.9%) 6891.070 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 0 
    [ 7500.000,  8750.000) = 0 
    [ 8750.000, 10000.000) = 4 
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 1 
    [12500.000, 13750.000) = 1 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 3 

  Percentiles, us/op:
      p(0.0000) =   8810.541 us/op
     p(50.0000) =  12487.915 us/op
     p(90.0000) =  18862.540 us/op
     p(95.0000) =  18883.320 us/op
     p(99.0000) =  18883.320 us/op
     p(99.9000) =  18883.320 us/op
     p(99.9900) =  18883.320 us/op
     p(99.9990) =  18883.320 us/op
     p(99.9999) =  18883.320 us/op
    p(100.0000) =  18883.320 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.375)

# Run progress: 67.42% complete, ETA 00:15:19
# Fork: 1 of 2
# Warmup Iteration   1: 3201.457 us/op
# Warmup Iteration   2: 1655.663 us/op
# Warmup Iteration   3: 1731.268 us/op
# Warmup Iteration   4: 1377.532 us/op
# Warmup Iteration   5: 1331.236 us/op
Iteration   1: 14583.752 us/op
Iteration   2: 20837.600 us/op
Iteration   3: 10559.841 us/op
Iteration   4: 18513.776 us/op
Iteration   5: 10361.214 us/op

# Run progress: 67.61% complete, ETA 00:15:14
# Fork: 2 of 2
# Warmup Iteration   1: 2641.068 us/op
# Warmup Iteration   2: 1810.684 us/op
# Warmup Iteration   3: 1486.249 us/op
# Warmup Iteration   4: 1296.963 us/op
# Warmup Iteration   5: 1292.062 us/op
Iteration   1: 14176.279 us/op
Iteration   2: 20917.473 us/op
Iteration   3: 10694.294 us/op
Iteration   4: 18450.113 us/op
Iteration   5: 10096.272 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  14919.061 ±(99.9%) 6722.605 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 4 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 2 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 2 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 2 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10096.272 us/op
     p(50.0000) =  14380.016 us/op
     p(90.0000) =  20909.486 us/op
     p(95.0000) =  20917.473 us/op
     p(99.0000) =  20917.473 us/op
     p(99.9000) =  20917.473 us/op
     p(99.9900) =  20917.473 us/op
     p(99.9990) =  20917.473 us/op
     p(99.9999) =  20917.473 us/op
    p(100.0000) =  20917.473 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.5)

# Run progress: 67.80% complete, ETA 00:15:08
# Fork: 1 of 2
# Warmup Iteration   1: 3256.493 us/op
# Warmup Iteration   2: 1820.090 us/op
# Warmup Iteration   3: 1744.984 us/op
# Warmup Iteration   4: 1448.204 us/op
# Warmup Iteration   5: 1407.510 us/op
Iteration   1: 11835.423 us/op
Iteration   2: 15048.411 us/op
Iteration   3: 8213.970 us/op
Iteration   4: 7506.353 us/op
Iteration   5: 12857.613 us/op

# Run progress: 67.99% complete, ETA 00:15:03
# Fork: 2 of 2
# Warmup Iteration   1: 2899.408 us/op
# Warmup Iteration   2: 1838.950 us/op
# Warmup Iteration   3: 1750.221 us/op
# Warmup Iteration   4: 1369.490 us/op
# Warmup Iteration   5: 1359.114 us/op
Iteration   1: 11888.616 us/op
Iteration   2: 15584.347 us/op
Iteration   3: 7830.490 us/op
Iteration   4: 7362.929 us/op
Iteration   5: 13220.652 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  11134.880 ±(99.9%) 4789.806 us/op

  Histogram, us/op:
    [ 7000.000,  7500.000) = 1 
    [ 7500.000,  8000.000) = 2 
    [ 8000.000,  8500.000) = 1 
    [ 8500.000,  9000.000) = 0 
    [ 9000.000,  9500.000) = 0 
    [ 9500.000, 10000.000) = 0 
    [10000.000, 10500.000) = 0 
    [10500.000, 11000.000) = 0 
    [11000.000, 11500.000) = 0 
    [11500.000, 12000.000) = 2 
    [12000.000, 12500.000) = 0 
    [12500.000, 13000.000) = 1 
    [13000.000, 13500.000) = 1 
    [13500.000, 14000.000) = 0 
    [14000.000, 14500.000) = 0 
    [14500.000, 15000.000) = 0 
    [15000.000, 15500.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   7362.929 us/op
     p(50.0000) =  11862.020 us/op
     p(90.0000) =  15530.753 us/op
     p(95.0000) =  15584.347 us/op
     p(99.0000) =  15584.347 us/op
     p(99.9000) =  15584.347 us/op
     p(99.9900) =  15584.347 us/op
     p(99.9990) =  15584.347 us/op
     p(99.9999) =  15584.347 us/op
    p(100.0000) =  15584.347 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.625)

# Run progress: 68.18% complete, ETA 00:14:58
# Fork: 1 of 2
# Warmup Iteration   1: 2786.296 us/op
# Warmup Iteration   2: 1473.012 us/op
# Warmup Iteration   3: 1610.447 us/op
# Warmup Iteration   4: 1196.222 us/op
# Warmup Iteration   5: 1276.384 us/op
Iteration   1: 12662.575 us/op
Iteration   2: 16753.803 us/op
Iteration   3: 8866.068 us/op
Iteration   4: 8487.494 us/op
Iteration   5: 9598.347 us/op

# Run progress: 68.37% complete, ETA 00:14:52
# Fork: 2 of 2
# Warmup Iteration   1: 2693.776 us/op
# Warmup Iteration   2: 1822.985 us/op
# Warmup Iteration   3: 1559.790 us/op
# Warmup Iteration   4: 1210.041 us/op
# Warmup Iteration   5: 1190.261 us/op
Iteration   1: 12830.653 us/op
Iteration   2: 16939.456 us/op
Iteration   3: 8527.592 us/op
Iteration   4: 8384.738 us/op
Iteration   5: 9419.201 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  11246.993 ±(99.9%) 5093.937 us/op

  Histogram, us/op:
    [ 8000.000,  8500.000) = 2 
    [ 8500.000,  9000.000) = 2 
    [ 9000.000,  9500.000) = 1 
    [ 9500.000, 10000.000) = 1 
    [10000.000, 10500.000) = 0 
    [10500.000, 11000.000) = 0 
    [11000.000, 11500.000) = 0 
    [11500.000, 12000.000) = 0 
    [12000.000, 12500.000) = 0 
    [12500.000, 13000.000) = 2 
    [13000.000, 13500.000) = 0 
    [13500.000, 14000.000) = 0 
    [14000.000, 14500.000) = 0 
    [14500.000, 15000.000) = 0 
    [15000.000, 15500.000) = 0 
    [15500.000, 16000.000) = 0 
    [16000.000, 16500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8384.738 us/op
     p(50.0000) =   9508.774 us/op
     p(90.0000) =  16920.891 us/op
     p(95.0000) =  16939.456 us/op
     p(99.0000) =  16939.456 us/op
     p(99.9000) =  16939.456 us/op
     p(99.9900) =  16939.456 us/op
     p(99.9990) =  16939.456 us/op
     p(99.9999) =  16939.456 us/op
    p(100.0000) =  16939.456 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.75)

# Run progress: 68.56% complete, ETA 00:14:47
# Fork: 1 of 2
# Warmup Iteration   1: 2837.602 us/op
# Warmup Iteration   2: 1607.975 us/op
# Warmup Iteration   3: 1591.006 us/op
# Warmup Iteration   4: 1458.335 us/op
# Warmup Iteration   5: 1209.987 us/op
Iteration   1: 14432.692 us/op
Iteration   2: 18944.089 us/op
Iteration   3: 9606.244 us/op
Iteration   4: 9556.689 us/op
Iteration   5: 10627.317 us/op

# Run progress: 68.75% complete, ETA 00:14:42
# Fork: 2 of 2
# Warmup Iteration   1: 2644.883 us/op
# Warmup Iteration   2: 1601.830 us/op
# Warmup Iteration   3: 1486.719 us/op
# Warmup Iteration   4: 1549.396 us/op
# Warmup Iteration   5: 1206.931 us/op
Iteration   1: 14360.298 us/op
Iteration   2: 18505.238 us/op
Iteration   3: 9531.994 us/op
Iteration   4: 9236.802 us/op
Iteration   5: 10395.285 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  12519.665 ±(99.9%) 5728.512 us/op

  Histogram, us/op:
    [ 9000.000, 10000.000) = 4 
    [10000.000, 11000.000) = 2 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 2 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 0 
    [17000.000, 18000.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   9236.802 us/op
     p(50.0000) =  10511.301 us/op
     p(90.0000) =  18900.204 us/op
     p(95.0000) =  18944.089 us/op
     p(99.0000) =  18944.089 us/op
     p(99.9000) =  18944.089 us/op
     p(99.9900) =  18944.089 us/op
     p(99.9990) =  18944.089 us/op
     p(99.9999) =  18944.089 us/op
    p(100.0000) =  18944.089 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.875)

# Run progress: 68.94% complete, ETA 00:14:36
# Fork: 1 of 2
# Warmup Iteration   1: 2685.497 us/op
# Warmup Iteration   2: 1741.672 us/op
# Warmup Iteration   3: 1581.946 us/op
# Warmup Iteration   4: 1601.541 us/op
# Warmup Iteration   5: 1299.553 us/op
Iteration   1: 12368.048 us/op
Iteration   2: 17565.800 us/op
Iteration   3: 7849.557 us/op
Iteration   4: 7564.018 us/op
Iteration   5: 7684.589 us/op

# Run progress: 69.13% complete, ETA 00:14:31
# Fork: 2 of 2
# Warmup Iteration   1: 2971.099 us/op
# Warmup Iteration   2: 1648.929 us/op
# Warmup Iteration   3: 1670.360 us/op
# Warmup Iteration   4: 1629.363 us/op
# Warmup Iteration   5: 1303.134 us/op
Iteration   1: 11767.835 us/op
Iteration   2: 17441.303 us/op
Iteration   3: 8010.698 us/op
Iteration   4: 7568.274 us/op
Iteration   5: 7709.718 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  10552.984 ±(99.9%) 6158.225 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 0 
    [ 7500.000,  8750.000) = 6 
    [ 8750.000, 10000.000) = 0 
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 2 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 1 
    [17500.000, 18750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   7564.018 us/op
     p(50.0000) =   7930.128 us/op
     p(90.0000) =  17553.350 us/op
     p(95.0000) =  17565.800 us/op
     p(99.0000) =  17565.800 us/op
     p(99.9000) =  17565.800 us/op
     p(99.9900) =  17565.800 us/op
     p(99.9990) =  17565.800 us/op
     p(99.9999) =  17565.800 us/op
    p(100.0000) =  17565.800 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 1)

# Run progress: 69.32% complete, ETA 00:14:26
# Fork: 1 of 2
# Warmup Iteration   1: 2816.903 us/op
# Warmup Iteration   2: 1747.992 us/op
# Warmup Iteration   3: 1564.361 us/op
# Warmup Iteration   4: 1834.695 us/op
# Warmup Iteration   5: 1342.881 us/op
Iteration   1: 11696.118 us/op
Iteration   2: 17369.874 us/op
Iteration   3: 8205.484 us/op
Iteration   4: 7794.891 us/op
Iteration   5: 9842.606 us/op

# Run progress: 69.51% complete, ETA 00:14:20
# Fork: 2 of 2
# Warmup Iteration   1: 2777.574 us/op
# Warmup Iteration   2: 1876.928 us/op
# Warmup Iteration   3: 1647.421 us/op
# Warmup Iteration   4: 1600.857 us/op
# Warmup Iteration   5: 1342.116 us/op
Iteration   1: 12063.744 us/op
Iteration   2: 17909.854 us/op
Iteration   3: 8192.076 us/op
Iteration   4: 7817.357 us/op
Iteration   5: 10019.130 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  11091.113 ±(99.9%) 5707.177 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 0 
    [ 7500.000,  8750.000) = 4 
    [ 8750.000, 10000.000) = 1 
    [10000.000, 11250.000) = 1 
    [11250.000, 12500.000) = 2 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 1 
    [17500.000, 18750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   7794.891 us/op
     p(50.0000) =   9930.868 us/op
     p(90.0000) =  17855.856 us/op
     p(95.0000) =  17909.854 us/op
     p(99.0000) =  17909.854 us/op
     p(99.9000) =  17909.854 us/op
     p(99.9900) =  17909.854 us/op
     p(99.9990) =  17909.854 us/op
     p(99.9999) =  17909.854 us/op
    p(100.0000) =  17909.854 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.125)

# Run progress: 69.70% complete, ETA 00:14:15
# Fork: 1 of 2
# Warmup Iteration   1: 3204.974 us/op
# Warmup Iteration   2: 2591.921 us/op
# Warmup Iteration   3: 2292.666 us/op
# Warmup Iteration   4: 1956.155 us/op
# Warmup Iteration   5: 2040.770 us/op
Iteration   1: 17025.829 us/op
Iteration   2: 20744.535 us/op
Iteration   3: 12242.196 us/op
Iteration   4: 21354.880 us/op
Iteration   5: 11682.423 us/op

# Run progress: 69.89% complete, ETA 00:14:10
# Fork: 2 of 2
# Warmup Iteration   1: 3490.183 us/op
# Warmup Iteration   2: 2477.096 us/op
# Warmup Iteration   3: 2260.425 us/op
# Warmup Iteration   4: 1972.393 us/op
# Warmup Iteration   5: 1896.684 us/op
Iteration   1: 17763.793 us/op
Iteration   2: 20374.445 us/op
Iteration   3: 12228.107 us/op
Iteration   4: 21618.480 us/op
Iteration   5: 11876.151 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  16691.084 ±(99.9%) 6478.712 us/op

  Histogram, us/op:
    [11000.000, 12000.000) = 2 
    [12000.000, 13000.000) = 2 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 0 
    [17000.000, 18000.000) = 2 
    [18000.000, 19000.000) = 0 
    [19000.000, 20000.000) = 0 
    [20000.000, 21000.000) = 2 

  Percentiles, us/op:
      p(0.0000) =  11682.423 us/op
     p(50.0000) =  17394.811 us/op
     p(90.0000) =  21592.120 us/op
     p(95.0000) =  21618.480 us/op
     p(99.0000) =  21618.480 us/op
     p(99.9000) =  21618.480 us/op
     p(99.9900) =  21618.480 us/op
     p(99.9990) =  21618.480 us/op
     p(99.9999) =  21618.480 us/op
    p(100.0000) =  21618.480 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.250)

# Run progress: 70.08% complete, ETA 00:14:04
# Fork: 1 of 2
# Warmup Iteration   1: 2843.040 us/op
# Warmup Iteration   2: 2124.081 us/op
# Warmup Iteration   3: 1575.700 us/op
# Warmup Iteration   4: 1459.947 us/op
# Warmup Iteration   5: 1511.106 us/op
Iteration   1: 12613.514 us/op
Iteration   2: 18925.581 us/op
Iteration   3: 9241.399 us/op
Iteration   4: 18806.172 us/op
Iteration   5: 9039.870 us/op

# Run progress: 70.27% complete, ETA 00:13:59
# Fork: 2 of 2
# Warmup Iteration   1: 3666.524 us/op
# Warmup Iteration   2: 2250.344 us/op
# Warmup Iteration   3: 1588.683 us/op
# Warmup Iteration   4: 1493.543 us/op
# Warmup Iteration   5: 1553.301 us/op
Iteration   1: 12438.752 us/op
Iteration   2: 18845.072 us/op
Iteration   3: 9490.611 us/op
Iteration   4: 18670.215 us/op
Iteration   5: 9064.983 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  13713.617 ±(99.9%) 6912.091 us/op

  Histogram, us/op:
    [ 9000.000, 10000.000) = 4 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 2 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 0 
    [17000.000, 18000.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   9039.870 us/op
     p(50.0000) =  12526.133 us/op
     p(90.0000) =  18917.530 us/op
     p(95.0000) =  18925.581 us/op
     p(99.0000) =  18925.581 us/op
     p(99.9000) =  18925.581 us/op
     p(99.9900) =  18925.581 us/op
     p(99.9990) =  18925.581 us/op
     p(99.9999) =  18925.581 us/op
    p(100.0000) =  18925.581 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.375)

# Run progress: 70.45% complete, ETA 00:13:54
# Fork: 1 of 2
# Warmup Iteration   1: 3167.458 us/op
# Warmup Iteration   2: 1679.372 us/op
# Warmup Iteration   3: 1646.538 us/op
# Warmup Iteration   4: 1330.824 us/op
# Warmup Iteration   5: 1247.371 us/op
Iteration   1: 14159.471 us/op
Iteration   2: 21034.541 us/op
Iteration   3: 10343.200 us/op
Iteration   4: 18569.344 us/op
Iteration   5: 10227.542 us/op

# Run progress: 70.64% complete, ETA 00:13:48
# Fork: 2 of 2
# Warmup Iteration   1: 2583.028 us/op
# Warmup Iteration   2: 1696.093 us/op
# Warmup Iteration   3: 1618.992 us/op
# Warmup Iteration   4: 1333.049 us/op
# Warmup Iteration   5: 1265.938 us/op
Iteration   1: 14421.499 us/op
Iteration   2: 21166.855 us/op
Iteration   3: 10203.459 us/op
Iteration   4: 18564.323 us/op
Iteration   5: 10067.891 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  14875.813 ±(99.9%) 6993.363 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 4 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 2 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 2 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 2 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10067.891 us/op
     p(50.0000) =  14290.485 us/op
     p(90.0000) =  21153.624 us/op
     p(95.0000) =  21166.855 us/op
     p(99.0000) =  21166.855 us/op
     p(99.9000) =  21166.855 us/op
     p(99.9900) =  21166.855 us/op
     p(99.9990) =  21166.855 us/op
     p(99.9999) =  21166.855 us/op
    p(100.0000) =  21166.855 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.5)

# Run progress: 70.83% complete, ETA 00:13:43
# Fork: 1 of 2
# Warmup Iteration   1: 2687.566 us/op
# Warmup Iteration   2: 1825.455 us/op
# Warmup Iteration   3: 1854.207 us/op
# Warmup Iteration   4: 1454.772 us/op
# Warmup Iteration   5: 1574.495 us/op
Iteration   1: 11921.123 us/op
Iteration   2: 15689.704 us/op
Iteration   3: 8265.569 us/op
Iteration   4: 7612.779 us/op
Iteration   5: 12850.797 us/op

# Run progress: 71.02% complete, ETA 00:13:38
# Fork: 2 of 2
# Warmup Iteration   1: 2845.772 us/op
# Warmup Iteration   2: 1797.213 us/op
# Warmup Iteration   3: 1797.318 us/op
# Warmup Iteration   4: 1490.923 us/op
# Warmup Iteration   5: 1442.463 us/op
Iteration   1: 12032.242 us/op
Iteration   2: 15122.798 us/op
Iteration   3: 8194.109 us/op
Iteration   4: 7678.329 us/op
Iteration   5: 12756.098 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  11212.355 ±(99.9%) 4641.292 us/op

  Histogram, us/op:
    [ 7000.000,  7500.000) = 0 
    [ 7500.000,  8000.000) = 2 
    [ 8000.000,  8500.000) = 2 
    [ 8500.000,  9000.000) = 0 
    [ 9000.000,  9500.000) = 0 
    [ 9500.000, 10000.000) = 0 
    [10000.000, 10500.000) = 0 
    [10500.000, 11000.000) = 0 
    [11000.000, 11500.000) = 0 
    [11500.000, 12000.000) = 1 
    [12000.000, 12500.000) = 1 
    [12500.000, 13000.000) = 2 
    [13000.000, 13500.000) = 0 
    [13500.000, 14000.000) = 0 
    [14000.000, 14500.000) = 0 
    [14500.000, 15000.000) = 0 
    [15000.000, 15500.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   7612.779 us/op
     p(50.0000) =  11976.682 us/op
     p(90.0000) =  15633.013 us/op
     p(95.0000) =  15689.704 us/op
     p(99.0000) =  15689.704 us/op
     p(99.9000) =  15689.704 us/op
     p(99.9900) =  15689.704 us/op
     p(99.9990) =  15689.704 us/op
     p(99.9999) =  15689.704 us/op
    p(100.0000) =  15689.704 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.625)

# Run progress: 71.21% complete, ETA 00:13:32
# Fork: 1 of 2
# Warmup Iteration   1: 2576.938 us/op
# Warmup Iteration   2: 2003.671 us/op
# Warmup Iteration   3: 1268.191 us/op
# Warmup Iteration   4: 1220.925 us/op
# Warmup Iteration   5: 1198.916 us/op
Iteration   1: 14261.053 us/op
Iteration   2: 17571.065 us/op
Iteration   3: 8616.991 us/op
Iteration   4: 8347.572 us/op
Iteration   5: 9618.323 us/op

# Run progress: 71.40% complete, ETA 00:13:27
# Fork: 2 of 2
# Warmup Iteration   1: 2609.703 us/op
# Warmup Iteration   2: 1542.218 us/op
# Warmup Iteration   3: 1510.677 us/op
# Warmup Iteration   4: 1436.655 us/op
# Warmup Iteration   5: 1171.948 us/op
Iteration   1: 13029.731 us/op
Iteration   2: 17348.874 us/op
Iteration   3: 8675.115 us/op
Iteration   4: 8602.141 us/op
Iteration   5: 9631.827 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  11570.269 ±(99.9%) 5580.898 us/op

  Histogram, us/op:
    [ 8000.000,  9000.000) = 4 
    [ 9000.000, 10000.000) = 2 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 1 
    [14000.000, 15000.000) = 1 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8347.572 us/op
     p(50.0000) =   9625.075 us/op
     p(90.0000) =  17548.846 us/op
     p(95.0000) =  17571.065 us/op
     p(99.0000) =  17571.065 us/op
     p(99.9000) =  17571.065 us/op
     p(99.9900) =  17571.065 us/op
     p(99.9990) =  17571.065 us/op
     p(99.9999) =  17571.065 us/op
    p(100.0000) =  17571.065 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.75)

# Run progress: 71.59% complete, ETA 00:13:21
# Fork: 1 of 2
# Warmup Iteration   1: 2714.421 us/op
# Warmup Iteration   2: 1665.172 us/op
# Warmup Iteration   3: 1679.329 us/op
# Warmup Iteration   4: 1241.500 us/op
# Warmup Iteration   5: 1200.130 us/op
Iteration   1: 13812.542 us/op
Iteration   2: 17626.409 us/op
Iteration   3: 9410.654 us/op
Iteration   4: 9319.916 us/op
Iteration   5: 10477.465 us/op

# Run progress: 71.78% complete, ETA 00:13:16
# Fork: 2 of 2
# Warmup Iteration   1: 2772.308 us/op
# Warmup Iteration   2: 1636.986 us/op
# Warmup Iteration   3: 1462.771 us/op
# Warmup Iteration   4: 1505.321 us/op
# Warmup Iteration   5: 1229.350 us/op
Iteration   1: 13677.791 us/op
Iteration   2: 17413.359 us/op
Iteration   3: 9610.056 us/op
Iteration   4: 9242.360 us/op
Iteration   5: 10494.139 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  12108.469 ±(99.9%) 5007.504 us/op

  Histogram, us/op:
    [ 9000.000,  9500.000) = 3 
    [ 9500.000, 10000.000) = 1 
    [10000.000, 10500.000) = 2 
    [10500.000, 11000.000) = 0 
    [11000.000, 11500.000) = 0 
    [11500.000, 12000.000) = 0 
    [12000.000, 12500.000) = 0 
    [12500.000, 13000.000) = 0 
    [13000.000, 13500.000) = 0 
    [13500.000, 14000.000) = 2 
    [14000.000, 14500.000) = 0 
    [14500.000, 15000.000) = 0 
    [15000.000, 15500.000) = 0 
    [15500.000, 16000.000) = 0 
    [16000.000, 16500.000) = 0 
    [16500.000, 17000.000) = 0 
    [17000.000, 17500.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   9242.360 us/op
     p(50.0000) =  10485.802 us/op
     p(90.0000) =  17605.104 us/op
     p(95.0000) =  17626.409 us/op
     p(99.0000) =  17626.409 us/op
     p(99.9000) =  17626.409 us/op
     p(99.9900) =  17626.409 us/op
     p(99.9990) =  17626.409 us/op
     p(99.9999) =  17626.409 us/op
    p(100.0000) =  17626.409 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.875)

# Run progress: 71.97% complete, ETA 00:13:11
# Fork: 1 of 2
# Warmup Iteration   1: 2768.607 us/op
# Warmup Iteration   2: 1644.571 us/op
# Warmup Iteration   3: 1562.179 us/op
# Warmup Iteration   4: 1552.576 us/op
# Warmup Iteration   5: 1296.433 us/op
Iteration   1: 12619.995 us/op
Iteration   2: 17755.813 us/op
Iteration   3: 7991.323 us/op
Iteration   4: 7589.800 us/op
Iteration   5: 7646.594 us/op

# Run progress: 72.16% complete, ETA 00:13:05
# Fork: 2 of 2
# Warmup Iteration   1: 3043.304 us/op
# Warmup Iteration   2: 1704.136 us/op
# Warmup Iteration   3: 1753.300 us/op
# Warmup Iteration   4: 1284.815 us/op
# Warmup Iteration   5: 1257.713 us/op
Iteration   1: 12403.981 us/op
Iteration   2: 17078.375 us/op
Iteration   3: 7965.910 us/op
Iteration   4: 7708.765 us/op
Iteration   5: 7654.581 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  10641.514 ±(99.9%) 6152.654 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 0 
    [ 7500.000,  8750.000) = 6 
    [ 8750.000, 10000.000) = 0 
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 1 
    [12500.000, 13750.000) = 1 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 1 
    [17500.000, 18750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   7589.800 us/op
     p(50.0000) =   7978.617 us/op
     p(90.0000) =  17688.069 us/op
     p(95.0000) =  17755.813 us/op
     p(99.0000) =  17755.813 us/op
     p(99.9000) =  17755.813 us/op
     p(99.9900) =  17755.813 us/op
     p(99.9990) =  17755.813 us/op
     p(99.9999) =  17755.813 us/op
    p(100.0000) =  17755.813 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 1)

# Run progress: 72.35% complete, ETA 00:13:00
# Fork: 1 of 2
# Warmup Iteration   1: 2843.760 us/op
# Warmup Iteration   2: 1813.208 us/op
# Warmup Iteration   3: 1679.166 us/op
# Warmup Iteration   4: 1615.664 us/op
# Warmup Iteration   5: 1423.727 us/op
Iteration   1: 12058.377 us/op
Iteration   2: 16947.287 us/op
Iteration   3: 8254.016 us/op
Iteration   4: 7793.596 us/op
Iteration   5: 9619.550 us/op

# Run progress: 72.54% complete, ETA 00:12:55
# Fork: 2 of 2
# Warmup Iteration   1: 2679.203 us/op
# Warmup Iteration   2: 1716.692 us/op
# Warmup Iteration   3: 1572.494 us/op
# Warmup Iteration   4: 1570.528 us/op
# Warmup Iteration   5: 1338.351 us/op
Iteration   1: 12195.813 us/op
Iteration   2: 18090.706 us/op
Iteration   3: 8281.235 us/op
Iteration   4: 8035.507 us/op
Iteration   5: 9284.586 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  11056.067 ±(99.9%) 5679.628 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 0 
    [ 7500.000,  8750.000) = 4 
    [ 8750.000, 10000.000) = 2 
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 2 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 1 
    [17500.000, 18750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   7793.596 us/op
     p(50.0000) =   9452.068 us/op
     p(90.0000) =  17976.364 us/op
     p(95.0000) =  18090.706 us/op
     p(99.0000) =  18090.706 us/op
     p(99.9000) =  18090.706 us/op
     p(99.9900) =  18090.706 us/op
     p(99.9990) =  18090.706 us/op
     p(99.9999) =  18090.706 us/op
    p(100.0000) =  18090.706 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.125)

# Run progress: 72.73% complete, ETA 00:12:49
# Fork: 1 of 2
# Warmup Iteration   1: 3123.211 us/op
# Warmup Iteration   2: 2466.030 us/op
# Warmup Iteration   3: 2133.116 us/op
# Warmup Iteration   4: 1822.304 us/op
# Warmup Iteration   5: 1705.109 us/op
Iteration   1: 16369.591 us/op
Iteration   2: 20597.530 us/op
Iteration   3: 12632.388 us/op
Iteration   4: 21336.566 us/op
Iteration   5: 12006.776 us/op

# Run progress: 72.92% complete, ETA 00:12:44
# Fork: 2 of 2
# Warmup Iteration   1: 3128.241 us/op
# Warmup Iteration   2: 2457.225 us/op
# Warmup Iteration   3: 2002.329 us/op
# Warmup Iteration   4: 1744.470 us/op
# Warmup Iteration   5: 1679.684 us/op
Iteration   1: 15922.909 us/op
Iteration   2: 20842.400 us/op
Iteration   3: 12149.735 us/op
Iteration   4: 21481.245 us/op
Iteration   5: 12071.479 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  16541.062 ±(99.9%) 6331.950 us/op

  Histogram, us/op:
    [12000.000, 13000.000) = 4 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 1 
    [16000.000, 17000.000) = 1 
    [17000.000, 18000.000) = 0 
    [18000.000, 19000.000) = 0 
    [19000.000, 20000.000) = 0 
    [20000.000, 21000.000) = 2 

  Percentiles, us/op:
      p(0.0000) =  12006.776 us/op
     p(50.0000) =  16146.250 us/op
     p(90.0000) =  21466.777 us/op
     p(95.0000) =  21481.245 us/op
     p(99.0000) =  21481.245 us/op
     p(99.9000) =  21481.245 us/op
     p(99.9900) =  21481.245 us/op
     p(99.9990) =  21481.245 us/op
     p(99.9999) =  21481.245 us/op
    p(100.0000) =  21481.245 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.250)

# Run progress: 73.11% complete, ETA 00:12:39
# Fork: 1 of 2
# Warmup Iteration   1: 3222.946 us/op
# Warmup Iteration   2: 2056.531 us/op
# Warmup Iteration   3: 1599.097 us/op
# Warmup Iteration   4: 1469.962 us/op
# Warmup Iteration   5: 1529.435 us/op
Iteration   1: 12683.158 us/op
Iteration   2: 18548.032 us/op
Iteration   3: 9276.451 us/op
Iteration   4: 18679.285 us/op
Iteration   5: 8637.039 us/op

# Run progress: 73.30% complete, ETA 00:12:33
# Fork: 2 of 2
# Warmup Iteration   1: 3039.267 us/op
# Warmup Iteration   2: 2019.737 us/op
# Warmup Iteration   3: 1585.523 us/op
# Warmup Iteration   4: 1514.440 us/op
# Warmup Iteration   5: 1536.399 us/op
Iteration   1: 12581.557 us/op
Iteration   2: 18648.357 us/op
Iteration   3: 9143.582 us/op
Iteration   4: 18544.259 us/op
Iteration   5: 8816.487 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  13555.821 ±(99.9%) 6912.379 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 0 
    [ 7500.000,  8750.000) = 1 
    [ 8750.000, 10000.000) = 3 
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 2 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 4 

  Percentiles, us/op:
      p(0.0000) =   8637.039 us/op
     p(50.0000) =  12632.358 us/op
     p(90.0000) =  18676.192 us/op
     p(95.0000) =  18679.285 us/op
     p(99.0000) =  18679.285 us/op
     p(99.9000) =  18679.285 us/op
     p(99.9900) =  18679.285 us/op
     p(99.9990) =  18679.285 us/op
     p(99.9999) =  18679.285 us/op
    p(100.0000) =  18679.285 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.375)

# Run progress: 73.48% complete, ETA 00:12:28
# Fork: 1 of 2
# Warmup Iteration   1: 2745.088 us/op
# Warmup Iteration   2: 1613.680 us/op
# Warmup Iteration   3: 1672.130 us/op
# Warmup Iteration   4: 1380.043 us/op
# Warmup Iteration   5: 1271.837 us/op
Iteration   1: 14167.360 us/op
Iteration   2: 20684.079 us/op
Iteration   3: 10613.708 us/op
Iteration   4: 18563.361 us/op
Iteration   5: 10532.930 us/op

# Run progress: 73.67% complete, ETA 00:12:23
# Fork: 2 of 2
# Warmup Iteration   1: 2703.649 us/op
# Warmup Iteration   2: 1966.140 us/op
# Warmup Iteration   3: 1283.631 us/op
# Warmup Iteration   4: 1284.599 us/op
# Warmup Iteration   5: 1278.487 us/op
Iteration   1: 14235.998 us/op
Iteration   2: 20913.437 us/op
Iteration   3: 10337.975 us/op
Iteration   4: 18299.127 us/op
Iteration   5: 10279.446 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  14862.742 ±(99.9%) 6669.716 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 4 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 2 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 2 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 2 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10279.446 us/op
     p(50.0000) =  14201.679 us/op
     p(90.0000) =  20890.501 us/op
     p(95.0000) =  20913.437 us/op
     p(99.0000) =  20913.437 us/op
     p(99.9000) =  20913.437 us/op
     p(99.9900) =  20913.437 us/op
     p(99.9990) =  20913.437 us/op
     p(99.9999) =  20913.437 us/op
    p(100.0000) =  20913.437 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.5)

# Run progress: 73.86% complete, ETA 00:12:17
# Fork: 1 of 2
# Warmup Iteration   1: 2970.806 us/op
# Warmup Iteration   2: 1988.488 us/op
# Warmup Iteration   3: 1490.957 us/op
# Warmup Iteration   4: 1376.132 us/op
# Warmup Iteration   5: 1352.218 us/op
Iteration   1: 11815.798 us/op
Iteration   2: 15899.894 us/op
Iteration   3: 7884.167 us/op
Iteration   4: 7270.319 us/op
Iteration   5: 8606.783 us/op

# Run progress: 74.05% complete, ETA 00:12:12
# Fork: 2 of 2
# Warmup Iteration   1: 2718.006 us/op
# Warmup Iteration   2: 1851.707 us/op
# Warmup Iteration   3: 1752.105 us/op
# Warmup Iteration   4: 1370.305 us/op
# Warmup Iteration   5: 1357.910 us/op
Iteration   1: 11880.651 us/op
Iteration   2: 15305.263 us/op
Iteration   3: 7906.014 us/op
Iteration   4: 7620.089 us/op
Iteration   5: 8750.920 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  10293.990 ±(99.9%) 4896.441 us/op

  Histogram, us/op:
    [ 7000.000,  7500.000) = 1 
    [ 7500.000,  8000.000) = 3 
    [ 8000.000,  8500.000) = 0 
    [ 8500.000,  9000.000) = 2 
    [ 9000.000,  9500.000) = 0 
    [ 9500.000, 10000.000) = 0 
    [10000.000, 10500.000) = 0 
    [10500.000, 11000.000) = 0 
    [11000.000, 11500.000) = 0 
    [11500.000, 12000.000) = 2 
    [12000.000, 12500.000) = 0 
    [12500.000, 13000.000) = 0 
    [13000.000, 13500.000) = 0 
    [13500.000, 14000.000) = 0 
    [14000.000, 14500.000) = 0 
    [14500.000, 15000.000) = 0 
    [15000.000, 15500.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   7270.319 us/op
     p(50.0000) =   8678.852 us/op
     p(90.0000) =  15840.431 us/op
     p(95.0000) =  15899.894 us/op
     p(99.0000) =  15899.894 us/op
     p(99.9000) =  15899.894 us/op
     p(99.9900) =  15899.894 us/op
     p(99.9990) =  15899.894 us/op
     p(99.9999) =  15899.894 us/op
    p(100.0000) =  15899.894 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.625)

# Run progress: 74.24% complete, ETA 00:12:07
# Fork: 1 of 2
# Warmup Iteration   1: 2877.884 us/op
# Warmup Iteration   2: 1690.281 us/op
# Warmup Iteration   3: 1324.090 us/op
# Warmup Iteration   4: 1134.835 us/op
# Warmup Iteration   5: 1129.131 us/op
Iteration   1: 12757.815 us/op
Iteration   2: 17220.227 us/op
Iteration   3: 8920.572 us/op
Iteration   4: 8732.494 us/op
Iteration   5: 9856.530 us/op

# Run progress: 74.43% complete, ETA 00:12:01
# Fork: 2 of 2
# Warmup Iteration   1: 2767.948 us/op
# Warmup Iteration   2: 1546.012 us/op
# Warmup Iteration   3: 1575.507 us/op
# Warmup Iteration   4: 1176.418 us/op
# Warmup Iteration   5: 1166.445 us/op
Iteration   1: 14042.077 us/op
Iteration   2: 17756.643 us/op
Iteration   3: 8777.585 us/op
Iteration   4: 8343.037 us/op
Iteration   5: 9438.357 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  11584.534 ±(99.9%) 5485.476 us/op

  Histogram, us/op:
    [ 8000.000,  9000.000) = 4 
    [ 9000.000, 10000.000) = 2 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 1 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 1 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8343.037 us/op
     p(50.0000) =   9647.444 us/op
     p(90.0000) =  17703.001 us/op
     p(95.0000) =  17756.643 us/op
     p(99.0000) =  17756.643 us/op
     p(99.9000) =  17756.643 us/op
     p(99.9900) =  17756.643 us/op
     p(99.9990) =  17756.643 us/op
     p(99.9999) =  17756.643 us/op
    p(100.0000) =  17756.643 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.75)

# Run progress: 74.62% complete, ETA 00:11:56
# Fork: 1 of 2
# Warmup Iteration   1: 2840.227 us/op
# Warmup Iteration   2: 1579.929 us/op
# Warmup Iteration   3: 1502.037 us/op
# Warmup Iteration   4: 1691.076 us/op
# Warmup Iteration   5: 1218.343 us/op
Iteration   1: 14051.320 us/op
Iteration   2: 17704.387 us/op
Iteration   3: 9498.304 us/op
Iteration   4: 9248.438 us/op
Iteration   5: 10388.639 us/op

# Run progress: 74.81% complete, ETA 00:11:51
# Fork: 2 of 2
# Warmup Iteration   1: 2771.091 us/op
# Warmup Iteration   2: 1574.960 us/op
# Warmup Iteration   3: 1518.270 us/op
# Warmup Iteration   4: 1462.011 us/op
# Warmup Iteration   5: 1195.574 us/op
Iteration   1: 13860.585 us/op
Iteration   2: 18111.271 us/op
Iteration   3: 9674.461 us/op
Iteration   4: 9748.932 us/op
Iteration   5: 10716.361 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  12300.270 ±(99.9%) 5169.013 us/op

  Histogram, us/op:
    [ 9000.000, 10000.000) = 4 
    [10000.000, 11000.000) = 2 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 1 
    [14000.000, 15000.000) = 1 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 0 
    [17000.000, 18000.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   9248.438 us/op
     p(50.0000) =  10552.500 us/op
     p(90.0000) =  18070.583 us/op
     p(95.0000) =  18111.271 us/op
     p(99.0000) =  18111.271 us/op
     p(99.9000) =  18111.271 us/op
     p(99.9900) =  18111.271 us/op
     p(99.9990) =  18111.271 us/op
     p(99.9999) =  18111.271 us/op
    p(100.0000) =  18111.271 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.875)

# Run progress: 75.00% complete, ETA 00:11:45
# Fork: 1 of 2
# Warmup Iteration   1: 2830.682 us/op
# Warmup Iteration   2: 1629.677 us/op
# Warmup Iteration   3: 1484.822 us/op
# Warmup Iteration   4: 1502.204 us/op
# Warmup Iteration   5: 1234.136 us/op
Iteration   1: 12000.286 us/op
Iteration   2: 17089.985 us/op
Iteration   3: 7867.708 us/op
Iteration   4: 7401.755 us/op
Iteration   5: 7474.524 us/op

# Run progress: 75.19% complete, ETA 00:11:40
# Fork: 2 of 2
# Warmup Iteration   1: 3017.175 us/op
# Warmup Iteration   2: 1824.648 us/op
# Warmup Iteration   3: 1596.253 us/op
# Warmup Iteration   4: 1264.073 us/op
# Warmup Iteration   5: 1258.978 us/op
Iteration   1: 11925.937 us/op
Iteration   2: 17648.936 us/op
Iteration   3: 7880.475 us/op
Iteration   4: 7454.898 us/op
Iteration   5: 7464.160 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  10420.866 ±(99.9%) 6167.793 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 4 
    [ 7500.000,  8750.000) = 2 
    [ 8750.000, 10000.000) = 0 
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 2 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 1 
    [17500.000, 18750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   7401.755 us/op
     p(50.0000) =   7874.092 us/op
     p(90.0000) =  17593.041 us/op
     p(95.0000) =  17648.936 us/op
     p(99.0000) =  17648.936 us/op
     p(99.9000) =  17648.936 us/op
     p(99.9900) =  17648.936 us/op
     p(99.9990) =  17648.936 us/op
     p(99.9999) =  17648.936 us/op
    p(100.0000) =  17648.936 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 1)

# Run progress: 75.38% complete, ETA 00:11:34
# Fork: 1 of 2
# Warmup Iteration   1: 2719.641 us/op
# Warmup Iteration   2: 1955.431 us/op
# Warmup Iteration   3: 1409.701 us/op
# Warmup Iteration   4: 1308.084 us/op
# Warmup Iteration   5: 1292.963 us/op
Iteration   1: 11849.970 us/op
Iteration   2: 17177.190 us/op
Iteration   3: 8385.535 us/op
Iteration   4: 8035.307 us/op
Iteration   5: 9755.253 us/op

# Run progress: 75.57% complete, ETA 00:11:29
# Fork: 2 of 2
# Warmup Iteration   1: 3001.351 us/op
# Warmup Iteration   2: 1703.163 us/op
# Warmup Iteration   3: 1571.669 us/op
# Warmup Iteration   4: 1568.983 us/op
# Warmup Iteration   5: 1353.936 us/op
Iteration   1: 12029.386 us/op
Iteration   2: 17307.132 us/op
Iteration   3: 8390.261 us/op
Iteration   4: 8022.947 us/op
Iteration   5: 9688.173 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  11064.115 ±(99.9%) 5386.572 us/op

  Histogram, us/op:
    [ 8000.000,  9000.000) = 4 
    [ 9000.000, 10000.000) = 2 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 1 
    [12000.000, 13000.000) = 1 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8022.947 us/op
     p(50.0000) =   9721.713 us/op
     p(90.0000) =  17294.138 us/op
     p(95.0000) =  17307.132 us/op
     p(99.0000) =  17307.132 us/op
     p(99.9000) =  17307.132 us/op
     p(99.9900) =  17307.132 us/op
     p(99.9990) =  17307.132 us/op
     p(99.9999) =  17307.132 us/op
    p(100.0000) =  17307.132 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.125)

# Run progress: 75.76% complete, ETA 00:11:24
# Fork: 1 of 2
# Warmup Iteration   1: 3145.287 us/op
# Warmup Iteration   2: 2326.984 us/op
# Warmup Iteration   3: 1984.128 us/op
# Warmup Iteration   4: 1711.361 us/op
# Warmup Iteration   5: 1682.872 us/op
Iteration   1: 16043.145 us/op
Iteration   2: 20233.214 us/op
Iteration   3: 12195.909 us/op
Iteration   4: 21677.830 us/op
Iteration   5: 11725.581 us/op

# Run progress: 75.95% complete, ETA 00:11:18
# Fork: 2 of 2
# Warmup Iteration   1: 3260.317 us/op
# Warmup Iteration   2: 2414.091 us/op
# Warmup Iteration   3: 1728.309 us/op
# Warmup Iteration   4: 1755.828 us/op
# Warmup Iteration   5: 2026.024 us/op
Iteration   1: 16518.005 us/op
Iteration   2: 20431.753 us/op
Iteration   3: 12274.021 us/op
Iteration   4: 21461.774 us/op
Iteration   5: 11769.851 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  16433.108 ±(99.9%) 6424.998 us/op

  Histogram, us/op:
    [11000.000, 12000.000) = 2 
    [12000.000, 13000.000) = 2 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 2 
    [17000.000, 18000.000) = 0 
    [18000.000, 19000.000) = 0 
    [19000.000, 20000.000) = 0 
    [20000.000, 21000.000) = 2 

  Percentiles, us/op:
      p(0.0000) =  11725.581 us/op
     p(50.0000) =  16280.575 us/op
     p(90.0000) =  21656.224 us/op
     p(95.0000) =  21677.830 us/op
     p(99.0000) =  21677.830 us/op
     p(99.9000) =  21677.830 us/op
     p(99.9900) =  21677.830 us/op
     p(99.9990) =  21677.830 us/op
     p(99.9999) =  21677.830 us/op
    p(100.0000) =  21677.830 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.250)

# Run progress: 76.14% complete, ETA 00:11:13
# Fork: 1 of 2
# Warmup Iteration   1: 2926.450 us/op
# Warmup Iteration   2: 2051.311 us/op
# Warmup Iteration   3: 1593.190 us/op
# Warmup Iteration   4: 1455.824 us/op
# Warmup Iteration   5: 1533.563 us/op
Iteration   1: 12329.988 us/op
Iteration   2: 18351.026 us/op
Iteration   3: 9404.952 us/op
Iteration   4: 18524.180 us/op
Iteration   5: 8639.887 us/op

# Run progress: 76.33% complete, ETA 00:11:08
# Fork: 2 of 2
# Warmup Iteration   1: 3210.174 us/op
# Warmup Iteration   2: 2032.513 us/op
# Warmup Iteration   3: 1828.515 us/op
# Warmup Iteration   4: 1468.684 us/op
# Warmup Iteration   5: 1493.265 us/op
Iteration   1: 12316.571 us/op
Iteration   2: 18749.567 us/op
Iteration   3: 9228.527 us/op
Iteration   4: 18633.177 us/op
Iteration   5: 8861.644 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  13503.952 ±(99.9%) 6865.629 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 0 
    [ 7500.000,  8750.000) = 1 
    [ 8750.000, 10000.000) = 3 
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 2 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 4 

  Percentiles, us/op:
      p(0.0000) =   8639.887 us/op
     p(50.0000) =  12323.280 us/op
     p(90.0000) =  18737.928 us/op
     p(95.0000) =  18749.567 us/op
     p(99.0000) =  18749.567 us/op
     p(99.9000) =  18749.567 us/op
     p(99.9900) =  18749.567 us/op
     p(99.9990) =  18749.567 us/op
     p(99.9999) =  18749.567 us/op
    p(100.0000) =  18749.567 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.375)

# Run progress: 76.52% complete, ETA 00:11:02
# Fork: 1 of 2
# Warmup Iteration   1: 2889.081 us/op
# Warmup Iteration   2: 1834.495 us/op
# Warmup Iteration   3: 1346.643 us/op
# Warmup Iteration   4: 1312.011 us/op
# Warmup Iteration   5: 1342.340 us/op
Iteration   1: 14304.638 us/op
Iteration   2: 20909.501 us/op
Iteration   3: 10448.316 us/op
Iteration   4: 18374.180 us/op
Iteration   5: 10387.144 us/op

# Run progress: 76.70% complete, ETA 00:10:57
# Fork: 2 of 2
# Warmup Iteration   1: 2811.476 us/op
# Warmup Iteration   2: 1689.750 us/op
# Warmup Iteration   3: 1649.734 us/op
# Warmup Iteration   4: 1342.217 us/op
# Warmup Iteration   5: 1256.269 us/op
Iteration   1: 14842.620 us/op
Iteration   2: 20888.112 us/op
Iteration   3: 10393.876 us/op
Iteration   4: 18539.411 us/op
Iteration   5: 10294.537 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  14938.234 ±(99.9%) 6748.613 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 4 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 2 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 2 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 2 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10294.537 us/op
     p(50.0000) =  14573.629 us/op
     p(90.0000) =  20907.362 us/op
     p(95.0000) =  20909.501 us/op
     p(99.0000) =  20909.501 us/op
     p(99.9000) =  20909.501 us/op
     p(99.9900) =  20909.501 us/op
     p(99.9990) =  20909.501 us/op
     p(99.9999) =  20909.501 us/op
    p(100.0000) =  20909.501 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.5)

# Run progress: 76.89% complete, ETA 00:10:52
# Fork: 1 of 2
# Warmup Iteration   1: 2740.187 us/op
# Warmup Iteration   2: 1822.107 us/op
# Warmup Iteration   3: 1747.189 us/op
# Warmup Iteration   4: 1490.883 us/op
# Warmup Iteration   5: 1396.777 us/op
Iteration   1: 11957.801 us/op
Iteration   2: 15539.673 us/op
Iteration   3: 7933.338 us/op
Iteration   4: 7344.681 us/op
Iteration   5: 8877.591 us/op

# Run progress: 77.08% complete, ETA 00:10:46
# Fork: 2 of 2
# Warmup Iteration   1: 2804.606 us/op
# Warmup Iteration   2: 1764.203 us/op
# Warmup Iteration   3: 1776.754 us/op
# Warmup Iteration   4: 1440.170 us/op
# Warmup Iteration   5: 1332.583 us/op
Iteration   1: 11991.824 us/op
Iteration   2: 15778.360 us/op
Iteration   3: 8246.129 us/op
Iteration   4: 7586.592 us/op
Iteration   5: 9090.497 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  10434.649 ±(99.9%) 4841.564 us/op

  Histogram, us/op:
    [ 7000.000,  7500.000) = 1 
    [ 7500.000,  8000.000) = 2 
    [ 8000.000,  8500.000) = 1 
    [ 8500.000,  9000.000) = 1 
    [ 9000.000,  9500.000) = 1 
    [ 9500.000, 10000.000) = 0 
    [10000.000, 10500.000) = 0 
    [10500.000, 11000.000) = 0 
    [11000.000, 11500.000) = 0 
    [11500.000, 12000.000) = 2 
    [12000.000, 12500.000) = 0 
    [12500.000, 13000.000) = 0 
    [13000.000, 13500.000) = 0 
    [13500.000, 14000.000) = 0 
    [14000.000, 14500.000) = 0 
    [14500.000, 15000.000) = 0 
    [15000.000, 15500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   7344.681 us/op
     p(50.0000) =   8984.044 us/op
     p(90.0000) =  15754.491 us/op
     p(95.0000) =  15778.360 us/op
     p(99.0000) =  15778.360 us/op
     p(99.9000) =  15778.360 us/op
     p(99.9900) =  15778.360 us/op
     p(99.9990) =  15778.360 us/op
     p(99.9999) =  15778.360 us/op
    p(100.0000) =  15778.360 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.625)

# Run progress: 77.27% complete, ETA 00:10:41
# Fork: 1 of 2
# Warmup Iteration   1: 2543.123 us/op
# Warmup Iteration   2: 1548.389 us/op
# Warmup Iteration   3: 1429.227 us/op
# Warmup Iteration   4: 1486.807 us/op
# Warmup Iteration   5: 1147.866 us/op
Iteration   1: 13802.423 us/op
Iteration   2: 17429.364 us/op
Iteration   3: 8828.405 us/op
Iteration   4: 8577.692 us/op
Iteration   5: 9754.290 us/op

# Run progress: 77.46% complete, ETA 00:10:36
# Fork: 2 of 2
# Warmup Iteration   1: 2699.390 us/op
# Warmup Iteration   2: 1628.855 us/op
# Warmup Iteration   3: 1613.632 us/op
# Warmup Iteration   4: 1187.018 us/op
# Warmup Iteration   5: 1163.584 us/op
Iteration   1: 14284.009 us/op
Iteration   2: 17726.378 us/op
Iteration   3: 8813.538 us/op
Iteration   4: 8378.105 us/op
Iteration   5: 9410.670 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  11700.487 ±(99.9%) 5670.942 us/op

  Histogram, us/op:
    [ 8000.000,  9000.000) = 4 
    [ 9000.000, 10000.000) = 2 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 1 
    [14000.000, 15000.000) = 1 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8378.105 us/op
     p(50.0000) =   9582.480 us/op
     p(90.0000) =  17696.677 us/op
     p(95.0000) =  17726.378 us/op
     p(99.0000) =  17726.378 us/op
     p(99.9000) =  17726.378 us/op
     p(99.9900) =  17726.378 us/op
     p(99.9990) =  17726.378 us/op
     p(99.9999) =  17726.378 us/op
    p(100.0000) =  17726.378 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.75)

# Run progress: 77.65% complete, ETA 00:10:30
# Fork: 1 of 2
# Warmup Iteration   1: 2754.182 us/op
# Warmup Iteration   2: 1550.200 us/op
# Warmup Iteration   3: 1473.395 us/op
# Warmup Iteration   4: 1473.652 us/op
# Warmup Iteration   5: 1234.138 us/op
Iteration   1: 13845.113 us/op
Iteration   2: 17797.823 us/op
Iteration   3: 9763.493 us/op
Iteration   4: 10068.798 us/op
Iteration   5: 11207.632 us/op

# Run progress: 77.84% complete, ETA 00:10:25
# Fork: 2 of 2
# Warmup Iteration   1: 2720.824 us/op
# Warmup Iteration   2: 1556.146 us/op
# Warmup Iteration   3: 1414.745 us/op
# Warmup Iteration   4: 1598.703 us/op
# Warmup Iteration   5: 1196.389 us/op
Iteration   1: 13686.753 us/op
Iteration   2: 17783.531 us/op
Iteration   3: 9402.210 us/op
Iteration   4: 9241.993 us/op
Iteration   5: 10255.883 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  12305.323 ±(99.9%) 5017.751 us/op

  Histogram, us/op:
    [ 9000.000,  9500.000) = 2 
    [ 9500.000, 10000.000) = 1 
    [10000.000, 10500.000) = 2 
    [10500.000, 11000.000) = 0 
    [11000.000, 11500.000) = 1 
    [11500.000, 12000.000) = 0 
    [12000.000, 12500.000) = 0 
    [12500.000, 13000.000) = 0 
    [13000.000, 13500.000) = 0 
    [13500.000, 14000.000) = 2 
    [14000.000, 14500.000) = 0 
    [14500.000, 15000.000) = 0 
    [15000.000, 15500.000) = 0 
    [15500.000, 16000.000) = 0 
    [16000.000, 16500.000) = 0 
    [16500.000, 17000.000) = 0 
    [17000.000, 17500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   9241.993 us/op
     p(50.0000) =  10731.758 us/op
     p(90.0000) =  17796.394 us/op
     p(95.0000) =  17797.823 us/op
     p(99.0000) =  17797.823 us/op
     p(99.9000) =  17797.823 us/op
     p(99.9900) =  17797.823 us/op
     p(99.9990) =  17797.823 us/op
     p(99.9999) =  17797.823 us/op
    p(100.0000) =  17797.823 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.875)

# Run progress: 78.03% complete, ETA 00:10:20
# Fork: 1 of 2
# Warmup Iteration   1: 2876.058 us/op
# Warmup Iteration   2: 1654.118 us/op
# Warmup Iteration   3: 1601.448 us/op
# Warmup Iteration   4: 1530.790 us/op
# Warmup Iteration   5: 1262.982 us/op
Iteration   1: 12146.667 us/op
Iteration   2: 17548.113 us/op
Iteration   3: 7786.228 us/op
Iteration   4: 7459.269 us/op
Iteration   5: 7688.492 us/op

# Run progress: 78.22% complete, ETA 00:10:14
# Fork: 2 of 2
# Warmup Iteration   1: 2786.852 us/op
# Warmup Iteration   2: 1622.513 us/op
# Warmup Iteration   3: 1488.245 us/op
# Warmup Iteration   4: 1691.332 us/op
# Warmup Iteration   5: 1255.005 us/op
Iteration   1: 11639.842 us/op
Iteration   2: 17057.337 us/op
Iteration   3: 8057.118 us/op
Iteration   4: 7548.309 us/op
Iteration   5: 7583.397 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  10451.477 ±(99.9%) 6055.061 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 1 
    [ 7500.000,  8750.000) = 5 
    [ 8750.000, 10000.000) = 0 
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 2 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 1 
    [17500.000, 18750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   7459.269 us/op
     p(50.0000) =   7921.673 us/op
     p(90.0000) =  17499.035 us/op
     p(95.0000) =  17548.113 us/op
     p(99.0000) =  17548.113 us/op
     p(99.9000) =  17548.113 us/op
     p(99.9900) =  17548.113 us/op
     p(99.9990) =  17548.113 us/op
     p(99.9999) =  17548.113 us/op
    p(100.0000) =  17548.113 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 1)

# Run progress: 78.41% complete, ETA 00:10:09
# Fork: 1 of 2
# Warmup Iteration   1: 3108.098 us/op
# Warmup Iteration   2: 1722.575 us/op
# Warmup Iteration   3: 1581.588 us/op
# Warmup Iteration   4: 1381.092 us/op
# Warmup Iteration   5: 1293.358 us/op
Iteration   1: 11887.582 us/op
Iteration   2: 17410.945 us/op
Iteration   3: 8144.713 us/op
Iteration   4: 7924.311 us/op
Iteration   5: 9680.615 us/op

# Run progress: 78.60% complete, ETA 00:10:04
# Fork: 2 of 2
# Warmup Iteration   1: 2657.323 us/op
# Warmup Iteration   2: 1877.352 us/op
# Warmup Iteration   3: 1363.058 us/op
# Warmup Iteration   4: 1332.274 us/op
# Warmup Iteration   5: 1314.636 us/op
Iteration   1: 12046.817 us/op
Iteration   2: 17527.424 us/op
Iteration   3: 8168.331 us/op
Iteration   4: 7809.685 us/op
Iteration   5: 9762.267 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  11036.269 ±(99.9%) 5626.685 us/op

  Histogram, us/op:
    [ 7000.000,  8000.000) = 2 
    [ 8000.000,  9000.000) = 2 
    [ 9000.000, 10000.000) = 2 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 1 
    [12000.000, 13000.000) = 1 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   7809.685 us/op
     p(50.0000) =   9721.441 us/op
     p(90.0000) =  17515.776 us/op
     p(95.0000) =  17527.424 us/op
     p(99.0000) =  17527.424 us/op
     p(99.9000) =  17527.424 us/op
     p(99.9900) =  17527.424 us/op
     p(99.9990) =  17527.424 us/op
     p(99.9999) =  17527.424 us/op
    p(100.0000) =  17527.424 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.125)

# Run progress: 78.79% complete, ETA 00:09:58
# Fork: 1 of 2
# Warmup Iteration   1: 3346.495 us/op
# Warmup Iteration   2: 2205.235 us/op
# Warmup Iteration   3: 1828.076 us/op
# Warmup Iteration   4: 1611.547 us/op
# Warmup Iteration   5: 1531.482 us/op
Iteration   1: 16340.092 us/op
Iteration   2: 21136.560 us/op
Iteration   3: 12498.157 us/op
Iteration   4: 21514.487 us/op
Iteration   5: 11941.381 us/op

# Run progress: 78.98% complete, ETA 00:09:53
# Fork: 2 of 2
# Warmup Iteration   1: 3417.063 us/op
# Warmup Iteration   2: 2204.517 us/op
# Warmup Iteration   3: 1826.108 us/op
# Warmup Iteration   4: 1619.140 us/op
# Warmup Iteration   5: 1541.044 us/op
Iteration   1: 16244.735 us/op
Iteration   2: 20511.716 us/op
Iteration   3: 12149.512 us/op
Iteration   4: 21675.947 us/op
Iteration   5: 11872.890 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  16588.548 ±(99.9%) 6506.103 us/op

  Histogram, us/op:
    [11000.000, 12000.000) = 2 
    [12000.000, 13000.000) = 2 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 2 
    [17000.000, 18000.000) = 0 
    [18000.000, 19000.000) = 0 
    [19000.000, 20000.000) = 0 
    [20000.000, 21000.000) = 1 

  Percentiles, us/op:
      p(0.0000) =  11872.890 us/op
     p(50.0000) =  16292.414 us/op
     p(90.0000) =  21659.801 us/op
     p(95.0000) =  21675.947 us/op
     p(99.0000) =  21675.947 us/op
     p(99.9000) =  21675.947 us/op
     p(99.9900) =  21675.947 us/op
     p(99.9990) =  21675.947 us/op
     p(99.9999) =  21675.947 us/op
    p(100.0000) =  21675.947 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.250)

# Run progress: 79.17% complete, ETA 00:09:48
# Fork: 1 of 2
# Warmup Iteration   1: 3117.258 us/op
# Warmup Iteration   2: 1719.294 us/op
# Warmup Iteration   3: 1702.829 us/op
# Warmup Iteration   4: 1339.907 us/op
# Warmup Iteration   5: 1369.201 us/op
Iteration   1: 12917.447 us/op
Iteration   2: 18356.811 us/op
Iteration   3: 9015.464 us/op
Iteration   4: 18705.939 us/op
Iteration   5: 8776.245 us/op

# Run progress: 79.36% complete, ETA 00:09:42
# Fork: 2 of 2
# Warmup Iteration   1: 3108.469 us/op
# Warmup Iteration   2: 1710.011 us/op
# Warmup Iteration   3: 1719.215 us/op
# Warmup Iteration   4: 1377.327 us/op
# Warmup Iteration   5: 1463.585 us/op
Iteration   1: 12813.502 us/op
Iteration   2: 18259.471 us/op
Iteration   3: 9191.108 us/op
Iteration   4: 18741.803 us/op
Iteration   5: 9522.424 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  13630.021 ±(99.9%) 6728.730 us/op

  Histogram, us/op:
    [ 8000.000,  9000.000) = 1 
    [ 9000.000, 10000.000) = 3 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 2 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 0 
    [17000.000, 18000.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8776.245 us/op
     p(50.0000) =  12865.475 us/op
     p(90.0000) =  18738.217 us/op
     p(95.0000) =  18741.803 us/op
     p(99.0000) =  18741.803 us/op
     p(99.9000) =  18741.803 us/op
     p(99.9900) =  18741.803 us/op
     p(99.9990) =  18741.803 us/op
     p(99.9999) =  18741.803 us/op
    p(100.0000) =  18741.803 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.375)

# Run progress: 79.55% complete, ETA 00:09:37
# Fork: 1 of 2
# Warmup Iteration   1: 2600.153 us/op
# Warmup Iteration   2: 1399.208 us/op
# Warmup Iteration   3: 1376.245 us/op
# Warmup Iteration   4: 1551.995 us/op
# Warmup Iteration   5: 1083.092 us/op
Iteration   1: 14003.012 us/op
Iteration   2: 20923.578 us/op
Iteration   3: 10329.635 us/op
Iteration   4: 18445.401 us/op
Iteration   5: 10138.266 us/op

# Run progress: 79.73% complete, ETA 00:09:32
# Fork: 2 of 2
# Warmup Iteration   1: 2396.655 us/op
# Warmup Iteration   2: 1447.767 us/op
# Warmup Iteration   3: 1407.627 us/op
# Warmup Iteration   4: 1193.043 us/op
# Warmup Iteration   5: 1093.640 us/op
Iteration   1: 14142.700 us/op
Iteration   2: 20995.984 us/op
Iteration   3: 10499.146 us/op
Iteration   4: 18267.604 us/op
Iteration   5: 10090.334 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  14783.566 ±(99.9%) 6848.200 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 4 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 2 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 2 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 2 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10090.334 us/op
     p(50.0000) =  14072.856 us/op
     p(90.0000) =  20988.743 us/op
     p(95.0000) =  20995.984 us/op
     p(99.0000) =  20995.984 us/op
     p(99.9000) =  20995.984 us/op
     p(99.9900) =  20995.984 us/op
     p(99.9990) =  20995.984 us/op
     p(99.9999) =  20995.984 us/op
    p(100.0000) =  20995.984 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.5)

# Run progress: 79.92% complete, ETA 00:09:26
# Fork: 1 of 2
# Warmup Iteration   1: 2694.580 us/op
# Warmup Iteration   2: 1522.417 us/op
# Warmup Iteration   3: 1511.311 us/op
# Warmup Iteration   4: 1151.190 us/op
# Warmup Iteration   5: 1103.162 us/op
Iteration   1: 11698.210 us/op
Iteration   2: 16375.563 us/op
Iteration   3: 7776.020 us/op
Iteration   4: 7289.466 us/op
Iteration   5: 8809.058 us/op

# Run progress: 80.11% complete, ETA 00:09:21
# Fork: 2 of 2
# Warmup Iteration   1: 2781.206 us/op
# Warmup Iteration   2: 1533.680 us/op
# Warmup Iteration   3: 1466.865 us/op
# Warmup Iteration   4: 1172.068 us/op
# Warmup Iteration   5: 1151.259 us/op
Iteration   1: 11881.812 us/op
Iteration   2: 15771.632 us/op
Iteration   3: 8033.475 us/op
Iteration   4: 7604.693 us/op
Iteration   5: 8792.601 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  10403.253 ±(99.9%) 5127.762 us/op

  Histogram, us/op:
    [ 7000.000,  8000.000) = 3 
    [ 8000.000,  9000.000) = 3 
    [ 9000.000, 10000.000) = 0 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 2 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   7289.466 us/op
     p(50.0000) =   8800.830 us/op
     p(90.0000) =  16315.170 us/op
     p(95.0000) =  16375.563 us/op
     p(99.0000) =  16375.563 us/op
     p(99.9000) =  16375.563 us/op
     p(99.9900) =  16375.563 us/op
     p(99.9990) =  16375.563 us/op
     p(99.9999) =  16375.563 us/op
    p(100.0000) =  16375.563 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.625)

# Run progress: 80.30% complete, ETA 00:09:15
# Fork: 1 of 2
# Warmup Iteration   1: 1974.297 us/op
# Warmup Iteration   2: 1346.702 us/op
# Warmup Iteration   3: 1322.121 us/op
# Warmup Iteration   4: 876.974 us/op
# Warmup Iteration   5: 881.063 us/op
Iteration   1: 13965.361 us/op
Iteration   2: 17436.150 us/op
Iteration   3: 8494.457 us/op
Iteration   4: 8090.409 us/op
Iteration   5: 11784.360 us/op

# Run progress: 80.49% complete, ETA 00:09:10
# Fork: 2 of 2
# Warmup Iteration   1: 2087.911 us/op
# Warmup Iteration   2: 1316.392 us/op
# Warmup Iteration   3: 1143.230 us/op
# Warmup Iteration   4: 1160.747 us/op
# Warmup Iteration   5: 923.643 us/op
Iteration   1: 14152.227 us/op
Iteration   2: 17260.507 us/op
Iteration   3: 8500.022 us/op
Iteration   4: 8123.563 us/op
Iteration   5: 11262.196 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  11906.925 ±(99.9%) 5545.171 us/op

  Histogram, us/op:
    [ 8000.000,  9000.000) = 4 
    [ 9000.000, 10000.000) = 0 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 2 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 1 
    [14000.000, 15000.000) = 1 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8090.409 us/op
     p(50.0000) =  11523.278 us/op
     p(90.0000) =  17418.586 us/op
     p(95.0000) =  17436.150 us/op
     p(99.0000) =  17436.150 us/op
     p(99.9000) =  17436.150 us/op
     p(99.9900) =  17436.150 us/op
     p(99.9990) =  17436.150 us/op
     p(99.9999) =  17436.150 us/op
    p(100.0000) =  17436.150 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.75)

# Run progress: 80.68% complete, ETA 00:09:05
# Fork: 1 of 2
# Warmup Iteration   1: 2139.926 us/op
# Warmup Iteration   2: 1231.785 us/op
# Warmup Iteration   3: 1100.063 us/op
# Warmup Iteration   4: 1209.912 us/op
# Warmup Iteration   5: 913.217 us/op
Iteration   1: 15121.554 us/op
Iteration   2: 18867.555 us/op
Iteration   3: 9564.847 us/op
Iteration   4: 9170.281 us/op
Iteration   5: 12412.382 us/op

# Run progress: 80.87% complete, ETA 00:08:59
# Fork: 2 of 2
# Warmup Iteration   1: 2043.913 us/op
# Warmup Iteration   2: 1444.863 us/op
# Warmup Iteration   3: 901.913 us/op
# Warmup Iteration   4: 888.018 us/op
# Warmup Iteration   5: 887.357 us/op
Iteration   1: 15053.341 us/op
Iteration   2: 18451.306 us/op
Iteration   3: 9509.598 us/op
Iteration   4: 9178.588 us/op
Iteration   5: 12443.688 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  12977.314 ±(99.9%) 5673.996 us/op

  Histogram, us/op:
    [ 9000.000, 10000.000) = 4 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 2 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 2 
    [16000.000, 17000.000) = 0 
    [17000.000, 18000.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   9170.281 us/op
     p(50.0000) =  12428.035 us/op
     p(90.0000) =  18825.930 us/op
     p(95.0000) =  18867.555 us/op
     p(99.0000) =  18867.555 us/op
     p(99.9000) =  18867.555 us/op
     p(99.9900) =  18867.555 us/op
     p(99.9990) =  18867.555 us/op
     p(99.9999) =  18867.555 us/op
    p(100.0000) =  18867.555 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.875)

# Run progress: 81.06% complete, ETA 00:08:54
# Fork: 1 of 2
# Warmup Iteration   1: 2331.237 us/op
# Warmup Iteration   2: 1303.294 us/op
# Warmup Iteration   3: 1163.646 us/op
# Warmup Iteration   4: 895.063 us/op
# Warmup Iteration   5: 909.333 us/op
Iteration   1: 13413.232 us/op
Iteration   2: 18207.262 us/op
Iteration   3: 8547.774 us/op
Iteration   4: 7306.341 us/op
Iteration   5: 7572.944 us/op

# Run progress: 81.25% complete, ETA 00:08:49
# Fork: 2 of 2
# Warmup Iteration   1: 2042.943 us/op
# Warmup Iteration   2: 1233.097 us/op
# Warmup Iteration   3: 1322.247 us/op
# Warmup Iteration   4: 885.330 us/op
# Warmup Iteration   5: 889.855 us/op
Iteration   1: 13681.668 us/op
Iteration   2: 17573.317 us/op
Iteration   3: 8599.961 us/op
Iteration   4: 7072.590 us/op
Iteration   5: 7423.037 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  10939.813 ±(99.9%) 6638.272 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 3 
    [ 7500.000,  8750.000) = 3 
    [ 8750.000, 10000.000) = 0 
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 2 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   7072.590 us/op
     p(50.0000) =   8573.868 us/op
     p(90.0000) =  18143.868 us/op
     p(95.0000) =  18207.262 us/op
     p(99.0000) =  18207.262 us/op
     p(99.9000) =  18207.262 us/op
     p(99.9900) =  18207.262 us/op
     p(99.9990) =  18207.262 us/op
     p(99.9999) =  18207.262 us/op
    p(100.0000) =  18207.262 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 1)

# Run progress: 81.44% complete, ETA 00:08:43
# Fork: 1 of 2
# Warmup Iteration   1: 2120.053 us/op
# Warmup Iteration   2: 1199.479 us/op
# Warmup Iteration   3: 1090.304 us/op
# Warmup Iteration   4: 1187.259 us/op
# Warmup Iteration   5: 951.133 us/op
Iteration   1: 14228.531 us/op
Iteration   2: 18015.997 us/op
Iteration   3: 8169.949 us/op
Iteration   4: 7620.813 us/op
Iteration   5: 9011.983 us/op

# Run progress: 81.63% complete, ETA 00:08:38
# Fork: 2 of 2
# Warmup Iteration   1: 2178.443 us/op
# Warmup Iteration   2: 1314.197 us/op
# Warmup Iteration   3: 1116.781 us/op
# Warmup Iteration   4: 1132.443 us/op
# Warmup Iteration   5: 889.756 us/op
Iteration   1: 14003.166 us/op
Iteration   2: 18123.298 us/op
Iteration   3: 7953.580 us/op
Iteration   4: 7698.624 us/op
Iteration   5: 8983.025 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  11380.897 ±(99.9%) 6484.860 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 0 
    [ 7500.000,  8750.000) = 4 
    [ 8750.000, 10000.000) = 2 
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 2 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   7620.813 us/op
     p(50.0000) =   8997.504 us/op
     p(90.0000) =  18112.568 us/op
     p(95.0000) =  18123.298 us/op
     p(99.0000) =  18123.298 us/op
     p(99.9000) =  18123.298 us/op
     p(99.9900) =  18123.298 us/op
     p(99.9990) =  18123.298 us/op
     p(99.9999) =  18123.298 us/op
    p(100.0000) =  18123.298 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.125)

# Run progress: 81.82% complete, ETA 00:08:33
# Fork: 1 of 2
# Warmup Iteration   1: 3587.172 us/op
# Warmup Iteration   2: 1706.792 us/op
# Warmup Iteration   3: 1678.269 us/op
# Warmup Iteration   4: 1275.029 us/op
# Warmup Iteration   5: 1285.036 us/op
Iteration   1: 15814.260 us/op
Iteration   2: 20941.502 us/op
Iteration   3: 12575.549 us/op
Iteration   4: 22326.452 us/op
Iteration   5: 11747.389 us/op

# Run progress: 82.01% complete, ETA 00:08:27
# Fork: 2 of 2
# Warmup Iteration   1: 3496.003 us/op
# Warmup Iteration   2: 1910.835 us/op
# Warmup Iteration   3: 1699.021 us/op
# Warmup Iteration   4: 1334.202 us/op
# Warmup Iteration   5: 1313.913 us/op
Iteration   1: 15958.011 us/op
Iteration   2: 21073.822 us/op
Iteration   3: 13114.029 us/op
Iteration   4: 22506.592 us/op
Iteration   5: 11505.062 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  16756.267 ±(99.9%) 6857.894 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 2 
    [12500.000, 13750.000) = 2 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 2 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 2 
    [21250.000, 22500.000) = 1 
    [22500.000, 23750.000) = 1 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  11505.062 us/op
     p(50.0000) =  15886.136 us/op
     p(90.0000) =  22488.578 us/op
     p(95.0000) =  22506.592 us/op
     p(99.0000) =  22506.592 us/op
     p(99.9000) =  22506.592 us/op
     p(99.9900) =  22506.592 us/op
     p(99.9990) =  22506.592 us/op
     p(99.9999) =  22506.592 us/op
    p(100.0000) =  22506.592 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.250)

# Run progress: 82.20% complete, ETA 00:08:22
# Fork: 1 of 2
# Warmup Iteration   1: 2006.318 us/op
# Warmup Iteration   2: 1304.322 us/op
# Warmup Iteration   3: 1290.380 us/op
# Warmup Iteration   4: 932.435 us/op
# Warmup Iteration   5: 918.535 us/op
Iteration   1: 16740.288 us/op
Iteration   2: 19798.218 us/op
Iteration   3: 9057.615 us/op
Iteration   4: 8784.916 us/op
Iteration   5: 18303.346 us/op

# Run progress: 82.39% complete, ETA 00:08:17
# Fork: 2 of 2
# Warmup Iteration   1: 2004.299 us/op
# Warmup Iteration   2: 1276.004 us/op
# Warmup Iteration   3: 1558.928 us/op
# Warmup Iteration   4: 948.672 us/op
# Warmup Iteration   5: 933.927 us/op
Iteration   1: 16856.960 us/op
Iteration   2: 19649.221 us/op
Iteration   3: 8874.308 us/op
Iteration   4: 8856.568 us/op
Iteration   5: 18336.652 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  14525.809 ±(99.9%) 7476.808 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 0 
    [ 7500.000,  8750.000) = 0 
    [ 8750.000, 10000.000) = 4 
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 2 
    [17500.000, 18750.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   8784.916 us/op
     p(50.0000) =  16798.624 us/op
     p(90.0000) =  19783.318 us/op
     p(95.0000) =  19798.218 us/op
     p(99.0000) =  19798.218 us/op
     p(99.9000) =  19798.218 us/op
     p(99.9900) =  19798.218 us/op
     p(99.9990) =  19798.218 us/op
     p(99.9999) =  19798.218 us/op
    p(100.0000) =  19798.218 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.375)

# Run progress: 82.58% complete, ETA 00:08:11
# Fork: 1 of 2
# Warmup Iteration   1: 2272.072 us/op
# Warmup Iteration   2: 1295.052 us/op
# Warmup Iteration   3: 1471.508 us/op
# Warmup Iteration   4: 943.934 us/op
# Warmup Iteration   5: 931.571 us/op
Iteration   1: 18715.985 us/op
Iteration   2: 21725.896 us/op
Iteration   3: 9598.478 us/op
Iteration   4: 9424.094 us/op
Iteration   5: 20559.582 us/op

# Run progress: 82.77% complete, ETA 00:08:06
# Fork: 2 of 2
# Warmup Iteration   1: 2122.942 us/op
# Warmup Iteration   2: 1316.359 us/op
# Warmup Iteration   3: 1181.407 us/op
# Warmup Iteration   4: 1278.564 us/op
# Warmup Iteration   5: 918.367 us/op
Iteration   1: 18140.326 us/op
Iteration   2: 21275.685 us/op
Iteration   3: 9784.554 us/op
Iteration   4: 9432.457 us/op
Iteration   5: 20463.445 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  15912.050 ±(99.9%) 8420.644 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 0 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 2 
    [20000.000, 22500.000) = 4 
    [22500.000, 25000.000) = 0 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   9424.094 us/op
     p(50.0000) =  18428.156 us/op
     p(90.0000) =  21680.875 us/op
     p(95.0000) =  21725.896 us/op
     p(99.0000) =  21725.896 us/op
     p(99.9000) =  21725.896 us/op
     p(99.9900) =  21725.896 us/op
     p(99.9990) =  21725.896 us/op
     p(99.9999) =  21725.896 us/op
    p(100.0000) =  21725.896 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.5)

# Run progress: 82.95% complete, ETA 00:08:01
# Fork: 1 of 2
# Warmup Iteration   1: 2266.150 us/op
# Warmup Iteration   2: 1258.831 us/op
# Warmup Iteration   3: 1149.037 us/op
# Warmup Iteration   4: 1213.980 us/op
# Warmup Iteration   5: 944.803 us/op
Iteration   1: 15024.366 us/op
Iteration   2: 15295.729 us/op
Iteration   3: 7401.208 us/op
Iteration   4: 7025.511 us/op
Iteration   5: 8017.115 us/op

# Run progress: 83.14% complete, ETA 00:07:55
# Fork: 2 of 2
# Warmup Iteration   1: 2111.139 us/op
# Warmup Iteration   2: 1321.334 us/op
# Warmup Iteration   3: 1298.191 us/op
# Warmup Iteration   4: 1275.644 us/op
# Warmup Iteration   5: 912.913 us/op
Iteration   1: 15161.119 us/op
Iteration   2: 15479.834 us/op
Iteration   3: 7593.482 us/op
Iteration   4: 7050.181 us/op
Iteration   5: 8418.401 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  10646.695 ±(99.9%) 6011.625 us/op

  Histogram, us/op:
    [ 7000.000,  7500.000) = 3 
    [ 7500.000,  8000.000) = 1 
    [ 8000.000,  8500.000) = 2 
    [ 8500.000,  9000.000) = 0 
    [ 9000.000,  9500.000) = 0 
    [ 9500.000, 10000.000) = 0 
    [10000.000, 10500.000) = 0 
    [10500.000, 11000.000) = 0 
    [11000.000, 11500.000) = 0 
    [11500.000, 12000.000) = 0 
    [12000.000, 12500.000) = 0 
    [12500.000, 13000.000) = 0 
    [13000.000, 13500.000) = 0 
    [13500.000, 14000.000) = 0 
    [14000.000, 14500.000) = 0 
    [14500.000, 15000.000) = 0 
    [15000.000, 15500.000) = 4 

  Percentiles, us/op:
      p(0.0000) =   7025.511 us/op
     p(50.0000) =   8217.758 us/op
     p(90.0000) =  15461.424 us/op
     p(95.0000) =  15479.834 us/op
     p(99.0000) =  15479.834 us/op
     p(99.9000) =  15479.834 us/op
     p(99.9900) =  15479.834 us/op
     p(99.9990) =  15479.834 us/op
     p(99.9999) =  15479.834 us/op
    p(100.0000) =  15479.834 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.625)

# Run progress: 83.33% complete, ETA 00:07:50
# Fork: 1 of 2
# Warmup Iteration   1: 1925.414 us/op
# Warmup Iteration   2: 1269.315 us/op
# Warmup Iteration   3: 1201.290 us/op
# Warmup Iteration   4: 1171.011 us/op
# Warmup Iteration   5: 945.988 us/op
Iteration   1: 16888.413 us/op
Iteration   2: 16918.476 us/op
Iteration   3: 8139.579 us/op
Iteration   4: 7814.529 us/op
Iteration   5: 8752.679 us/op

# Run progress: 83.52% complete, ETA 00:07:45
# Fork: 2 of 2
# Warmup Iteration   1: 2148.545 us/op
# Warmup Iteration   2: 1333.585 us/op
# Warmup Iteration   3: 1190.299 us/op
# Warmup Iteration   4: 942.931 us/op
# Warmup Iteration   5: 921.993 us/op
Iteration   1: 17090.103 us/op
Iteration   2: 17355.694 us/op
Iteration   3: 7965.493 us/op
Iteration   4: 7701.636 us/op
Iteration   5: 8604.961 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  11723.156 ±(99.9%) 6967.673 us/op

  Histogram, us/op:
    [ 7000.000,  8000.000) = 3 
    [ 8000.000,  9000.000) = 3 
    [ 9000.000, 10000.000) = 0 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   7701.636 us/op
     p(50.0000) =   8678.820 us/op
     p(90.0000) =  17329.135 us/op
     p(95.0000) =  17355.694 us/op
     p(99.0000) =  17355.694 us/op
     p(99.9000) =  17355.694 us/op
     p(99.9900) =  17355.694 us/op
     p(99.9990) =  17355.694 us/op
     p(99.9999) =  17355.694 us/op
    p(100.0000) =  17355.694 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.75)

# Run progress: 83.71% complete, ETA 00:07:39
# Fork: 1 of 2
# Warmup Iteration   1: 2183.464 us/op
# Warmup Iteration   2: 1386.198 us/op
# Warmup Iteration   3: 1129.749 us/op
# Warmup Iteration   4: 1223.176 us/op
# Warmup Iteration   5: 944.988 us/op
Iteration   1: 16899.795 us/op
Iteration   2: 18110.485 us/op
Iteration   3: 8599.404 us/op
Iteration   4: 8416.317 us/op
Iteration   5: 9646.941 us/op

# Run progress: 83.90% complete, ETA 00:07:34
# Fork: 2 of 2
# Warmup Iteration   1: 1967.500 us/op
# Warmup Iteration   2: 1326.197 us/op
# Warmup Iteration   3: 1150.328 us/op
# Warmup Iteration   4: 1183.541 us/op
# Warmup Iteration   5: 925.817 us/op
Iteration   1: 16299.826 us/op
Iteration   2: 17530.615 us/op
Iteration   3: 8844.919 us/op
Iteration   4: 8543.033 us/op
Iteration   5: 9564.423 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  12245.576 ±(99.9%) 6524.191 us/op

  Histogram, us/op:
    [ 8000.000,  9000.000) = 4 
    [ 9000.000, 10000.000) = 2 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 0 
    [16000.000, 17000.000) = 2 
    [17000.000, 18000.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   8416.317 us/op
     p(50.0000) =   9605.682 us/op
     p(90.0000) =  18052.498 us/op
     p(95.0000) =  18110.485 us/op
     p(99.0000) =  18110.485 us/op
     p(99.9000) =  18110.485 us/op
     p(99.9900) =  18110.485 us/op
     p(99.9990) =  18110.485 us/op
     p(99.9999) =  18110.485 us/op
    p(100.0000) =  18110.485 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.875)

# Run progress: 84.09% complete, ETA 00:07:29
# Fork: 1 of 2
# Warmup Iteration   1: 2064.059 us/op
# Warmup Iteration   2: 1217.925 us/op
# Warmup Iteration   3: 1182.370 us/op
# Warmup Iteration   4: 983.637 us/op
# Warmup Iteration   5: 975.429 us/op
Iteration   1: 12468.785 us/op
Iteration   2: 16461.914 us/op
Iteration   3: 8641.065 us/op
Iteration   4: 9115.137 us/op
Iteration   5: 10404.721 us/op

# Run progress: 84.28% complete, ETA 00:07:23
# Fork: 2 of 2
# Warmup Iteration   1: 1953.810 us/op
# Warmup Iteration   2: 1445.144 us/op
# Warmup Iteration   3: 1291.553 us/op
# Warmup Iteration   4: 945.546 us/op
# Warmup Iteration   5: 934.669 us/op
Iteration   1: 13008.215 us/op
Iteration   2: 16104.358 us/op
Iteration   3: 7277.729 us/op
Iteration   4: 6346.429 us/op
Iteration   5: 6502.272 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  10633.063 ±(99.9%) 5655.573 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 3 
    [ 7500.000,  8750.000) = 1 
    [ 8750.000, 10000.000) = 1 
    [10000.000, 11250.000) = 1 
    [11250.000, 12500.000) = 1 
    [12500.000, 13750.000) = 1 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 1 
    [16250.000, 17500.000) = 1 
    [17500.000, 18750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   6346.429 us/op
     p(50.0000) =   9759.929 us/op
     p(90.0000) =  16426.158 us/op
     p(95.0000) =  16461.914 us/op
     p(99.0000) =  16461.914 us/op
     p(99.9000) =  16461.914 us/op
     p(99.9900) =  16461.914 us/op
     p(99.9990) =  16461.914 us/op
     p(99.9999) =  16461.914 us/op
    p(100.0000) =  16461.914 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 1)

# Run progress: 84.47% complete, ETA 00:07:18
# Fork: 1 of 2
# Warmup Iteration   1: 1958.900 us/op
# Warmup Iteration   2: 1498.774 us/op
# Warmup Iteration   3: 1311.070 us/op
# Warmup Iteration   4: 957.689 us/op
# Warmup Iteration   5: 917.677 us/op
Iteration   1: 13539.185 us/op
Iteration   2: 17872.586 us/op
Iteration   3: 7364.341 us/op
Iteration   4: 6892.020 us/op
Iteration   5: 6986.452 us/op

# Run progress: 84.66% complete, ETA 00:07:12
# Fork: 2 of 2
# Warmup Iteration   1: 2194.167 us/op
# Warmup Iteration   2: 1442.887 us/op
# Warmup Iteration   3: 1259.970 us/op
# Warmup Iteration   4: 973.427 us/op
# Warmup Iteration   5: 922.129 us/op
Iteration   1: 13346.847 us/op
Iteration   2: 17058.864 us/op
Iteration   3: 7417.068 us/op
Iteration   4: 6972.047 us/op
Iteration   5: 6911.500 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  10436.091 ±(99.9%) 6848.883 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 6 
    [ 7500.000,  8750.000) = 0 
    [ 8750.000, 10000.000) = 0 
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 2 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 1 
    [17500.000, 18750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   6892.020 us/op
     p(50.0000) =   7390.705 us/op
     p(90.0000) =  17791.214 us/op
     p(95.0000) =  17872.586 us/op
     p(99.0000) =  17872.586 us/op
     p(99.9000) =  17872.586 us/op
     p(99.9900) =  17872.586 us/op
     p(99.9990) =  17872.586 us/op
     p(99.9999) =  17872.586 us/op
    p(100.0000) =  17872.586 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.125)

# Run progress: 84.85% complete, ETA 00:07:07
# Fork: 1 of 2
# Warmup Iteration   1: 2692.695 us/op
# Warmup Iteration   2: 1412.297 us/op
# Warmup Iteration   3: 1188.393 us/op
# Warmup Iteration   4: 1296.546 us/op
# Warmup Iteration   5: 1057.565 us/op
Iteration   1: 22322.447 us/op
Iteration   2: 22051.492 us/op
Iteration   3: 12195.672 us/op
Iteration   4: 11997.360 us/op
Iteration   5: 22697.967 us/op

# Run progress: 85.04% complete, ETA 00:07:02
# Fork: 2 of 2
# Warmup Iteration   1: 2304.444 us/op
# Warmup Iteration   2: 1379.598 us/op
# Warmup Iteration   3: 1484.834 us/op
# Warmup Iteration   4: 1041.305 us/op
# Warmup Iteration   5: 1127.843 us/op
Iteration   1: 22286.895 us/op
Iteration   2: 23052.316 us/op
Iteration   3: 12256.761 us/op
Iteration   4: 11784.615 us/op
Iteration   5: 22834.640 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  18348.016 ±(99.9%) 8197.135 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 4 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 0 
    [21250.000, 22500.000) = 3 
    [22500.000, 23750.000) = 3 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  11784.615 us/op
     p(50.0000) =  22169.194 us/op
     p(90.0000) =  23030.548 us/op
     p(95.0000) =  23052.316 us/op
     p(99.0000) =  23052.316 us/op
     p(99.9000) =  23052.316 us/op
     p(99.9900) =  23052.316 us/op
     p(99.9990) =  23052.316 us/op
     p(99.9999) =  23052.316 us/op
    p(100.0000) =  23052.316 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.250)

# Run progress: 85.23% complete, ETA 00:06:56
# Fork: 1 of 2
# Warmup Iteration   1: 2190.371 us/op
# Warmup Iteration   2: 1402.194 us/op
# Warmup Iteration   3: 1264.588 us/op
# Warmup Iteration   4: 1267.019 us/op
# Warmup Iteration   5: 1030.627 us/op
Iteration   1: 15659.898 us/op
Iteration   2: 20183.564 us/op
Iteration   3: 8977.258 us/op
Iteration   4: 8356.401 us/op
Iteration   5: 18406.686 us/op

# Run progress: 85.42% complete, ETA 00:06:51
# Fork: 2 of 2
# Warmup Iteration   1: 2189.338 us/op
# Warmup Iteration   2: 1536.597 us/op
# Warmup Iteration   3: 1220.663 us/op
# Warmup Iteration   4: 1391.687 us/op
# Warmup Iteration   5: 1055.673 us/op
Iteration   1: 15924.548 us/op
Iteration   2: 18860.957 us/op
Iteration   3: 8611.008 us/op
Iteration   4: 8483.137 us/op
Iteration   5: 18852.090 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  14231.555 ±(99.9%) 7597.911 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 0 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 2 
    [17500.000, 20000.000) = 3 
    [20000.000, 22500.000) = 1 
    [22500.000, 25000.000) = 0 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8356.401 us/op
     p(50.0000) =  15792.223 us/op
     p(90.0000) =  20051.303 us/op
     p(95.0000) =  20183.564 us/op
     p(99.0000) =  20183.564 us/op
     p(99.9000) =  20183.564 us/op
     p(99.9900) =  20183.564 us/op
     p(99.9990) =  20183.564 us/op
     p(99.9999) =  20183.564 us/op
    p(100.0000) =  20183.564 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.375)

# Run progress: 85.61% complete, ETA 00:06:46
# Fork: 1 of 2
# Warmup Iteration   1: 2180.018 us/op
# Warmup Iteration   2: 1449.775 us/op
# Warmup Iteration   3: 1371.702 us/op
# Warmup Iteration   4: 1021.170 us/op
# Warmup Iteration   5: 1015.379 us/op
Iteration   1: 16102.308 us/op
Iteration   2: 20060.312 us/op
Iteration   3: 9943.276 us/op
Iteration   4: 9047.302 us/op
Iteration   5: 20415.097 us/op

# Run progress: 85.80% complete, ETA 00:06:40
# Fork: 2 of 2
# Warmup Iteration   1: 2272.571 us/op
# Warmup Iteration   2: 1471.228 us/op
# Warmup Iteration   3: 1459.158 us/op
# Warmup Iteration   4: 1138.748 us/op
# Warmup Iteration   5: 1062.507 us/op
Iteration   1: 16884.248 us/op
Iteration   2: 20244.024 us/op
Iteration   3: 9724.785 us/op
Iteration   4: 8827.902 us/op
Iteration   5: 18530.646 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  14977.990 ±(99.9%) 7585.843 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 0 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 2 
    [17500.000, 20000.000) = 1 
    [20000.000, 22500.000) = 3 
    [22500.000, 25000.000) = 0 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8827.902 us/op
     p(50.0000) =  16493.278 us/op
     p(90.0000) =  20397.990 us/op
     p(95.0000) =  20415.097 us/op
     p(99.0000) =  20415.097 us/op
     p(99.9000) =  20415.097 us/op
     p(99.9900) =  20415.097 us/op
     p(99.9990) =  20415.097 us/op
     p(99.9999) =  20415.097 us/op
    p(100.0000) =  20415.097 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.5)

# Run progress: 85.98% complete, ETA 00:06:35
# Fork: 1 of 2
# Warmup Iteration   1: 2555.681 us/op
# Warmup Iteration   2: 1746.708 us/op
# Warmup Iteration   3: 1034.306 us/op
# Warmup Iteration   4: 1021.703 us/op
# Warmup Iteration   5: 1026.401 us/op
Iteration   1: 14074.725 us/op
Iteration   2: 14570.848 us/op
Iteration   3: 7355.824 us/op
Iteration   4: 6428.692 us/op
Iteration   5: 7294.162 us/op

# Run progress: 86.17% complete, ETA 00:06:30
# Fork: 2 of 2
# Warmup Iteration   1: 2091.929 us/op
# Warmup Iteration   2: 1390.395 us/op
# Warmup Iteration   3: 1195.118 us/op
# Warmup Iteration   4: 1316.913 us/op
# Warmup Iteration   5: 1032.914 us/op
Iteration   1: 13876.656 us/op
Iteration   2: 13699.240 us/op
Iteration   3: 7326.307 us/op
Iteration   4: 6331.159 us/op
Iteration   5: 7321.036 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   9827.865 ±(99.9%) 5538.112 us/op

  Histogram, us/op:
    [ 6000.000,  6500.000) = 2 
    [ 6500.000,  7000.000) = 0 
    [ 7000.000,  7500.000) = 4 
    [ 7500.000,  8000.000) = 0 
    [ 8000.000,  8500.000) = 0 
    [ 8500.000,  9000.000) = 0 
    [ 9000.000,  9500.000) = 0 
    [ 9500.000, 10000.000) = 0 
    [10000.000, 10500.000) = 0 
    [10500.000, 11000.000) = 0 
    [11000.000, 11500.000) = 0 
    [11500.000, 12000.000) = 0 
    [12000.000, 12500.000) = 0 
    [12500.000, 13000.000) = 0 
    [13000.000, 13500.000) = 0 
    [13500.000, 14000.000) = 2 
    [14000.000, 14500.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   6331.159 us/op
     p(50.0000) =   7341.066 us/op
     p(90.0000) =  14521.236 us/op
     p(95.0000) =  14570.848 us/op
     p(99.0000) =  14570.848 us/op
     p(99.9000) =  14570.848 us/op
     p(99.9900) =  14570.848 us/op
     p(99.9990) =  14570.848 us/op
     p(99.9999) =  14570.848 us/op
    p(100.0000) =  14570.848 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.625)

# Run progress: 86.36% complete, ETA 00:06:24
# Fork: 1 of 2
# Warmup Iteration   1: 2094.906 us/op
# Warmup Iteration   2: 1475.804 us/op
# Warmup Iteration   3: 1489.544 us/op
# Warmup Iteration   4: 1054.824 us/op
# Warmup Iteration   5: 1048.798 us/op
Iteration   1: 16039.686 us/op
Iteration   2: 15277.040 us/op
Iteration   3: 8449.687 us/op
Iteration   4: 6874.171 us/op
Iteration   5: 7857.505 us/op

# Run progress: 86.55% complete, ETA 00:06:19
# Fork: 2 of 2
# Warmup Iteration   1: 2220.547 us/op
# Warmup Iteration   2: 1377.260 us/op
# Warmup Iteration   3: 1209.440 us/op
# Warmup Iteration   4: 1316.001 us/op
# Warmup Iteration   5: 1039.025 us/op
Iteration   1: 15385.552 us/op
Iteration   2: 15332.891 us/op
Iteration   3: 8428.823 us/op
Iteration   4: 6973.555 us/op
Iteration   5: 7961.980 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  10858.089 ±(99.9%) 6109.096 us/op

  Histogram, us/op:
    [ 6000.000,  7000.000) = 2 
    [ 7000.000,  8000.000) = 2 
    [ 8000.000,  9000.000) = 2 
    [ 9000.000, 10000.000) = 0 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 0 
    [14000.000, 15000.000) = 0 
    [15000.000, 16000.000) = 3 

  Percentiles, us/op:
      p(0.0000) =   6874.171 us/op
     p(50.0000) =   8439.255 us/op
     p(90.0000) =  15974.273 us/op
     p(95.0000) =  16039.686 us/op
     p(99.0000) =  16039.686 us/op
     p(99.9000) =  16039.686 us/op
     p(99.9900) =  16039.686 us/op
     p(99.9990) =  16039.686 us/op
     p(99.9999) =  16039.686 us/op
    p(100.0000) =  16039.686 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.75)

# Run progress: 86.74% complete, ETA 00:06:14
# Fork: 1 of 2
# Warmup Iteration   1: 2284.175 us/op
# Warmup Iteration   2: 1367.394 us/op
# Warmup Iteration   3: 1191.179 us/op
# Warmup Iteration   4: 1263.608 us/op
# Warmup Iteration   5: 1031.063 us/op
Iteration   1: 17792.776 us/op
Iteration   2: 16849.869 us/op
Iteration   3: 8693.849 us/op
Iteration   4: 7740.275 us/op
Iteration   5: 8620.316 us/op

# Run progress: 86.93% complete, ETA 00:06:08
# Fork: 2 of 2
# Warmup Iteration   1: 2223.635 us/op
# Warmup Iteration   2: 1408.571 us/op
# Warmup Iteration   3: 1306.621 us/op
# Warmup Iteration   4: 1378.173 us/op
# Warmup Iteration   5: 1046.924 us/op
Iteration   1: 17036.049 us/op
Iteration   2: 15661.254 us/op
Iteration   3: 8693.229 us/op
Iteration   4: 8087.911 us/op
Iteration   5: 8711.089 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  11788.662 ±(99.9%) 6627.534 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 0 
    [ 7500.000,  8750.000) = 6 
    [ 8750.000, 10000.000) = 0 
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 1 
    [16250.000, 17500.000) = 2 
    [17500.000, 18750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   7740.275 us/op
     p(50.0000) =   8702.469 us/op
     p(90.0000) =  17717.103 us/op
     p(95.0000) =  17792.776 us/op
     p(99.0000) =  17792.776 us/op
     p(99.9000) =  17792.776 us/op
     p(99.9900) =  17792.776 us/op
     p(99.9990) =  17792.776 us/op
     p(99.9999) =  17792.776 us/op
    p(100.0000) =  17792.776 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.875)

# Run progress: 87.12% complete, ETA 00:06:03
# Fork: 1 of 2
# Warmup Iteration   1: 2188.928 us/op
# Warmup Iteration   2: 1360.210 us/op
# Warmup Iteration   3: 1485.780 us/op
# Warmup Iteration   4: 1076.930 us/op
# Warmup Iteration   5: 1087.992 us/op
Iteration   1: 8502.966 us/op
Iteration   2: 14441.345 us/op
Iteration   3: 6389.654 us/op
Iteration   4: 5712.023 us/op
Iteration   5: 5553.649 us/op

# Run progress: 87.31% complete, ETA 00:05:58
# Fork: 2 of 2
# Warmup Iteration   1: 2189.681 us/op
# Warmup Iteration   2: 1416.934 us/op
# Warmup Iteration   3: 1349.520 us/op
# Warmup Iteration   4: 1343.841 us/op
# Warmup Iteration   5: 1049.209 us/op
Iteration   1: 8627.227 us/op
Iteration   2: 14326.366 us/op
Iteration   3: 6152.890 us/op
Iteration   4: 5613.113 us/op
Iteration   5: 5619.596 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   8093.883 ±(99.9%) 5301.334 us/op

  Histogram, us/op:
    [ 5000.000,  6000.000) = 4 
    [ 6000.000,  7000.000) = 2 
    [ 7000.000,  8000.000) = 0 
    [ 8000.000,  9000.000) = 2 
    [ 9000.000, 10000.000) = 0 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   5553.649 us/op
     p(50.0000) =   6271.272 us/op
     p(90.0000) =  14429.847 us/op
     p(95.0000) =  14441.345 us/op
     p(99.0000) =  14441.345 us/op
     p(99.9000) =  14441.345 us/op
     p(99.9900) =  14441.345 us/op
     p(99.9990) =  14441.345 us/op
     p(99.9999) =  14441.345 us/op
    p(100.0000) =  14441.345 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 1)

# Run progress: 87.50% complete, ETA 00:05:52
# Fork: 1 of 2
# Warmup Iteration   1: 1967.447 us/op
# Warmup Iteration   2: 1418.449 us/op
# Warmup Iteration   3: 1440.416 us/op
# Warmup Iteration   4: 1051.103 us/op
# Warmup Iteration   5: 1072.299 us/op
Iteration   1: 8885.540 us/op
Iteration   2: 14047.400 us/op
Iteration   3: 6206.055 us/op
Iteration   4: 5685.915 us/op
Iteration   5: 5683.907 us/op

# Run progress: 87.69% complete, ETA 00:05:47
# Fork: 2 of 2
# Warmup Iteration   1: 2302.081 us/op
# Warmup Iteration   2: 1391.004 us/op
# Warmup Iteration   3: 1345.327 us/op
# Warmup Iteration   4: 1007.366 us/op
# Warmup Iteration   5: 1014.586 us/op
Iteration   1: 8519.232 us/op
Iteration   2: 14664.498 us/op
Iteration   3: 6225.430 us/op
Iteration   4: 5624.679 us/op
Iteration   5: 5690.224 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   8123.288 ±(99.9%) 5284.349 us/op

  Histogram, us/op:
    [ 5000.000,  6000.000) = 4 
    [ 6000.000,  7000.000) = 2 
    [ 7000.000,  8000.000) = 0 
    [ 8000.000,  9000.000) = 2 
    [ 9000.000, 10000.000) = 0 
    [10000.000, 11000.000) = 0 
    [11000.000, 12000.000) = 0 
    [12000.000, 13000.000) = 0 
    [13000.000, 14000.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   5624.679 us/op
     p(50.0000) =   6215.743 us/op
     p(90.0000) =  14602.788 us/op
     p(95.0000) =  14664.498 us/op
     p(99.0000) =  14664.498 us/op
     p(99.9000) =  14664.498 us/op
     p(99.9900) =  14664.498 us/op
     p(99.9990) =  14664.498 us/op
     p(99.9999) =  14664.498 us/op
    p(100.0000) =  14664.498 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.125)

# Run progress: 87.88% complete, ETA 00:05:42
# Fork: 1 of 2
# Warmup Iteration   1: 2846.603 us/op
# Warmup Iteration   2: 2097.799 us/op
# Warmup Iteration   3: 2528.018 us/op
# Warmup Iteration   4: 1617.565 us/op
# Warmup Iteration   5: 1778.443 us/op
Iteration   1: 22373.804 us/op
Iteration   2: 15336.645 us/op
Iteration   3: 23074.429 us/op
Iteration   4: 11150.682 us/op
Iteration   5: 11129.157 us/op

# Run progress: 88.07% complete, ETA 00:05:36
# Fork: 2 of 2
# Warmup Iteration   1: 3064.009 us/op
# Warmup Iteration   2: 2127.944 us/op
# Warmup Iteration   3: 2554.442 us/op
# Warmup Iteration   4: 1739.684 us/op
# Warmup Iteration   5: 1701.636 us/op
Iteration   1: 22313.374 us/op
Iteration   2: 15566.468 us/op
Iteration   3: 23268.395 us/op
Iteration   4: 11268.470 us/op
Iteration   5: 11479.586 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  16696.101 ±(99.9%) 8268.601 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 2 
    [11250.000, 12500.000) = 2 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 2 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 0 
    [21250.000, 22500.000) = 2 
    [22500.000, 23750.000) = 2 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 0 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  11129.157 us/op
     p(50.0000) =  15451.557 us/op
     p(90.0000) =  23248.998 us/op
     p(95.0000) =  23268.395 us/op
     p(99.0000) =  23268.395 us/op
     p(99.9000) =  23268.395 us/op
     p(99.9900) =  23268.395 us/op
     p(99.9990) =  23268.395 us/op
     p(99.9999) =  23268.395 us/op
    p(100.0000) =  23268.395 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.250)

# Run progress: 88.26% complete, ETA 00:05:31
# Fork: 1 of 2
# Warmup Iteration   1: 2853.737 us/op
# Warmup Iteration   2: 2028.573 us/op
# Warmup Iteration   3: 2245.018 us/op
# Warmup Iteration   4: 1684.178 us/op
# Warmup Iteration   5: 1838.674 us/op
Iteration   1: 10076.681 us/op
Iteration   2: 10534.389 us/op
Iteration   3: 20302.209 us/op
Iteration   4: 7030.122 us/op
Iteration   5: 6918.528 us/op

# Run progress: 88.45% complete, ETA 00:05:26
# Fork: 2 of 2
# Warmup Iteration   1: 2924.088 us/op
# Warmup Iteration   2: 2161.481 us/op
# Warmup Iteration   3: 2552.616 us/op
# Warmup Iteration   4: 1642.843 us/op
# Warmup Iteration   5: 1726.326 us/op
Iteration   1: 9610.195 us/op
Iteration   2: 10997.585 us/op
Iteration   3: 20589.733 us/op
Iteration   4: 7095.524 us/op
Iteration   5: 7044.548 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  11019.951 ±(99.9%) 7884.881 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 4 
    [ 7500.000, 10000.000) = 1 
    [10000.000, 12500.000) = 3 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 0 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   6918.528 us/op
     p(50.0000) =   9843.438 us/op
     p(90.0000) =  20560.981 us/op
     p(95.0000) =  20589.733 us/op
     p(99.0000) =  20589.733 us/op
     p(99.9000) =  20589.733 us/op
     p(99.9900) =  20589.733 us/op
     p(99.9990) =  20589.733 us/op
     p(99.9999) =  20589.733 us/op
    p(100.0000) =  20589.733 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.375)

# Run progress: 88.64% complete, ETA 00:05:20
# Fork: 1 of 2
# Warmup Iteration   1: 2685.145 us/op
# Warmup Iteration   2: 2088.002 us/op
# Warmup Iteration   3: 2562.236 us/op
# Warmup Iteration   4: 1622.252 us/op
# Warmup Iteration   5: 1843.249 us/op
Iteration   1: 9690.738 us/op
Iteration   2: 10833.149 us/op
Iteration   3: 20152.805 us/op
Iteration   4: 7175.234 us/op
Iteration   5: 7008.611 us/op

# Run progress: 88.83% complete, ETA 00:05:15
# Fork: 2 of 2
# Warmup Iteration   1: 2695.988 us/op
# Warmup Iteration   2: 2257.192 us/op
# Warmup Iteration   3: 2240.842 us/op
# Warmup Iteration   4: 1651.825 us/op
# Warmup Iteration   5: 1697.980 us/op
Iteration   1: 9821.349 us/op
Iteration   2: 11172.214 us/op
Iteration   3: 19748.190 us/op
Iteration   4: 6989.036 us/op
Iteration   5: 6958.305 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  10954.963 ±(99.9%) 7583.244 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 4 
    [ 7500.000, 10000.000) = 2 
    [10000.000, 12500.000) = 2 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 1 
    [20000.000, 22500.000) = 1 
    [22500.000, 25000.000) = 0 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   6958.305 us/op
     p(50.0000) =   9756.044 us/op
     p(90.0000) =  20112.344 us/op
     p(95.0000) =  20152.805 us/op
     p(99.0000) =  20152.805 us/op
     p(99.9000) =  20152.805 us/op
     p(99.9900) =  20152.805 us/op
     p(99.9990) =  20152.805 us/op
     p(99.9999) =  20152.805 us/op
    p(100.0000) =  20152.805 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.5)

# Run progress: 89.02% complete, ETA 00:05:10
# Fork: 1 of 2
# Warmup Iteration   1: 2942.451 us/op
# Warmup Iteration   2: 2064.041 us/op
# Warmup Iteration   3: 2492.365 us/op
# Warmup Iteration   4: 1658.512 us/op
# Warmup Iteration   5: 1796.727 us/op
Iteration   1: 9669.896 us/op
Iteration   2: 10633.006 us/op
Iteration   3: 20140.203 us/op
Iteration   4: 7038.881 us/op
Iteration   5: 6945.585 us/op

# Run progress: 89.20% complete, ETA 00:05:04
# Fork: 2 of 2
# Warmup Iteration   1: 2859.884 us/op
# Warmup Iteration   2: 2064.390 us/op
# Warmup Iteration   3: 2541.229 us/op
# Warmup Iteration   4: 1664.696 us/op
# Warmup Iteration   5: 1734.401 us/op
Iteration   1: 9948.921 us/op
Iteration   2: 11065.828 us/op
Iteration   3: 19896.409 us/op
Iteration   4: 7220.041 us/op
Iteration   5: 7003.627 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  10956.240 ±(99.9%) 7610.700 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 4 
    [ 7500.000, 10000.000) = 2 
    [10000.000, 12500.000) = 2 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 1 
    [20000.000, 22500.000) = 1 
    [22500.000, 25000.000) = 0 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   6945.585 us/op
     p(50.0000) =   9809.409 us/op
     p(90.0000) =  20115.824 us/op
     p(95.0000) =  20140.203 us/op
     p(99.0000) =  20140.203 us/op
     p(99.9000) =  20140.203 us/op
     p(99.9900) =  20140.203 us/op
     p(99.9990) =  20140.203 us/op
     p(99.9999) =  20140.203 us/op
    p(100.0000) =  20140.203 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.625)

# Run progress: 89.39% complete, ETA 00:04:59
# Fork: 1 of 2
# Warmup Iteration   1: 2823.604 us/op
# Warmup Iteration   2: 2143.867 us/op
# Warmup Iteration   3: 2567.885 us/op
# Warmup Iteration   4: 1670.647 us/op
# Warmup Iteration   5: 1836.729 us/op
Iteration   1: 9946.366 us/op
Iteration   2: 10908.365 us/op
Iteration   3: 20132.818 us/op
Iteration   4: 7001.575 us/op
Iteration   5: 7068.422 us/op

# Run progress: 89.58% complete, ETA 00:04:53
# Fork: 2 of 2
# Warmup Iteration   1: 2721.480 us/op
# Warmup Iteration   2: 2052.246 us/op
# Warmup Iteration   3: 2353.776 us/op
# Warmup Iteration   4: 1720.029 us/op
# Warmup Iteration   5: 1836.278 us/op
Iteration   1: 9905.305 us/op
Iteration   2: 10743.413 us/op
Iteration   3: 20523.886 us/op
Iteration   4: 7000.027 us/op
Iteration   5: 7051.315 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  11028.149 ±(99.9%) 7799.455 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 4 
    [ 7500.000, 10000.000) = 2 
    [10000.000, 12500.000) = 2 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 0 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   7000.027 us/op
     p(50.0000) =   9925.836 us/op
     p(90.0000) =  20484.779 us/op
     p(95.0000) =  20523.886 us/op
     p(99.0000) =  20523.886 us/op
     p(99.9000) =  20523.886 us/op
     p(99.9900) =  20523.886 us/op
     p(99.9990) =  20523.886 us/op
     p(99.9999) =  20523.886 us/op
    p(100.0000) =  20523.886 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.75)

# Run progress: 89.77% complete, ETA 00:04:48
# Fork: 1 of 2
# Warmup Iteration   1: 2943.572 us/op
# Warmup Iteration   2: 2075.477 us/op
# Warmup Iteration   3: 2525.805 us/op
# Warmup Iteration   4: 1755.610 us/op
# Warmup Iteration   5: 1779.245 us/op
Iteration   1: 9842.444 us/op
Iteration   2: 11075.585 us/op
Iteration   3: 19871.320 us/op
Iteration   4: 7066.904 us/op
Iteration   5: 7034.645 us/op

# Run progress: 89.96% complete, ETA 00:04:43
# Fork: 2 of 2
# Warmup Iteration   1: 2677.536 us/op
# Warmup Iteration   2: 2029.579 us/op
# Warmup Iteration   3: 2534.662 us/op
# Warmup Iteration   4: 1687.627 us/op
# Warmup Iteration   5: 1761.001 us/op
Iteration   1: 9896.378 us/op
Iteration   2: 10771.953 us/op
Iteration   3: 19818.857 us/op
Iteration   4: 6982.643 us/op
Iteration   5: 6990.865 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  10935.159 ±(99.9%) 7516.358 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 4 
    [ 7500.000,  8750.000) = 0 
    [ 8750.000, 10000.000) = 2 
    [10000.000, 11250.000) = 2 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   6982.643 us/op
     p(50.0000) =   9869.411 us/op
     p(90.0000) =  19866.074 us/op
     p(95.0000) =  19871.320 us/op
     p(99.0000) =  19871.320 us/op
     p(99.9000) =  19871.320 us/op
     p(99.9900) =  19871.320 us/op
     p(99.9990) =  19871.320 us/op
     p(99.9999) =  19871.320 us/op
    p(100.0000) =  19871.320 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.875)

# Run progress: 90.15% complete, ETA 00:04:37
# Fork: 1 of 2
# Warmup Iteration   1: 3388.955 us/op
# Warmup Iteration   2: 1952.480 us/op
# Warmup Iteration   3: 2359.341 us/op
# Warmup Iteration   4: 1711.529 us/op
# Warmup Iteration   5: 1758.532 us/op
Iteration   1: 9926.619 us/op
Iteration   2: 10917.848 us/op
Iteration   3: 19972.864 us/op
Iteration   4: 7157.658 us/op
Iteration   5: 7113.945 us/op

# Run progress: 90.34% complete, ETA 00:04:32
# Fork: 2 of 2
# Warmup Iteration   1: 2924.158 us/op
# Warmup Iteration   2: 2154.942 us/op
# Warmup Iteration   3: 2459.478 us/op
# Warmup Iteration   4: 1687.862 us/op
# Warmup Iteration   5: 1770.915 us/op
Iteration   1: 10028.073 us/op
Iteration   2: 10641.649 us/op
Iteration   3: 20140.508 us/op
Iteration   4: 6829.494 us/op
Iteration   5: 6870.462 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  10959.912 ±(99.9%) 7652.585 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 4 
    [ 7500.000, 10000.000) = 1 
    [10000.000, 12500.000) = 3 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 1 
    [20000.000, 22500.000) = 1 
    [22500.000, 25000.000) = 0 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   6829.494 us/op
     p(50.0000) =   9977.346 us/op
     p(90.0000) =  20123.744 us/op
     p(95.0000) =  20140.508 us/op
     p(99.0000) =  20140.508 us/op
     p(99.9000) =  20140.508 us/op
     p(99.9900) =  20140.508 us/op
     p(99.9990) =  20140.508 us/op
     p(99.9999) =  20140.508 us/op
    p(100.0000) =  20140.508 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 1)

# Run progress: 90.53% complete, ETA 00:04:27
# Fork: 1 of 2
# Warmup Iteration   1: 2812.405 us/op
# Warmup Iteration   2: 2113.417 us/op
# Warmup Iteration   3: 2472.044 us/op
# Warmup Iteration   4: 1707.642 us/op
# Warmup Iteration   5: 1768.694 us/op
Iteration   1: 9806.725 us/op
Iteration   2: 10821.235 us/op
Iteration   3: 19874.408 us/op
Iteration   4: 7047.321 us/op
Iteration   5: 7057.658 us/op

# Run progress: 90.72% complete, ETA 00:04:21
# Fork: 2 of 2
# Warmup Iteration   1: 2938.064 us/op
# Warmup Iteration   2: 2154.326 us/op
# Warmup Iteration   3: 2580.412 us/op
# Warmup Iteration   4: 1647.955 us/op
# Warmup Iteration   5: 2014.646 us/op
Iteration   1: 9959.945 us/op
Iteration   2: 10810.849 us/op
Iteration   3: 19773.604 us/op
Iteration   4: 6984.025 us/op
Iteration   5: 7176.087 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  10931.186 ±(99.9%) 7477.767 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 4 
    [ 7500.000,  8750.000) = 0 
    [ 8750.000, 10000.000) = 2 
    [10000.000, 11250.000) = 2 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   6984.025 us/op
     p(50.0000) =   9883.335 us/op
     p(90.0000) =  19864.328 us/op
     p(95.0000) =  19874.408 us/op
     p(99.0000) =  19874.408 us/op
     p(99.9000) =  19874.408 us/op
     p(99.9900) =  19874.408 us/op
     p(99.9990) =  19874.408 us/op
     p(99.9999) =  19874.408 us/op
    p(100.0000) =  19874.408 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.125)

# Run progress: 90.91% complete, ETA 00:04:16
# Fork: 1 of 2
# Warmup Iteration   1: 3429.277 us/op
# Warmup Iteration   2: 3276.266 us/op
# Warmup Iteration   3: 2440.214 us/op
# Warmup Iteration   4: 2355.477 us/op
# Warmup Iteration   5: 2374.653 us/op
Iteration   1: 11628.524 us/op
Iteration   2: 12579.102 us/op
Iteration   3: 22279.378 us/op
Iteration   4: 8478.187 us/op
Iteration   5: 8514.416 us/op

# Run progress: 91.10% complete, ETA 00:04:11
# Fork: 2 of 2
# Warmup Iteration   1: 3480.492 us/op
# Warmup Iteration   2: 3069.906 us/op
# Warmup Iteration   3: 3047.723 us/op
# Warmup Iteration   4: 2382.581 us/op
# Warmup Iteration   5: 2361.361 us/op
Iteration   1: 11656.084 us/op
Iteration   2: 12526.333 us/op
Iteration   3: 22524.380 us/op
Iteration   4: 9186.722 us/op
Iteration   5: 8875.789 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  12824.892 ±(99.9%) 8011.419 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 2 
    [12500.000, 15000.000) = 2 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 1 
    [22500.000, 25000.000) = 1 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8478.187 us/op
     p(50.0000) =  11642.304 us/op
     p(90.0000) =  22499.880 us/op
     p(95.0000) =  22524.380 us/op
     p(99.0000) =  22524.380 us/op
     p(99.9000) =  22524.380 us/op
     p(99.9900) =  22524.380 us/op
     p(99.9990) =  22524.380 us/op
     p(99.9999) =  22524.380 us/op
    p(100.0000) =  22524.380 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.250)

# Run progress: 91.29% complete, ETA 00:04:05
# Fork: 1 of 2
# Warmup Iteration   1: 3430.938 us/op
# Warmup Iteration   2: 3169.774 us/op
# Warmup Iteration   3: 3022.726 us/op
# Warmup Iteration   4: 2450.774 us/op
# Warmup Iteration   5: 2416.313 us/op
Iteration   1: 11615.539 us/op
Iteration   2: 12564.973 us/op
Iteration   3: 22163.220 us/op
Iteration   4: 8838.529 us/op
Iteration   5: 8951.074 us/op

# Run progress: 91.48% complete, ETA 00:04:00
# Fork: 2 of 2
# Warmup Iteration   1: 3447.262 us/op
# Warmup Iteration   2: 3121.293 us/op
# Warmup Iteration   3: 2907.501 us/op
# Warmup Iteration   4: 2442.820 us/op
# Warmup Iteration   5: 2410.702 us/op
Iteration   1: 11672.954 us/op
Iteration   2: 12387.886 us/op
Iteration   3: 22792.868 us/op
Iteration   4: 8756.600 us/op
Iteration   5: 8721.741 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  12846.538 ±(99.9%) 8029.983 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 3 
    [12500.000, 15000.000) = 1 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 1 
    [22500.000, 25000.000) = 1 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8721.741 us/op
     p(50.0000) =  11644.247 us/op
     p(90.0000) =  22729.903 us/op
     p(95.0000) =  22792.868 us/op
     p(99.0000) =  22792.868 us/op
     p(99.9000) =  22792.868 us/op
     p(99.9900) =  22792.868 us/op
     p(99.9990) =  22792.868 us/op
     p(99.9999) =  22792.868 us/op
    p(100.0000) =  22792.868 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.375)

# Run progress: 91.67% complete, ETA 00:03:55
# Fork: 1 of 2
# Warmup Iteration   1: 3577.250 us/op
# Warmup Iteration   2: 3202.299 us/op
# Warmup Iteration   3: 3362.518 us/op
# Warmup Iteration   4: 2397.748 us/op
# Warmup Iteration   5: 2474.154 us/op
Iteration   1: 11728.968 us/op
Iteration   2: 12485.100 us/op
Iteration   3: 22565.033 us/op
Iteration   4: 9000.992 us/op
Iteration   5: 9045.288 us/op

# Run progress: 91.86% complete, ETA 00:03:49
# Fork: 2 of 2
# Warmup Iteration   1: 3636.803 us/op
# Warmup Iteration   2: 3383.759 us/op
# Warmup Iteration   3: 2597.883 us/op
# Warmup Iteration   4: 2464.452 us/op
# Warmup Iteration   5: 2469.522 us/op
Iteration   1: 11883.595 us/op
Iteration   2: 12473.270 us/op
Iteration   3: 22509.376 us/op
Iteration   4: 8908.402 us/op
Iteration   5: 8776.319 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  12937.634 ±(99.9%) 7991.995 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 4 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 0 
    [22500.000, 25000.000) = 2 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8776.319 us/op
     p(50.0000) =  11806.282 us/op
     p(90.0000) =  22559.467 us/op
     p(95.0000) =  22565.033 us/op
     p(99.0000) =  22565.033 us/op
     p(99.9000) =  22565.033 us/op
     p(99.9900) =  22565.033 us/op
     p(99.9990) =  22565.033 us/op
     p(99.9999) =  22565.033 us/op
    p(100.0000) =  22565.033 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.5)

# Run progress: 92.05% complete, ETA 00:03:44
# Fork: 1 of 2
# Warmup Iteration   1: 3568.924 us/op
# Warmup Iteration   2: 3140.229 us/op
# Warmup Iteration   3: 3122.842 us/op
# Warmup Iteration   4: 2396.276 us/op
# Warmup Iteration   5: 2362.526 us/op
Iteration   1: 11710.804 us/op
Iteration   2: 12438.805 us/op
Iteration   3: 22378.746 us/op
Iteration   4: 8638.976 us/op
Iteration   5: 8542.439 us/op

# Run progress: 92.23% complete, ETA 00:03:39
# Fork: 2 of 2
# Warmup Iteration   1: 3349.656 us/op
# Warmup Iteration   2: 3067.474 us/op
# Warmup Iteration   3: 2822.631 us/op
# Warmup Iteration   4: 2502.705 us/op
# Warmup Iteration   5: 2405.575 us/op
Iteration   1: 11508.353 us/op
Iteration   2: 12472.941 us/op
Iteration   3: 22866.600 us/op
Iteration   4: 8773.919 us/op
Iteration   5: 8676.712 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  12800.829 ±(99.9%) 8201.161 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 4 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 1 
    [22500.000, 25000.000) = 1 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8542.439 us/op
     p(50.0000) =  11609.579 us/op
     p(90.0000) =  22817.815 us/op
     p(95.0000) =  22866.600 us/op
     p(99.0000) =  22866.600 us/op
     p(99.9000) =  22866.600 us/op
     p(99.9900) =  22866.600 us/op
     p(99.9990) =  22866.600 us/op
     p(99.9999) =  22866.600 us/op
    p(100.0000) =  22866.600 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.625)

# Run progress: 92.42% complete, ETA 00:03:33
# Fork: 1 of 2
# Warmup Iteration   1: 3448.462 us/op
# Warmup Iteration   2: 3454.543 us/op
# Warmup Iteration   3: 2656.649 us/op
# Warmup Iteration   4: 2486.605 us/op
# Warmup Iteration   5: 2508.479 us/op
Iteration   1: 11830.008 us/op
Iteration   2: 12512.040 us/op
Iteration   3: 22321.123 us/op
Iteration   4: 8707.704 us/op
Iteration   5: 8632.651 us/op

# Run progress: 92.61% complete, ETA 00:03:28
# Fork: 2 of 2
# Warmup Iteration   1: 3583.042 us/op
# Warmup Iteration   2: 3063.487 us/op
# Warmup Iteration   3: 2858.667 us/op
# Warmup Iteration   4: 2415.080 us/op
# Warmup Iteration   5: 2367.032 us/op
Iteration   1: 11665.684 us/op
Iteration   2: 12715.535 us/op
Iteration   3: 22716.182 us/op
Iteration   4: 8865.931 us/op
Iteration   5: 8632.382 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  12859.924 ±(99.9%) 8098.184 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 2 
    [12500.000, 15000.000) = 2 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 1 
    [22500.000, 25000.000) = 1 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8632.382 us/op
     p(50.0000) =  11747.846 us/op
     p(90.0000) =  22676.676 us/op
     p(95.0000) =  22716.182 us/op
     p(99.0000) =  22716.182 us/op
     p(99.9000) =  22716.182 us/op
     p(99.9900) =  22716.182 us/op
     p(99.9990) =  22716.182 us/op
     p(99.9999) =  22716.182 us/op
    p(100.0000) =  22716.182 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.75)

# Run progress: 92.80% complete, ETA 00:03:23
# Fork: 1 of 2
# Warmup Iteration   1: 3622.834 us/op
# Warmup Iteration   2: 3454.652 us/op
# Warmup Iteration   3: 2548.101 us/op
# Warmup Iteration   4: 2389.376 us/op
# Warmup Iteration   5: 2418.578 us/op
Iteration   1: 11669.348 us/op
Iteration   2: 12625.291 us/op
Iteration   3: 22806.142 us/op
Iteration   4: 9002.413 us/op
Iteration   5: 8685.784 us/op

# Run progress: 92.99% complete, ETA 00:03:17
# Fork: 2 of 2
# Warmup Iteration   1: 3447.178 us/op
# Warmup Iteration   2: 3196.574 us/op
# Warmup Iteration   3: 2927.942 us/op
# Warmup Iteration   4: 2402.428 us/op
# Warmup Iteration   5: 2458.961 us/op
Iteration   1: 11465.893 us/op
Iteration   2: 12482.463 us/op
Iteration   3: 22629.791 us/op
Iteration   4: 8929.946 us/op
Iteration   5: 8841.153 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  12913.822 ±(99.9%) 8154.161 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 3 
    [12500.000, 15000.000) = 1 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 0 
    [22500.000, 25000.000) = 2 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8685.784 us/op
     p(50.0000) =  11567.621 us/op
     p(90.0000) =  22788.507 us/op
     p(95.0000) =  22806.142 us/op
     p(99.0000) =  22806.142 us/op
     p(99.9000) =  22806.142 us/op
     p(99.9900) =  22806.142 us/op
     p(99.9990) =  22806.142 us/op
     p(99.9999) =  22806.142 us/op
    p(100.0000) =  22806.142 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.875)

# Run progress: 93.18% complete, ETA 00:03:12
# Fork: 1 of 2
# Warmup Iteration   1: 3586.408 us/op
# Warmup Iteration   2: 3150.352 us/op
# Warmup Iteration   3: 3107.058 us/op
# Warmup Iteration   4: 2575.670 us/op
# Warmup Iteration   5: 2387.391 us/op
Iteration   1: 11584.597 us/op
Iteration   2: 12318.899 us/op
Iteration   3: 22275.612 us/op
Iteration   4: 8766.819 us/op
Iteration   5: 8635.083 us/op

# Run progress: 93.37% complete, ETA 00:03:07
# Fork: 2 of 2
# Warmup Iteration   1: 3588.609 us/op
# Warmup Iteration   2: 3112.903 us/op
# Warmup Iteration   3: 2883.652 us/op
# Warmup Iteration   4: 2439.389 us/op
# Warmup Iteration   5: 2376.989 us/op
Iteration   1: 11809.186 us/op
Iteration   2: 12656.966 us/op
Iteration   3: 22412.368 us/op
Iteration   4: 8731.825 us/op
Iteration   5: 8767.989 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  12795.934 ±(99.9%) 7989.128 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 3 
    [12500.000, 15000.000) = 1 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 0 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8635.083 us/op
     p(50.0000) =  11696.892 us/op
     p(90.0000) =  22398.692 us/op
     p(95.0000) =  22412.368 us/op
     p(99.0000) =  22412.368 us/op
     p(99.9000) =  22412.368 us/op
     p(99.9900) =  22412.368 us/op
     p(99.9990) =  22412.368 us/op
     p(99.9999) =  22412.368 us/op
    p(100.0000) =  22412.368 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 1)

# Run progress: 93.56% complete, ETA 00:03:01
# Fork: 1 of 2
# Warmup Iteration   1: 3740.459 us/op
# Warmup Iteration   2: 3221.776 us/op
# Warmup Iteration   3: 2956.630 us/op
# Warmup Iteration   4: 2399.949 us/op
# Warmup Iteration   5: 2572.039 us/op
Iteration   1: 11731.482 us/op
Iteration   2: 12527.257 us/op
Iteration   3: 22454.328 us/op
Iteration   4: 8814.565 us/op
Iteration   5: 8846.577 us/op

# Run progress: 93.75% complete, ETA 00:02:56
# Fork: 2 of 2
# Warmup Iteration   1: 3575.119 us/op
# Warmup Iteration   2: 3139.011 us/op
# Warmup Iteration   3: 3069.189 us/op
# Warmup Iteration   4: 2401.876 us/op
# Warmup Iteration   5: 2441.369 us/op
Iteration   1: 11888.602 us/op
Iteration   2: 12747.955 us/op
Iteration   3: 22434.349 us/op
Iteration   4: 8886.784 us/op
Iteration   5: 9006.125 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  12933.802 ±(99.9%) 7954.106 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 2 
    [12500.000, 15000.000) = 2 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 0 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8814.565 us/op
     p(50.0000) =  11810.042 us/op
     p(90.0000) =  22452.330 us/op
     p(95.0000) =  22454.328 us/op
     p(99.0000) =  22454.328 us/op
     p(99.9000) =  22454.328 us/op
     p(99.9900) =  22454.328 us/op
     p(99.9990) =  22454.328 us/op
     p(99.9999) =  22454.328 us/op
    p(100.0000) =  22454.328 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.125)

# Run progress: 93.94% complete, ETA 00:02:51
# Fork: 1 of 2
# Warmup Iteration   1: 3380.916 us/op
# Warmup Iteration   2: 3446.036 us/op
# Warmup Iteration   3: 2632.658 us/op
# Warmup Iteration   4: 2398.112 us/op
# Warmup Iteration   5: 2438.779 us/op
Iteration   1: 11781.656 us/op
Iteration   2: 12456.692 us/op
Iteration   3: 22363.705 us/op
Iteration   4: 8680.846 us/op
Iteration   5: 8821.923 us/op

# Run progress: 94.13% complete, ETA 00:02:45
# Fork: 2 of 2
# Warmup Iteration   1: 3748.258 us/op
# Warmup Iteration   2: 3427.793 us/op
# Warmup Iteration   3: 2642.111 us/op
# Warmup Iteration   4: 2367.270 us/op
# Warmup Iteration   5: 2453.399 us/op
Iteration   1: 11879.229 us/op
Iteration   2: 12368.143 us/op
Iteration   3: 22545.240 us/op
Iteration   4: 8917.520 us/op
Iteration   5: 8772.255 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  12858.721 ±(99.9%) 8010.748 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 4 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 1 
    [22500.000, 25000.000) = 1 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8680.846 us/op
     p(50.0000) =  11830.443 us/op
     p(90.0000) =  22527.087 us/op
     p(95.0000) =  22545.240 us/op
     p(99.0000) =  22545.240 us/op
     p(99.9000) =  22545.240 us/op
     p(99.9900) =  22545.240 us/op
     p(99.9990) =  22545.240 us/op
     p(99.9999) =  22545.240 us/op
    p(100.0000) =  22545.240 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.250)

# Run progress: 94.32% complete, ETA 00:02:40
# Fork: 1 of 2
# Warmup Iteration   1: 3491.578 us/op
# Warmup Iteration   2: 3246.300 us/op
# Warmup Iteration   3: 2966.523 us/op
# Warmup Iteration   4: 2549.358 us/op
# Warmup Iteration   5: 2420.345 us/op
Iteration   1: 11737.748 us/op
Iteration   2: 12772.217 us/op
Iteration   3: 22336.014 us/op
Iteration   4: 8918.069 us/op
Iteration   5: 8768.572 us/op

# Run progress: 94.51% complete, ETA 00:02:35
# Fork: 2 of 2
# Warmup Iteration   1: 3509.936 us/op
# Warmup Iteration   2: 3198.206 us/op
# Warmup Iteration   3: 3120.751 us/op
# Warmup Iteration   4: 2522.991 us/op
# Warmup Iteration   5: 2406.705 us/op
Iteration   1: 11765.423 us/op
Iteration   2: 12460.911 us/op
Iteration   3: 22809.144 us/op
Iteration   4: 8708.712 us/op
Iteration   5: 8610.357 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  12888.717 ±(99.9%) 8109.843 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 3 
    [12500.000, 15000.000) = 1 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 1 
    [22500.000, 25000.000) = 1 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8610.357 us/op
     p(50.0000) =  11751.586 us/op
     p(90.0000) =  22761.831 us/op
     p(95.0000) =  22809.144 us/op
     p(99.0000) =  22809.144 us/op
     p(99.9000) =  22809.144 us/op
     p(99.9900) =  22809.144 us/op
     p(99.9990) =  22809.144 us/op
     p(99.9999) =  22809.144 us/op
    p(100.0000) =  22809.144 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.375)

# Run progress: 94.70% complete, ETA 00:02:29
# Fork: 1 of 2
# Warmup Iteration   1: 3765.716 us/op
# Warmup Iteration   2: 3369.074 us/op
# Warmup Iteration   3: 2566.013 us/op
# Warmup Iteration   4: 2354.914 us/op
# Warmup Iteration   5: 2335.715 us/op
Iteration   1: 11780.719 us/op
Iteration   2: 12468.614 us/op
Iteration   3: 22114.498 us/op
Iteration   4: 8818.192 us/op
Iteration   5: 8670.474 us/op

# Run progress: 94.89% complete, ETA 00:02:24
# Fork: 2 of 2
# Warmup Iteration   1: 3545.031 us/op
# Warmup Iteration   2: 3339.385 us/op
# Warmup Iteration   3: 2493.116 us/op
# Warmup Iteration   4: 2402.165 us/op
# Warmup Iteration   5: 2594.164 us/op
Iteration   1: 11769.985 us/op
Iteration   2: 12641.675 us/op
Iteration   3: 22455.335 us/op
Iteration   4: 8845.922 us/op
Iteration   5: 8714.636 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  12828.005 ±(99.9%) 7927.365 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 3 
    [12500.000, 15000.000) = 1 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 0 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8670.474 us/op
     p(50.0000) =  11775.352 us/op
     p(90.0000) =  22421.251 us/op
     p(95.0000) =  22455.335 us/op
     p(99.0000) =  22455.335 us/op
     p(99.9000) =  22455.335 us/op
     p(99.9900) =  22455.335 us/op
     p(99.9990) =  22455.335 us/op
     p(99.9999) =  22455.335 us/op
    p(100.0000) =  22455.335 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.5)

# Run progress: 95.08% complete, ETA 00:02:18
# Fork: 1 of 2
# Warmup Iteration   1: 3492.572 us/op
# Warmup Iteration   2: 3037.558 us/op
# Warmup Iteration   3: 2839.982 us/op
# Warmup Iteration   4: 2462.748 us/op
# Warmup Iteration   5: 2419.021 us/op
Iteration   1: 11963.165 us/op
Iteration   2: 12416.355 us/op
Iteration   3: 22362.166 us/op
Iteration   4: 8765.875 us/op
Iteration   5: 8933.160 us/op

# Run progress: 95.27% complete, ETA 00:02:13
# Fork: 2 of 2
# Warmup Iteration   1: 3564.116 us/op
# Warmup Iteration   2: 3349.301 us/op
# Warmup Iteration   3: 2575.401 us/op
# Warmup Iteration   4: 2454.939 us/op
# Warmup Iteration   5: 2462.248 us/op
Iteration   1: 11826.812 us/op
Iteration   2: 12470.329 us/op
Iteration   3: 22483.109 us/op
Iteration   4: 8905.896 us/op
Iteration   5: 9042.632 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  12916.950 ±(99.9%) 7927.807 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 4 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 0 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8765.875 us/op
     p(50.0000) =  11894.989 us/op
     p(90.0000) =  22471.015 us/op
     p(95.0000) =  22483.109 us/op
     p(99.0000) =  22483.109 us/op
     p(99.9000) =  22483.109 us/op
     p(99.9900) =  22483.109 us/op
     p(99.9990) =  22483.109 us/op
     p(99.9999) =  22483.109 us/op
    p(100.0000) =  22483.109 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.625)

# Run progress: 95.45% complete, ETA 00:02:08
# Fork: 1 of 2
# Warmup Iteration   1: 3404.830 us/op
# Warmup Iteration   2: 3230.198 us/op
# Warmup Iteration   3: 2966.778 us/op
# Warmup Iteration   4: 2444.626 us/op
# Warmup Iteration   5: 2424.536 us/op
Iteration   1: 11720.455 us/op
Iteration   2: 12680.614 us/op
Iteration   3: 22458.398 us/op
Iteration   4: 8739.329 us/op
Iteration   5: 8767.315 us/op

# Run progress: 95.64% complete, ETA 00:02:02
# Fork: 2 of 2
# Warmup Iteration   1: 3541.144 us/op
# Warmup Iteration   2: 3080.195 us/op
# Warmup Iteration   3: 3213.794 us/op
# Warmup Iteration   4: 2437.265 us/op
# Warmup Iteration   5: 2422.668 us/op
Iteration   1: 11856.290 us/op
Iteration   2: 12437.171 us/op
Iteration   3: 22466.626 us/op
Iteration   4: 8835.392 us/op
Iteration   5: 8693.956 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  12865.555 ±(99.9%) 8035.103 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 3 
    [12500.000, 15000.000) = 1 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 0 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8693.956 us/op
     p(50.0000) =  11788.373 us/op
     p(90.0000) =  22465.803 us/op
     p(95.0000) =  22466.626 us/op
     p(99.0000) =  22466.626 us/op
     p(99.9000) =  22466.626 us/op
     p(99.9900) =  22466.626 us/op
     p(99.9990) =  22466.626 us/op
     p(99.9999) =  22466.626 us/op
    p(100.0000) =  22466.626 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.75)

# Run progress: 95.83% complete, ETA 00:01:57
# Fork: 1 of 2
# Warmup Iteration   1: 3534.393 us/op
# Warmup Iteration   2: 3040.889 us/op
# Warmup Iteration   3: 2949.004 us/op
# Warmup Iteration   4: 2462.095 us/op
# Warmup Iteration   5: 2490.076 us/op
Iteration   1: 11737.286 us/op
Iteration   2: 12888.238 us/op
Iteration   3: 22321.401 us/op
Iteration   4: 8656.779 us/op
Iteration   5: 8778.163 us/op

# Run progress: 96.02% complete, ETA 00:01:52
# Fork: 2 of 2
# Warmup Iteration   1: 3673.100 us/op
# Warmup Iteration   2: 3358.306 us/op
# Warmup Iteration   3: 2528.512 us/op
# Warmup Iteration   4: 2356.016 us/op
# Warmup Iteration   5: 2352.088 us/op
Iteration   1: 11651.644 us/op
Iteration   2: 12419.319 us/op
Iteration   3: 22252.486 us/op
Iteration   4: 8888.382 us/op
Iteration   5: 8813.919 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  12840.762 ±(99.9%) 7922.187 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 3 
    [12500.000, 15000.000) = 1 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 2 
    [22500.000, 25000.000) = 0 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8656.779 us/op
     p(50.0000) =  11694.465 us/op
     p(90.0000) =  22314.510 us/op
     p(95.0000) =  22321.401 us/op
     p(99.0000) =  22321.401 us/op
     p(99.9000) =  22321.401 us/op
     p(99.9900) =  22321.401 us/op
     p(99.9990) =  22321.401 us/op
     p(99.9999) =  22321.401 us/op
    p(100.0000) =  22321.401 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.875)

# Run progress: 96.21% complete, ETA 00:01:46
# Fork: 1 of 2
# Warmup Iteration   1: 3667.193 us/op
# Warmup Iteration   2: 3083.297 us/op
# Warmup Iteration   3: 2979.919 us/op
# Warmup Iteration   4: 2412.323 us/op
# Warmup Iteration   5: 2397.468 us/op
Iteration   1: 11836.346 us/op
Iteration   2: 12480.333 us/op
Iteration   3: 22969.407 us/op
Iteration   4: 8692.062 us/op
Iteration   5: 8837.517 us/op

# Run progress: 96.40% complete, ETA 00:01:41
# Fork: 2 of 2
# Warmup Iteration   1: 3458.827 us/op
# Warmup Iteration   2: 3179.797 us/op
# Warmup Iteration   3: 2952.777 us/op
# Warmup Iteration   4: 2363.066 us/op
# Warmup Iteration   5: 2386.732 us/op
Iteration   1: 11584.119 us/op
Iteration   2: 12460.335 us/op
Iteration   3: 22183.943 us/op
Iteration   4: 8962.303 us/op
Iteration   5: 9063.017 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  12906.938 ±(99.9%) 8051.495 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 4 
    [12500.000, 15000.000) = 0 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 1 
    [22500.000, 25000.000) = 1 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8692.062 us/op
     p(50.0000) =  11710.233 us/op
     p(90.0000) =  22890.861 us/op
     p(95.0000) =  22969.407 us/op
     p(99.0000) =  22969.407 us/op
     p(99.9000) =  22969.407 us/op
     p(99.9900) =  22969.407 us/op
     p(99.9990) =  22969.407 us/op
     p(99.9999) =  22969.407 us/op
    p(100.0000) =  22969.407 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 1)

# Run progress: 96.59% complete, ETA 00:01:36
# Fork: 1 of 2
# Warmup Iteration   1: 3547.545 us/op
# Warmup Iteration   2: 3557.521 us/op
# Warmup Iteration   3: 2460.718 us/op
# Warmup Iteration   4: 2416.349 us/op
# Warmup Iteration   5: 2520.035 us/op
Iteration   1: 11695.726 us/op
Iteration   2: 12567.482 us/op
Iteration   3: 22781.837 us/op
Iteration   4: 8937.166 us/op
Iteration   5: 8830.167 us/op

# Run progress: 96.78% complete, ETA 00:01:30
# Fork: 2 of 2
# Warmup Iteration   1: 3255.500 us/op
# Warmup Iteration   2: 3223.822 us/op
# Warmup Iteration   3: 3067.474 us/op
# Warmup Iteration   4: 2430.229 us/op
# Warmup Iteration   5: 2432.212 us/op
Iteration   1: 11831.871 us/op
Iteration   2: 12451.018 us/op
Iteration   3: 22642.313 us/op
Iteration   4: 8796.043 us/op
Iteration   5: 8811.845 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  12934.547 ±(99.9%) 8145.933 us/op

  Histogram, us/op:
    [    0.000,  2500.000) = 0 
    [ 2500.000,  5000.000) = 0 
    [ 5000.000,  7500.000) = 0 
    [ 7500.000, 10000.000) = 4 
    [10000.000, 12500.000) = 3 
    [12500.000, 15000.000) = 1 
    [15000.000, 17500.000) = 0 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 0 
    [22500.000, 25000.000) = 2 
    [25000.000, 27500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8796.043 us/op
     p(50.0000) =  11763.799 us/op
     p(90.0000) =  22767.885 us/op
     p(95.0000) =  22781.837 us/op
     p(99.0000) =  22781.837 us/op
     p(99.9000) =  22781.837 us/op
     p(99.9900) =  22781.837 us/op
     p(99.9990) =  22781.837 us/op
     p(99.9999) =  22781.837 us/op
    p(100.0000) =  22781.837 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.125)

# Run progress: 96.97% complete, ETA 00:01:25
# Fork: 1 of 2
# Warmup Iteration   1: 4990.828 us/op
# Warmup Iteration   2: 5293.509 us/op
# Warmup Iteration   3: 4095.954 us/op
# Warmup Iteration   4: 4000.503 us/op
# Warmup Iteration   5: 3941.486 us/op
Iteration   1: 14975.932 us/op
Iteration   2: 15400.735 us/op
Iteration   3: 25906.104 us/op
Iteration   4: 10849.988 us/op
Iteration   5: 11067.507 us/op

# Run progress: 97.16% complete, ETA 00:01:20
# Fork: 2 of 2
# Warmup Iteration   1: 4885.499 us/op
# Warmup Iteration   2: 5018.502 us/op
# Warmup Iteration   3: 4122.621 us/op
# Warmup Iteration   4: 3864.097 us/op
# Warmup Iteration   5: 3915.408 us/op
Iteration   1: 14934.092 us/op
Iteration   2: 15760.910 us/op
Iteration   3: 25691.849 us/op
Iteration   4: 10846.041 us/op
Iteration   5: 10773.198 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  15620.636 ±(99.9%) 8698.979 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 4 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 2 
    [15000.000, 16250.000) = 2 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 0 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 2 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10773.198 us/op
     p(50.0000) =  14955.012 us/op
     p(90.0000) =  25884.678 us/op
     p(95.0000) =  25906.104 us/op
     p(99.0000) =  25906.104 us/op
     p(99.9000) =  25906.104 us/op
     p(99.9900) =  25906.104 us/op
     p(99.9990) =  25906.104 us/op
     p(99.9999) =  25906.104 us/op
    p(100.0000) =  25906.104 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.250)

# Run progress: 97.35% complete, ETA 00:01:14
# Fork: 1 of 2
# Warmup Iteration   1: 4981.882 us/op
# Warmup Iteration   2: 4838.802 us/op
# Warmup Iteration   3: 4032.514 us/op
# Warmup Iteration   4: 3909.875 us/op
# Warmup Iteration   5: 3898.592 us/op
Iteration   1: 14783.571 us/op
Iteration   2: 15712.542 us/op
Iteration   3: 25987.568 us/op
Iteration   4: 10658.537 us/op
Iteration   5: 10894.800 us/op

# Run progress: 97.54% complete, ETA 00:01:09
# Fork: 2 of 2
# Warmup Iteration   1: 5009.863 us/op
# Warmup Iteration   2: 4864.509 us/op
# Warmup Iteration   3: 3967.904 us/op
# Warmup Iteration   4: 3925.922 us/op
# Warmup Iteration   5: 3839.512 us/op
Iteration   1: 15070.073 us/op
Iteration   2: 15590.120 us/op
Iteration   3: 25992.059 us/op
Iteration   4: 10727.382 us/op
Iteration   5: 10723.303 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  15613.996 ±(99.9%) 8886.386 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 4 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 1 
    [15000.000, 16250.000) = 3 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 0 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 2 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10658.537 us/op
     p(50.0000) =  14926.822 us/op
     p(90.0000) =  25991.610 us/op
     p(95.0000) =  25992.059 us/op
     p(99.0000) =  25992.059 us/op
     p(99.9000) =  25992.059 us/op
     p(99.9900) =  25992.059 us/op
     p(99.9990) =  25992.059 us/op
     p(99.9999) =  25992.059 us/op
    p(100.0000) =  25992.059 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.375)

# Run progress: 97.73% complete, ETA 00:01:04
# Fork: 1 of 2
# Warmup Iteration   1: 4754.917 us/op
# Warmup Iteration   2: 4975.676 us/op
# Warmup Iteration   3: 4105.947 us/op
# Warmup Iteration   4: 3905.833 us/op
# Warmup Iteration   5: 3917.503 us/op
Iteration   1: 14747.137 us/op
Iteration   2: 15604.443 us/op
Iteration   3: 25531.937 us/op
Iteration   4: 11111.336 us/op
Iteration   5: 10843.445 us/op

# Run progress: 97.92% complete, ETA 00:00:58
# Fork: 2 of 2
# Warmup Iteration   1: 5087.408 us/op
# Warmup Iteration   2: 4797.539 us/op
# Warmup Iteration   3: 4198.224 us/op
# Warmup Iteration   4: 3985.417 us/op
# Warmup Iteration   5: 3893.128 us/op
Iteration   1: 14871.365 us/op
Iteration   2: 15772.916 us/op
Iteration   3: 25889.674 us/op
Iteration   4: 10986.767 us/op
Iteration   5: 10613.095 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  15597.212 ±(99.9%) 8651.749 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 4 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 2 
    [15000.000, 16250.000) = 2 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 0 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 2 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10613.095 us/op
     p(50.0000) =  14809.251 us/op
     p(90.0000) =  25853.900 us/op
     p(95.0000) =  25889.674 us/op
     p(99.0000) =  25889.674 us/op
     p(99.9000) =  25889.674 us/op
     p(99.9900) =  25889.674 us/op
     p(99.9990) =  25889.674 us/op
     p(99.9999) =  25889.674 us/op
    p(100.0000) =  25889.674 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.5)

# Run progress: 98.11% complete, ETA 00:00:53
# Fork: 1 of 2
# Warmup Iteration   1: 4803.453 us/op
# Warmup Iteration   2: 4626.995 us/op
# Warmup Iteration   3: 4463.285 us/op
# Warmup Iteration   4: 3881.583 us/op
# Warmup Iteration   5: 3886.650 us/op
Iteration   1: 15154.441 us/op
Iteration   2: 15855.801 us/op
Iteration   3: 26090.595 us/op
Iteration   4: 10671.171 us/op
Iteration   5: 10697.064 us/op

# Run progress: 98.30% complete, ETA 00:00:48
# Fork: 2 of 2
# Warmup Iteration   1: 4840.410 us/op
# Warmup Iteration   2: 4926.681 us/op
# Warmup Iteration   3: 3967.691 us/op
# Warmup Iteration   4: 3805.105 us/op
# Warmup Iteration   5: 3917.989 us/op
Iteration   1: 15174.353 us/op
Iteration   2: 15467.585 us/op
Iteration   3: 25860.988 us/op
Iteration   4: 10817.061 us/op
Iteration   5: 10758.380 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  15654.744 ±(99.9%) 8879.051 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 4 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 4 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 0 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 2 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10671.171 us/op
     p(50.0000) =  15164.397 us/op
     p(90.0000) =  26067.634 us/op
     p(95.0000) =  26090.595 us/op
     p(99.0000) =  26090.595 us/op
     p(99.9000) =  26090.595 us/op
     p(99.9900) =  26090.595 us/op
     p(99.9990) =  26090.595 us/op
     p(99.9999) =  26090.595 us/op
    p(100.0000) =  26090.595 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.625)

# Run progress: 98.48% complete, ETA 00:00:42
# Fork: 1 of 2
# Warmup Iteration   1: 4946.779 us/op
# Warmup Iteration   2: 4962.688 us/op
# Warmup Iteration   3: 4103.058 us/op
# Warmup Iteration   4: 3962.981 us/op
# Warmup Iteration   5: 3950.573 us/op
Iteration   1: 14706.858 us/op
Iteration   2: 15624.712 us/op
Iteration   3: 25870.892 us/op
Iteration   4: 10798.680 us/op
Iteration   5: 10923.788 us/op

# Run progress: 98.67% complete, ETA 00:00:37
# Fork: 2 of 2
# Warmup Iteration   1: 5224.217 us/op
# Warmup Iteration   2: 4991.538 us/op
# Warmup Iteration   3: 4350.803 us/op
# Warmup Iteration   4: 4199.109 us/op
# Warmup Iteration   5: 4207.471 us/op
Iteration   1: 15869.036 us/op
Iteration   2: 15930.339 us/op
Iteration   3: 26082.905 us/op
Iteration   4: 11337.639 us/op
Iteration   5: 11651.761 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  15879.661 ±(99.9%) 8644.748 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 2 
    [11250.000, 12500.000) = 2 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 1 
    [15000.000, 16250.000) = 3 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 0 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 2 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10798.680 us/op
     p(50.0000) =  15165.785 us/op
     p(90.0000) =  26061.704 us/op
     p(95.0000) =  26082.905 us/op
     p(99.0000) =  26082.905 us/op
     p(99.9000) =  26082.905 us/op
     p(99.9900) =  26082.905 us/op
     p(99.9990) =  26082.905 us/op
     p(99.9999) =  26082.905 us/op
    p(100.0000) =  26082.905 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.75)

# Run progress: 98.86% complete, ETA 00:00:32
# Fork: 1 of 2
# Warmup Iteration   1: 4955.558 us/op
# Warmup Iteration   2: 4700.896 us/op
# Warmup Iteration   3: 4071.368 us/op
# Warmup Iteration   4: 4009.981 us/op
# Warmup Iteration   5: 3915.161 us/op
Iteration   1: 14583.890 us/op
Iteration   2: 15582.971 us/op
Iteration   3: 25814.251 us/op
Iteration   4: 10882.550 us/op
Iteration   5: 10767.123 us/op

# Run progress: 99.05% complete, ETA 00:00:26
# Fork: 2 of 2
# Warmup Iteration   1: 6118.106 us/op
# Warmup Iteration   2: 5065.765 us/op
# Warmup Iteration   3: 3935.430 us/op
# Warmup Iteration   4: 3804.509 us/op
# Warmup Iteration   5: 3889.285 us/op
Iteration   1: 14879.215 us/op
Iteration   2: 15656.160 us/op
Iteration   3: 26061.510 us/op
Iteration   4: 10827.080 us/op
Iteration   5: 10861.147 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  15591.590 ±(99.9%) 8818.122 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 4 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 2 
    [15000.000, 16250.000) = 2 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 0 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 2 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10767.123 us/op
     p(50.0000) =  14731.553 us/op
     p(90.0000) =  26036.784 us/op
     p(95.0000) =  26061.510 us/op
     p(99.0000) =  26061.510 us/op
     p(99.9000) =  26061.510 us/op
     p(99.9900) =  26061.510 us/op
     p(99.9990) =  26061.510 us/op
     p(99.9999) =  26061.510 us/op
    p(100.0000) =  26061.510 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.875)

# Run progress: 99.24% complete, ETA 00:00:21
# Fork: 1 of 2
# Warmup Iteration   1: 4925.546 us/op
# Warmup Iteration   2: 5148.878 us/op
# Warmup Iteration   3: 4142.779 us/op
# Warmup Iteration   4: 3995.774 us/op
# Warmup Iteration   5: 4057.600 us/op
Iteration   1: 14975.213 us/op
Iteration   2: 15785.475 us/op
Iteration   3: 25739.347 us/op
Iteration   4: 10815.330 us/op
Iteration   5: 10944.886 us/op

# Run progress: 99.43% complete, ETA 00:00:16
# Fork: 2 of 2
# Warmup Iteration   1: 4977.478 us/op
# Warmup Iteration   2: 4826.789 us/op
# Warmup Iteration   3: 4017.445 us/op
# Warmup Iteration   4: 3967.011 us/op
# Warmup Iteration   5: 4025.208 us/op
Iteration   1: 14935.167 us/op
Iteration   2: 16172.129 us/op
Iteration   3: 25920.930 us/op
Iteration   4: 10696.363 us/op
Iteration   5: 10769.917 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  15675.476 ±(99.9%) 8763.610 us/op

  Histogram, us/op:
    [10000.000, 11250.000) = 4 
    [11250.000, 12500.000) = 0 
    [12500.000, 13750.000) = 0 
    [13750.000, 15000.000) = 2 
    [15000.000, 16250.000) = 2 
    [16250.000, 17500.000) = 0 
    [17500.000, 18750.000) = 0 
    [18750.000, 20000.000) = 0 
    [20000.000, 21250.000) = 0 
    [21250.000, 22500.000) = 0 
    [22500.000, 23750.000) = 0 
    [23750.000, 25000.000) = 0 
    [25000.000, 26250.000) = 2 
    [26250.000, 27500.000) = 0 
    [27500.000, 28750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10696.363 us/op
     p(50.0000) =  14955.190 us/op
     p(90.0000) =  25902.772 us/op
     p(95.0000) =  25920.930 us/op
     p(99.0000) =  25920.930 us/op
     p(99.9000) =  25920.930 us/op
     p(99.9900) =  25920.930 us/op
     p(99.9990) =  25920.930 us/op
     p(99.9999) =  25920.930 us/op
    p(100.0000) =  25920.930 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 1)

# Run progress: 99.62% complete, ETA 00:00:10
# Fork: 1 of 2
# Warmup Iteration   1: 5028.644 us/op
# Warmup Iteration   2: 4995.330 us/op
# Warmup Iteration   3: 4042.996 us/op
# Warmup Iteration   4: 3853.114 us/op
# Warmup Iteration   5: 3987.533 us/op
Iteration   1: 14918.961 us/op
Iteration   2: 15478.689 us/op
Iteration   3: 25804.945 us/op
Iteration   4: 10698.017 us/op
Iteration   5: 10896.144 us/op

# Run progress: 99.81% complete, ETA 00:00:05
# Fork: 2 of 2
# Warmup Iteration   1: 5324.442 us/op
# Warmup Iteration   2: 4728.447 us/op
# Warmup Iteration   3: 4829.138 us/op
# Warmup Iteration   4: 4246.418 us/op
# Warmup Iteration   5: 4425.499 us/op
Iteration   1: 17329.669 us/op
Iteration   2: 20255.081 us/op
Iteration   3: 32707.401 us/op
Iteration   4: 15120.202 us/op
Iteration   5: 15647.004 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =  17885.611 ±(99.9%) 10279.790 us/op

  Histogram, us/op:
    [10000.000, 12500.000) = 2 
    [12500.000, 15000.000) = 1 
    [15000.000, 17500.000) = 4 
    [17500.000, 20000.000) = 0 
    [20000.000, 22500.000) = 1 
    [22500.000, 25000.000) = 0 
    [25000.000, 27500.000) = 1 
    [27500.000, 30000.000) = 0 
    [30000.000, 32500.000) = 0 
    [32500.000, 35000.000) = 1 
    [35000.000, 37500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10698.017 us/op
     p(50.0000) =  15562.847 us/op
     p(90.0000) =  32017.155 us/op
     p(95.0000) =  32707.401 us/op
     p(99.0000) =  32707.401 us/op
     p(99.9000) =  32707.401 us/op
     p(99.9900) =  32707.401 us/op
     p(99.9990) =  32707.401 us/op
     p(99.9999) =  32707.401 us/op
    p(100.0000) =  32707.401 us/op


# Run complete. Total time: 00:47:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                    (initialCapacity)  (loadFactor)  Mode  Cnt      Score       Error  Units
JavaHashMapBenchMarkPut.put                                 16         0.125    ss   10  16576.687 ±  6432.269  us/op
JavaHashMapBenchMarkPut.put                                 16         0.250    ss   10  13649.697 ±  6554.132  us/op
JavaHashMapBenchMarkPut.put                                 16         0.375    ss   10  14809.939 ±  6720.434  us/op
JavaHashMapBenchMarkPut.put                                 16           0.5    ss   10  10227.560 ±  4558.301  us/op
JavaHashMapBenchMarkPut.put                                 16         0.625    ss   10  11224.576 ±  4856.903  us/op
JavaHashMapBenchMarkPut.put                                 16          0.75    ss   10  12499.111 ±  5342.779  us/op
JavaHashMapBenchMarkPut.put                                 16         0.875    ss   10  10610.478 ±  5833.062  us/op
JavaHashMapBenchMarkPut.put                                 16             1    ss   10  11064.330 ±  5383.298  us/op
JavaHashMapBenchMarkPut.put                                100         0.125    ss   10  16979.034 ±  6772.768  us/op
JavaHashMapBenchMarkPut.put                                100         0.250    ss   10  13826.426 ±  6840.424  us/op
JavaHashMapBenchMarkPut.put                                100         0.375    ss   10  14797.559 ±  6561.882  us/op
JavaHashMapBenchMarkPut.put                                100           0.5    ss   10  10234.723 ±  4441.470  us/op
JavaHashMapBenchMarkPut.put                                100         0.625    ss   10  11442.025 ±  5227.789  us/op
JavaHashMapBenchMarkPut.put                                100          0.75    ss   10  12208.639 ±  5274.948  us/op
JavaHashMapBenchMarkPut.put                                100         0.875    ss   10  10527.127 ±  5953.287  us/op
JavaHashMapBenchMarkPut.put                                100             1    ss   10  11331.931 ±  5754.488  us/op
JavaHashMapBenchMarkPut.put                               1024         0.125    ss   10  17988.759 ±  7190.839  us/op
JavaHashMapBenchMarkPut.put                               1024         0.250    ss   10  13546.686 ±  6780.164  us/op
JavaHashMapBenchMarkPut.put                               1024         0.375    ss   10  14986.453 ±  6970.566  us/op
JavaHashMapBenchMarkPut.put                               1024           0.5    ss   10  11086.680 ±  4630.433  us/op
JavaHashMapBenchMarkPut.put                               1024         0.625    ss   10  11488.740 ±  5054.245  us/op
JavaHashMapBenchMarkPut.put                               1024          0.75    ss   10  12158.636 ±  5066.024  us/op
JavaHashMapBenchMarkPut.put                               1024         0.875    ss   10  10715.937 ±  6182.229  us/op
JavaHashMapBenchMarkPut.put                               1024             1    ss   10  10983.698 ±  5442.099  us/op
JavaHashMapBenchMarkPut.put                               1000         0.125    ss   10  16609.911 ±  6378.292  us/op
JavaHashMapBenchMarkPut.put                               1000         0.250    ss   10  13474.678 ±  6561.000  us/op
JavaHashMapBenchMarkPut.put                               1000         0.375    ss   10  14982.438 ±  7042.607  us/op
JavaHashMapBenchMarkPut.put                               1000           0.5    ss   10  11066.559 ±  4693.176  us/op
JavaHashMapBenchMarkPut.put                               1000         0.625    ss   10  11866.180 ±  5791.432  us/op
JavaHashMapBenchMarkPut.put                               1000          0.75    ss   10  12199.922 ±  4899.884  us/op
JavaHashMapBenchMarkPut.put                               1000         0.875    ss   10  10208.538 ±  5269.317  us/op
JavaHashMapBenchMarkPut.put                               1000             1    ss   10  11018.666 ±  5393.524  us/op
JavaHashMapBenchMarkPut.put                              10000         0.125    ss   10  16477.466 ±  6593.633  us/op
JavaHashMapBenchMarkPut.put                              10000         0.250    ss   10  13563.361 ±  6696.058  us/op
JavaHashMapBenchMarkPut.put                              10000         0.375    ss   10  15989.214 ±  7274.504  us/op
JavaHashMapBenchMarkPut.put                              10000           0.5    ss   10  10234.743 ±  5097.505  us/op
JavaHashMapBenchMarkPut.put                              10000         0.625    ss   10  11801.163 ±  5133.165  us/op
JavaHashMapBenchMarkPut.put                              10000          0.75    ss   10  13004.096 ±  6003.027  us/op
JavaHashMapBenchMarkPut.put                              10000         0.875    ss   10  10827.073 ±  6420.232  us/op
JavaHashMapBenchMarkPut.put                              10000             1    ss   10  11457.719 ±  6658.556  us/op
JavaHashMapBenchMarkPut.put                              65536         0.125    ss   10  16591.417 ±  7081.477  us/op
JavaHashMapBenchMarkPut.put                              65536         0.250    ss   10  14706.733 ±  7573.000  us/op
JavaHashMapBenchMarkPut.put                              65536         0.375    ss   10  16235.596 ±  8637.209  us/op
JavaHashMapBenchMarkPut.put                              65536           0.5    ss   10  10580.365 ±  5741.401  us/op
JavaHashMapBenchMarkPut.put                              65536         0.625    ss   10  11693.933 ±  6831.916  us/op
JavaHashMapBenchMarkPut.put                              65536          0.75    ss   10  12210.824 ±  6526.503  us/op
JavaHashMapBenchMarkPut.put                              65536         0.875    ss   10   9992.342 ±  6459.114  us/op
JavaHashMapBenchMarkPut.put                              65536             1    ss   10  10675.354 ±  7140.769  us/op
JavaHashMapBenchMarkPut.put                             100000         0.125    ss   10  18091.782 ±  7959.878  us/op
JavaHashMapBenchMarkPut.put                             100000         0.250    ss   10  14258.615 ±  7595.669  us/op
JavaHashMapBenchMarkPut.put                             100000         0.375    ss   10  15215.586 ±  7961.782  us/op
JavaHashMapBenchMarkPut.put                             100000           0.5    ss   10   9855.615 ±  5526.837  us/op
JavaHashMapBenchMarkPut.put                             100000         0.625    ss   10  10871.010 ±  6059.655  us/op
JavaHashMapBenchMarkPut.put                             100000          0.75    ss   10  11538.054 ±  6098.949  us/op
JavaHashMapBenchMarkPut.put                             100000         0.875    ss   10   7978.307 ±  4993.678  us/op
JavaHashMapBenchMarkPut.put                             100000             1    ss   10   8039.012 ±  5304.903  us/op
JavaHashMapBenchMarkPut.put                             524288         0.125    ss   10  16693.124 ±  8313.465  us/op
JavaHashMapBenchMarkPut.put                             524288         0.250    ss   10  10815.051 ±  7577.374  us/op
JavaHashMapBenchMarkPut.put                             524288         0.375    ss   10  10957.444 ±  7406.659  us/op
JavaHashMapBenchMarkPut.put                             524288           0.5    ss   10  10839.831 ±  7659.908  us/op
JavaHashMapBenchMarkPut.put                             524288         0.625    ss   10  10888.089 ±  7593.635  us/op
JavaHashMapBenchMarkPut.put                             524288          0.75    ss   10  10837.744 ±  7618.093  us/op
JavaHashMapBenchMarkPut.put                             524288         0.875    ss   10  11034.645 ±  8073.543  us/op
JavaHashMapBenchMarkPut.put                             524288             1    ss   10  10845.596 ±  7689.856  us/op
JavaHashMapBenchMarkPut.put                            1000000         0.125    ss   10  12826.046 ±  8126.549  us/op
JavaHashMapBenchMarkPut.put                            1000000         0.250    ss   10  12812.523 ±  7902.008  us/op
JavaHashMapBenchMarkPut.put                            1000000         0.375    ss   10  12919.152 ±  8135.022  us/op
JavaHashMapBenchMarkPut.put                            1000000           0.5    ss   10  12858.322 ±  7932.182  us/op
JavaHashMapBenchMarkPut.put                            1000000         0.625    ss   10  12889.999 ±  8005.827  us/op
JavaHashMapBenchMarkPut.put                            1000000          0.75    ss   10  12796.340 ±  7973.782  us/op
JavaHashMapBenchMarkPut.put                            1000000         0.875    ss   10  12815.527 ±  8015.541  us/op
JavaHashMapBenchMarkPut.put                            1000000             1    ss   10  12834.516 ±  7952.564  us/op
JavaHashMapBenchMarkPut.put                            1048576         0.125    ss   10  12800.595 ±  7955.004  us/op
JavaHashMapBenchMarkPut.put                            1048576         0.250    ss   10  12894.635 ±  7986.166  us/op
JavaHashMapBenchMarkPut.put                            1048576         0.375    ss   10  12818.068 ±  8202.447  us/op
JavaHashMapBenchMarkPut.put                            1048576           0.5    ss   10  12807.794 ±  8083.697  us/op
JavaHashMapBenchMarkPut.put                            1048576         0.625    ss   10  12818.221 ±  8070.633  us/op
JavaHashMapBenchMarkPut.put                            1048576          0.75    ss   10  12797.801 ±  8003.278  us/op
JavaHashMapBenchMarkPut.put                            1048576         0.875    ss   10  12770.755 ±  7856.063  us/op
JavaHashMapBenchMarkPut.put                            1048576             1    ss   10  12838.075 ±  8021.072  us/op
JavaHashMapBenchMarkPut.put                            2097152         0.125    ss   10  15598.134 ±  8834.728  us/op
JavaHashMapBenchMarkPut.put                            2097152         0.250    ss   10  15544.667 ±  8868.648  us/op
JavaHashMapBenchMarkPut.put                            2097152         0.375    ss   10  15638.085 ±  9040.553  us/op
JavaHashMapBenchMarkPut.put                            2097152           0.5    ss   10  15450.206 ±  8661.243  us/op
JavaHashMapBenchMarkPut.put                            2097152         0.625    ss   10  15655.487 ±  8873.425  us/op
JavaHashMapBenchMarkPut.put                            2097152          0.75    ss   10  15647.551 ±  8847.914  us/op
JavaHashMapBenchMarkPut.put                            2097152         0.875    ss   10  15595.204 ±  8980.512  us/op
JavaHashMapBenchMarkPut.put                            2097152             1    ss   10  15562.387 ±  8805.500  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16         0.125    ss   10  16688.790 ±  6795.444  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16         0.250    ss   10  13725.965 ±  6476.609  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16         0.375    ss   10  15405.575 ±  6609.340  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16           0.5    ss   10  11285.547 ±  4675.960  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16         0.625    ss   10  11538.781 ±  5023.427  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16          0.75    ss   10  13153.018 ±  4849.737  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16         0.875    ss   10  10642.275 ±  4994.341  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16             1    ss   10  11236.754 ±  4872.700  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100         0.125    ss   10  17023.876 ±  7190.746  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100         0.250    ss   10  13535.910 ±  6432.394  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100         0.375    ss   10  15465.210 ±  6635.876  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100           0.5    ss   10  11464.456 ±  4925.501  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100         0.625    ss   10  11804.991 ±  5608.821  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100          0.75    ss   10  13556.262 ±  5539.255  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100         0.875    ss   10  10815.492 ±  5614.293  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100             1    ss   10  11347.534 ±  5433.801  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024         0.125    ss   10  16715.035 ±  6821.061  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024         0.250    ss   10  13383.329 ±  6047.936  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024         0.375    ss   10  15181.679 ±  6565.084  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024           0.5    ss   10  11235.523 ±  4860.170  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024         0.625    ss   10  11981.039 ±  5629.364  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024          0.75    ss   10  12998.734 ±  4905.955  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024         0.875    ss   10  10514.951 ±  5172.133  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024             1    ss   10  11160.662 ±  4899.636  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000         0.125    ss   10  16633.748 ±  6638.010  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000         0.250    ss   10  13398.713 ±  6279.824  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000         0.375    ss   10  15658.359 ±  6605.124  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000           0.5    ss   10  11303.280 ±  4865.535  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000         0.625    ss   10  11686.120 ±  5199.047  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000          0.75    ss   10  13116.832 ±  4868.444  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000         0.875    ss   10  10585.243 ±  5349.807  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000             1    ss   10  11229.550 ±  5009.478  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000         0.125    ss   10  16705.325 ±  6701.741  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000         0.250    ss   10  13563.299 ±  6157.069  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000         0.375    ss   10  15360.799 ±  7535.979  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000           0.5    ss   10  10599.717 ±  4761.981  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000         0.625    ss   10  12082.940 ±  5348.200  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000          0.75    ss   10  13113.020 ±  5200.035  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000         0.875    ss   10  11722.642 ±  5761.752  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000             1    ss   10  12021.790 ±  5904.750  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536         0.125    ss   10  16833.647 ±  6684.196  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536         0.250    ss   10  14357.324 ±  6876.371  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536         0.375    ss   10  15902.258 ±  7347.721  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536           0.5    ss   10  10876.643 ±  5676.565  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536         0.625    ss   10  12074.000 ±  6838.709  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536          0.75    ss   10  13029.551 ±  6084.379  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536         0.875    ss   10  10227.321 ±  5553.886  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536             1    ss   10  10593.726 ±  6069.488  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000         0.125    ss   10  18293.225 ±  7261.891  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000         0.250    ss   10  14205.454 ±  6800.778  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000         0.375    ss   10  15830.109 ±  7152.215  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000           0.5    ss   10  10081.404 ±  5633.430  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000         0.625    ss   10  11098.548 ±  5762.941  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000          0.75    ss   10  11885.936 ±  6392.198  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000         0.875    ss   10   8013.141 ±  4610.866  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000             1    ss   10   8209.866 ±  4746.036  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288         0.125    ss   10  19541.037 ± 10671.726  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288         0.250    ss   10  13215.772 ±  9822.944  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288         0.375    ss   10  13300.680 ±  9779.493  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288           0.5    ss   10  13475.643 ± 10072.205  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288         0.625    ss   10  13253.878 ±  9797.279  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288          0.75    ss   10  13226.011 ±  9953.190  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288         0.875    ss   10  13231.832 ±  9891.785  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288             1    ss   10  13273.152 ±  9745.867  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000         0.125    ss   10  15396.879 ± 10103.756  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000         0.250    ss   10  15233.713 ± 10165.352  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000         0.375    ss   10  15510.232 ± 10218.111  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000           0.5    ss   10  15258.908 ±  9892.231  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000         0.625    ss   10  15315.873 ± 10020.245  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000          0.75    ss   10  15167.922 ±  9878.737  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000         0.875    ss   10  15146.970 ± 10052.400  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000             1    ss   10  15239.504 ± 10031.596  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576         0.125    ss   10  15368.392 ± 10099.498  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576         0.250    ss   10  15141.226 ±  9929.545  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576         0.375    ss   10  15260.998 ± 10008.561  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576           0.5    ss   10  15272.615 ± 10147.025  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576         0.625    ss   10  15195.738 ± 10103.949  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576          0.75    ss   10  15249.204 ± 10062.029  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576         0.875    ss   10  15272.635 ±  9963.718  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576             1    ss   10  15323.487 ± 10131.019  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152         0.125    ss   10  18567.297 ± 10566.897  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152         0.250    ss   10  18209.077 ± 10827.167  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152         0.375    ss   10  18439.654 ± 10790.461  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152           0.5    ss   10  18259.639 ± 10954.127  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152         0.625    ss   10  18413.586 ± 11344.047  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152          0.75    ss   10  18117.798 ± 10890.044  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152         0.875    ss   10  18666.659 ± 10838.246  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152             1    ss   10  18048.068 ± 11400.156  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16         0.125    ss   10  16594.524 ±  6510.707  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16         0.250    ss   10  13560.336 ±  6891.070  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16         0.375    ss   10  14919.061 ±  6722.605  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16           0.5    ss   10  11134.880 ±  4789.806  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16         0.625    ss   10  11246.993 ±  5093.937  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16          0.75    ss   10  12519.665 ±  5728.512  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16         0.875    ss   10  10552.984 ±  6158.225  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16             1    ss   10  11091.113 ±  5707.177  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100         0.125    ss   10  16691.084 ±  6478.712  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100         0.250    ss   10  13713.617 ±  6912.091  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100         0.375    ss   10  14875.813 ±  6993.363  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100           0.5    ss   10  11212.355 ±  4641.292  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100         0.625    ss   10  11570.269 ±  5580.898  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100          0.75    ss   10  12108.469 ±  5007.504  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100         0.875    ss   10  10641.514 ±  6152.654  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100             1    ss   10  11056.067 ±  5679.628  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024         0.125    ss   10  16541.062 ±  6331.950  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024         0.250    ss   10  13555.821 ±  6912.379  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024         0.375    ss   10  14862.742 ±  6669.716  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024           0.5    ss   10  10293.990 ±  4896.441  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024         0.625    ss   10  11584.534 ±  5485.476  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024          0.75    ss   10  12300.270 ±  5169.013  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024         0.875    ss   10  10420.866 ±  6167.793  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024             1    ss   10  11064.115 ±  5386.572  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000         0.125    ss   10  16433.108 ±  6424.998  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000         0.250    ss   10  13503.952 ±  6865.629  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000         0.375    ss   10  14938.234 ±  6748.613  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000           0.5    ss   10  10434.649 ±  4841.564  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000         0.625    ss   10  11700.487 ±  5670.942  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000          0.75    ss   10  12305.323 ±  5017.751  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000         0.875    ss   10  10451.477 ±  6055.061  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000             1    ss   10  11036.269 ±  5626.685  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000         0.125    ss   10  16588.548 ±  6506.103  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000         0.250    ss   10  13630.021 ±  6728.730  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000         0.375    ss   10  14783.566 ±  6848.200  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000           0.5    ss   10  10403.253 ±  5127.762  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000         0.625    ss   10  11906.925 ±  5545.171  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000          0.75    ss   10  12977.314 ±  5673.996  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000         0.875    ss   10  10939.813 ±  6638.272  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000             1    ss   10  11380.897 ±  6484.860  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536         0.125    ss   10  16756.267 ±  6857.894  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536         0.250    ss   10  14525.809 ±  7476.808  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536         0.375    ss   10  15912.050 ±  8420.644  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536           0.5    ss   10  10646.695 ±  6011.625  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536         0.625    ss   10  11723.156 ±  6967.673  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536          0.75    ss   10  12245.576 ±  6524.191  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536         0.875    ss   10  10633.063 ±  5655.573  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536             1    ss   10  10436.091 ±  6848.883  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000         0.125    ss   10  18348.016 ±  8197.135  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000         0.250    ss   10  14231.555 ±  7597.911  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000         0.375    ss   10  14977.990 ±  7585.843  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000           0.5    ss   10   9827.865 ±  5538.112  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000         0.625    ss   10  10858.089 ±  6109.096  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000          0.75    ss   10  11788.662 ±  6627.534  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000         0.875    ss   10   8093.883 ±  5301.334  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000             1    ss   10   8123.288 ±  5284.349  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288         0.125    ss   10  16696.101 ±  8268.601  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288         0.250    ss   10  11019.951 ±  7884.881  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288         0.375    ss   10  10954.963 ±  7583.244  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288           0.5    ss   10  10956.240 ±  7610.700  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288         0.625    ss   10  11028.149 ±  7799.455  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288          0.75    ss   10  10935.159 ±  7516.358  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288         0.875    ss   10  10959.912 ±  7652.585  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288             1    ss   10  10931.186 ±  7477.767  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000         0.125    ss   10  12824.892 ±  8011.419  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000         0.250    ss   10  12846.538 ±  8029.983  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000         0.375    ss   10  12937.634 ±  7991.995  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000           0.5    ss   10  12800.829 ±  8201.161  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000         0.625    ss   10  12859.924 ±  8098.184  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000          0.75    ss   10  12913.822 ±  8154.161  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000         0.875    ss   10  12795.934 ±  7989.128  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000             1    ss   10  12933.802 ±  7954.106  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576         0.125    ss   10  12858.721 ±  8010.748  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576         0.250    ss   10  12888.717 ±  8109.843  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576         0.375    ss   10  12828.005 ±  7927.365  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576           0.5    ss   10  12916.950 ±  7927.807  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576         0.625    ss   10  12865.555 ±  8035.103  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576          0.75    ss   10  12840.762 ±  7922.187  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576         0.875    ss   10  12906.938 ±  8051.495  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576             1    ss   10  12934.547 ±  8145.933  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152         0.125    ss   10  15620.636 ±  8698.979  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152         0.250    ss   10  15613.996 ±  8886.386  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152         0.375    ss   10  15597.212 ±  8651.749  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152           0.5    ss   10  15654.744 ±  8879.051  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152         0.625    ss   10  15879.661 ±  8644.748  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152          0.75    ss   10  15591.590 ±  8818.122  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152         0.875    ss   10  15675.476 ±  8763.610  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152             1    ss   10  17885.611 ± 10279.790  us/op

Benchmark result is saved to results/machine_out_100000.csv
