# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.125)

# Run progress: 0.00% complete, ETA 00:00:05
# Fork: 1 of 2
# Warmup Iteration   1: 2910.675 us/op
# Warmup Iteration   2: 2502.963 us/op
# Warmup Iteration   3: 2017.752 us/op
# Warmup Iteration   4: 1935.940 us/op
# Warmup Iteration   5: 1797.792 us/op
Iteration   1: 1797.131 us/op
Iteration   2: 1540.455 us/op
Iteration   3: 1269.917 us/op
Iteration   4: 1382.960 us/op
Iteration   5: 1379.355 us/op

# Run progress: 0.19% complete, ETA 00:46:26
# Fork: 2 of 2
# Warmup Iteration   1: 3036.920 us/op
# Warmup Iteration   2: 2389.908 us/op
# Warmup Iteration   3: 1829.676 us/op
# Warmup Iteration   4: 1874.646 us/op
# Warmup Iteration   5: 1738.815 us/op
Iteration   1: 1746.157 us/op
Iteration   2: 1501.193 us/op
Iteration   3: 1278.292 us/op
Iteration   4: 1351.771 us/op
Iteration   5: 1364.088 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1461.132 ±(99.9%) 278.864 us/op

  Histogram, us/op:
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 2 
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 4 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 2 
    [1550.000, 1600.000) = 0 
    [1600.000, 1650.000) = 0 
    [1650.000, 1700.000) = 0 
    [1700.000, 1750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1269.917 us/op
     p(50.0000) =   1381.158 us/op
     p(90.0000) =   1792.034 us/op
     p(95.0000) =   1797.131 us/op
     p(99.0000) =   1797.131 us/op
     p(99.9000) =   1797.131 us/op
     p(99.9900) =   1797.131 us/op
     p(99.9990) =   1797.131 us/op
     p(99.9999) =   1797.131 us/op
    p(100.0000) =   1797.131 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.250)

# Run progress: 0.38% complete, ETA 00:46:19
# Fork: 1 of 2
# Warmup Iteration   1: 2732.003 us/op
# Warmup Iteration   2: 1938.042 us/op
# Warmup Iteration   3: 1591.656 us/op
# Warmup Iteration   4: 1547.986 us/op
# Warmup Iteration   5: 1724.628 us/op
Iteration   1: 1552.612 us/op
Iteration   2: 1485.804 us/op
Iteration   3: 1209.957 us/op
Iteration   4: 1185.441 us/op
Iteration   5: 1125.740 us/op

# Run progress: 0.57% complete, ETA 00:46:13
# Fork: 2 of 2
# Warmup Iteration   1: 2871.249 us/op
# Warmup Iteration   2: 1949.532 us/op
# Warmup Iteration   3: 1548.684 us/op
# Warmup Iteration   4: 1563.906 us/op
# Warmup Iteration   5: 1642.068 us/op
Iteration   1: 1561.527 us/op
Iteration   2: 1401.842 us/op
Iteration   3: 1121.229 us/op
Iteration   4: 1114.901 us/op
Iteration   5: 1114.618 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1287.367 ±(99.9%) 288.485 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 4 
    [1150.000, 1200.000) = 1 
    [1200.000, 1250.000) = 1 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 1 
    [1450.000, 1500.000) = 1 
    [1500.000, 1550.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1114.618 us/op
     p(50.0000) =   1197.699 us/op
     p(90.0000) =   1560.636 us/op
     p(95.0000) =   1561.527 us/op
     p(99.0000) =   1561.527 us/op
     p(99.9000) =   1561.527 us/op
     p(99.9900) =   1561.527 us/op
     p(99.9990) =   1561.527 us/op
     p(99.9999) =   1561.527 us/op
    p(100.0000) =   1561.527 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.375)

# Run progress: 0.76% complete, ETA 00:46:06
# Fork: 1 of 2
# Warmup Iteration   1: 2866.586 us/op
# Warmup Iteration   2: 1644.311 us/op
# Warmup Iteration   3: 1525.545 us/op
# Warmup Iteration   4: 1387.821 us/op
# Warmup Iteration   5: 1365.740 us/op
Iteration   1: 1304.182 us/op
Iteration   2: 1431.177 us/op
Iteration   3: 1475.522 us/op
Iteration   4: 1177.204 us/op
Iteration   5: 1268.121 us/op

# Run progress: 0.95% complete, ETA 00:45:59
# Fork: 2 of 2
# Warmup Iteration   1: 2831.227 us/op
# Warmup Iteration   2: 1691.767 us/op
# Warmup Iteration   3: 1412.734 us/op
# Warmup Iteration   4: 1340.123 us/op
# Warmup Iteration   5: 1295.351 us/op
Iteration   1: 1410.283 us/op
Iteration   2: 1631.513 us/op
Iteration   3: 1388.909 us/op
Iteration   4: 1272.644 us/op
Iteration   5: 1260.027 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1361.958 ±(99.9%) 200.351 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 1 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 3 
    [1300.000, 1350.000) = 1 
    [1350.000, 1400.000) = 1 
    [1400.000, 1450.000) = 2 
    [1450.000, 1500.000) = 1 
    [1500.000, 1550.000) = 0 
    [1550.000, 1600.000) = 0 
    [1600.000, 1650.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1177.204 us/op
     p(50.0000) =   1346.546 us/op
     p(90.0000) =   1615.914 us/op
     p(95.0000) =   1631.513 us/op
     p(99.0000) =   1631.513 us/op
     p(99.9000) =   1631.513 us/op
     p(99.9900) =   1631.513 us/op
     p(99.9990) =   1631.513 us/op
     p(99.9999) =   1631.513 us/op
    p(100.0000) =   1631.513 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.5)

# Run progress: 1.14% complete, ETA 00:45:53
# Fork: 1 of 2
# Warmup Iteration   1: 2559.857 us/op
# Warmup Iteration   2: 1785.726 us/op
# Warmup Iteration   3: 1514.033 us/op
# Warmup Iteration   4: 1446.909 us/op
# Warmup Iteration   5: 1435.710 us/op
Iteration   1: 1558.353 us/op
Iteration   2: 1585.551 us/op
Iteration   3: 1266.263 us/op
Iteration   4: 1310.721 us/op
Iteration   5: 1499.319 us/op

# Run progress: 1.33% complete, ETA 00:45:48
# Fork: 2 of 2
# Warmup Iteration   1: 2598.374 us/op
# Warmup Iteration   2: 2361.235 us/op
# Warmup Iteration   3: 1704.584 us/op
# Warmup Iteration   4: 1457.406 us/op
# Warmup Iteration   5: 1391.204 us/op
Iteration   1: 1905.677 us/op
Iteration   2: 1587.320 us/op
Iteration   3: 1617.470 us/op
Iteration   4: 1435.750 us/op
Iteration   5: 1376.500 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1514.292 ±(99.9%) 278.097 us/op

  Histogram, us/op:
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 1 
    [1300.000, 1350.000) = 1 
    [1350.000, 1400.000) = 1 
    [1400.000, 1450.000) = 1 
    [1450.000, 1500.000) = 1 
    [1500.000, 1550.000) = 0 
    [1550.000, 1600.000) = 3 
    [1600.000, 1650.000) = 1 
    [1650.000, 1700.000) = 0 
    [1700.000, 1750.000) = 0 
    [1750.000, 1800.000) = 0 
    [1800.000, 1850.000) = 0 
    [1850.000, 1900.000) = 0 
    [1900.000, 1950.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1266.263 us/op
     p(50.0000) =   1528.836 us/op
     p(90.0000) =   1876.856 us/op
     p(95.0000) =   1905.677 us/op
     p(99.0000) =   1905.677 us/op
     p(99.9000) =   1905.677 us/op
     p(99.9900) =   1905.677 us/op
     p(99.9990) =   1905.677 us/op
     p(99.9999) =   1905.677 us/op
    p(100.0000) =   1905.677 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.625)

# Run progress: 1.52% complete, ETA 00:45:42
# Fork: 1 of 2
# Warmup Iteration   1: 2520.598 us/op
# Warmup Iteration   2: 1460.517 us/op
# Warmup Iteration   3: 1374.091 us/op
# Warmup Iteration   4: 1180.363 us/op
# Warmup Iteration   5: 1203.020 us/op
Iteration   1: 1399.432 us/op
Iteration   2: 1507.744 us/op
Iteration   3: 1179.153 us/op
Iteration   4: 1135.770 us/op
Iteration   5: 1254.786 us/op

# Run progress: 1.70% complete, ETA 00:45:36
# Fork: 2 of 2
# Warmup Iteration   1: 3079.119 us/op
# Warmup Iteration   2: 1611.305 us/op
# Warmup Iteration   3: 1670.023 us/op
# Warmup Iteration   4: 1228.644 us/op
# Warmup Iteration   5: 1381.742 us/op
Iteration   1: 1207.597 us/op
Iteration   2: 1227.049 us/op
Iteration   3: 1197.094 us/op
Iteration   4: 1296.800 us/op
Iteration   5: 1103.717 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1250.914 ±(99.9%) 185.546 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 2 
    [1150.000, 1200.000) = 2 
    [1200.000, 1250.000) = 2 
    [1250.000, 1300.000) = 2 
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 1 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1103.717 us/op
     p(50.0000) =   1217.323 us/op
     p(90.0000) =   1496.913 us/op
     p(95.0000) =   1507.744 us/op
     p(99.0000) =   1507.744 us/op
     p(99.9000) =   1507.744 us/op
     p(99.9900) =   1507.744 us/op
     p(99.9990) =   1507.744 us/op
     p(99.9999) =   1507.744 us/op
    p(100.0000) =   1507.744 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.75)

# Run progress: 1.89% complete, ETA 00:45:30
# Fork: 1 of 2
# Warmup Iteration   1: 2522.929 us/op
# Warmup Iteration   2: 1585.109 us/op
# Warmup Iteration   3: 1432.920 us/op
# Warmup Iteration   4: 1307.468 us/op
# Warmup Iteration   5: 1247.734 us/op
Iteration   1: 1204.763 us/op
Iteration   2: 1498.618 us/op
Iteration   3: 1317.839 us/op
Iteration   4: 1245.152 us/op
Iteration   5: 1171.971 us/op

# Run progress: 2.08% complete, ETA 00:45:25
# Fork: 2 of 2
# Warmup Iteration   1: 2551.011 us/op
# Warmup Iteration   2: 1627.113 us/op
# Warmup Iteration   3: 1735.037 us/op
# Warmup Iteration   4: 1346.766 us/op
# Warmup Iteration   5: 1252.115 us/op
Iteration   1: 1201.994 us/op
Iteration   2: 1597.915 us/op
Iteration   3: 1112.447 us/op
Iteration   4: 1117.275 us/op
Iteration   5: 1095.278 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1256.325 ±(99.9%) 255.974 us/op

  Histogram, us/op:
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 1 
    [1100.000, 1150.000) = 2 
    [1150.000, 1200.000) = 1 
    [1200.000, 1250.000) = 3 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 1 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 1 
    [1500.000, 1550.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1095.278 us/op
     p(50.0000) =   1203.378 us/op
     p(90.0000) =   1587.985 us/op
     p(95.0000) =   1597.915 us/op
     p(99.0000) =   1597.915 us/op
     p(99.9000) =   1597.915 us/op
     p(99.9900) =   1597.915 us/op
     p(99.9990) =   1597.915 us/op
     p(99.9999) =   1597.915 us/op
    p(100.0000) =   1597.915 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.875)

# Run progress: 2.27% complete, ETA 00:45:19
# Fork: 1 of 2
# Warmup Iteration   1: 2638.096 us/op
# Warmup Iteration   2: 1672.246 us/op
# Warmup Iteration   3: 1503.738 us/op
# Warmup Iteration   4: 1357.376 us/op
# Warmup Iteration   5: 1316.466 us/op
Iteration   1: 1305.496 us/op
Iteration   2: 1321.231 us/op
Iteration   3: 1132.883 us/op
Iteration   4: 1160.828 us/op
Iteration   5: 1232.115 us/op

# Run progress: 2.46% complete, ETA 00:45:14
# Fork: 2 of 2
# Warmup Iteration   1: 2698.972 us/op
# Warmup Iteration   2: 1643.603 us/op
# Warmup Iteration   3: 1547.381 us/op
# Warmup Iteration   4: 1269.257 us/op
# Warmup Iteration   5: 1273.009 us/op
Iteration   1: 1262.709 us/op
Iteration   2: 1433.507 us/op
Iteration   3: 1175.087 us/op
Iteration   4: 1148.505 us/op
Iteration   5: 1137.918 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1231.028 ±(99.9%) 150.220 us/op

  Histogram, us/op:
    [1100.000, 1125.000) = 0 
    [1125.000, 1150.000) = 3 
    [1150.000, 1175.000) = 1 
    [1175.000, 1200.000) = 1 
    [1200.000, 1225.000) = 0 
    [1225.000, 1250.000) = 1 
    [1250.000, 1275.000) = 1 
    [1275.000, 1300.000) = 0 
    [1300.000, 1325.000) = 2 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 0 
    [1375.000, 1400.000) = 0 
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 1 
    [1450.000, 1475.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1132.883 us/op
     p(50.0000) =   1203.601 us/op
     p(90.0000) =   1422.279 us/op
     p(95.0000) =   1433.507 us/op
     p(99.0000) =   1433.507 us/op
     p(99.9000) =   1433.507 us/op
     p(99.9900) =   1433.507 us/op
     p(99.9990) =   1433.507 us/op
     p(99.9999) =   1433.507 us/op
    p(100.0000) =   1433.507 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 1)

# Run progress: 2.65% complete, ETA 00:45:08
# Fork: 1 of 2
# Warmup Iteration   1: 2413.111 us/op
# Warmup Iteration   2: 2004.079 us/op
# Warmup Iteration   3: 1387.892 us/op
# Warmup Iteration   4: 1442.893 us/op
# Warmup Iteration   5: 1412.153 us/op
Iteration   1: 1539.953 us/op
Iteration   2: 1456.266 us/op
Iteration   3: 1210.118 us/op
Iteration   4: 1280.090 us/op
Iteration   5: 1331.100 us/op

# Run progress: 2.84% complete, ETA 00:45:03
# Fork: 2 of 2
# Warmup Iteration   1: 2760.984 us/op
# Warmup Iteration   2: 1764.992 us/op
# Warmup Iteration   3: 1561.523 us/op
# Warmup Iteration   4: 1306.957 us/op
# Warmup Iteration   5: 1327.034 us/op
Iteration   1: 1456.874 us/op
Iteration   2: 1364.780 us/op
Iteration   3: 1195.805 us/op
Iteration   4: 1367.243 us/op
Iteration   5: 1251.644 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1345.387 ±(99.9%) 172.644 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 1 
    [1200.000, 1250.000) = 1 
    [1250.000, 1300.000) = 2 
    [1300.000, 1350.000) = 1 
    [1350.000, 1400.000) = 2 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 2 
    [1500.000, 1550.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1195.805 us/op
     p(50.0000) =   1347.940 us/op
     p(90.0000) =   1531.645 us/op
     p(95.0000) =   1539.953 us/op
     p(99.0000) =   1539.953 us/op
     p(99.9000) =   1539.953 us/op
     p(99.9900) =   1539.953 us/op
     p(99.9990) =   1539.953 us/op
     p(99.9999) =   1539.953 us/op
    p(100.0000) =   1539.953 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.125)

# Run progress: 3.03% complete, ETA 00:44:57
# Fork: 1 of 2
# Warmup Iteration   1: 3081.951 us/op
# Warmup Iteration   2: 2416.012 us/op
# Warmup Iteration   3: 2023.222 us/op
# Warmup Iteration   4: 2005.020 us/op
# Warmup Iteration   5: 2072.295 us/op
Iteration   1: 2116.700 us/op
Iteration   2: 1759.551 us/op
Iteration   3: 1627.429 us/op
Iteration   4: 1612.602 us/op
Iteration   5: 1593.753 us/op

# Run progress: 3.22% complete, ETA 00:44:52
# Fork: 2 of 2
# Warmup Iteration   1: 3158.803 us/op
# Warmup Iteration   2: 2359.894 us/op
# Warmup Iteration   3: 2179.168 us/op
# Warmup Iteration   4: 1977.817 us/op
# Warmup Iteration   5: 1925.655 us/op
Iteration   1: 1848.897 us/op
Iteration   2: 1811.628 us/op
Iteration   3: 1765.089 us/op
Iteration   4: 1823.472 us/op
Iteration   5: 1393.926 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1735.305 ±(99.9%) 292.426 us/op

  Histogram, us/op:
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 1 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 0 
    [1550.000, 1600.000) = 1 
    [1600.000, 1650.000) = 2 
    [1650.000, 1700.000) = 0 
    [1700.000, 1750.000) = 0 
    [1750.000, 1800.000) = 2 
    [1800.000, 1850.000) = 3 
    [1850.000, 1900.000) = 0 
    [1900.000, 1950.000) = 0 
    [1950.000, 2000.000) = 0 
    [2000.000, 2050.000) = 0 
    [2050.000, 2100.000) = 0 
    [2100.000, 2150.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1393.926 us/op
     p(50.0000) =   1762.320 us/op
     p(90.0000) =   2089.920 us/op
     p(95.0000) =   2116.700 us/op
     p(99.0000) =   2116.700 us/op
     p(99.9000) =   2116.700 us/op
     p(99.9900) =   2116.700 us/op
     p(99.9990) =   2116.700 us/op
     p(99.9999) =   2116.700 us/op
    p(100.0000) =   2116.700 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.250)

# Run progress: 3.41% complete, ETA 00:44:47
# Fork: 1 of 2
# Warmup Iteration   1: 3370.137 us/op
# Warmup Iteration   2: 2115.945 us/op
# Warmup Iteration   3: 1602.255 us/op
# Warmup Iteration   4: 1601.058 us/op
# Warmup Iteration   5: 1682.741 us/op
Iteration   1: 1609.613 us/op
Iteration   2: 1301.086 us/op
Iteration   3: 1173.349 us/op
Iteration   4: 1150.584 us/op
Iteration   5: 1149.832 us/op

# Run progress: 3.60% complete, ETA 00:44:41
# Fork: 2 of 2
# Warmup Iteration   1: 2853.988 us/op
# Warmup Iteration   2: 1930.702 us/op
# Warmup Iteration   3: 1664.149 us/op
# Warmup Iteration   4: 1480.861 us/op
# Warmup Iteration   5: 1606.954 us/op
Iteration   1: 1478.711 us/op
Iteration   2: 1334.477 us/op
Iteration   3: 1064.921 us/op
Iteration   4: 1149.612 us/op
Iteration   5: 1143.571 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1255.576 ±(99.9%) 263.079 us/op

  Histogram, us/op:
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 1 
    [1100.000, 1150.000) = 3 
    [1150.000, 1200.000) = 2 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 2 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 1 
    [1500.000, 1550.000) = 0 
    [1550.000, 1600.000) = 0 
    [1600.000, 1650.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1064.921 us/op
     p(50.0000) =   1161.967 us/op
     p(90.0000) =   1596.523 us/op
     p(95.0000) =   1609.613 us/op
     p(99.0000) =   1609.613 us/op
     p(99.9000) =   1609.613 us/op
     p(99.9900) =   1609.613 us/op
     p(99.9990) =   1609.613 us/op
     p(99.9999) =   1609.613 us/op
    p(100.0000) =   1609.613 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.375)

# Run progress: 3.79% complete, ETA 00:44:36
# Fork: 1 of 2
# Warmup Iteration   1: 3014.508 us/op
# Warmup Iteration   2: 1836.617 us/op
# Warmup Iteration   3: 1461.917 us/op
# Warmup Iteration   4: 1294.246 us/op
# Warmup Iteration   5: 1491.130 us/op
Iteration   1: 1317.289 us/op
Iteration   2: 1513.386 us/op
Iteration   3: 1314.952 us/op
Iteration   4: 1243.274 us/op
Iteration   5: 1229.843 us/op

# Run progress: 3.98% complete, ETA 00:44:30
# Fork: 2 of 2
# Warmup Iteration   1: 2602.566 us/op
# Warmup Iteration   2: 1611.372 us/op
# Warmup Iteration   3: 1467.996 us/op
# Warmup Iteration   4: 1331.831 us/op
# Warmup Iteration   5: 1340.752 us/op
Iteration   1: 1422.578 us/op
Iteration   2: 1497.418 us/op
Iteration   3: 1198.447 us/op
Iteration   4: 1266.728 us/op
Iteration   5: 1227.840 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1323.176 ±(99.9%) 174.175 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 1 
    [1200.000, 1250.000) = 3 
    [1250.000, 1300.000) = 1 
    [1300.000, 1350.000) = 2 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 1 
    [1450.000, 1500.000) = 1 
    [1500.000, 1550.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1198.447 us/op
     p(50.0000) =   1290.840 us/op
     p(90.0000) =   1511.789 us/op
     p(95.0000) =   1513.386 us/op
     p(99.0000) =   1513.386 us/op
     p(99.9000) =   1513.386 us/op
     p(99.9900) =   1513.386 us/op
     p(99.9990) =   1513.386 us/op
     p(99.9999) =   1513.386 us/op
    p(100.0000) =   1513.386 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.5)

# Run progress: 4.17% complete, ETA 00:44:25
# Fork: 1 of 2
# Warmup Iteration   1: 2544.977 us/op
# Warmup Iteration   2: 1885.732 us/op
# Warmup Iteration   3: 1567.626 us/op
# Warmup Iteration   4: 1357.928 us/op
# Warmup Iteration   5: 1391.726 us/op
Iteration   1: 1502.381 us/op
Iteration   2: 1544.534 us/op
Iteration   3: 1229.757 us/op
Iteration   4: 2013.973 us/op
Iteration   5: 1473.697 us/op

# Run progress: 4.36% complete, ETA 00:44:20
# Fork: 2 of 2
# Warmup Iteration   1: 2647.809 us/op
# Warmup Iteration   2: 1872.939 us/op
# Warmup Iteration   3: 1562.449 us/op
# Warmup Iteration   4: 1400.401 us/op
# Warmup Iteration   5: 1423.867 us/op
Iteration   1: 1468.886 us/op
Iteration   2: 1576.541 us/op
Iteration   3: 1325.568 us/op
Iteration   4: 1277.014 us/op
Iteration   5: 1279.146 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1469.150 ±(99.9%) 344.062 us/op

  Histogram, us/op:
    [1200.000, 1250.000) = 1 
    [1250.000, 1300.000) = 2 
    [1300.000, 1350.000) = 1 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 2 
    [1500.000, 1550.000) = 2 
    [1550.000, 1600.000) = 1 
    [1600.000, 1650.000) = 0 
    [1650.000, 1700.000) = 0 
    [1700.000, 1750.000) = 0 
    [1750.000, 1800.000) = 0 
    [1800.000, 1850.000) = 0 
    [1850.000, 1900.000) = 0 
    [1900.000, 1950.000) = 0 
    [1950.000, 2000.000) = 0 
    [2000.000, 2050.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1229.757 us/op
     p(50.0000) =   1471.291 us/op
     p(90.0000) =   1970.230 us/op
     p(95.0000) =   2013.973 us/op
     p(99.0000) =   2013.973 us/op
     p(99.9000) =   2013.973 us/op
     p(99.9900) =   2013.973 us/op
     p(99.9990) =   2013.973 us/op
     p(99.9999) =   2013.973 us/op
    p(100.0000) =   2013.973 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.625)

# Run progress: 4.55% complete, ETA 00:44:14
# Fork: 1 of 2
# Warmup Iteration   1: 2553.614 us/op
# Warmup Iteration   2: 1470.952 us/op
# Warmup Iteration   3: 1304.776 us/op
# Warmup Iteration   4: 1169.942 us/op
# Warmup Iteration   5: 1180.483 us/op
Iteration   1: 1175.618 us/op
Iteration   2: 1870.691 us/op
Iteration   3: 1379.230 us/op
Iteration   4: 981.616 us/op
Iteration   5: 1217.129 us/op

# Run progress: 4.73% complete, ETA 00:44:10
# Fork: 2 of 2
# Warmup Iteration   1: 2593.129 us/op
# Warmup Iteration   2: 1549.681 us/op
# Warmup Iteration   3: 1574.600 us/op
# Warmup Iteration   4: 1168.100 us/op
# Warmup Iteration   5: 1166.373 us/op
Iteration   1: 1209.262 us/op
Iteration   2: 1400.566 us/op
Iteration   3: 1167.383 us/op
Iteration   4: 1110.006 us/op
Iteration   5: 1244.742 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1275.624 ±(99.9%) 365.084 us/op

  Histogram, us/op:
    [ 900.000, 1000.000) = 1 
    [1000.000, 1100.000) = 0 
    [1100.000, 1200.000) = 3 
    [1200.000, 1300.000) = 3 
    [1300.000, 1400.000) = 1 
    [1400.000, 1500.000) = 1 
    [1500.000, 1600.000) = 0 
    [1600.000, 1700.000) = 0 
    [1700.000, 1800.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    981.616 us/op
     p(50.0000) =   1213.195 us/op
     p(90.0000) =   1823.679 us/op
     p(95.0000) =   1870.691 us/op
     p(99.0000) =   1870.691 us/op
     p(99.9000) =   1870.691 us/op
     p(99.9900) =   1870.691 us/op
     p(99.9990) =   1870.691 us/op
     p(99.9999) =   1870.691 us/op
    p(100.0000) =   1870.691 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.75)

# Run progress: 4.92% complete, ETA 00:44:04
# Fork: 1 of 2
# Warmup Iteration   1: 2485.821 us/op
# Warmup Iteration   2: 1796.829 us/op
# Warmup Iteration   3: 1479.129 us/op
# Warmup Iteration   4: 1302.214 us/op
# Warmup Iteration   5: 1417.277 us/op
Iteration   1: 1197.470 us/op
Iteration   2: 1470.013 us/op
Iteration   3: 1102.386 us/op
Iteration   4: 1207.650 us/op
Iteration   5: 1099.946 us/op

# Run progress: 5.11% complete, ETA 00:43:59
# Fork: 2 of 2
# Warmup Iteration   1: 2550.440 us/op
# Warmup Iteration   2: 1576.566 us/op
# Warmup Iteration   3: 1587.100 us/op
# Warmup Iteration   4: 1303.400 us/op
# Warmup Iteration   5: 1235.638 us/op
Iteration   1: 1235.099 us/op
Iteration   2: 1312.861 us/op
Iteration   3: 1143.643 us/op
Iteration   4: 1247.998 us/op
Iteration   5: 1099.892 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1211.696 ±(99.9%) 175.021 us/op

  Histogram, us/op:
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 2 
    [1100.000, 1150.000) = 2 
    [1150.000, 1200.000) = 1 
    [1200.000, 1250.000) = 3 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 1 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1099.892 us/op
     p(50.0000) =   1202.560 us/op
     p(90.0000) =   1454.298 us/op
     p(95.0000) =   1470.013 us/op
     p(99.0000) =   1470.013 us/op
     p(99.9000) =   1470.013 us/op
     p(99.9900) =   1470.013 us/op
     p(99.9990) =   1470.013 us/op
     p(99.9999) =   1470.013 us/op
    p(100.0000) =   1470.013 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.875)

# Run progress: 5.30% complete, ETA 00:43:54
# Fork: 1 of 2
# Warmup Iteration   1: 2671.872 us/op
# Warmup Iteration   2: 1811.626 us/op
# Warmup Iteration   3: 1570.989 us/op
# Warmup Iteration   4: 1445.184 us/op
# Warmup Iteration   5: 1290.961 us/op
Iteration   1: 1272.379 us/op
Iteration   2: 1369.362 us/op
Iteration   3: 1261.757 us/op
Iteration   4: 1194.490 us/op
Iteration   5: 1178.151 us/op

# Run progress: 5.49% complete, ETA 00:43:48
# Fork: 2 of 2
# Warmup Iteration   1: 2675.990 us/op
# Warmup Iteration   2: 1822.880 us/op
# Warmup Iteration   3: 1510.741 us/op
# Warmup Iteration   4: 1364.482 us/op
# Warmup Iteration   5: 1284.427 us/op
Iteration   1: 1296.141 us/op
Iteration   2: 1327.870 us/op
Iteration   3: 1152.332 us/op
Iteration   4: 1214.601 us/op
Iteration   5: 1145.794 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1241.288 ±(99.9%) 115.156 us/op

  Histogram, us/op:
    [1100.000, 1125.000) = 0 
    [1125.000, 1150.000) = 1 
    [1150.000, 1175.000) = 1 
    [1175.000, 1200.000) = 2 
    [1200.000, 1225.000) = 1 
    [1225.000, 1250.000) = 0 
    [1250.000, 1275.000) = 2 
    [1275.000, 1300.000) = 1 
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 1 
    [1350.000, 1375.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1145.794 us/op
     p(50.0000) =   1238.179 us/op
     p(90.0000) =   1365.213 us/op
     p(95.0000) =   1369.362 us/op
     p(99.0000) =   1369.362 us/op
     p(99.9000) =   1369.362 us/op
     p(99.9900) =   1369.362 us/op
     p(99.9990) =   1369.362 us/op
     p(99.9999) =   1369.362 us/op
    p(100.0000) =   1369.362 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 1)

# Run progress: 5.68% complete, ETA 00:43:43
# Fork: 1 of 2
# Warmup Iteration   1: 2765.542 us/op
# Warmup Iteration   2: 1700.372 us/op
# Warmup Iteration   3: 1603.316 us/op
# Warmup Iteration   4: 1535.579 us/op
# Warmup Iteration   5: 1346.121 us/op
Iteration   1: 1334.215 us/op
Iteration   2: 1526.749 us/op
Iteration   3: 1205.617 us/op
Iteration   4: 1299.943 us/op
Iteration   5: 1215.889 us/op

# Run progress: 5.87% complete, ETA 00:43:38
# Fork: 2 of 2
# Warmup Iteration   1: 2914.493 us/op
# Warmup Iteration   2: 1835.515 us/op
# Warmup Iteration   3: 1636.795 us/op
# Warmup Iteration   4: 1407.201 us/op
# Warmup Iteration   5: 1388.687 us/op
Iteration   1: 1375.010 us/op
Iteration   2: 1578.294 us/op
Iteration   3: 1216.607 us/op
Iteration   4: 1231.524 us/op
Iteration   5: 1258.728 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1324.258 ±(99.9%) 201.016 us/op

  Histogram, us/op:
    [1200.000, 1225.000) = 3 
    [1225.000, 1250.000) = 1 
    [1250.000, 1275.000) = 1 
    [1275.000, 1300.000) = 1 
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 1 
    [1350.000, 1375.000) = 0 
    [1375.000, 1400.000) = 1 
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 0 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 0 
    [1525.000, 1550.000) = 1 
    [1550.000, 1575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1205.617 us/op
     p(50.0000) =   1279.336 us/op
     p(90.0000) =   1573.140 us/op
     p(95.0000) =   1578.294 us/op
     p(99.0000) =   1578.294 us/op
     p(99.9000) =   1578.294 us/op
     p(99.9900) =   1578.294 us/op
     p(99.9990) =   1578.294 us/op
     p(99.9999) =   1578.294 us/op
    p(100.0000) =   1578.294 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.125)

# Run progress: 6.06% complete, ETA 00:43:32
# Fork: 1 of 2
# Warmup Iteration   1: 2932.446 us/op
# Warmup Iteration   2: 2482.186 us/op
# Warmup Iteration   3: 1774.988 us/op
# Warmup Iteration   4: 1738.981 us/op
# Warmup Iteration   5: 1640.294 us/op
Iteration   1: 1790.928 us/op
Iteration   2: 1528.055 us/op
Iteration   3: 1300.117 us/op
Iteration   4: 1368.178 us/op
Iteration   5: 1263.219 us/op

# Run progress: 6.25% complete, ETA 00:43:27
# Fork: 2 of 2
# Warmup Iteration   1: 3121.789 us/op
# Warmup Iteration   2: 2299.903 us/op
# Warmup Iteration   3: 1840.419 us/op
# Warmup Iteration   4: 1813.788 us/op
# Warmup Iteration   5: 1735.933 us/op
Iteration   1: 1872.786 us/op
Iteration   2: 1552.556 us/op
Iteration   3: 1290.938 us/op
Iteration   4: 1365.538 us/op
Iteration   5: 1282.841 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1461.516 ±(99.9%) 332.260 us/op

  Histogram, us/op:
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 3 
    [1300.000, 1350.000) = 1 
    [1350.000, 1400.000) = 2 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 1 
    [1550.000, 1600.000) = 1 
    [1600.000, 1650.000) = 0 
    [1650.000, 1700.000) = 0 
    [1700.000, 1750.000) = 0 
    [1750.000, 1800.000) = 1 
    [1800.000, 1850.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1263.219 us/op
     p(50.0000) =   1366.858 us/op
     p(90.0000) =   1864.600 us/op
     p(95.0000) =   1872.786 us/op
     p(99.0000) =   1872.786 us/op
     p(99.9000) =   1872.786 us/op
     p(99.9900) =   1872.786 us/op
     p(99.9990) =   1872.786 us/op
     p(99.9999) =   1872.786 us/op
    p(100.0000) =   1872.786 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.250)

# Run progress: 6.44% complete, ETA 00:43:22
# Fork: 1 of 2
# Warmup Iteration   1: 2735.411 us/op
# Warmup Iteration   2: 1905.725 us/op
# Warmup Iteration   3: 1865.795 us/op
# Warmup Iteration   4: 1486.751 us/op
# Warmup Iteration   5: 1510.658 us/op
Iteration   1: 1498.029 us/op
Iteration   2: 1419.726 us/op
Iteration   3: 1070.350 us/op
Iteration   4: 1049.725 us/op
Iteration   5: 1088.780 us/op

# Run progress: 6.63% complete, ETA 00:43:17
# Fork: 2 of 2
# Warmup Iteration   1: 2781.059 us/op
# Warmup Iteration   2: 1906.393 us/op
# Warmup Iteration   3: 1558.447 us/op
# Warmup Iteration   4: 1582.705 us/op
# Warmup Iteration   5: 1590.974 us/op
Iteration   1: 1479.228 us/op
Iteration   2: 1383.385 us/op
Iteration   3: 1119.689 us/op
Iteration   4: 1132.669 us/op
Iteration   5: 1083.448 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1232.503 ±(99.9%) 282.602 us/op

  Histogram, us/op:
    [1000.000, 1050.000) = 1 
    [1050.000, 1100.000) = 3 
    [1100.000, 1150.000) = 2 
    [1150.000, 1200.000) = 0 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 1 
    [1400.000, 1450.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1049.725 us/op
     p(50.0000) =   1126.179 us/op
     p(90.0000) =   1496.149 us/op
     p(95.0000) =   1498.029 us/op
     p(99.0000) =   1498.029 us/op
     p(99.9000) =   1498.029 us/op
     p(99.9900) =   1498.029 us/op
     p(99.9990) =   1498.029 us/op
     p(99.9999) =   1498.029 us/op
    p(100.0000) =   1498.029 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.375)

# Run progress: 6.82% complete, ETA 00:43:11
# Fork: 1 of 2
# Warmup Iteration   1: 2486.554 us/op
# Warmup Iteration   2: 1790.962 us/op
# Warmup Iteration   3: 1582.910 us/op
# Warmup Iteration   4: 1379.971 us/op
# Warmup Iteration   5: 1265.804 us/op
Iteration   1: 1255.942 us/op
Iteration   2: 1370.447 us/op
Iteration   3: 1179.767 us/op
Iteration   4: 1159.388 us/op
Iteration   5: 1148.648 us/op

# Run progress: 7.01% complete, ETA 00:43:06
# Fork: 2 of 2
# Warmup Iteration   1: 2659.665 us/op
# Warmup Iteration   2: 1688.067 us/op
# Warmup Iteration   3: 1479.698 us/op
# Warmup Iteration   4: 1397.897 us/op
# Warmup Iteration   5: 1265.933 us/op
Iteration   1: 1421.620 us/op
Iteration   2: 1337.609 us/op
Iteration   3: 1186.318 us/op
Iteration   4: 1153.702 us/op
Iteration   5: 1159.220 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1237.266 ±(99.9%) 155.357 us/op

  Histogram, us/op:
    [1100.000, 1125.000) = 0 
    [1125.000, 1150.000) = 1 
    [1150.000, 1175.000) = 3 
    [1175.000, 1200.000) = 2 
    [1200.000, 1225.000) = 0 
    [1225.000, 1250.000) = 0 
    [1250.000, 1275.000) = 1 
    [1275.000, 1300.000) = 0 
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 1 
    [1350.000, 1375.000) = 1 
    [1375.000, 1400.000) = 0 
    [1400.000, 1425.000) = 1 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1148.648 us/op
     p(50.0000) =   1183.043 us/op
     p(90.0000) =   1416.503 us/op
     p(95.0000) =   1421.620 us/op
     p(99.0000) =   1421.620 us/op
     p(99.9000) =   1421.620 us/op
     p(99.9900) =   1421.620 us/op
     p(99.9990) =   1421.620 us/op
     p(99.9999) =   1421.620 us/op
    p(100.0000) =   1421.620 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.5)

# Run progress: 7.20% complete, ETA 00:43:01
# Fork: 1 of 2
# Warmup Iteration   1: 2537.779 us/op
# Warmup Iteration   2: 1783.551 us/op
# Warmup Iteration   3: 1601.873 us/op
# Warmup Iteration   4: 1440.953 us/op
# Warmup Iteration   5: 1416.691 us/op
Iteration   1: 1473.698 us/op
Iteration   2: 1500.296 us/op
Iteration   3: 1428.405 us/op
Iteration   4: 1297.166 us/op
Iteration   5: 1416.419 us/op

# Run progress: 7.39% complete, ETA 00:42:56
# Fork: 2 of 2
# Warmup Iteration   1: 2513.378 us/op
# Warmup Iteration   2: 1808.214 us/op
# Warmup Iteration   3: 1565.841 us/op
# Warmup Iteration   4: 1395.689 us/op
# Warmup Iteration   5: 1380.054 us/op
Iteration   1: 1476.609 us/op
Iteration   2: 1541.876 us/op
Iteration   3: 1304.101 us/op
Iteration   4: 1315.947 us/op
Iteration   5: 1332.204 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1408.672 ±(99.9%) 136.389 us/op

  Histogram, us/op:
    [1200.000, 1225.000) = 0 
    [1225.000, 1250.000) = 0 
    [1250.000, 1275.000) = 0 
    [1275.000, 1300.000) = 1 
    [1300.000, 1325.000) = 2 
    [1325.000, 1350.000) = 1 
    [1350.000, 1375.000) = 0 
    [1375.000, 1400.000) = 0 
    [1400.000, 1425.000) = 1 
    [1425.000, 1450.000) = 1 
    [1450.000, 1475.000) = 1 
    [1475.000, 1500.000) = 1 
    [1500.000, 1525.000) = 1 
    [1525.000, 1550.000) = 1 
    [1550.000, 1575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1297.166 us/op
     p(50.0000) =   1422.412 us/op
     p(90.0000) =   1537.718 us/op
     p(95.0000) =   1541.876 us/op
     p(99.0000) =   1541.876 us/op
     p(99.9000) =   1541.876 us/op
     p(99.9900) =   1541.876 us/op
     p(99.9990) =   1541.876 us/op
     p(99.9999) =   1541.876 us/op
    p(100.0000) =   1541.876 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.625)

# Run progress: 7.58% complete, ETA 00:42:50
# Fork: 1 of 2
# Warmup Iteration   1: 2261.006 us/op
# Warmup Iteration   2: 1522.763 us/op
# Warmup Iteration   3: 1426.222 us/op
# Warmup Iteration   4: 1197.510 us/op
# Warmup Iteration   5: 1134.743 us/op
Iteration   1: 1387.463 us/op
Iteration   2: 1451.651 us/op
Iteration   3: 1058.937 us/op
Iteration   4: 1098.337 us/op
Iteration   5: 1086.297 us/op

# Run progress: 7.77% complete, ETA 00:42:45
# Fork: 2 of 2
# Warmup Iteration   1: 2610.402 us/op
# Warmup Iteration   2: 1516.494 us/op
# Warmup Iteration   3: 1440.029 us/op
# Warmup Iteration   4: 1298.259 us/op
# Warmup Iteration   5: 1195.126 us/op
Iteration   1: 1234.119 us/op
Iteration   2: 1192.351 us/op
Iteration   3: 1027.563 us/op
Iteration   4: 1230.791 us/op
Iteration   5: 1115.792 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1188.330 ±(99.9%) 213.373 us/op

  Histogram, us/op:
    [1000.000, 1050.000) = 1 
    [1050.000, 1100.000) = 3 
    [1100.000, 1150.000) = 1 
    [1150.000, 1200.000) = 1 
    [1200.000, 1250.000) = 2 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 1 
    [1400.000, 1450.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1027.563 us/op
     p(50.0000) =   1154.072 us/op
     p(90.0000) =   1445.232 us/op
     p(95.0000) =   1451.651 us/op
     p(99.0000) =   1451.651 us/op
     p(99.9000) =   1451.651 us/op
     p(99.9900) =   1451.651 us/op
     p(99.9990) =   1451.651 us/op
     p(99.9999) =   1451.651 us/op
    p(100.0000) =   1451.651 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.75)

# Run progress: 7.95% complete, ETA 00:42:40
# Fork: 1 of 2
# Warmup Iteration   1: 2580.431 us/op
# Warmup Iteration   2: 1774.651 us/op
# Warmup Iteration   3: 1424.364 us/op
# Warmup Iteration   4: 1386.514 us/op
# Warmup Iteration   5: 1196.754 us/op
Iteration   1: 1190.017 us/op
Iteration   2: 1476.350 us/op
Iteration   3: 1302.432 us/op
Iteration   4: 1150.979 us/op
Iteration   5: 1154.235 us/op

# Run progress: 8.14% complete, ETA 00:42:34
# Fork: 2 of 2
# Warmup Iteration   1: 2699.797 us/op
# Warmup Iteration   2: 1729.740 us/op
# Warmup Iteration   3: 1634.586 us/op
# Warmup Iteration   4: 1325.152 us/op
# Warmup Iteration   5: 1168.230 us/op
Iteration   1: 1339.833 us/op
Iteration   2: 1602.434 us/op
Iteration   3: 1068.719 us/op
Iteration   4: 1459.983 us/op
Iteration   5: 1220.318 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1296.530 ±(99.9%) 259.437 us/op

  Histogram, us/op:
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 1 
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 3 
    [1200.000, 1250.000) = 1 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 2 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 2 
    [1500.000, 1550.000) = 0 
    [1550.000, 1600.000) = 0 
    [1600.000, 1650.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1068.719 us/op
     p(50.0000) =   1261.375 us/op
     p(90.0000) =   1589.826 us/op
     p(95.0000) =   1602.434 us/op
     p(99.0000) =   1602.434 us/op
     p(99.9000) =   1602.434 us/op
     p(99.9900) =   1602.434 us/op
     p(99.9990) =   1602.434 us/op
     p(99.9999) =   1602.434 us/op
    p(100.0000) =   1602.434 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.875)

# Run progress: 8.33% complete, ETA 00:42:29
# Fork: 1 of 2
# Warmup Iteration   1: 2853.035 us/op
# Warmup Iteration   2: 1674.789 us/op
# Warmup Iteration   3: 1526.505 us/op
# Warmup Iteration   4: 1310.124 us/op
# Warmup Iteration   5: 1270.086 us/op
Iteration   1: 1253.388 us/op
Iteration   2: 1517.799 us/op
Iteration   3: 1352.271 us/op
Iteration   4: 1186.150 us/op
Iteration   5: 1345.764 us/op

# Run progress: 8.52% complete, ETA 00:42:24
# Fork: 2 of 2
# Warmup Iteration   1: 3428.744 us/op
# Warmup Iteration   2: 1931.601 us/op
# Warmup Iteration   3: 1566.422 us/op
# Warmup Iteration   4: 1332.278 us/op
# Warmup Iteration   5: 1451.961 us/op
Iteration   1: 1275.822 us/op
Iteration   2: 1486.705 us/op
Iteration   3: 1158.287 us/op
Iteration   4: 1300.279 us/op
Iteration   5: 1151.338 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1302.780 ±(99.9%) 191.864 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 3 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 2 
    [1300.000, 1350.000) = 2 
    [1350.000, 1400.000) = 1 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 1 
    [1500.000, 1550.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1151.338 us/op
     p(50.0000) =   1288.050 us/op
     p(90.0000) =   1514.690 us/op
     p(95.0000) =   1517.799 us/op
     p(99.0000) =   1517.799 us/op
     p(99.9000) =   1517.799 us/op
     p(99.9900) =   1517.799 us/op
     p(99.9990) =   1517.799 us/op
     p(99.9999) =   1517.799 us/op
    p(100.0000) =   1517.799 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 1)

# Run progress: 8.71% complete, ETA 00:42:19
# Fork: 1 of 2
# Warmup Iteration   1: 2729.445 us/op
# Warmup Iteration   2: 1679.852 us/op
# Warmup Iteration   3: 1533.812 us/op
# Warmup Iteration   4: 1388.518 us/op
# Warmup Iteration   5: 1332.221 us/op
Iteration   1: 1328.429 us/op
Iteration   2: 1422.175 us/op
Iteration   3: 1280.372 us/op
Iteration   4: 1198.125 us/op
Iteration   5: 1276.812 us/op

# Run progress: 8.90% complete, ETA 00:42:14
# Fork: 2 of 2
# Warmup Iteration   1: 4114.017 us/op
# Warmup Iteration   2: 1773.490 us/op
# Warmup Iteration   3: 1421.826 us/op
# Warmup Iteration   4: 1332.298 us/op
# Warmup Iteration   5: 1317.099 us/op
Iteration   1: 1447.985 us/op
Iteration   2: 1594.166 us/op
Iteration   3: 1309.719 us/op
Iteration   4: 1183.469 us/op
Iteration   5: 1563.982 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1360.523 ±(99.9%) 215.111 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 2 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 2 
    [1300.000, 1350.000) = 2 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 2 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1183.469 us/op
     p(50.0000) =   1319.074 us/op
     p(90.0000) =   1591.148 us/op
     p(95.0000) =   1594.166 us/op
     p(99.0000) =   1594.166 us/op
     p(99.9000) =   1594.166 us/op
     p(99.9900) =   1594.166 us/op
     p(99.9990) =   1594.166 us/op
     p(99.9999) =   1594.166 us/op
    p(100.0000) =   1594.166 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.125)

# Run progress: 9.09% complete, ETA 00:42:08
# Fork: 1 of 2
# Warmup Iteration   1: 2875.131 us/op
# Warmup Iteration   2: 2283.131 us/op
# Warmup Iteration   3: 1835.143 us/op
# Warmup Iteration   4: 1742.719 us/op
# Warmup Iteration   5: 1681.960 us/op
Iteration   1: 1611.833 us/op
Iteration   2: 1592.694 us/op
Iteration   3: 1272.469 us/op
Iteration   4: 1480.353 us/op
Iteration   5: 1279.223 us/op

# Run progress: 9.28% complete, ETA 00:42:03
# Fork: 2 of 2
# Warmup Iteration   1: 3245.170 us/op
# Warmup Iteration   2: 2518.612 us/op
# Warmup Iteration   3: 1890.563 us/op
# Warmup Iteration   4: 1784.479 us/op
# Warmup Iteration   5: 1702.463 us/op
Iteration   1: 1775.571 us/op
Iteration   2: 1620.872 us/op
Iteration   3: 1265.313 us/op
Iteration   4: 1326.380 us/op
Iteration   5: 1259.191 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1448.390 ±(99.9%) 289.113 us/op

  Histogram, us/op:
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 4 
    [1300.000, 1350.000) = 1 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 1 
    [1500.000, 1550.000) = 0 
    [1550.000, 1600.000) = 1 
    [1600.000, 1650.000) = 2 
    [1650.000, 1700.000) = 0 
    [1700.000, 1750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1259.191 us/op
     p(50.0000) =   1403.367 us/op
     p(90.0000) =   1760.101 us/op
     p(95.0000) =   1775.571 us/op
     p(99.0000) =   1775.571 us/op
     p(99.9000) =   1775.571 us/op
     p(99.9900) =   1775.571 us/op
     p(99.9990) =   1775.571 us/op
     p(99.9999) =   1775.571 us/op
    p(100.0000) =   1775.571 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.250)

# Run progress: 9.47% complete, ETA 00:41:58
# Fork: 1 of 2
# Warmup Iteration   1: 2848.983 us/op
# Warmup Iteration   2: 1871.290 us/op
# Warmup Iteration   3: 1613.322 us/op
# Warmup Iteration   4: 1564.533 us/op
# Warmup Iteration   5: 1537.111 us/op
Iteration   1: 1480.499 us/op
Iteration   2: 1303.094 us/op
Iteration   3: 1098.915 us/op
Iteration   4: 1082.238 us/op
Iteration   5: 1089.126 us/op

# Run progress: 9.66% complete, ETA 00:41:52
# Fork: 2 of 2
# Warmup Iteration   1: 2873.222 us/op
# Warmup Iteration   2: 1794.487 us/op
# Warmup Iteration   3: 1554.835 us/op
# Warmup Iteration   4: 1498.084 us/op
# Warmup Iteration   5: 1736.715 us/op
Iteration   1: 1471.811 us/op
Iteration   2: 1517.770 us/op
Iteration   3: 1067.562 us/op
Iteration   4: 1111.288 us/op
Iteration   5: 1089.470 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1231.177 ±(99.9%) 288.819 us/op

  Histogram, us/op:
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 5 
    [1100.000, 1150.000) = 1 
    [1150.000, 1200.000) = 0 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 1 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 2 
    [1500.000, 1550.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1067.562 us/op
     p(50.0000) =   1105.102 us/op
     p(90.0000) =   1514.043 us/op
     p(95.0000) =   1517.770 us/op
     p(99.0000) =   1517.770 us/op
     p(99.9000) =   1517.770 us/op
     p(99.9900) =   1517.770 us/op
     p(99.9990) =   1517.770 us/op
     p(99.9999) =   1517.770 us/op
    p(100.0000) =   1517.770 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.375)

# Run progress: 9.85% complete, ETA 00:41:47
# Fork: 1 of 2
# Warmup Iteration   1: 2464.848 us/op
# Warmup Iteration   2: 1605.176 us/op
# Warmup Iteration   3: 1483.388 us/op
# Warmup Iteration   4: 1371.424 us/op
# Warmup Iteration   5: 1286.864 us/op
Iteration   1: 1310.556 us/op
Iteration   2: 1407.950 us/op
Iteration   3: 1167.325 us/op
Iteration   4: 1149.962 us/op
Iteration   5: 1190.507 us/op

# Run progress: 10.04% complete, ETA 00:41:42
# Fork: 2 of 2
# Warmup Iteration   1: 2660.238 us/op
# Warmup Iteration   2: 1607.960 us/op
# Warmup Iteration   3: 1545.448 us/op
# Warmup Iteration   4: 1359.231 us/op
# Warmup Iteration   5: 1276.885 us/op
Iteration   1: 1246.118 us/op
Iteration   2: 1588.717 us/op
Iteration   3: 1257.163 us/op
Iteration   4: 1161.954 us/op
Iteration   5: 1120.230 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1260.048 ±(99.9%) 218.145 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 2 
    [1150.000, 1200.000) = 3 
    [1200.000, 1250.000) = 1 
    [1250.000, 1300.000) = 1 
    [1300.000, 1350.000) = 1 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 1 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1120.230 us/op
     p(50.0000) =   1218.313 us/op
     p(90.0000) =   1570.640 us/op
     p(95.0000) =   1588.717 us/op
     p(99.0000) =   1588.717 us/op
     p(99.9000) =   1588.717 us/op
     p(99.9900) =   1588.717 us/op
     p(99.9990) =   1588.717 us/op
     p(99.9999) =   1588.717 us/op
    p(100.0000) =   1588.717 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.5)

# Run progress: 10.23% complete, ETA 00:41:36
# Fork: 1 of 2
# Warmup Iteration   1: 2914.082 us/op
# Warmup Iteration   2: 1763.325 us/op
# Warmup Iteration   3: 1754.351 us/op
# Warmup Iteration   4: 1550.037 us/op
# Warmup Iteration   5: 1415.682 us/op
Iteration   1: 1458.466 us/op
Iteration   2: 1427.108 us/op
Iteration   3: 1268.798 us/op
Iteration   4: 1261.853 us/op
Iteration   5: 1342.912 us/op

# Run progress: 10.42% complete, ETA 00:41:31
# Fork: 2 of 2
# Warmup Iteration   1: 2834.851 us/op
# Warmup Iteration   2: 1765.445 us/op
# Warmup Iteration   3: 1728.295 us/op
# Warmup Iteration   4: 1401.959 us/op
# Warmup Iteration   5: 1358.259 us/op
Iteration   1: 1540.229 us/op
Iteration   2: 1518.988 us/op
Iteration   3: 1236.268 us/op
Iteration   4: 1374.737 us/op
Iteration   5: 1316.917 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1374.628 ±(99.9%) 163.645 us/op

  Histogram, us/op:
    [1200.000, 1225.000) = 0 
    [1225.000, 1250.000) = 1 
    [1250.000, 1275.000) = 2 
    [1275.000, 1300.000) = 0 
    [1300.000, 1325.000) = 1 
    [1325.000, 1350.000) = 1 
    [1350.000, 1375.000) = 1 
    [1375.000, 1400.000) = 0 
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 1 
    [1450.000, 1475.000) = 1 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 1 
    [1525.000, 1550.000) = 1 
    [1550.000, 1575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1236.268 us/op
     p(50.0000) =   1358.825 us/op
     p(90.0000) =   1538.105 us/op
     p(95.0000) =   1540.229 us/op
     p(99.0000) =   1540.229 us/op
     p(99.9000) =   1540.229 us/op
     p(99.9900) =   1540.229 us/op
     p(99.9990) =   1540.229 us/op
     p(99.9999) =   1540.229 us/op
    p(100.0000) =   1540.229 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.625)

# Run progress: 10.61% complete, ETA 00:41:26
# Fork: 1 of 2
# Warmup Iteration   1: 2443.410 us/op
# Warmup Iteration   2: 1540.546 us/op
# Warmup Iteration   3: 1388.998 us/op
# Warmup Iteration   4: 1611.199 us/op
# Warmup Iteration   5: 1257.598 us/op
Iteration   1: 1174.221 us/op
Iteration   2: 1540.989 us/op
Iteration   3: 1115.311 us/op
Iteration   4: 1093.654 us/op
Iteration   5: 1081.649 us/op

# Run progress: 10.80% complete, ETA 00:41:21
# Fork: 2 of 2
# Warmup Iteration   1: 2665.557 us/op
# Warmup Iteration   2: 1473.606 us/op
# Warmup Iteration   3: 1288.513 us/op
# Warmup Iteration   4: 1185.385 us/op
# Warmup Iteration   5: 1163.154 us/op
Iteration   1: 1161.762 us/op
Iteration   2: 1619.005 us/op
Iteration   3: 1090.464 us/op
Iteration   4: 1048.929 us/op
Iteration   5: 1068.851 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1199.483 ±(99.9%) 310.032 us/op

  Histogram, us/op:
    [1000.000, 1050.000) = 1 
    [1050.000, 1100.000) = 4 
    [1100.000, 1150.000) = 1 
    [1150.000, 1200.000) = 2 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 1 
    [1550.000, 1600.000) = 0 
    [1600.000, 1650.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1048.929 us/op
     p(50.0000) =   1104.483 us/op
     p(90.0000) =   1611.203 us/op
     p(95.0000) =   1619.005 us/op
     p(99.0000) =   1619.005 us/op
     p(99.9000) =   1619.005 us/op
     p(99.9900) =   1619.005 us/op
     p(99.9990) =   1619.005 us/op
     p(99.9999) =   1619.005 us/op
    p(100.0000) =   1619.005 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.75)

# Run progress: 10.98% complete, ETA 00:41:15
# Fork: 1 of 2
# Warmup Iteration   1: 2645.662 us/op
# Warmup Iteration   2: 1542.632 us/op
# Warmup Iteration   3: 1516.487 us/op
# Warmup Iteration   4: 1294.436 us/op
# Warmup Iteration   5: 1233.022 us/op
Iteration   1: 1194.400 us/op
Iteration   2: 1643.862 us/op
Iteration   3: 1108.837 us/op
Iteration   4: 1220.849 us/op
Iteration   5: 1189.106 us/op

# Run progress: 11.17% complete, ETA 00:41:10
# Fork: 2 of 2
# Warmup Iteration   1: 2592.027 us/op
# Warmup Iteration   2: 1563.504 us/op
# Warmup Iteration   3: 1438.599 us/op
# Warmup Iteration   4: 1326.230 us/op
# Warmup Iteration   5: 1185.519 us/op
Iteration   1: 1470.164 us/op
Iteration   2: 1572.136 us/op
Iteration   3: 1098.524 us/op
Iteration   4: 1131.055 us/op
Iteration   5: 1095.330 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1272.426 ±(99.9%) 315.095 us/op

  Histogram, us/op:
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 2 
    [1100.000, 1150.000) = 2 
    [1150.000, 1200.000) = 2 
    [1200.000, 1250.000) = 1 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 1 
    [1500.000, 1550.000) = 0 
    [1550.000, 1600.000) = 1 
    [1600.000, 1650.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1095.330 us/op
     p(50.0000) =   1191.753 us/op
     p(90.0000) =   1636.689 us/op
     p(95.0000) =   1643.862 us/op
     p(99.0000) =   1643.862 us/op
     p(99.9000) =   1643.862 us/op
     p(99.9900) =   1643.862 us/op
     p(99.9990) =   1643.862 us/op
     p(99.9999) =   1643.862 us/op
    p(100.0000) =   1643.862 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.875)

# Run progress: 11.36% complete, ETA 00:41:05
# Fork: 1 of 2
# Warmup Iteration   1: 2629.255 us/op
# Warmup Iteration   2: 1638.094 us/op
# Warmup Iteration   3: 1381.576 us/op
# Warmup Iteration   4: 1315.764 us/op
# Warmup Iteration   5: 1288.990 us/op
Iteration   1: 1389.782 us/op
Iteration   2: 1411.403 us/op
Iteration   3: 1230.067 us/op
Iteration   4: 1266.730 us/op
Iteration   5: 1127.096 us/op

# Run progress: 11.55% complete, ETA 00:41:00
# Fork: 2 of 2
# Warmup Iteration   1: 2544.300 us/op
# Warmup Iteration   2: 1776.132 us/op
# Warmup Iteration   3: 1506.220 us/op
# Warmup Iteration   4: 1343.307 us/op
# Warmup Iteration   5: 1217.550 us/op
Iteration   1: 1233.251 us/op
Iteration   2: 1373.238 us/op
Iteration   3: 1111.282 us/op
Iteration   4: 1211.157 us/op
Iteration   5: 1155.445 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1250.945 ±(99.9%) 164.480 us/op

  Histogram, us/op:
    [1100.000, 1125.000) = 1 
    [1125.000, 1150.000) = 1 
    [1150.000, 1175.000) = 1 
    [1175.000, 1200.000) = 0 
    [1200.000, 1225.000) = 1 
    [1225.000, 1250.000) = 2 
    [1250.000, 1275.000) = 1 
    [1275.000, 1300.000) = 0 
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 1 
    [1375.000, 1400.000) = 1 
    [1400.000, 1425.000) = 1 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1111.282 us/op
     p(50.0000) =   1231.659 us/op
     p(90.0000) =   1409.241 us/op
     p(95.0000) =   1411.403 us/op
     p(99.0000) =   1411.403 us/op
     p(99.9000) =   1411.403 us/op
     p(99.9900) =   1411.403 us/op
     p(99.9990) =   1411.403 us/op
     p(99.9999) =   1411.403 us/op
    p(100.0000) =   1411.403 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 1)

# Run progress: 11.74% complete, ETA 00:40:54
# Fork: 1 of 2
# Warmup Iteration   1: 2758.825 us/op
# Warmup Iteration   2: 1637.398 us/op
# Warmup Iteration   3: 1363.312 us/op
# Warmup Iteration   4: 1328.667 us/op
# Warmup Iteration   5: 1341.198 us/op
Iteration   1: 1537.299 us/op
Iteration   2: 1501.764 us/op
Iteration   3: 1195.873 us/op
Iteration   4: 1301.072 us/op
Iteration   5: 1193.870 us/op

# Run progress: 11.93% complete, ETA 00:40:49
# Fork: 2 of 2
# Warmup Iteration   1: 2546.865 us/op
# Warmup Iteration   2: 1730.062 us/op
# Warmup Iteration   3: 1361.087 us/op
# Warmup Iteration   4: 1322.734 us/op
# Warmup Iteration   5: 1302.877 us/op
Iteration   1: 1458.610 us/op
Iteration   2: 1517.447 us/op
Iteration   3: 1214.495 us/op
Iteration   4: 1191.673 us/op
Iteration   5: 1190.965 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1330.307 ±(99.9%) 232.756 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 4 
    [1200.000, 1250.000) = 1 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 1 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 1 
    [1500.000, 1550.000) = 3 

  Percentiles, us/op:
      p(0.0000) =   1190.965 us/op
     p(50.0000) =   1257.784 us/op
     p(90.0000) =   1535.314 us/op
     p(95.0000) =   1537.299 us/op
     p(99.0000) =   1537.299 us/op
     p(99.9000) =   1537.299 us/op
     p(99.9900) =   1537.299 us/op
     p(99.9990) =   1537.299 us/op
     p(99.9999) =   1537.299 us/op
    p(100.0000) =   1537.299 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.125)

# Run progress: 12.12% complete, ETA 00:40:44
# Fork: 1 of 2
# Warmup Iteration   1: 3280.533 us/op
# Warmup Iteration   2: 2226.278 us/op
# Warmup Iteration   3: 1774.640 us/op
# Warmup Iteration   4: 1639.033 us/op
# Warmup Iteration   5: 2033.661 us/op
Iteration   1: 1539.282 us/op
Iteration   2: 1525.425 us/op
Iteration   3: 1302.473 us/op
Iteration   4: 1206.868 us/op
Iteration   5: 1167.057 us/op

# Run progress: 12.31% complete, ETA 00:40:38
# Fork: 2 of 2
# Warmup Iteration   1: 3312.728 us/op
# Warmup Iteration   2: 2369.164 us/op
# Warmup Iteration   3: 1717.714 us/op
# Warmup Iteration   4: 1700.130 us/op
# Warmup Iteration   5: 1669.833 us/op
Iteration   1: 1570.581 us/op
Iteration   2: 1640.377 us/op
Iteration   3: 1294.850 us/op
Iteration   4: 1284.750 us/op
Iteration   5: 1259.027 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1379.069 ±(99.9%) 258.403 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 1 
    [1200.000, 1250.000) = 1 
    [1250.000, 1300.000) = 3 
    [1300.000, 1350.000) = 1 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 2 
    [1550.000, 1600.000) = 1 
    [1600.000, 1650.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1167.057 us/op
     p(50.0000) =   1298.662 us/op
     p(90.0000) =   1633.397 us/op
     p(95.0000) =   1640.377 us/op
     p(99.0000) =   1640.377 us/op
     p(99.9000) =   1640.377 us/op
     p(99.9900) =   1640.377 us/op
     p(99.9990) =   1640.377 us/op
     p(99.9999) =   1640.377 us/op
    p(100.0000) =   1640.377 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.250)

# Run progress: 12.50% complete, ETA 00:40:33
# Fork: 1 of 2
# Warmup Iteration   1: 3262.151 us/op
# Warmup Iteration   2: 1749.191 us/op
# Warmup Iteration   3: 1518.229 us/op
# Warmup Iteration   4: 1399.887 us/op
# Warmup Iteration   5: 1423.515 us/op
Iteration   1: 1419.162 us/op
Iteration   2: 1433.589 us/op
Iteration   3: 1205.531 us/op
Iteration   4: 1241.362 us/op
Iteration   5: 1146.674 us/op

# Run progress: 12.69% complete, ETA 00:40:28
# Fork: 2 of 2
# Warmup Iteration   1: 3046.337 us/op
# Warmup Iteration   2: 1671.274 us/op
# Warmup Iteration   3: 1558.348 us/op
# Warmup Iteration   4: 1386.989 us/op
# Warmup Iteration   5: 1471.830 us/op
Iteration   1: 1451.618 us/op
Iteration   2: 1312.196 us/op
Iteration   3: 1188.778 us/op
Iteration   4: 1175.692 us/op
Iteration   5: 1153.188 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1272.779 ±(99.9%) 183.802 us/op

  Histogram, us/op:
    [1100.000, 1125.000) = 0 
    [1125.000, 1150.000) = 1 
    [1150.000, 1175.000) = 1 
    [1175.000, 1200.000) = 2 
    [1200.000, 1225.000) = 1 
    [1225.000, 1250.000) = 1 
    [1250.000, 1275.000) = 0 
    [1275.000, 1300.000) = 0 
    [1300.000, 1325.000) = 1 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 0 
    [1375.000, 1400.000) = 0 
    [1400.000, 1425.000) = 1 
    [1425.000, 1450.000) = 1 
    [1450.000, 1475.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1146.674 us/op
     p(50.0000) =   1223.447 us/op
     p(90.0000) =   1449.815 us/op
     p(95.0000) =   1451.618 us/op
     p(99.0000) =   1451.618 us/op
     p(99.9000) =   1451.618 us/op
     p(99.9900) =   1451.618 us/op
     p(99.9990) =   1451.618 us/op
     p(99.9999) =   1451.618 us/op
    p(100.0000) =   1451.618 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.375)

# Run progress: 12.88% complete, ETA 00:40:22
# Fork: 1 of 2
# Warmup Iteration   1: 2181.041 us/op
# Warmup Iteration   2: 1422.300 us/op
# Warmup Iteration   3: 1303.056 us/op
# Warmup Iteration   4: 1258.953 us/op
# Warmup Iteration   5: 1061.836 us/op
Iteration   1: 1043.753 us/op
Iteration   2: 1190.045 us/op
Iteration   3: 940.274 us/op
Iteration   4: 984.750 us/op
Iteration   5: 920.812 us/op

# Run progress: 13.07% complete, ETA 00:40:17
# Fork: 2 of 2
# Warmup Iteration   1: 2159.971 us/op
# Warmup Iteration   2: 1363.169 us/op
# Warmup Iteration   3: 1320.294 us/op
# Warmup Iteration   4: 1152.988 us/op
# Warmup Iteration   5: 1099.592 us/op
Iteration   1: 1082.809 us/op
Iteration   2: 1114.943 us/op
Iteration   3: 947.438 us/op
Iteration   4: 923.128 us/op
Iteration   5: 939.870 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1008.782 ±(99.9%) 142.261 us/op

  Histogram, us/op:
    [ 900.000,  925.000) = 2 
    [ 925.000,  950.000) = 3 
    [ 950.000,  975.000) = 0 
    [ 975.000, 1000.000) = 1 
    [1000.000, 1025.000) = 0 
    [1025.000, 1050.000) = 1 
    [1050.000, 1075.000) = 0 
    [1075.000, 1100.000) = 1 
    [1100.000, 1125.000) = 1 
    [1125.000, 1150.000) = 0 
    [1150.000, 1175.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    920.812 us/op
     p(50.0000) =    966.094 us/op
     p(90.0000) =   1182.535 us/op
     p(95.0000) =   1190.045 us/op
     p(99.0000) =   1190.045 us/op
     p(99.9000) =   1190.045 us/op
     p(99.9900) =   1190.045 us/op
     p(99.9990) =   1190.045 us/op
     p(99.9999) =   1190.045 us/op
    p(100.0000) =   1190.045 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.5)

# Run progress: 13.26% complete, ETA 00:40:12
# Fork: 1 of 2
# Warmup Iteration   1: 2635.483 us/op
# Warmup Iteration   2: 1479.179 us/op
# Warmup Iteration   3: 1518.390 us/op
# Warmup Iteration   4: 1505.366 us/op
# Warmup Iteration   5: 1133.928 us/op
Iteration   1: 1140.784 us/op
Iteration   2: 1354.843 us/op
Iteration   3: 994.520 us/op
Iteration   4: 993.106 us/op
Iteration   5: 1074.323 us/op

# Run progress: 13.45% complete, ETA 00:40:06
# Fork: 2 of 2
# Warmup Iteration   1: 2546.108 us/op
# Warmup Iteration   2: 1517.392 us/op
# Warmup Iteration   3: 1389.980 us/op
# Warmup Iteration   4: 1310.129 us/op
# Warmup Iteration   5: 1146.802 us/op
Iteration   1: 1220.996 us/op
Iteration   2: 1295.171 us/op
Iteration   3: 1027.337 us/op
Iteration   4: 982.132 us/op
Iteration   5: 1028.556 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1111.177 ±(99.9%) 205.066 us/op

  Histogram, us/op:
    [ 900.000,  950.000) = 0 
    [ 950.000, 1000.000) = 3 
    [1000.000, 1050.000) = 2 
    [1050.000, 1100.000) = 1 
    [1100.000, 1150.000) = 1 
    [1150.000, 1200.000) = 0 
    [1200.000, 1250.000) = 1 
    [1250.000, 1300.000) = 1 
    [1300.000, 1350.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    982.132 us/op
     p(50.0000) =   1051.440 us/op
     p(90.0000) =   1348.876 us/op
     p(95.0000) =   1354.843 us/op
     p(99.0000) =   1354.843 us/op
     p(99.9000) =   1354.843 us/op
     p(99.9900) =   1354.843 us/op
     p(99.9990) =   1354.843 us/op
     p(99.9999) =   1354.843 us/op
    p(100.0000) =   1354.843 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.625)

# Run progress: 13.64% complete, ETA 00:40:01
# Fork: 1 of 2
# Warmup Iteration   1: 1689.748 us/op
# Warmup Iteration   2: 1241.241 us/op
# Warmup Iteration   3: 1139.351 us/op
# Warmup Iteration   4: 912.834 us/op
# Warmup Iteration   5: 887.000 us/op
Iteration   1: 937.238 us/op
Iteration   2: 1044.463 us/op
Iteration   3: 748.419 us/op
Iteration   4: 722.968 us/op
Iteration   5: 731.397 us/op

# Run progress: 13.83% complete, ETA 00:39:56
# Fork: 2 of 2
# Warmup Iteration   1: 1734.880 us/op
# Warmup Iteration   2: 1263.791 us/op
# Warmup Iteration   3: 1063.039 us/op
# Warmup Iteration   4: 893.944 us/op
# Warmup Iteration   5: 882.692 us/op
Iteration   1: 1027.064 us/op
Iteration   2: 1059.255 us/op
Iteration   3: 844.146 us/op
Iteration   4: 723.286 us/op
Iteration   5: 770.997 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    860.923 ±(99.9%) 215.128 us/op

  Histogram, us/op:
    [ 700.000,  725.000) = 2 
    [ 725.000,  750.000) = 2 
    [ 750.000,  775.000) = 1 
    [ 775.000,  800.000) = 0 
    [ 800.000,  825.000) = 0 
    [ 825.000,  850.000) = 1 
    [ 850.000,  875.000) = 0 
    [ 875.000,  900.000) = 0 
    [ 900.000,  925.000) = 0 
    [ 925.000,  950.000) = 1 
    [ 950.000,  975.000) = 0 
    [ 975.000, 1000.000) = 0 
    [1000.000, 1025.000) = 0 
    [1025.000, 1050.000) = 2 
    [1050.000, 1075.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    722.968 us/op
     p(50.0000) =    807.572 us/op
     p(90.0000) =   1057.776 us/op
     p(95.0000) =   1059.255 us/op
     p(99.0000) =   1059.255 us/op
     p(99.9000) =   1059.255 us/op
     p(99.9900) =   1059.255 us/op
     p(99.9990) =   1059.255 us/op
     p(99.9999) =   1059.255 us/op
    p(100.0000) =   1059.255 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.75)

# Run progress: 14.02% complete, ETA 00:39:51
# Fork: 1 of 2
# Warmup Iteration   1: 1683.816 us/op
# Warmup Iteration   2: 1267.154 us/op
# Warmup Iteration   3: 1233.484 us/op
# Warmup Iteration   4: 1033.051 us/op
# Warmup Iteration   5: 898.968 us/op
Iteration   1: 893.169 us/op
Iteration   2: 880.092 us/op
Iteration   3: 736.704 us/op
Iteration   4: 743.036 us/op
Iteration   5: 724.906 us/op

# Run progress: 14.20% complete, ETA 00:39:45
# Fork: 2 of 2
# Warmup Iteration   1: 1684.552 us/op
# Warmup Iteration   2: 1321.303 us/op
# Warmup Iteration   3: 1117.611 us/op
# Warmup Iteration   4: 973.217 us/op
# Warmup Iteration   5: 877.652 us/op
Iteration   1: 877.639 us/op
Iteration   2: 1011.143 us/op
Iteration   3: 725.549 us/op
Iteration   4: 709.233 us/op
Iteration   5: 723.702 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    802.517 ±(99.9%) 157.870 us/op

  Histogram, us/op:
    [ 700.000,  725.000) = 3 
    [ 725.000,  750.000) = 3 
    [ 750.000,  775.000) = 0 
    [ 775.000,  800.000) = 0 
    [ 800.000,  825.000) = 0 
    [ 825.000,  850.000) = 0 
    [ 850.000,  875.000) = 0 
    [ 875.000,  900.000) = 3 
    [ 900.000,  925.000) = 0 
    [ 925.000,  950.000) = 0 
    [ 950.000,  975.000) = 0 
    [ 975.000, 1000.000) = 0 
    [1000.000, 1025.000) = 1 
    [1025.000, 1050.000) = 0 
    [1050.000, 1075.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    709.233 us/op
     p(50.0000) =    739.870 us/op
     p(90.0000) =    999.346 us/op
     p(95.0000) =   1011.143 us/op
     p(99.0000) =   1011.143 us/op
     p(99.9000) =   1011.143 us/op
     p(99.9900) =   1011.143 us/op
     p(99.9990) =   1011.143 us/op
     p(99.9999) =   1011.143 us/op
    p(100.0000) =   1011.143 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.875)

# Run progress: 14.39% complete, ETA 00:39:40
# Fork: 1 of 2
# Warmup Iteration   1: 1718.914 us/op
# Warmup Iteration   2: 1261.378 us/op
# Warmup Iteration   3: 995.394 us/op
# Warmup Iteration   4: 925.960 us/op
# Warmup Iteration   5: 953.746 us/op
Iteration   1: 930.311 us/op
Iteration   2: 934.985 us/op
Iteration   3: 745.048 us/op
Iteration   4: 728.351 us/op
Iteration   5: 729.672 us/op

# Run progress: 14.58% complete, ETA 00:39:35
# Fork: 2 of 2
# Warmup Iteration   1: 1738.989 us/op
# Warmup Iteration   2: 1382.751 us/op
# Warmup Iteration   3: 1104.098 us/op
# Warmup Iteration   4: 1043.062 us/op
# Warmup Iteration   5: 870.602 us/op
Iteration   1: 863.732 us/op
Iteration   2: 1063.173 us/op
Iteration   3: 720.562 us/op
Iteration   4: 799.234 us/op
Iteration   5: 720.212 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    823.528 ±(99.9%) 180.837 us/op

  Histogram, us/op:
    [ 700.000,  725.000) = 2 
    [ 725.000,  750.000) = 3 
    [ 750.000,  775.000) = 0 
    [ 775.000,  800.000) = 1 
    [ 800.000,  825.000) = 0 
    [ 825.000,  850.000) = 0 
    [ 850.000,  875.000) = 1 
    [ 875.000,  900.000) = 0 
    [ 900.000,  925.000) = 0 
    [ 925.000,  950.000) = 2 
    [ 950.000,  975.000) = 0 
    [ 975.000, 1000.000) = 0 
    [1000.000, 1025.000) = 0 
    [1025.000, 1050.000) = 0 
    [1050.000, 1075.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    720.212 us/op
     p(50.0000) =    772.141 us/op
     p(90.0000) =   1050.354 us/op
     p(95.0000) =   1063.173 us/op
     p(99.0000) =   1063.173 us/op
     p(99.9000) =   1063.173 us/op
     p(99.9900) =   1063.173 us/op
     p(99.9990) =   1063.173 us/op
     p(99.9999) =   1063.173 us/op
    p(100.0000) =   1063.173 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 1)

# Run progress: 14.77% complete, ETA 00:39:29
# Fork: 1 of 2
# Warmup Iteration   1: 1797.653 us/op
# Warmup Iteration   2: 1237.452 us/op
# Warmup Iteration   3: 928.628 us/op
# Warmup Iteration   4: 934.669 us/op
# Warmup Iteration   5: 907.626 us/op
Iteration   1: 910.425 us/op
Iteration   2: 925.035 us/op
Iteration   3: 738.293 us/op
Iteration   4: 758.398 us/op
Iteration   5: 729.629 us/op

# Run progress: 14.96% complete, ETA 00:39:24
# Fork: 2 of 2
# Warmup Iteration   1: 1904.591 us/op
# Warmup Iteration   2: 1255.428 us/op
# Warmup Iteration   3: 1104.803 us/op
# Warmup Iteration   4: 1188.257 us/op
# Warmup Iteration   5: 931.245 us/op
Iteration   1: 859.063 us/op
Iteration   2: 982.627 us/op
Iteration   3: 724.590 us/op
Iteration   4: 701.067 us/op
Iteration   5: 698.175 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    802.730 ±(99.9%) 160.101 us/op

  Histogram, us/op:
    [ 600.000,  625.000) = 0 
    [ 625.000,  650.000) = 0 
    [ 650.000,  675.000) = 0 
    [ 675.000,  700.000) = 1 
    [ 700.000,  725.000) = 2 
    [ 725.000,  750.000) = 2 
    [ 750.000,  775.000) = 1 
    [ 775.000,  800.000) = 0 
    [ 800.000,  825.000) = 0 
    [ 825.000,  850.000) = 0 
    [ 850.000,  875.000) = 1 
    [ 875.000,  900.000) = 0 
    [ 900.000,  925.000) = 1 
    [ 925.000,  950.000) = 1 
    [ 950.000,  975.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    698.175 us/op
     p(50.0000) =    748.346 us/op
     p(90.0000) =    976.868 us/op
     p(95.0000) =    982.627 us/op
     p(99.0000) =    982.627 us/op
     p(99.9000) =    982.627 us/op
     p(99.9900) =    982.627 us/op
     p(99.9990) =    982.627 us/op
     p(99.9999) =    982.627 us/op
    p(100.0000) =    982.627 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.125)

# Run progress: 15.15% complete, ETA 00:39:19
# Fork: 1 of 2
# Warmup Iteration   1: 3240.641 us/op
# Warmup Iteration   2: 1784.513 us/op
# Warmup Iteration   3: 1677.810 us/op
# Warmup Iteration   4: 1347.840 us/op
# Warmup Iteration   5: 1350.485 us/op
Iteration   1: 1345.966 us/op
Iteration   2: 1449.996 us/op
Iteration   3: 1117.631 us/op
Iteration   4: 1077.530 us/op
Iteration   5: 1457.167 us/op

# Run progress: 15.34% complete, ETA 00:39:13
# Fork: 2 of 2
# Warmup Iteration   1: 3334.663 us/op
# Warmup Iteration   2: 1586.157 us/op
# Warmup Iteration   3: 1425.831 us/op
# Warmup Iteration   4: 1304.713 us/op
# Warmup Iteration   5: 1467.033 us/op
Iteration   1: 1313.462 us/op
Iteration   2: 1479.416 us/op
Iteration   3: 1200.563 us/op
Iteration   4: 1080.726 us/op
Iteration   5: 1122.024 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1264.448 ±(99.9%) 247.625 us/op

  Histogram, us/op:
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 2 
    [1100.000, 1150.000) = 2 
    [1150.000, 1200.000) = 0 
    [1200.000, 1250.000) = 1 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 2 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1077.530 us/op
     p(50.0000) =   1257.013 us/op
     p(90.0000) =   1477.191 us/op
     p(95.0000) =   1479.416 us/op
     p(99.0000) =   1479.416 us/op
     p(99.9000) =   1479.416 us/op
     p(99.9900) =   1479.416 us/op
     p(99.9990) =   1479.416 us/op
     p(99.9999) =   1479.416 us/op
    p(100.0000) =   1479.416 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.250)

# Run progress: 15.53% complete, ETA 00:39:08
# Fork: 1 of 2
# Warmup Iteration   1: 1927.015 us/op
# Warmup Iteration   2: 1260.305 us/op
# Warmup Iteration   3: 1471.571 us/op
# Warmup Iteration   4: 1194.853 us/op
# Warmup Iteration   5: 923.845 us/op
Iteration   1: 917.362 us/op
Iteration   2: 1187.677 us/op
Iteration   3: 801.214 us/op
Iteration   4: 901.827 us/op
Iteration   5: 793.479 us/op

# Run progress: 15.72% complete, ETA 00:39:03
# Fork: 2 of 2
# Warmup Iteration   1: 1733.562 us/op
# Warmup Iteration   2: 1276.819 us/op
# Warmup Iteration   3: 1151.300 us/op
# Warmup Iteration   4: 1114.077 us/op
# Warmup Iteration   5: 917.393 us/op
Iteration   1: 1006.019 us/op
Iteration   2: 1054.827 us/op
Iteration   3: 785.684 us/op
Iteration   4: 776.369 us/op
Iteration   5: 777.233 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    900.169 ±(99.9%) 215.468 us/op

  Histogram, us/op:
    [ 700.000,  750.000) = 0 
    [ 750.000,  800.000) = 4 
    [ 800.000,  850.000) = 1 
    [ 850.000,  900.000) = 0 
    [ 900.000,  950.000) = 2 
    [ 950.000, 1000.000) = 0 
    [1000.000, 1050.000) = 1 
    [1050.000, 1100.000) = 1 
    [1100.000, 1150.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    776.369 us/op
     p(50.0000) =    851.521 us/op
     p(90.0000) =   1174.392 us/op
     p(95.0000) =   1187.677 us/op
     p(99.0000) =   1187.677 us/op
     p(99.9000) =   1187.677 us/op
     p(99.9900) =   1187.677 us/op
     p(99.9990) =   1187.677 us/op
     p(99.9999) =   1187.677 us/op
    p(100.0000) =   1187.677 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.375)

# Run progress: 15.91% complete, ETA 00:38:58
# Fork: 1 of 2
# Warmup Iteration   1: 1735.209 us/op
# Warmup Iteration   2: 1274.862 us/op
# Warmup Iteration   3: 1239.485 us/op
# Warmup Iteration   4: 1189.966 us/op
# Warmup Iteration   5: 926.933 us/op
Iteration   1: 888.254 us/op
Iteration   2: 1194.500 us/op
Iteration   3: 1025.037 us/op
Iteration   4: 837.044 us/op
Iteration   5: 801.588 us/op

# Run progress: 16.10% complete, ETA 00:38:52
# Fork: 2 of 2
# Warmup Iteration   1: 1669.404 us/op
# Warmup Iteration   2: 1263.837 us/op
# Warmup Iteration   3: 1130.973 us/op
# Warmup Iteration   4: 1112.795 us/op
# Warmup Iteration   5: 1064.584 us/op
Iteration   1: 932.157 us/op
Iteration   2: 1055.399 us/op
Iteration   3: 793.774 us/op
Iteration   4: 829.084 us/op
Iteration   5: 805.783 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    916.262 ±(99.9%) 204.010 us/op

  Histogram, us/op:
    [ 700.000,  750.000) = 0 
    [ 750.000,  800.000) = 1 
    [ 800.000,  850.000) = 4 
    [ 850.000,  900.000) = 1 
    [ 900.000,  950.000) = 1 
    [ 950.000, 1000.000) = 0 
    [1000.000, 1050.000) = 1 
    [1050.000, 1100.000) = 1 
    [1100.000, 1150.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    793.774 us/op
     p(50.0000) =    862.649 us/op
     p(90.0000) =   1180.590 us/op
     p(95.0000) =   1194.500 us/op
     p(99.0000) =   1194.500 us/op
     p(99.9000) =   1194.500 us/op
     p(99.9900) =   1194.500 us/op
     p(99.9990) =   1194.500 us/op
     p(99.9999) =   1194.500 us/op
    p(100.0000) =   1194.500 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.5)

# Run progress: 16.29% complete, ETA 00:38:47
# Fork: 1 of 2
# Warmup Iteration   1: 1712.482 us/op
# Warmup Iteration   2: 1270.164 us/op
# Warmup Iteration   3: 1147.090 us/op
# Warmup Iteration   4: 1091.512 us/op
# Warmup Iteration   5: 944.351 us/op
Iteration   1: 944.642 us/op
Iteration   2: 1016.402 us/op
Iteration   3: 785.847 us/op
Iteration   4: 1167.367 us/op
Iteration   5: 1410.195 us/op

# Run progress: 16.48% complete, ETA 00:38:42
# Fork: 2 of 2
# Warmup Iteration   1: 1727.687 us/op
# Warmup Iteration   2: 1284.574 us/op
# Warmup Iteration   3: 966.767 us/op
# Warmup Iteration   4: 944.522 us/op
# Warmup Iteration   5: 923.273 us/op
Iteration   1: 925.641 us/op
Iteration   2: 1069.460 us/op
Iteration   3: 788.436 us/op
Iteration   4: 800.934 us/op
Iteration   5: 808.876 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    971.780 ±(99.9%) 306.033 us/op

  Histogram, us/op:
    [ 700.000,  750.000) = 0 
    [ 750.000,  800.000) = 2 
    [ 800.000,  850.000) = 2 
    [ 850.000,  900.000) = 0 
    [ 900.000,  950.000) = 2 
    [ 950.000, 1000.000) = 0 
    [1000.000, 1050.000) = 1 
    [1050.000, 1100.000) = 1 
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 1 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    785.847 us/op
     p(50.0000) =    935.142 us/op
     p(90.0000) =   1385.912 us/op
     p(95.0000) =   1410.195 us/op
     p(99.0000) =   1410.195 us/op
     p(99.9000) =   1410.195 us/op
     p(99.9900) =   1410.195 us/op
     p(99.9990) =   1410.195 us/op
     p(99.9999) =   1410.195 us/op
    p(100.0000) =   1410.195 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.625)

# Run progress: 16.67% complete, ETA 00:38:36
# Fork: 1 of 2
# Warmup Iteration   1: 1696.958 us/op
# Warmup Iteration   2: 1409.597 us/op
# Warmup Iteration   3: 1132.597 us/op
# Warmup Iteration   4: 1088.305 us/op
# Warmup Iteration   5: 919.585 us/op
Iteration   1: 920.182 us/op
Iteration   2: 1100.186 us/op
Iteration   3: 769.735 us/op
Iteration   4: 782.502 us/op
Iteration   5: 787.304 us/op

# Run progress: 16.86% complete, ETA 00:38:31
# Fork: 2 of 2
# Warmup Iteration   1: 1861.618 us/op
# Warmup Iteration   2: 1284.864 us/op
# Warmup Iteration   3: 1269.103 us/op
# Warmup Iteration   4: 1078.812 us/op
# Warmup Iteration   5: 897.753 us/op
Iteration   1: 909.927 us/op
Iteration   2: 1115.633 us/op
Iteration   3: 809.427 us/op
Iteration   4: 786.940 us/op
Iteration   5: 799.156 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    878.099 ±(99.9%) 199.626 us/op

  Histogram, us/op:
    [ 700.000,  750.000) = 0 
    [ 750.000,  800.000) = 5 
    [ 800.000,  850.000) = 1 
    [ 850.000,  900.000) = 0 
    [ 900.000,  950.000) = 2 
    [ 950.000, 1000.000) = 0 
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 0 
    [1100.000, 1150.000) = 2 

  Percentiles, us/op:
      p(0.0000) =    769.735 us/op
     p(50.0000) =    804.292 us/op
     p(90.0000) =   1114.088 us/op
     p(95.0000) =   1115.633 us/op
     p(99.0000) =   1115.633 us/op
     p(99.9000) =   1115.633 us/op
     p(99.9900) =   1115.633 us/op
     p(99.9990) =   1115.633 us/op
     p(99.9999) =   1115.633 us/op
    p(100.0000) =   1115.633 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.75)

# Run progress: 17.05% complete, ETA 00:38:26
# Fork: 1 of 2
# Warmup Iteration   1: 1704.571 us/op
# Warmup Iteration   2: 1308.072 us/op
# Warmup Iteration   3: 1157.727 us/op
# Warmup Iteration   4: 1071.238 us/op
# Warmup Iteration   5: 924.218 us/op
Iteration   1: 908.505 us/op
Iteration   2: 1116.177 us/op
Iteration   3: 815.052 us/op
Iteration   4: 783.531 us/op
Iteration   5: 780.064 us/op

# Run progress: 17.23% complete, ETA 00:38:20
# Fork: 2 of 2
# Warmup Iteration   1: 1883.470 us/op
# Warmup Iteration   2: 1400.183 us/op
# Warmup Iteration   3: 1033.260 us/op
# Warmup Iteration   4: 937.284 us/op
# Warmup Iteration   5: 909.394 us/op
Iteration   1: 923.770 us/op
Iteration   2: 1009.557 us/op
Iteration   3: 816.329 us/op
Iteration   4: 822.772 us/op
Iteration   5: 815.830 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    879.159 ±(99.9%) 167.328 us/op

  Histogram, us/op:
    [ 700.000,  750.000) = 0 
    [ 750.000,  800.000) = 2 
    [ 800.000,  850.000) = 4 
    [ 850.000,  900.000) = 0 
    [ 900.000,  950.000) = 2 
    [ 950.000, 1000.000) = 0 
    [1000.000, 1050.000) = 1 
    [1050.000, 1100.000) = 0 
    [1100.000, 1150.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    780.064 us/op
     p(50.0000) =    819.551 us/op
     p(90.0000) =   1105.515 us/op
     p(95.0000) =   1116.177 us/op
     p(99.0000) =   1116.177 us/op
     p(99.9000) =   1116.177 us/op
     p(99.9900) =   1116.177 us/op
     p(99.9990) =   1116.177 us/op
     p(99.9999) =   1116.177 us/op
    p(100.0000) =   1116.177 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.875)

# Run progress: 17.42% complete, ETA 00:38:15
# Fork: 1 of 2
# Warmup Iteration   1: 1750.650 us/op
# Warmup Iteration   2: 1249.199 us/op
# Warmup Iteration   3: 1071.014 us/op
# Warmup Iteration   4: 942.081 us/op
# Warmup Iteration   5: 947.304 us/op
Iteration   1: 933.168 us/op
Iteration   2: 1141.234 us/op
Iteration   3: 840.619 us/op
Iteration   4: 808.051 us/op
Iteration   5: 786.770 us/op

# Run progress: 17.61% complete, ETA 00:38:10
# Fork: 2 of 2
# Warmup Iteration   1: 1606.329 us/op
# Warmup Iteration   2: 1243.504 us/op
# Warmup Iteration   3: 1123.571 us/op
# Warmup Iteration   4: 1043.049 us/op
# Warmup Iteration   5: 918.736 us/op
Iteration   1: 922.411 us/op
Iteration   2: 1100.669 us/op
Iteration   3: 772.323 us/op
Iteration   4: 779.880 us/op
Iteration   5: 769.530 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    885.466 ±(99.9%) 208.094 us/op

  Histogram, us/op:
    [ 700.000,  750.000) = 0 
    [ 750.000,  800.000) = 4 
    [ 800.000,  850.000) = 2 
    [ 850.000,  900.000) = 0 
    [ 900.000,  950.000) = 2 
    [ 950.000, 1000.000) = 0 
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 0 
    [1100.000, 1150.000) = 2 

  Percentiles, us/op:
      p(0.0000) =    769.530 us/op
     p(50.0000) =    824.335 us/op
     p(90.0000) =   1137.178 us/op
     p(95.0000) =   1141.234 us/op
     p(99.0000) =   1141.234 us/op
     p(99.9000) =   1141.234 us/op
     p(99.9900) =   1141.234 us/op
     p(99.9990) =   1141.234 us/op
     p(99.9999) =   1141.234 us/op
    p(100.0000) =   1141.234 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 1)

# Run progress: 17.80% complete, ETA 00:38:05
# Fork: 1 of 2
# Warmup Iteration   1: 1989.919 us/op
# Warmup Iteration   2: 1333.810 us/op
# Warmup Iteration   3: 1174.551 us/op
# Warmup Iteration   4: 950.859 us/op
# Warmup Iteration   5: 915.779 us/op
Iteration   1: 902.367 us/op
Iteration   2: 1181.869 us/op
Iteration   3: 841.261 us/op
Iteration   4: 787.401 us/op
Iteration   5: 799.512 us/op

# Run progress: 17.99% complete, ETA 00:37:59
# Fork: 2 of 2
# Warmup Iteration   1: 1756.685 us/op
# Warmup Iteration   2: 1317.758 us/op
# Warmup Iteration   3: 1102.944 us/op
# Warmup Iteration   4: 1083.107 us/op
# Warmup Iteration   5: 929.887 us/op
Iteration   1: 910.616 us/op
Iteration   2: 1054.695 us/op
Iteration   3: 780.953 us/op
Iteration   4: 767.442 us/op
Iteration   5: 771.622 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    879.774 ±(99.9%) 210.130 us/op

  Histogram, us/op:
    [ 700.000,  750.000) = 0 
    [ 750.000,  800.000) = 5 
    [ 800.000,  850.000) = 1 
    [ 850.000,  900.000) = 0 
    [ 900.000,  950.000) = 2 
    [ 950.000, 1000.000) = 0 
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 1 
    [1100.000, 1150.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    767.442 us/op
     p(50.0000) =    820.387 us/op
     p(90.0000) =   1169.152 us/op
     p(95.0000) =   1181.869 us/op
     p(99.0000) =   1181.869 us/op
     p(99.9000) =   1181.869 us/op
     p(99.9900) =   1181.869 us/op
     p(99.9990) =   1181.869 us/op
     p(99.9999) =   1181.869 us/op
    p(100.0000) =   1181.869 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.125)

# Run progress: 18.18% complete, ETA 00:37:54
# Fork: 1 of 2
# Warmup Iteration   1: 1837.134 us/op
# Warmup Iteration   2: 1402.844 us/op
# Warmup Iteration   3: 1255.735 us/op
# Warmup Iteration   4: 1163.350 us/op
# Warmup Iteration   5: 1016.148 us/op
Iteration   1: 989.051 us/op
Iteration   2: 1135.852 us/op
Iteration   3: 914.900 us/op
Iteration   4: 889.630 us/op
Iteration   5: 1123.601 us/op

# Run progress: 18.37% complete, ETA 00:37:49
# Fork: 2 of 2
# Warmup Iteration   1: 1831.397 us/op
# Warmup Iteration   2: 1345.269 us/op
# Warmup Iteration   3: 1314.760 us/op
# Warmup Iteration   4: 1098.125 us/op
# Warmup Iteration   5: 1052.244 us/op
Iteration   1: 1011.109 us/op
Iteration   2: 1178.634 us/op
Iteration   3: 879.491 us/op
Iteration   4: 876.616 us/op
Iteration   5: 932.431 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    993.132 ±(99.9%) 173.955 us/op

  Histogram, us/op:
    [ 800.000,  825.000) = 0 
    [ 825.000,  850.000) = 0 
    [ 850.000,  875.000) = 0 
    [ 875.000,  900.000) = 3 
    [ 900.000,  925.000) = 1 
    [ 925.000,  950.000) = 1 
    [ 950.000,  975.000) = 0 
    [ 975.000, 1000.000) = 1 
    [1000.000, 1025.000) = 1 
    [1025.000, 1050.000) = 0 
    [1050.000, 1075.000) = 0 
    [1075.000, 1100.000) = 0 
    [1100.000, 1125.000) = 1 
    [1125.000, 1150.000) = 1 
    [1150.000, 1175.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    876.616 us/op
     p(50.0000) =    960.741 us/op
     p(90.0000) =   1174.356 us/op
     p(95.0000) =   1178.634 us/op
     p(99.0000) =   1178.634 us/op
     p(99.9000) =   1178.634 us/op
     p(99.9900) =   1178.634 us/op
     p(99.9990) =   1178.634 us/op
     p(99.9999) =   1178.634 us/op
    p(100.0000) =   1178.634 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.250)

# Run progress: 18.56% complete, ETA 00:37:43
# Fork: 1 of 2
# Warmup Iteration   1: 1793.134 us/op
# Warmup Iteration   2: 1354.957 us/op
# Warmup Iteration   3: 1272.170 us/op
# Warmup Iteration   4: 1318.344 us/op
# Warmup Iteration   5: 1048.578 us/op
Iteration   1: 1025.359 us/op
Iteration   2: 1196.943 us/op
Iteration   3: 910.472 us/op
Iteration   4: 889.824 us/op
Iteration   5: 919.636 us/op

# Run progress: 18.75% complete, ETA 00:37:38
# Fork: 2 of 2
# Warmup Iteration   1: 1914.250 us/op
# Warmup Iteration   2: 1505.914 us/op
# Warmup Iteration   3: 1209.505 us/op
# Warmup Iteration   4: 1129.725 us/op
# Warmup Iteration   5: 1054.224 us/op
Iteration   1: 1005.541 us/op
Iteration   2: 1173.465 us/op
Iteration   3: 894.838 us/op
Iteration   4: 938.627 us/op
Iteration   5: 898.519 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    985.322 ±(99.9%) 173.942 us/op

  Histogram, us/op:
    [ 800.000,  825.000) = 0 
    [ 825.000,  850.000) = 0 
    [ 850.000,  875.000) = 0 
    [ 875.000,  900.000) = 3 
    [ 900.000,  925.000) = 2 
    [ 925.000,  950.000) = 1 
    [ 950.000,  975.000) = 0 
    [ 975.000, 1000.000) = 0 
    [1000.000, 1025.000) = 1 
    [1025.000, 1050.000) = 1 
    [1050.000, 1075.000) = 0 
    [1075.000, 1100.000) = 0 
    [1100.000, 1125.000) = 0 
    [1125.000, 1150.000) = 0 
    [1150.000, 1175.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    889.824 us/op
     p(50.0000) =    929.132 us/op
     p(90.0000) =   1194.595 us/op
     p(95.0000) =   1196.943 us/op
     p(99.0000) =   1196.943 us/op
     p(99.9000) =   1196.943 us/op
     p(99.9900) =   1196.943 us/op
     p(99.9990) =   1196.943 us/op
     p(99.9999) =   1196.943 us/op
    p(100.0000) =   1196.943 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.375)

# Run progress: 18.94% complete, ETA 00:37:33
# Fork: 1 of 2
# Warmup Iteration   1: 1808.730 us/op
# Warmup Iteration   2: 1365.792 us/op
# Warmup Iteration   3: 1065.873 us/op
# Warmup Iteration   4: 995.161 us/op
# Warmup Iteration   5: 1001.159 us/op
Iteration   1: 1016.742 us/op
Iteration   2: 1237.709 us/op
Iteration   3: 948.734 us/op
Iteration   4: 940.838 us/op
Iteration   5: 854.693 us/op

# Run progress: 19.13% complete, ETA 00:37:27
# Fork: 2 of 2
# Warmup Iteration   1: 1972.922 us/op
# Warmup Iteration   2: 1372.789 us/op
# Warmup Iteration   3: 1205.461 us/op
# Warmup Iteration   4: 1156.106 us/op
# Warmup Iteration   5: 1005.332 us/op
Iteration   1: 973.639 us/op
Iteration   2: 1436.388 us/op
Iteration   3: 929.954 us/op
Iteration   4: 872.465 us/op
Iteration   5: 924.562 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1013.572 ±(99.9%) 276.108 us/op

  Histogram, us/op:
    [ 800.000,  850.000) = 0 
    [ 850.000,  900.000) = 2 
    [ 900.000,  950.000) = 4 
    [ 950.000, 1000.000) = 1 
    [1000.000, 1050.000) = 1 
    [1050.000, 1100.000) = 0 
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 0 
    [1200.000, 1250.000) = 1 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    854.693 us/op
     p(50.0000) =    944.786 us/op
     p(90.0000) =   1416.520 us/op
     p(95.0000) =   1436.388 us/op
     p(99.0000) =   1436.388 us/op
     p(99.9000) =   1436.388 us/op
     p(99.9900) =   1436.388 us/op
     p(99.9990) =   1436.388 us/op
     p(99.9999) =   1436.388 us/op
    p(100.0000) =   1436.388 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.5)

# Run progress: 19.32% complete, ETA 00:37:22
# Fork: 1 of 2
# Warmup Iteration   1: 1779.298 us/op
# Warmup Iteration   2: 1366.740 us/op
# Warmup Iteration   3: 1240.804 us/op
# Warmup Iteration   4: 1114.228 us/op
# Warmup Iteration   5: 1046.987 us/op
Iteration   1: 1107.283 us/op
Iteration   2: 1276.111 us/op
Iteration   3: 869.766 us/op
Iteration   4: 895.285 us/op
Iteration   5: 879.192 us/op

# Run progress: 19.51% complete, ETA 00:37:17
# Fork: 2 of 2
# Warmup Iteration   1: 1722.336 us/op
# Warmup Iteration   2: 1394.162 us/op
# Warmup Iteration   3: 1268.755 us/op
# Warmup Iteration   4: 1138.018 us/op
# Warmup Iteration   5: 1033.628 us/op
Iteration   1: 1009.291 us/op
Iteration   2: 1160.783 us/op
Iteration   3: 904.768 us/op
Iteration   4: 895.208 us/op
Iteration   5: 910.549 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    990.824 ±(99.9%) 215.828 us/op

  Histogram, us/op:
    [ 800.000,  850.000) = 0 
    [ 850.000,  900.000) = 4 
    [ 900.000,  950.000) = 2 
    [ 950.000, 1000.000) = 0 
    [1000.000, 1050.000) = 1 
    [1050.000, 1100.000) = 0 
    [1100.000, 1150.000) = 1 
    [1150.000, 1200.000) = 1 
    [1200.000, 1250.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    869.766 us/op
     p(50.0000) =    907.659 us/op
     p(90.0000) =   1264.578 us/op
     p(95.0000) =   1276.111 us/op
     p(99.0000) =   1276.111 us/op
     p(99.9000) =   1276.111 us/op
     p(99.9900) =   1276.111 us/op
     p(99.9990) =   1276.111 us/op
     p(99.9999) =   1276.111 us/op
    p(100.0000) =   1276.111 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.625)

# Run progress: 19.70% complete, ETA 00:37:12
# Fork: 1 of 2
# Warmup Iteration   1: 1875.847 us/op
# Warmup Iteration   2: 1446.991 us/op
# Warmup Iteration   3: 1297.738 us/op
# Warmup Iteration   4: 1067.085 us/op
# Warmup Iteration   5: 999.199 us/op
Iteration   1: 986.943 us/op
Iteration   2: 1249.247 us/op
Iteration   3: 900.325 us/op
Iteration   4: 946.673 us/op
Iteration   5: 895.980 us/op

# Run progress: 19.89% complete, ETA 00:37:06
# Fork: 2 of 2
# Warmup Iteration   1: 1732.440 us/op
# Warmup Iteration   2: 1388.398 us/op
# Warmup Iteration   3: 1221.924 us/op
# Warmup Iteration   4: 1144.561 us/op
# Warmup Iteration   5: 1010.818 us/op
Iteration   1: 988.892 us/op
Iteration   2: 1096.199 us/op
Iteration   3: 875.224 us/op
Iteration   4: 890.843 us/op
Iteration   5: 883.024 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    971.335 ±(99.9%) 180.456 us/op

  Histogram, us/op:
    [ 800.000,  850.000) = 0 
    [ 850.000,  900.000) = 4 
    [ 900.000,  950.000) = 2 
    [ 950.000, 1000.000) = 2 
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 1 
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 0 
    [1200.000, 1250.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    875.224 us/op
     p(50.0000) =    923.499 us/op
     p(90.0000) =   1233.942 us/op
     p(95.0000) =   1249.247 us/op
     p(99.0000) =   1249.247 us/op
     p(99.9000) =   1249.247 us/op
     p(99.9900) =   1249.247 us/op
     p(99.9990) =   1249.247 us/op
     p(99.9999) =   1249.247 us/op
    p(100.0000) =   1249.247 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.75)

# Run progress: 20.08% complete, ETA 00:37:01
# Fork: 1 of 2
# Warmup Iteration   1: 1795.166 us/op
# Warmup Iteration   2: 1380.210 us/op
# Warmup Iteration   3: 1135.204 us/op
# Warmup Iteration   4: 1009.854 us/op
# Warmup Iteration   5: 1001.801 us/op
Iteration   1: 1058.137 us/op
Iteration   2: 1218.549 us/op
Iteration   3: 912.745 us/op
Iteration   4: 910.411 us/op
Iteration   5: 853.931 us/op

# Run progress: 20.27% complete, ETA 00:36:56
# Fork: 2 of 2
# Warmup Iteration   1: 1908.848 us/op
# Warmup Iteration   2: 1456.501 us/op
# Warmup Iteration   3: 1256.009 us/op
# Warmup Iteration   4: 1014.895 us/op
# Warmup Iteration   5: 1009.134 us/op
Iteration   1: 1003.150 us/op
Iteration   2: 1221.041 us/op
Iteration   3: 874.584 us/op
Iteration   4: 963.856 us/op
Iteration   5: 868.473 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    988.488 ±(99.9%) 207.784 us/op

  Histogram, us/op:
    [ 800.000,  850.000) = 0 
    [ 850.000,  900.000) = 3 
    [ 900.000,  950.000) = 2 
    [ 950.000, 1000.000) = 1 
    [1000.000, 1050.000) = 1 
    [1050.000, 1100.000) = 1 
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 0 
    [1200.000, 1250.000) = 2 

  Percentiles, us/op:
      p(0.0000) =    853.931 us/op
     p(50.0000) =    938.301 us/op
     p(90.0000) =   1220.792 us/op
     p(95.0000) =   1221.041 us/op
     p(99.0000) =   1221.041 us/op
     p(99.9000) =   1221.041 us/op
     p(99.9900) =   1221.041 us/op
     p(99.9990) =   1221.041 us/op
     p(99.9999) =   1221.041 us/op
    p(100.0000) =   1221.041 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.875)

# Run progress: 20.45% complete, ETA 00:36:50
# Fork: 1 of 2
# Warmup Iteration   1: 2346.177 us/op
# Warmup Iteration   2: 1381.906 us/op
# Warmup Iteration   3: 1265.864 us/op
# Warmup Iteration   4: 1051.356 us/op
# Warmup Iteration   5: 997.218 us/op
Iteration   1: 1031.399 us/op
Iteration   2: 1182.876 us/op
Iteration   3: 887.220 us/op
Iteration   4: 895.830 us/op
Iteration   5: 894.144 us/op

# Run progress: 20.64% complete, ETA 00:36:45
# Fork: 2 of 2
# Warmup Iteration   1: 1733.605 us/op
# Warmup Iteration   2: 1420.018 us/op
# Warmup Iteration   3: 1342.683 us/op
# Warmup Iteration   4: 980.395 us/op
# Warmup Iteration   5: 992.534 us/op
Iteration   1: 981.338 us/op
Iteration   2: 1226.601 us/op
Iteration   3: 937.686 us/op
Iteration   4: 854.816 us/op
Iteration   5: 881.886 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    977.380 ±(99.9%) 198.213 us/op

  Histogram, us/op:
    [ 800.000,  850.000) = 0 
    [ 850.000,  900.000) = 5 
    [ 900.000,  950.000) = 1 
    [ 950.000, 1000.000) = 1 
    [1000.000, 1050.000) = 1 
    [1050.000, 1100.000) = 0 
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 1 
    [1200.000, 1250.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    854.816 us/op
     p(50.0000) =    916.758 us/op
     p(90.0000) =   1222.229 us/op
     p(95.0000) =   1226.601 us/op
     p(99.0000) =   1226.601 us/op
     p(99.9000) =   1226.601 us/op
     p(99.9900) =   1226.601 us/op
     p(99.9990) =   1226.601 us/op
     p(99.9999) =   1226.601 us/op
    p(100.0000) =   1226.601 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 1)

# Run progress: 20.83% complete, ETA 00:36:40
# Fork: 1 of 2
# Warmup Iteration   1: 1970.188 us/op
# Warmup Iteration   2: 1384.994 us/op
# Warmup Iteration   3: 1274.967 us/op
# Warmup Iteration   4: 1166.498 us/op
# Warmup Iteration   5: 1034.196 us/op
Iteration   1: 1016.138 us/op
Iteration   2: 1278.396 us/op
Iteration   3: 896.498 us/op
Iteration   4: 876.253 us/op
Iteration   5: 899.675 us/op

# Run progress: 21.02% complete, ETA 00:36:35
# Fork: 2 of 2
# Warmup Iteration   1: 1890.689 us/op
# Warmup Iteration   2: 1405.645 us/op
# Warmup Iteration   3: 1221.849 us/op
# Warmup Iteration   4: 1119.848 us/op
# Warmup Iteration   5: 1045.252 us/op
Iteration   1: 1002.882 us/op
Iteration   2: 1177.826 us/op
Iteration   3: 885.545 us/op
Iteration   4: 899.075 us/op
Iteration   5: 880.930 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    981.322 ±(99.9%) 213.489 us/op

  Histogram, us/op:
    [ 800.000,  850.000) = 0 
    [ 850.000,  900.000) = 6 
    [ 900.000,  950.000) = 0 
    [ 950.000, 1000.000) = 0 
    [1000.000, 1050.000) = 2 
    [1050.000, 1100.000) = 0 
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 1 
    [1200.000, 1250.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    876.253 us/op
     p(50.0000) =    899.375 us/op
     p(90.0000) =   1268.339 us/op
     p(95.0000) =   1278.396 us/op
     p(99.0000) =   1278.396 us/op
     p(99.9000) =   1278.396 us/op
     p(99.9900) =   1278.396 us/op
     p(99.9990) =   1278.396 us/op
     p(99.9999) =   1278.396 us/op
    p(100.0000) =   1278.396 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.125)

# Run progress: 21.21% complete, ETA 00:36:29
# Fork: 1 of 2
# Warmup Iteration   1: 2460.013 us/op
# Warmup Iteration   2: 2093.011 us/op
# Warmup Iteration   3: 2265.539 us/op
# Warmup Iteration   4: 1621.897 us/op
# Warmup Iteration   5: 1788.686 us/op
Iteration   1: 1563.183 us/op
Iteration   2: 2021.407 us/op
Iteration   3: 1559.420 us/op
Iteration   4: 1627.521 us/op
Iteration   5: 1537.756 us/op

# Run progress: 21.40% complete, ETA 00:36:24
# Fork: 2 of 2
# Warmup Iteration   1: 2716.806 us/op
# Warmup Iteration   2: 2044.242 us/op
# Warmup Iteration   3: 1966.111 us/op
# Warmup Iteration   4: 1695.807 us/op
# Warmup Iteration   5: 1806.104 us/op
Iteration   1: 1645.254 us/op
Iteration   2: 2056.804 us/op
Iteration   3: 1562.270 us/op
Iteration   4: 1703.556 us/op
Iteration   5: 1541.939 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1681.911 ±(99.9%) 295.730 us/op

  Histogram, us/op:
    [1500.000, 1550.000) = 2 
    [1550.000, 1600.000) = 3 
    [1600.000, 1650.000) = 2 
    [1650.000, 1700.000) = 0 
    [1700.000, 1750.000) = 1 
    [1750.000, 1800.000) = 0 
    [1800.000, 1850.000) = 0 
    [1850.000, 1900.000) = 0 
    [1900.000, 1950.000) = 0 
    [1950.000, 2000.000) = 0 
    [2000.000, 2050.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1537.756 us/op
     p(50.0000) =   1595.352 us/op
     p(90.0000) =   2053.264 us/op
     p(95.0000) =   2056.804 us/op
     p(99.0000) =   2056.804 us/op
     p(99.9000) =   2056.804 us/op
     p(99.9900) =   2056.804 us/op
     p(99.9990) =   2056.804 us/op
     p(99.9999) =   2056.804 us/op
    p(100.0000) =   2056.804 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.250)

# Run progress: 21.59% complete, ETA 00:36:19
# Fork: 1 of 2
# Warmup Iteration   1: 2373.517 us/op
# Warmup Iteration   2: 2097.931 us/op
# Warmup Iteration   3: 2142.900 us/op
# Warmup Iteration   4: 1600.481 us/op
# Warmup Iteration   5: 1703.943 us/op
Iteration   1: 1558.791 us/op
Iteration   2: 2135.466 us/op
Iteration   3: 1469.446 us/op
Iteration   4: 1734.180 us/op
Iteration   5: 1537.550 us/op

# Run progress: 21.78% complete, ETA 00:36:14
# Fork: 2 of 2
# Warmup Iteration   1: 2463.626 us/op
# Warmup Iteration   2: 2004.108 us/op
# Warmup Iteration   3: 2344.573 us/op
# Warmup Iteration   4: 1648.784 us/op
# Warmup Iteration   5: 1755.658 us/op
Iteration   1: 1635.253 us/op
Iteration   2: 1958.161 us/op
Iteration   3: 1488.674 us/op
Iteration   4: 1728.448 us/op
Iteration   5: 1527.117 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1677.309 ±(99.9%) 330.975 us/op

  Histogram, us/op:
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 2 
    [1500.000, 1550.000) = 2 
    [1550.000, 1600.000) = 1 
    [1600.000, 1650.000) = 1 
    [1650.000, 1700.000) = 0 
    [1700.000, 1750.000) = 2 
    [1750.000, 1800.000) = 0 
    [1800.000, 1850.000) = 0 
    [1850.000, 1900.000) = 0 
    [1900.000, 1950.000) = 0 
    [1950.000, 2000.000) = 1 
    [2000.000, 2050.000) = 0 
    [2050.000, 2100.000) = 0 
    [2100.000, 2150.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1469.446 us/op
     p(50.0000) =   1597.022 us/op
     p(90.0000) =   2117.736 us/op
     p(95.0000) =   2135.466 us/op
     p(99.0000) =   2135.466 us/op
     p(99.9000) =   2135.466 us/op
     p(99.9900) =   2135.466 us/op
     p(99.9990) =   2135.466 us/op
     p(99.9999) =   2135.466 us/op
    p(100.0000) =   2135.466 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.375)

# Run progress: 21.97% complete, ETA 00:36:08
# Fork: 1 of 2
# Warmup Iteration   1: 2660.854 us/op
# Warmup Iteration   2: 2030.675 us/op
# Warmup Iteration   3: 2331.930 us/op
# Warmup Iteration   4: 1609.424 us/op
# Warmup Iteration   5: 1697.186 us/op
Iteration   1: 1580.536 us/op
Iteration   2: 2032.965 us/op
Iteration   3: 1490.393 us/op
Iteration   4: 1595.161 us/op
Iteration   5: 1549.967 us/op

# Run progress: 22.16% complete, ETA 00:36:03
# Fork: 2 of 2
# Warmup Iteration   1: 2517.782 us/op
# Warmup Iteration   2: 1986.118 us/op
# Warmup Iteration   3: 2169.858 us/op
# Warmup Iteration   4: 1581.457 us/op
# Warmup Iteration   5: 1700.817 us/op
Iteration   1: 1601.421 us/op
Iteration   2: 2027.063 us/op
Iteration   3: 1488.134 us/op
Iteration   4: 1709.900 us/op
Iteration   5: 1511.207 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1658.675 ±(99.9%) 311.804 us/op

  Histogram, us/op:
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 2 
    [1500.000, 1550.000) = 2 
    [1550.000, 1600.000) = 2 
    [1600.000, 1650.000) = 1 
    [1650.000, 1700.000) = 0 
    [1700.000, 1750.000) = 1 
    [1750.000, 1800.000) = 0 
    [1800.000, 1850.000) = 0 
    [1850.000, 1900.000) = 0 
    [1900.000, 1950.000) = 0 
    [1950.000, 2000.000) = 0 
    [2000.000, 2050.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   1488.134 us/op
     p(50.0000) =   1587.849 us/op
     p(90.0000) =   2032.375 us/op
     p(95.0000) =   2032.965 us/op
     p(99.0000) =   2032.965 us/op
     p(99.9000) =   2032.965 us/op
     p(99.9900) =   2032.965 us/op
     p(99.9990) =   2032.965 us/op
     p(99.9999) =   2032.965 us/op
    p(100.0000) =   2032.965 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.5)

# Run progress: 22.35% complete, ETA 00:35:58
# Fork: 1 of 2
# Warmup Iteration   1: 2452.138 us/op
# Warmup Iteration   2: 1986.463 us/op
# Warmup Iteration   3: 1993.779 us/op
# Warmup Iteration   4: 1617.129 us/op
# Warmup Iteration   5: 1761.701 us/op
Iteration   1: 1630.375 us/op
Iteration   2: 1960.805 us/op
Iteration   3: 1584.534 us/op
Iteration   4: 1594.078 us/op
Iteration   5: 1571.116 us/op

# Run progress: 22.54% complete, ETA 00:35:53
# Fork: 2 of 2
# Warmup Iteration   1: 2346.705 us/op
# Warmup Iteration   2: 2072.050 us/op
# Warmup Iteration   3: 2034.663 us/op
# Warmup Iteration   4: 1615.642 us/op
# Warmup Iteration   5: 1652.158 us/op
Iteration   1: 1579.686 us/op
Iteration   2: 1981.901 us/op
Iteration   3: 1485.317 us/op
Iteration   4: 1762.713 us/op
Iteration   5: 1528.073 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1667.860 ±(99.9%) 265.341 us/op

  Histogram, us/op:
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 1 
    [1500.000, 1550.000) = 1 
    [1550.000, 1600.000) = 4 
    [1600.000, 1650.000) = 1 
    [1650.000, 1700.000) = 0 
    [1700.000, 1750.000) = 0 
    [1750.000, 1800.000) = 1 
    [1800.000, 1850.000) = 0 
    [1850.000, 1900.000) = 0 
    [1900.000, 1950.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1485.317 us/op
     p(50.0000) =   1589.306 us/op
     p(90.0000) =   1979.791 us/op
     p(95.0000) =   1981.901 us/op
     p(99.0000) =   1981.901 us/op
     p(99.9000) =   1981.901 us/op
     p(99.9900) =   1981.901 us/op
     p(99.9990) =   1981.901 us/op
     p(99.9999) =   1981.901 us/op
    p(100.0000) =   1981.901 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.625)

# Run progress: 22.73% complete, ETA 00:35:47
# Fork: 1 of 2
# Warmup Iteration   1: 2651.377 us/op
# Warmup Iteration   2: 1966.905 us/op
# Warmup Iteration   3: 2138.203 us/op
# Warmup Iteration   4: 1613.953 us/op
# Warmup Iteration   5: 1799.963 us/op
Iteration   1: 1563.873 us/op
Iteration   2: 1968.847 us/op
Iteration   3: 1523.061 us/op
Iteration   4: 1634.201 us/op
Iteration   5: 1544.267 us/op

# Run progress: 22.92% complete, ETA 00:35:42
# Fork: 2 of 2
# Warmup Iteration   1: 2459.907 us/op
# Warmup Iteration   2: 2190.453 us/op
# Warmup Iteration   3: 2137.098 us/op
# Warmup Iteration   4: 1660.025 us/op
# Warmup Iteration   5: 1722.827 us/op
Iteration   1: 1564.837 us/op
Iteration   2: 2083.147 us/op
Iteration   3: 1515.515 us/op
Iteration   4: 1666.659 us/op
Iteration   5: 1670.118 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1673.452 ±(99.9%) 295.903 us/op

  Histogram, us/op:
    [1500.000, 1550.000) = 3 
    [1550.000, 1600.000) = 2 
    [1600.000, 1650.000) = 1 
    [1650.000, 1700.000) = 2 
    [1700.000, 1750.000) = 0 
    [1750.000, 1800.000) = 0 
    [1800.000, 1850.000) = 0 
    [1850.000, 1900.000) = 0 
    [1900.000, 1950.000) = 0 
    [1950.000, 2000.000) = 1 
    [2000.000, 2050.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1515.515 us/op
     p(50.0000) =   1599.519 us/op
     p(90.0000) =   2071.717 us/op
     p(95.0000) =   2083.147 us/op
     p(99.0000) =   2083.147 us/op
     p(99.9000) =   2083.147 us/op
     p(99.9900) =   2083.147 us/op
     p(99.9990) =   2083.147 us/op
     p(99.9999) =   2083.147 us/op
    p(100.0000) =   2083.147 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.75)

# Run progress: 23.11% complete, ETA 00:35:37
# Fork: 1 of 2
# Warmup Iteration   1: 2498.865 us/op
# Warmup Iteration   2: 2019.063 us/op
# Warmup Iteration   3: 2295.365 us/op
# Warmup Iteration   4: 1589.388 us/op
# Warmup Iteration   5: 1807.103 us/op
Iteration   1: 1656.357 us/op
Iteration   2: 1994.825 us/op
Iteration   3: 1525.017 us/op
Iteration   4: 1645.616 us/op
Iteration   5: 1479.526 us/op

# Run progress: 23.30% complete, ETA 00:35:32
# Fork: 2 of 2
# Warmup Iteration   1: 2354.749 us/op
# Warmup Iteration   2: 2049.446 us/op
# Warmup Iteration   3: 2330.339 us/op
# Warmup Iteration   4: 1591.999 us/op
# Warmup Iteration   5: 1700.581 us/op
Iteration   1: 1614.276 us/op
Iteration   2: 1953.488 us/op
Iteration   3: 1499.074 us/op
Iteration   4: 1628.415 us/op
Iteration   5: 1543.897 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1654.049 ±(99.9%) 272.025 us/op

  Histogram, us/op:
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 2 
    [1500.000, 1550.000) = 2 
    [1550.000, 1600.000) = 0 
    [1600.000, 1650.000) = 3 
    [1650.000, 1700.000) = 1 
    [1700.000, 1750.000) = 0 
    [1750.000, 1800.000) = 0 
    [1800.000, 1850.000) = 0 
    [1850.000, 1900.000) = 0 
    [1900.000, 1950.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1479.526 us/op
     p(50.0000) =   1621.346 us/op
     p(90.0000) =   1990.691 us/op
     p(95.0000) =   1994.825 us/op
     p(99.0000) =   1994.825 us/op
     p(99.9000) =   1994.825 us/op
     p(99.9900) =   1994.825 us/op
     p(99.9990) =   1994.825 us/op
     p(99.9999) =   1994.825 us/op
    p(100.0000) =   1994.825 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.875)

# Run progress: 23.48% complete, ETA 00:35:26
# Fork: 1 of 2
# Warmup Iteration   1: 2532.236 us/op
# Warmup Iteration   2: 2044.721 us/op
# Warmup Iteration   3: 2342.464 us/op
# Warmup Iteration   4: 1728.173 us/op
# Warmup Iteration   5: 1706.161 us/op
Iteration   1: 1573.443 us/op
Iteration   2: 2044.552 us/op
Iteration   3: 1512.435 us/op
Iteration   4: 1695.998 us/op
Iteration   5: 1472.170 us/op

# Run progress: 23.67% complete, ETA 00:35:21
# Fork: 2 of 2
# Warmup Iteration   1: 2414.019 us/op
# Warmup Iteration   2: 1994.421 us/op
# Warmup Iteration   3: 2192.822 us/op
# Warmup Iteration   4: 1660.002 us/op
# Warmup Iteration   5: 1742.598 us/op
Iteration   1: 1594.802 us/op
Iteration   2: 1923.262 us/op
Iteration   3: 1490.165 us/op
Iteration   4: 1687.995 us/op
Iteration   5: 1489.550 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1648.437 ±(99.9%) 295.844 us/op

  Histogram, us/op:
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 3 
    [1500.000, 1550.000) = 1 
    [1550.000, 1600.000) = 2 
    [1600.000, 1650.000) = 0 
    [1650.000, 1700.000) = 2 
    [1700.000, 1750.000) = 0 
    [1750.000, 1800.000) = 0 
    [1800.000, 1850.000) = 0 
    [1850.000, 1900.000) = 0 
    [1900.000, 1950.000) = 1 
    [1950.000, 2000.000) = 0 
    [2000.000, 2050.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1472.170 us/op
     p(50.0000) =   1584.123 us/op
     p(90.0000) =   2032.423 us/op
     p(95.0000) =   2044.552 us/op
     p(99.0000) =   2044.552 us/op
     p(99.9000) =   2044.552 us/op
     p(99.9900) =   2044.552 us/op
     p(99.9990) =   2044.552 us/op
     p(99.9999) =   2044.552 us/op
    p(100.0000) =   2044.552 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 1)

# Run progress: 23.86% complete, ETA 00:35:16
# Fork: 1 of 2
# Warmup Iteration   1: 2652.733 us/op
# Warmup Iteration   2: 2016.890 us/op
# Warmup Iteration   3: 2244.972 us/op
# Warmup Iteration   4: 1655.099 us/op
# Warmup Iteration   5: 1731.115 us/op
Iteration   1: 1601.850 us/op
Iteration   2: 1990.471 us/op
Iteration   3: 1505.234 us/op
Iteration   4: 1679.857 us/op
Iteration   5: 1525.458 us/op

# Run progress: 24.05% complete, ETA 00:35:11
# Fork: 2 of 2
# Warmup Iteration   1: 2386.049 us/op
# Warmup Iteration   2: 2363.886 us/op
# Warmup Iteration   3: 2242.005 us/op
# Warmup Iteration   4: 1601.252 us/op
# Warmup Iteration   5: 1775.632 us/op
Iteration   1: 1577.353 us/op
Iteration   2: 2087.389 us/op
Iteration   3: 1490.810 us/op
Iteration   4: 1678.451 us/op
Iteration   5: 1506.858 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1664.373 ±(99.9%) 317.434 us/op

  Histogram, us/op:
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 1 
    [1500.000, 1550.000) = 3 
    [1550.000, 1600.000) = 1 
    [1600.000, 1650.000) = 1 
    [1650.000, 1700.000) = 2 
    [1700.000, 1750.000) = 0 
    [1750.000, 1800.000) = 0 
    [1800.000, 1850.000) = 0 
    [1850.000, 1900.000) = 0 
    [1900.000, 1950.000) = 0 
    [1950.000, 2000.000) = 1 
    [2000.000, 2050.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1490.810 us/op
     p(50.0000) =   1589.602 us/op
     p(90.0000) =   2077.697 us/op
     p(95.0000) =   2087.389 us/op
     p(99.0000) =   2087.389 us/op
     p(99.9000) =   2087.389 us/op
     p(99.9900) =   2087.389 us/op
     p(99.9990) =   2087.389 us/op
     p(99.9999) =   2087.389 us/op
    p(100.0000) =   2087.389 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.125)

# Run progress: 24.24% complete, ETA 00:35:05
# Fork: 1 of 2
# Warmup Iteration   1: 3373.844 us/op
# Warmup Iteration   2: 3063.850 us/op
# Warmup Iteration   3: 2692.823 us/op
# Warmup Iteration   4: 2553.220 us/op
# Warmup Iteration   5: 2378.249 us/op
Iteration   1: 2438.330 us/op
Iteration   2: 2782.590 us/op
Iteration   3: 2297.381 us/op
Iteration   4: 2320.949 us/op
Iteration   5: 2456.882 us/op

# Run progress: 24.43% complete, ETA 00:35:00
# Fork: 2 of 2
# Warmup Iteration   1: 3239.871 us/op
# Warmup Iteration   2: 3179.212 us/op
# Warmup Iteration   3: 2429.693 us/op
# Warmup Iteration   4: 2335.800 us/op
# Warmup Iteration   5: 2367.620 us/op
Iteration   1: 2366.859 us/op
Iteration   2: 2555.704 us/op
Iteration   3: 2300.493 us/op
Iteration   4: 2323.477 us/op
Iteration   5: 2264.412 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2410.708 ±(99.9%) 239.680 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 2 
    [2300.000, 2350.000) = 3 
    [2350.000, 2400.000) = 1 
    [2400.000, 2450.000) = 1 
    [2450.000, 2500.000) = 1 
    [2500.000, 2550.000) = 0 
    [2550.000, 2600.000) = 1 
    [2600.000, 2650.000) = 0 
    [2650.000, 2700.000) = 0 
    [2700.000, 2750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2264.412 us/op
     p(50.0000) =   2345.168 us/op
     p(90.0000) =   2759.901 us/op
     p(95.0000) =   2782.590 us/op
     p(99.0000) =   2782.590 us/op
     p(99.9000) =   2782.590 us/op
     p(99.9900) =   2782.590 us/op
     p(99.9990) =   2782.590 us/op
     p(99.9999) =   2782.590 us/op
    p(100.0000) =   2782.590 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.250)

# Run progress: 24.62% complete, ETA 00:34:55
# Fork: 1 of 2
# Warmup Iteration   1: 3354.881 us/op
# Warmup Iteration   2: 3079.660 us/op
# Warmup Iteration   3: 2463.457 us/op
# Warmup Iteration   4: 2448.818 us/op
# Warmup Iteration   5: 2438.104 us/op
Iteration   1: 2448.538 us/op
Iteration   2: 2650.019 us/op
Iteration   3: 2234.344 us/op
Iteration   4: 2292.557 us/op
Iteration   5: 2291.162 us/op

# Run progress: 24.81% complete, ETA 00:34:50
# Fork: 2 of 2
# Warmup Iteration   1: 3305.855 us/op
# Warmup Iteration   2: 3228.770 us/op
# Warmup Iteration   3: 2472.560 us/op
# Warmup Iteration   4: 2414.731 us/op
# Warmup Iteration   5: 2382.837 us/op
Iteration   1: 2472.670 us/op
Iteration   2: 2496.453 us/op
Iteration   3: 2288.671 us/op
Iteration   4: 2341.611 us/op
Iteration   5: 2395.333 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2391.136 ±(99.9%) 192.111 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 1 
    [2250.000, 2300.000) = 3 
    [2300.000, 2350.000) = 1 
    [2350.000, 2400.000) = 1 
    [2400.000, 2450.000) = 1 
    [2450.000, 2500.000) = 2 
    [2500.000, 2550.000) = 0 
    [2550.000, 2600.000) = 0 
    [2600.000, 2650.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2234.344 us/op
     p(50.0000) =   2368.472 us/op
     p(90.0000) =   2634.662 us/op
     p(95.0000) =   2650.019 us/op
     p(99.0000) =   2650.019 us/op
     p(99.9000) =   2650.019 us/op
     p(99.9900) =   2650.019 us/op
     p(99.9990) =   2650.019 us/op
     p(99.9999) =   2650.019 us/op
    p(100.0000) =   2650.019 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.375)

# Run progress: 25.00% complete, ETA 00:34:45
# Fork: 1 of 2
# Warmup Iteration   1: 3254.250 us/op
# Warmup Iteration   2: 3154.180 us/op
# Warmup Iteration   3: 2837.145 us/op
# Warmup Iteration   4: 2418.683 us/op
# Warmup Iteration   5: 2372.418 us/op
Iteration   1: 2417.350 us/op
Iteration   2: 2538.031 us/op
Iteration   3: 2302.543 us/op
Iteration   4: 2263.667 us/op
Iteration   5: 2197.107 us/op

# Run progress: 25.19% complete, ETA 00:34:39
# Fork: 2 of 2
# Warmup Iteration   1: 3990.126 us/op
# Warmup Iteration   2: 3415.031 us/op
# Warmup Iteration   3: 2983.580 us/op
# Warmup Iteration   4: 2492.266 us/op
# Warmup Iteration   5: 2456.254 us/op
Iteration   1: 2484.009 us/op
Iteration   2: 2754.106 us/op
Iteration   3: 2269.137 us/op
Iteration   4: 2503.259 us/op
Iteration   5: 2332.508 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2406.172 ±(99.9%) 253.491 us/op

  Histogram, us/op:
    [2100.000, 2150.000) = 0 
    [2150.000, 2200.000) = 1 
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 2 
    [2300.000, 2350.000) = 2 
    [2350.000, 2400.000) = 0 
    [2400.000, 2450.000) = 1 
    [2450.000, 2500.000) = 1 
    [2500.000, 2550.000) = 2 
    [2550.000, 2600.000) = 0 
    [2600.000, 2650.000) = 0 
    [2650.000, 2700.000) = 0 
    [2700.000, 2750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2197.107 us/op
     p(50.0000) =   2374.929 us/op
     p(90.0000) =   2732.499 us/op
     p(95.0000) =   2754.106 us/op
     p(99.0000) =   2754.106 us/op
     p(99.9000) =   2754.106 us/op
     p(99.9900) =   2754.106 us/op
     p(99.9990) =   2754.106 us/op
     p(99.9999) =   2754.106 us/op
    p(100.0000) =   2754.106 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.5)

# Run progress: 25.38% complete, ETA 00:34:34
# Fork: 1 of 2
# Warmup Iteration   1: 3144.142 us/op
# Warmup Iteration   2: 3112.844 us/op
# Warmup Iteration   3: 2648.923 us/op
# Warmup Iteration   4: 2413.008 us/op
# Warmup Iteration   5: 2369.149 us/op
Iteration   1: 2389.086 us/op
Iteration   2: 2626.868 us/op
Iteration   3: 2364.976 us/op
Iteration   4: 2333.355 us/op
Iteration   5: 2312.671 us/op

# Run progress: 25.57% complete, ETA 00:34:29
# Fork: 2 of 2
# Warmup Iteration   1: 3408.956 us/op
# Warmup Iteration   2: 3167.944 us/op
# Warmup Iteration   3: 2562.288 us/op
# Warmup Iteration   4: 2406.583 us/op
# Warmup Iteration   5: 2406.372 us/op
Iteration   1: 2387.545 us/op
Iteration   2: 2521.799 us/op
Iteration   3: 2276.370 us/op
Iteration   4: 2301.138 us/op
Iteration   5: 2413.776 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2392.758 ±(99.9%) 162.985 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 1 
    [2300.000, 2350.000) = 3 
    [2350.000, 2400.000) = 3 
    [2400.000, 2450.000) = 1 
    [2450.000, 2500.000) = 0 
    [2500.000, 2550.000) = 1 
    [2550.000, 2600.000) = 0 
    [2600.000, 2650.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2276.370 us/op
     p(50.0000) =   2376.261 us/op
     p(90.0000) =   2616.361 us/op
     p(95.0000) =   2626.868 us/op
     p(99.0000) =   2626.868 us/op
     p(99.9000) =   2626.868 us/op
     p(99.9900) =   2626.868 us/op
     p(99.9990) =   2626.868 us/op
     p(99.9999) =   2626.868 us/op
    p(100.0000) =   2626.868 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.625)

# Run progress: 25.76% complete, ETA 00:34:24
# Fork: 1 of 2
# Warmup Iteration   1: 3184.762 us/op
# Warmup Iteration   2: 3234.633 us/op
# Warmup Iteration   3: 2661.144 us/op
# Warmup Iteration   4: 2423.807 us/op
# Warmup Iteration   5: 2473.477 us/op
Iteration   1: 2437.131 us/op
Iteration   2: 2608.616 us/op
Iteration   3: 2339.428 us/op
Iteration   4: 2292.207 us/op
Iteration   5: 2341.930 us/op

# Run progress: 25.95% complete, ETA 00:34:18
# Fork: 2 of 2
# Warmup Iteration   1: 3256.352 us/op
# Warmup Iteration   2: 3187.932 us/op
# Warmup Iteration   3: 2694.897 us/op
# Warmup Iteration   4: 2435.004 us/op
# Warmup Iteration   5: 2298.157 us/op
Iteration   1: 2368.132 us/op
Iteration   2: 2685.871 us/op
Iteration   3: 2291.896 us/op
Iteration   4: 2273.544 us/op
Iteration   5: 2505.047 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2414.380 ±(99.9%) 215.549 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 3 
    [2300.000, 2350.000) = 2 
    [2350.000, 2400.000) = 1 
    [2400.000, 2450.000) = 1 
    [2450.000, 2500.000) = 0 
    [2500.000, 2550.000) = 1 
    [2550.000, 2600.000) = 0 
    [2600.000, 2650.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2273.544 us/op
     p(50.0000) =   2355.031 us/op
     p(90.0000) =   2678.146 us/op
     p(95.0000) =   2685.871 us/op
     p(99.0000) =   2685.871 us/op
     p(99.9000) =   2685.871 us/op
     p(99.9900) =   2685.871 us/op
     p(99.9990) =   2685.871 us/op
     p(99.9999) =   2685.871 us/op
    p(100.0000) =   2685.871 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.75)

# Run progress: 26.14% complete, ETA 00:34:13
# Fork: 1 of 2
# Warmup Iteration   1: 3236.663 us/op
# Warmup Iteration   2: 3162.087 us/op
# Warmup Iteration   3: 2654.875 us/op
# Warmup Iteration   4: 2358.732 us/op
# Warmup Iteration   5: 2348.990 us/op
Iteration   1: 2380.011 us/op
Iteration   2: 2590.356 us/op
Iteration   3: 2295.234 us/op
Iteration   4: 2293.875 us/op
Iteration   5: 2291.621 us/op

# Run progress: 26.33% complete, ETA 00:34:08
# Fork: 2 of 2
# Warmup Iteration   1: 3222.170 us/op
# Warmup Iteration   2: 3173.196 us/op
# Warmup Iteration   3: 2720.767 us/op
# Warmup Iteration   4: 2374.851 us/op
# Warmup Iteration   5: 2390.373 us/op
Iteration   1: 2439.097 us/op
Iteration   2: 2596.375 us/op
Iteration   3: 2327.246 us/op
Iteration   4: 2302.476 us/op
Iteration   5: 2349.085 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2386.538 ±(99.9%) 179.095 us/op

  Histogram, us/op:
    [2200.000, 2225.000) = 0 
    [2225.000, 2250.000) = 0 
    [2250.000, 2275.000) = 0 
    [2275.000, 2300.000) = 3 
    [2300.000, 2325.000) = 1 
    [2325.000, 2350.000) = 2 
    [2350.000, 2375.000) = 0 
    [2375.000, 2400.000) = 1 
    [2400.000, 2425.000) = 0 
    [2425.000, 2450.000) = 1 
    [2450.000, 2475.000) = 0 
    [2475.000, 2500.000) = 0 
    [2500.000, 2525.000) = 0 
    [2525.000, 2550.000) = 0 
    [2550.000, 2575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2291.621 us/op
     p(50.0000) =   2338.166 us/op
     p(90.0000) =   2595.773 us/op
     p(95.0000) =   2596.375 us/op
     p(99.0000) =   2596.375 us/op
     p(99.9000) =   2596.375 us/op
     p(99.9900) =   2596.375 us/op
     p(99.9990) =   2596.375 us/op
     p(99.9999) =   2596.375 us/op
    p(100.0000) =   2596.375 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.875)

# Run progress: 26.52% complete, ETA 00:34:03
# Fork: 1 of 2
# Warmup Iteration   1: 3317.384 us/op
# Warmup Iteration   2: 3085.751 us/op
# Warmup Iteration   3: 2673.069 us/op
# Warmup Iteration   4: 2395.484 us/op
# Warmup Iteration   5: 2390.669 us/op
Iteration   1: 2339.167 us/op
Iteration   2: 2670.488 us/op
Iteration   3: 2224.964 us/op
Iteration   4: 2299.358 us/op
Iteration   5: 2278.238 us/op

# Run progress: 26.70% complete, ETA 00:33:57
# Fork: 2 of 2
# Warmup Iteration   1: 3335.469 us/op
# Warmup Iteration   2: 3105.400 us/op
# Warmup Iteration   3: 2495.570 us/op
# Warmup Iteration   4: 2473.511 us/op
# Warmup Iteration   5: 2616.208 us/op
Iteration   1: 2378.830 us/op
Iteration   2: 2659.504 us/op
Iteration   3: 2261.116 us/op
Iteration   4: 2248.988 us/op
Iteration   5: 2272.843 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2363.350 ±(99.9%) 249.483 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 2 
    [2250.000, 2300.000) = 4 
    [2300.000, 2350.000) = 1 
    [2350.000, 2400.000) = 1 
    [2400.000, 2450.000) = 0 
    [2450.000, 2500.000) = 0 
    [2500.000, 2550.000) = 0 
    [2550.000, 2600.000) = 0 
    [2600.000, 2650.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2224.964 us/op
     p(50.0000) =   2288.798 us/op
     p(90.0000) =   2669.390 us/op
     p(95.0000) =   2670.488 us/op
     p(99.0000) =   2670.488 us/op
     p(99.9000) =   2670.488 us/op
     p(99.9900) =   2670.488 us/op
     p(99.9990) =   2670.488 us/op
     p(99.9999) =   2670.488 us/op
    p(100.0000) =   2670.488 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 1)

# Run progress: 26.89% complete, ETA 00:33:52
# Fork: 1 of 2
# Warmup Iteration   1: 3667.361 us/op
# Warmup Iteration   2: 3215.391 us/op
# Warmup Iteration   3: 2621.001 us/op
# Warmup Iteration   4: 2400.882 us/op
# Warmup Iteration   5: 2467.663 us/op
Iteration   1: 2376.488 us/op
Iteration   2: 2701.201 us/op
Iteration   3: 2291.955 us/op
Iteration   4: 2270.491 us/op
Iteration   5: 2280.491 us/op

# Run progress: 27.08% complete, ETA 00:33:47
# Fork: 2 of 2
# Warmup Iteration   1: 3391.633 us/op
# Warmup Iteration   2: 3335.945 us/op
# Warmup Iteration   3: 2832.130 us/op
# Warmup Iteration   4: 2969.871 us/op
# Warmup Iteration   5: 3358.833 us/op
Iteration   1: 2544.572 us/op
Iteration   2: 2937.056 us/op
Iteration   3: 2283.891 us/op
Iteration   4: 2322.867 us/op
Iteration   5: 2343.886 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2435.290 ±(99.9%) 339.359 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 4 
    [2300.000, 2350.000) = 2 
    [2350.000, 2400.000) = 1 
    [2400.000, 2450.000) = 0 
    [2450.000, 2500.000) = 0 
    [2500.000, 2550.000) = 1 
    [2550.000, 2600.000) = 0 
    [2600.000, 2650.000) = 0 
    [2650.000, 2700.000) = 0 
    [2700.000, 2750.000) = 1 
    [2750.000, 2800.000) = 0 
    [2800.000, 2850.000) = 0 
    [2850.000, 2900.000) = 0 
    [2900.000, 2950.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2270.491 us/op
     p(50.0000) =   2333.377 us/op
     p(90.0000) =   2913.471 us/op
     p(95.0000) =   2937.056 us/op
     p(99.0000) =   2937.056 us/op
     p(99.9000) =   2937.056 us/op
     p(99.9900) =   2937.056 us/op
     p(99.9990) =   2937.056 us/op
     p(99.9999) =   2937.056 us/op
    p(100.0000) =   2937.056 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.125)

# Run progress: 27.27% complete, ETA 00:33:42
# Fork: 1 of 2
# Warmup Iteration   1: 3080.611 us/op
# Warmup Iteration   2: 3265.324 us/op
# Warmup Iteration   3: 2587.033 us/op
# Warmup Iteration   4: 2348.783 us/op
# Warmup Iteration   5: 2436.530 us/op
Iteration   1: 2502.210 us/op
Iteration   2: 2612.760 us/op
Iteration   3: 2401.910 us/op
Iteration   4: 2394.181 us/op
Iteration   5: 2290.981 us/op

# Run progress: 27.46% complete, ETA 00:33:37
# Fork: 2 of 2
# Warmup Iteration   1: 3305.416 us/op
# Warmup Iteration   2: 3232.146 us/op
# Warmup Iteration   3: 2916.832 us/op
# Warmup Iteration   4: 2369.281 us/op
# Warmup Iteration   5: 2431.165 us/op
Iteration   1: 2432.638 us/op
Iteration   2: 2583.200 us/op
Iteration   3: 2371.468 us/op
Iteration   4: 2309.484 us/op
Iteration   5: 2343.303 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2424.214 ±(99.9%) 166.092 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 1 
    [2300.000, 2350.000) = 2 
    [2350.000, 2400.000) = 2 
    [2400.000, 2450.000) = 2 
    [2450.000, 2500.000) = 0 
    [2500.000, 2550.000) = 1 
    [2550.000, 2600.000) = 1 
    [2600.000, 2650.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2290.981 us/op
     p(50.0000) =   2398.046 us/op
     p(90.0000) =   2609.804 us/op
     p(95.0000) =   2612.760 us/op
     p(99.0000) =   2612.760 us/op
     p(99.9000) =   2612.760 us/op
     p(99.9900) =   2612.760 us/op
     p(99.9990) =   2612.760 us/op
     p(99.9999) =   2612.760 us/op
    p(100.0000) =   2612.760 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.250)

# Run progress: 27.65% complete, ETA 00:33:31
# Fork: 1 of 2
# Warmup Iteration   1: 3173.012 us/op
# Warmup Iteration   2: 3104.028 us/op
# Warmup Iteration   3: 2731.507 us/op
# Warmup Iteration   4: 2398.898 us/op
# Warmup Iteration   5: 2382.593 us/op
Iteration   1: 2450.279 us/op
Iteration   2: 2565.052 us/op
Iteration   3: 2268.378 us/op
Iteration   4: 2302.880 us/op
Iteration   5: 2324.267 us/op

# Run progress: 27.84% complete, ETA 00:33:26
# Fork: 2 of 2
# Warmup Iteration   1: 3325.591 us/op
# Warmup Iteration   2: 3212.735 us/op
# Warmup Iteration   3: 2680.958 us/op
# Warmup Iteration   4: 2487.315 us/op
# Warmup Iteration   5: 2342.200 us/op
Iteration   1: 2386.602 us/op
Iteration   2: 2652.873 us/op
Iteration   3: 2260.508 us/op
Iteration   4: 2275.525 us/op
Iteration   5: 2297.734 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2378.410 ±(99.9%) 206.027 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 4 
    [2300.000, 2350.000) = 2 
    [2350.000, 2400.000) = 1 
    [2400.000, 2450.000) = 0 
    [2450.000, 2500.000) = 1 
    [2500.000, 2550.000) = 0 
    [2550.000, 2600.000) = 1 
    [2600.000, 2650.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2260.508 us/op
     p(50.0000) =   2313.574 us/op
     p(90.0000) =   2644.091 us/op
     p(95.0000) =   2652.873 us/op
     p(99.0000) =   2652.873 us/op
     p(99.9000) =   2652.873 us/op
     p(99.9900) =   2652.873 us/op
     p(99.9990) =   2652.873 us/op
     p(99.9999) =   2652.873 us/op
    p(100.0000) =   2652.873 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.375)

# Run progress: 28.03% complete, ETA 00:33:21
# Fork: 1 of 2
# Warmup Iteration   1: 3193.551 us/op
# Warmup Iteration   2: 3098.700 us/op
# Warmup Iteration   3: 2627.679 us/op
# Warmup Iteration   4: 2380.164 us/op
# Warmup Iteration   5: 2342.061 us/op
Iteration   1: 2326.561 us/op
Iteration   2: 2647.456 us/op
Iteration   3: 2373.146 us/op
Iteration   4: 2264.803 us/op
Iteration   5: 2288.355 us/op

# Run progress: 28.22% complete, ETA 00:33:16
# Fork: 2 of 2
# Warmup Iteration   1: 3277.132 us/op
# Warmup Iteration   2: 3054.680 us/op
# Warmup Iteration   3: 2886.306 us/op
# Warmup Iteration   4: 2446.508 us/op
# Warmup Iteration   5: 2493.755 us/op
Iteration   1: 2448.295 us/op
Iteration   2: 2573.597 us/op
Iteration   3: 2256.078 us/op
Iteration   4: 2357.095 us/op
Iteration   5: 2326.022 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2386.141 ±(99.9%) 199.470 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 3 
    [2300.000, 2350.000) = 2 
    [2350.000, 2400.000) = 2 
    [2400.000, 2450.000) = 1 
    [2450.000, 2500.000) = 0 
    [2500.000, 2550.000) = 0 
    [2550.000, 2600.000) = 1 
    [2600.000, 2650.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2256.078 us/op
     p(50.0000) =   2341.828 us/op
     p(90.0000) =   2640.070 us/op
     p(95.0000) =   2647.456 us/op
     p(99.0000) =   2647.456 us/op
     p(99.9000) =   2647.456 us/op
     p(99.9900) =   2647.456 us/op
     p(99.9990) =   2647.456 us/op
     p(99.9999) =   2647.456 us/op
    p(100.0000) =   2647.456 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.5)

# Run progress: 28.41% complete, ETA 00:33:10
# Fork: 1 of 2
# Warmup Iteration   1: 3154.877 us/op
# Warmup Iteration   2: 3114.850 us/op
# Warmup Iteration   3: 2607.307 us/op
# Warmup Iteration   4: 2364.189 us/op
# Warmup Iteration   5: 2318.385 us/op
Iteration   1: 2297.715 us/op
Iteration   2: 2686.645 us/op
Iteration   3: 2191.044 us/op
Iteration   4: 2278.138 us/op
Iteration   5: 2267.551 us/op

# Run progress: 28.60% complete, ETA 00:33:05
# Fork: 2 of 2
# Warmup Iteration   1: 3173.152 us/op
# Warmup Iteration   2: 3091.387 us/op
# Warmup Iteration   3: 2717.913 us/op
# Warmup Iteration   4: 2365.347 us/op
# Warmup Iteration   5: 2307.964 us/op
Iteration   1: 2472.041 us/op
Iteration   2: 2652.926 us/op
Iteration   3: 2256.133 us/op
Iteration   4: 2278.634 us/op
Iteration   5: 2305.289 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2368.612 ±(99.9%) 263.018 us/op

  Histogram, us/op:
    [2100.000, 2150.000) = 0 
    [2150.000, 2200.000) = 1 
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 5 
    [2300.000, 2350.000) = 1 
    [2350.000, 2400.000) = 0 
    [2400.000, 2450.000) = 0 
    [2450.000, 2500.000) = 1 
    [2500.000, 2550.000) = 0 
    [2550.000, 2600.000) = 0 
    [2600.000, 2650.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2191.044 us/op
     p(50.0000) =   2288.175 us/op
     p(90.0000) =   2683.273 us/op
     p(95.0000) =   2686.645 us/op
     p(99.0000) =   2686.645 us/op
     p(99.9000) =   2686.645 us/op
     p(99.9900) =   2686.645 us/op
     p(99.9990) =   2686.645 us/op
     p(99.9999) =   2686.645 us/op
    p(100.0000) =   2686.645 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.625)

# Run progress: 28.79% complete, ETA 00:33:00
# Fork: 1 of 2
# Warmup Iteration   1: 3302.565 us/op
# Warmup Iteration   2: 3145.015 us/op
# Warmup Iteration   3: 2796.161 us/op
# Warmup Iteration   4: 2419.119 us/op
# Warmup Iteration   5: 2383.777 us/op
Iteration   1: 2507.506 us/op
Iteration   2: 2701.072 us/op
Iteration   3: 2246.996 us/op
Iteration   4: 2323.438 us/op
Iteration   5: 2321.152 us/op

# Run progress: 28.98% complete, ETA 00:32:55
# Fork: 2 of 2
# Warmup Iteration   1: 3245.817 us/op
# Warmup Iteration   2: 3286.669 us/op
# Warmup Iteration   3: 2541.189 us/op
# Warmup Iteration   4: 2495.190 us/op
# Warmup Iteration   5: 2430.724 us/op
Iteration   1: 2408.218 us/op
Iteration   2: 2566.351 us/op
Iteration   3: 2341.023 us/op
Iteration   4: 2272.234 us/op
Iteration   5: 2300.942 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2398.893 ±(99.9%) 222.559 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 1 
    [2250.000, 2300.000) = 1 
    [2300.000, 2350.000) = 4 
    [2350.000, 2400.000) = 0 
    [2400.000, 2450.000) = 1 
    [2450.000, 2500.000) = 0 
    [2500.000, 2550.000) = 1 
    [2550.000, 2600.000) = 1 
    [2600.000, 2650.000) = 0 
    [2650.000, 2700.000) = 0 
    [2700.000, 2750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2246.996 us/op
     p(50.0000) =   2332.231 us/op
     p(90.0000) =   2687.600 us/op
     p(95.0000) =   2701.072 us/op
     p(99.0000) =   2701.072 us/op
     p(99.9000) =   2701.072 us/op
     p(99.9900) =   2701.072 us/op
     p(99.9990) =   2701.072 us/op
     p(99.9999) =   2701.072 us/op
    p(100.0000) =   2701.072 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.75)

# Run progress: 29.17% complete, ETA 00:32:49
# Fork: 1 of 2
# Warmup Iteration   1: 3371.381 us/op
# Warmup Iteration   2: 3231.429 us/op
# Warmup Iteration   3: 2600.250 us/op
# Warmup Iteration   4: 2397.253 us/op
# Warmup Iteration   5: 2379.384 us/op
Iteration   1: 2475.853 us/op
Iteration   2: 2710.341 us/op
Iteration   3: 2291.945 us/op
Iteration   4: 2376.249 us/op
Iteration   5: 2409.655 us/op

# Run progress: 29.36% complete, ETA 00:32:44
# Fork: 2 of 2
# Warmup Iteration   1: 3133.567 us/op
# Warmup Iteration   2: 3273.069 us/op
# Warmup Iteration   3: 2684.715 us/op
# Warmup Iteration   4: 2306.988 us/op
# Warmup Iteration   5: 2324.616 us/op
Iteration   1: 2313.012 us/op
Iteration   2: 2709.972 us/op
Iteration   3: 2286.447 us/op
Iteration   4: 2463.816 us/op
Iteration   5: 2236.807 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2427.410 ±(99.9%) 254.051 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 1 
    [2250.000, 2300.000) = 2 
    [2300.000, 2350.000) = 1 
    [2350.000, 2400.000) = 1 
    [2400.000, 2450.000) = 1 
    [2450.000, 2500.000) = 2 
    [2500.000, 2550.000) = 0 
    [2550.000, 2600.000) = 0 
    [2600.000, 2650.000) = 0 
    [2650.000, 2700.000) = 0 
    [2700.000, 2750.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   2236.807 us/op
     p(50.0000) =   2392.952 us/op
     p(90.0000) =   2710.304 us/op
     p(95.0000) =   2710.341 us/op
     p(99.0000) =   2710.341 us/op
     p(99.9000) =   2710.341 us/op
     p(99.9900) =   2710.341 us/op
     p(99.9990) =   2710.341 us/op
     p(99.9999) =   2710.341 us/op
    p(100.0000) =   2710.341 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.875)

# Run progress: 29.55% complete, ETA 00:32:39
# Fork: 1 of 2
# Warmup Iteration   1: 3127.022 us/op
# Warmup Iteration   2: 3060.871 us/op
# Warmup Iteration   3: 2731.147 us/op
# Warmup Iteration   4: 2331.897 us/op
# Warmup Iteration   5: 2478.806 us/op
Iteration   1: 2405.349 us/op
Iteration   2: 2482.102 us/op
Iteration   3: 2304.822 us/op
Iteration   4: 2295.225 us/op
Iteration   5: 2433.220 us/op

# Run progress: 29.73% complete, ETA 00:32:34
# Fork: 2 of 2
# Warmup Iteration   1: 3133.150 us/op
# Warmup Iteration   2: 3240.779 us/op
# Warmup Iteration   3: 2684.478 us/op
# Warmup Iteration   4: 2406.543 us/op
# Warmup Iteration   5: 2394.389 us/op
Iteration   1: 2421.374 us/op
Iteration   2: 2528.990 us/op
Iteration   3: 2275.198 us/op
Iteration   4: 2273.532 us/op
Iteration   5: 2358.512 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2377.832 ±(99.9%) 136.516 us/op

  Histogram, us/op:
    [2200.000, 2225.000) = 0 
    [2225.000, 2250.000) = 0 
    [2250.000, 2275.000) = 1 
    [2275.000, 2300.000) = 2 
    [2300.000, 2325.000) = 1 
    [2325.000, 2350.000) = 0 
    [2350.000, 2375.000) = 1 
    [2375.000, 2400.000) = 0 
    [2400.000, 2425.000) = 2 
    [2425.000, 2450.000) = 1 
    [2450.000, 2475.000) = 0 
    [2475.000, 2500.000) = 1 
    [2500.000, 2525.000) = 0 
    [2525.000, 2550.000) = 1 
    [2550.000, 2575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2273.532 us/op
     p(50.0000) =   2381.931 us/op
     p(90.0000) =   2524.301 us/op
     p(95.0000) =   2528.990 us/op
     p(99.0000) =   2528.990 us/op
     p(99.9000) =   2528.990 us/op
     p(99.9900) =   2528.990 us/op
     p(99.9990) =   2528.990 us/op
     p(99.9999) =   2528.990 us/op
    p(100.0000) =   2528.990 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 1)

# Run progress: 29.92% complete, ETA 00:32:28
# Fork: 1 of 2
# Warmup Iteration   1: 3162.351 us/op
# Warmup Iteration   2: 3170.646 us/op
# Warmup Iteration   3: 2998.792 us/op
# Warmup Iteration   4: 2351.137 us/op
# Warmup Iteration   5: 2375.008 us/op
Iteration   1: 2333.112 us/op
Iteration   2: 2550.073 us/op
Iteration   3: 2334.667 us/op
Iteration   4: 2294.347 us/op
Iteration   5: 2325.751 us/op

# Run progress: 30.11% complete, ETA 00:32:23
# Fork: 2 of 2
# Warmup Iteration   1: 3207.659 us/op
# Warmup Iteration   2: 3174.143 us/op
# Warmup Iteration   3: 2726.808 us/op
# Warmup Iteration   4: 2357.270 us/op
# Warmup Iteration   5: 2428.004 us/op
Iteration   1: 2414.782 us/op
Iteration   2: 2756.023 us/op
Iteration   3: 2352.264 us/op
Iteration   4: 2327.048 us/op
Iteration   5: 2337.331 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2402.540 ±(99.9%) 217.562 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 1 
    [2300.000, 2350.000) = 5 
    [2350.000, 2400.000) = 1 
    [2400.000, 2450.000) = 1 
    [2450.000, 2500.000) = 0 
    [2500.000, 2550.000) = 0 
    [2550.000, 2600.000) = 1 
    [2600.000, 2650.000) = 0 
    [2650.000, 2700.000) = 0 
    [2700.000, 2750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2294.347 us/op
     p(50.0000) =   2335.999 us/op
     p(90.0000) =   2735.428 us/op
     p(95.0000) =   2756.023 us/op
     p(99.0000) =   2756.023 us/op
     p(99.9000) =   2756.023 us/op
     p(99.9900) =   2756.023 us/op
     p(99.9990) =   2756.023 us/op
     p(99.9999) =   2756.023 us/op
    p(100.0000) =   2756.023 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.125)

# Run progress: 30.30% complete, ETA 00:32:18
# Fork: 1 of 2
# Warmup Iteration   1: 4789.932 us/op
# Warmup Iteration   2: 4778.023 us/op
# Warmup Iteration   3: 4092.020 us/op
# Warmup Iteration   4: 3811.598 us/op
# Warmup Iteration   5: 3954.314 us/op
Iteration   1: 4033.865 us/op
Iteration   2: 4465.241 us/op
Iteration   3: 4110.473 us/op
Iteration   4: 4155.315 us/op
Iteration   5: 4715.653 us/op

# Run progress: 30.49% complete, ETA 00:32:13
# Fork: 2 of 2
# Warmup Iteration   1: 4669.606 us/op
# Warmup Iteration   2: 4633.853 us/op
# Warmup Iteration   3: 4067.805 us/op
# Warmup Iteration   4: 3945.038 us/op
# Warmup Iteration   5: 3958.242 us/op
Iteration   1: 3923.427 us/op
Iteration   2: 4163.549 us/op
Iteration   3: 4069.635 us/op
Iteration   4: 4120.041 us/op
Iteration   5: 4711.196 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   4246.839 ±(99.9%) 425.968 us/op

  Histogram, us/op:
    [3900.000, 3950.000) = 1 
    [3950.000, 4000.000) = 0 
    [4000.000, 4050.000) = 1 
    [4050.000, 4100.000) = 1 
    [4100.000, 4150.000) = 2 
    [4150.000, 4200.000) = 2 
    [4200.000, 4250.000) = 0 
    [4250.000, 4300.000) = 0 
    [4300.000, 4350.000) = 0 
    [4350.000, 4400.000) = 0 
    [4400.000, 4450.000) = 0 
    [4450.000, 4500.000) = 1 
    [4500.000, 4550.000) = 0 
    [4550.000, 4600.000) = 0 
    [4600.000, 4650.000) = 0 
    [4650.000, 4700.000) = 0 
    [4700.000, 4750.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   3923.427 us/op
     p(50.0000) =   4137.678 us/op
     p(90.0000) =   4715.207 us/op
     p(95.0000) =   4715.653 us/op
     p(99.0000) =   4715.653 us/op
     p(99.9000) =   4715.653 us/op
     p(99.9900) =   4715.653 us/op
     p(99.9990) =   4715.653 us/op
     p(99.9999) =   4715.653 us/op
    p(100.0000) =   4715.653 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.250)

# Run progress: 30.68% complete, ETA 00:32:08
# Fork: 1 of 2
# Warmup Iteration   1: 4874.529 us/op
# Warmup Iteration   2: 4803.682 us/op
# Warmup Iteration   3: 3941.284 us/op
# Warmup Iteration   4: 3847.146 us/op
# Warmup Iteration   5: 3894.136 us/op
Iteration   1: 3836.295 us/op
Iteration   2: 4103.388 us/op
Iteration   3: 3792.119 us/op
Iteration   4: 3795.323 us/op
Iteration   5: 3879.749 us/op

# Run progress: 30.87% complete, ETA 00:32:02
# Fork: 2 of 2
# Warmup Iteration   1: 5112.399 us/op
# Warmup Iteration   2: 4588.154 us/op
# Warmup Iteration   3: 3987.277 us/op
# Warmup Iteration   4: 3903.877 us/op
# Warmup Iteration   5: 3935.746 us/op
Iteration   1: 3981.316 us/op
Iteration   2: 4239.551 us/op
Iteration   3: 3805.984 us/op
Iteration   4: 3764.466 us/op
Iteration   5: 3884.567 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   3908.276 ±(99.9%) 234.811 us/op

  Histogram, us/op:
    [3700.000, 3750.000) = 0 
    [3750.000, 3800.000) = 3 
    [3800.000, 3850.000) = 2 
    [3850.000, 3900.000) = 2 
    [3900.000, 3950.000) = 0 
    [3950.000, 4000.000) = 1 
    [4000.000, 4050.000) = 0 
    [4050.000, 4100.000) = 0 
    [4100.000, 4150.000) = 1 
    [4150.000, 4200.000) = 0 
    [4200.000, 4250.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   3764.466 us/op
     p(50.0000) =   3858.022 us/op
     p(90.0000) =   4225.935 us/op
     p(95.0000) =   4239.551 us/op
     p(99.0000) =   4239.551 us/op
     p(99.9000) =   4239.551 us/op
     p(99.9900) =   4239.551 us/op
     p(99.9990) =   4239.551 us/op
     p(99.9999) =   4239.551 us/op
    p(100.0000) =   4239.551 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.375)

# Run progress: 31.06% complete, ETA 00:31:57
# Fork: 1 of 2
# Warmup Iteration   1: 4767.204 us/op
# Warmup Iteration   2: 4977.213 us/op
# Warmup Iteration   3: 4049.721 us/op
# Warmup Iteration   4: 4009.299 us/op
# Warmup Iteration   5: 3980.169 us/op
Iteration   1: 4630.386 us/op
Iteration   2: 4548.777 us/op
Iteration   3: 4899.689 us/op
Iteration   4: 5038.561 us/op
Iteration   5: 4927.346 us/op

# Run progress: 31.25% complete, ETA 00:31:52
# Fork: 2 of 2
# Warmup Iteration   1: 4699.757 us/op
# Warmup Iteration   2: 4641.426 us/op
# Warmup Iteration   3: 4169.116 us/op
# Warmup Iteration   4: 4046.431 us/op
# Warmup Iteration   5: 3870.874 us/op
Iteration   1: 3937.792 us/op
Iteration   2: 4391.308 us/op
Iteration   3: 3789.964 us/op
Iteration   4: 3956.866 us/op
Iteration   5: 3895.359 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   4401.605 ±(99.9%) 721.130 us/op

  Histogram, us/op:
    [3000.000, 3250.000) = 0 
    [3250.000, 3500.000) = 0 
    [3500.000, 3750.000) = 0 
    [3750.000, 4000.000) = 4 
    [4000.000, 4250.000) = 0 
    [4250.000, 4500.000) = 1 
    [4500.000, 4750.000) = 2 
    [4750.000, 5000.000) = 2 
    [5000.000, 5250.000) = 1 
    [5250.000, 5500.000) = 0 
    [5500.000, 5750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   3789.964 us/op
     p(50.0000) =   4470.043 us/op
     p(90.0000) =   5027.439 us/op
     p(95.0000) =   5038.561 us/op
     p(99.0000) =   5038.561 us/op
     p(99.9000) =   5038.561 us/op
     p(99.9900) =   5038.561 us/op
     p(99.9990) =   5038.561 us/op
     p(99.9999) =   5038.561 us/op
    p(100.0000) =   5038.561 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.5)

# Run progress: 31.44% complete, ETA 00:31:47
# Fork: 1 of 2
# Warmup Iteration   1: 4569.112 us/op
# Warmup Iteration   2: 4799.151 us/op
# Warmup Iteration   3: 4098.019 us/op
# Warmup Iteration   4: 3969.675 us/op
# Warmup Iteration   5: 4074.302 us/op
Iteration   1: 3908.379 us/op
Iteration   2: 4336.853 us/op
Iteration   3: 3971.410 us/op
Iteration   4: 3948.370 us/op
Iteration   5: 3976.899 us/op

# Run progress: 31.63% complete, ETA 00:31:42
# Fork: 2 of 2
# Warmup Iteration   1: 4687.103 us/op
# Warmup Iteration   2: 4737.144 us/op
# Warmup Iteration   3: 3964.302 us/op
# Warmup Iteration   4: 4023.195 us/op
# Warmup Iteration   5: 4077.246 us/op
Iteration   1: 3916.671 us/op
Iteration   2: 4208.883 us/op
Iteration   3: 3826.323 us/op
Iteration   4: 4148.564 us/op
Iteration   5: 4050.725 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   4029.308 ±(99.9%) 237.808 us/op

  Histogram, us/op:
    [3800.000, 3850.000) = 1 
    [3850.000, 3900.000) = 0 
    [3900.000, 3950.000) = 3 
    [3950.000, 4000.000) = 2 
    [4000.000, 4050.000) = 0 
    [4050.000, 4100.000) = 1 
    [4100.000, 4150.000) = 1 
    [4150.000, 4200.000) = 0 
    [4200.000, 4250.000) = 1 
    [4250.000, 4300.000) = 0 
    [4300.000, 4350.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   3826.323 us/op
     p(50.0000) =   3974.154 us/op
     p(90.0000) =   4324.056 us/op
     p(95.0000) =   4336.853 us/op
     p(99.0000) =   4336.853 us/op
     p(99.9000) =   4336.853 us/op
     p(99.9900) =   4336.853 us/op
     p(99.9990) =   4336.853 us/op
     p(99.9999) =   4336.853 us/op
    p(100.0000) =   4336.853 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.625)

# Run progress: 31.82% complete, ETA 00:31:36
# Fork: 1 of 2
# Warmup Iteration   1: 4571.747 us/op
# Warmup Iteration   2: 4648.398 us/op
# Warmup Iteration   3: 3939.404 us/op
# Warmup Iteration   4: 3997.581 us/op
# Warmup Iteration   5: 3875.146 us/op
Iteration   1: 4047.887 us/op
Iteration   2: 4206.968 us/op
Iteration   3: 3774.386 us/op
Iteration   4: 3860.846 us/op
Iteration   5: 3900.938 us/op

# Run progress: 32.01% complete, ETA 00:31:31
# Fork: 2 of 2
# Warmup Iteration   1: 4643.858 us/op
# Warmup Iteration   2: 4684.364 us/op
# Warmup Iteration   3: 4069.431 us/op
# Warmup Iteration   4: 3830.841 us/op
# Warmup Iteration   5: 3874.336 us/op
Iteration   1: 4016.698 us/op
Iteration   2: 4371.126 us/op
Iteration   3: 3899.981 us/op
Iteration   4: 3922.103 us/op
Iteration   5: 4187.805 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   4018.874 ±(99.9%) 281.042 us/op

  Histogram, us/op:
    [3700.000, 3750.000) = 0 
    [3750.000, 3800.000) = 1 
    [3800.000, 3850.000) = 0 
    [3850.000, 3900.000) = 2 
    [3900.000, 3950.000) = 2 
    [3950.000, 4000.000) = 0 
    [4000.000, 4050.000) = 2 
    [4050.000, 4100.000) = 0 
    [4100.000, 4150.000) = 0 
    [4150.000, 4200.000) = 1 
    [4200.000, 4250.000) = 1 
    [4250.000, 4300.000) = 0 
    [4300.000, 4350.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   3774.386 us/op
     p(50.0000) =   3969.400 us/op
     p(90.0000) =   4354.710 us/op
     p(95.0000) =   4371.126 us/op
     p(99.0000) =   4371.126 us/op
     p(99.9000) =   4371.126 us/op
     p(99.9900) =   4371.126 us/op
     p(99.9990) =   4371.126 us/op
     p(99.9999) =   4371.126 us/op
    p(100.0000) =   4371.126 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.75)

# Run progress: 32.20% complete, ETA 00:31:26
# Fork: 1 of 2
# Warmup Iteration   1: 4828.622 us/op
# Warmup Iteration   2: 4877.516 us/op
# Warmup Iteration   3: 4271.370 us/op
# Warmup Iteration   4: 3919.083 us/op
# Warmup Iteration   5: 3888.297 us/op
Iteration   1: 3984.017 us/op
Iteration   2: 4288.671 us/op
Iteration   3: 3873.051 us/op
Iteration   4: 3847.133 us/op
Iteration   5: 3816.466 us/op

# Run progress: 32.39% complete, ETA 00:31:21
# Fork: 2 of 2
# Warmup Iteration   1: 4713.714 us/op
# Warmup Iteration   2: 4716.571 us/op
# Warmup Iteration   3: 3974.526 us/op
# Warmup Iteration   4: 3908.392 us/op
# Warmup Iteration   5: 3840.245 us/op
Iteration   1: 3882.291 us/op
Iteration   2: 4254.963 us/op
Iteration   3: 3961.271 us/op
Iteration   4: 3878.006 us/op
Iteration   5: 4054.727 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   3984.060 ±(99.9%) 253.210 us/op

  Histogram, us/op:
    [3800.000, 3850.000) = 2 
    [3850.000, 3900.000) = 3 
    [3900.000, 3950.000) = 0 
    [3950.000, 4000.000) = 2 
    [4000.000, 4050.000) = 0 
    [4050.000, 4100.000) = 1 
    [4100.000, 4150.000) = 0 
    [4150.000, 4200.000) = 0 
    [4200.000, 4250.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   3816.466 us/op
     p(50.0000) =   3921.781 us/op
     p(90.0000) =   4285.300 us/op
     p(95.0000) =   4288.671 us/op
     p(99.0000) =   4288.671 us/op
     p(99.9000) =   4288.671 us/op
     p(99.9900) =   4288.671 us/op
     p(99.9990) =   4288.671 us/op
     p(99.9999) =   4288.671 us/op
    p(100.0000) =   4288.671 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.875)

# Run progress: 32.58% complete, ETA 00:31:15
# Fork: 1 of 2
# Warmup Iteration   1: 4716.673 us/op
# Warmup Iteration   2: 4696.699 us/op
# Warmup Iteration   3: 3975.266 us/op
# Warmup Iteration   4: 3957.554 us/op
# Warmup Iteration   5: 3940.009 us/op
Iteration   1: 4032.607 us/op
Iteration   2: 4196.649 us/op
Iteration   3: 3931.726 us/op
Iteration   4: 3829.081 us/op
Iteration   5: 3946.248 us/op

# Run progress: 32.77% complete, ETA 00:31:10
# Fork: 2 of 2
# Warmup Iteration   1: 4619.751 us/op
# Warmup Iteration   2: 4657.259 us/op
# Warmup Iteration   3: 4015.841 us/op
# Warmup Iteration   4: 3858.158 us/op
# Warmup Iteration   5: 3986.413 us/op
Iteration   1: 3916.799 us/op
Iteration   2: 4350.684 us/op
Iteration   3: 3870.947 us/op
Iteration   4: 3822.145 us/op
Iteration   5: 3762.894 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   3965.978 ±(99.9%) 275.718 us/op

  Histogram, us/op:
    [3700.000, 3750.000) = 0 
    [3750.000, 3800.000) = 1 
    [3800.000, 3850.000) = 2 
    [3850.000, 3900.000) = 1 
    [3900.000, 3950.000) = 3 
    [3950.000, 4000.000) = 0 
    [4000.000, 4050.000) = 1 
    [4050.000, 4100.000) = 0 
    [4100.000, 4150.000) = 0 
    [4150.000, 4200.000) = 1 
    [4200.000, 4250.000) = 0 
    [4250.000, 4300.000) = 0 
    [4300.000, 4350.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   3762.894 us/op
     p(50.0000) =   3924.263 us/op
     p(90.0000) =   4335.281 us/op
     p(95.0000) =   4350.684 us/op
     p(99.0000) =   4350.684 us/op
     p(99.9000) =   4350.684 us/op
     p(99.9900) =   4350.684 us/op
     p(99.9990) =   4350.684 us/op
     p(99.9999) =   4350.684 us/op
    p(100.0000) =   4350.684 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 1)

# Run progress: 32.95% complete, ETA 00:31:05
# Fork: 1 of 2
# Warmup Iteration   1: 4938.183 us/op
# Warmup Iteration   2: 4743.144 us/op
# Warmup Iteration   3: 3989.922 us/op
# Warmup Iteration   4: 4059.924 us/op
# Warmup Iteration   5: 4108.149 us/op
Iteration   1: 4007.295 us/op
Iteration   2: 4177.306 us/op
Iteration   3: 3807.285 us/op
Iteration   4: 3868.656 us/op
Iteration   5: 3934.199 us/op

# Run progress: 33.14% complete, ETA 00:31:00
# Fork: 2 of 2
# Warmup Iteration   1: 4760.699 us/op
# Warmup Iteration   2: 4566.031 us/op
# Warmup Iteration   3: 3892.235 us/op
# Warmup Iteration   4: 3941.286 us/op
# Warmup Iteration   5: 3891.955 us/op
Iteration   1: 3967.199 us/op
Iteration   2: 4199.279 us/op
Iteration   3: 3786.839 us/op
Iteration   4: 3838.501 us/op
Iteration   5: 3978.437 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   3956.500 ±(99.9%) 216.207 us/op

  Histogram, us/op:
    [3700.000, 3750.000) = 0 
    [3750.000, 3800.000) = 1 
    [3800.000, 3850.000) = 2 
    [3850.000, 3900.000) = 1 
    [3900.000, 3950.000) = 1 
    [3950.000, 4000.000) = 2 
    [4000.000, 4050.000) = 1 
    [4050.000, 4100.000) = 0 
    [4100.000, 4150.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   3786.839 us/op
     p(50.0000) =   3950.699 us/op
     p(90.0000) =   4197.082 us/op
     p(95.0000) =   4199.279 us/op
     p(99.0000) =   4199.279 us/op
     p(99.9000) =   4199.279 us/op
     p(99.9900) =   4199.279 us/op
     p(99.9990) =   4199.279 us/op
     p(99.9999) =   4199.279 us/op
    p(100.0000) =   4199.279 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.125)

# Run progress: 33.33% complete, ETA 00:30:55
# Fork: 1 of 2
# Warmup Iteration   1: 4048.524 us/op
# Warmup Iteration   2: 2465.030 us/op
# Warmup Iteration   3: 1793.516 us/op
# Warmup Iteration   4: 1830.872 us/op
# Warmup Iteration   5: 1760.065 us/op
Iteration   1: 1713.618 us/op
Iteration   2: 1712.251 us/op
Iteration   3: 1374.461 us/op
Iteration   4: 1348.322 us/op
Iteration   5: 3155.331 us/op

# Run progress: 33.52% complete, ETA 00:30:49
# Fork: 2 of 2
# Warmup Iteration   1: 3558.304 us/op
# Warmup Iteration   2: 2422.440 us/op
# Warmup Iteration   3: 2226.376 us/op
# Warmup Iteration   4: 1828.059 us/op
# Warmup Iteration   5: 1742.710 us/op
Iteration   1: 1625.967 us/op
Iteration   2: 1621.203 us/op
Iteration   3: 1307.893 us/op
Iteration   4: 1281.060 us/op
Iteration   5: 4075.870 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1921.598 ±(99.9%) 1411.303 us/op

  Histogram, us/op:
    [1000.000, 1250.000) = 0 
    [1250.000, 1500.000) = 4 
    [1500.000, 1750.000) = 4 
    [1750.000, 2000.000) = 0 
    [2000.000, 2250.000) = 0 
    [2250.000, 2500.000) = 0 
    [2500.000, 2750.000) = 0 
    [2750.000, 3000.000) = 0 
    [3000.000, 3250.000) = 1 
    [3250.000, 3500.000) = 0 
    [3500.000, 3750.000) = 0 
    [3750.000, 4000.000) = 0 
    [4000.000, 4250.000) = 1 
    [4250.000, 4500.000) = 0 
    [4500.000, 4750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1281.060 us/op
     p(50.0000) =   1623.585 us/op
     p(90.0000) =   3983.816 us/op
     p(95.0000) =   4075.870 us/op
     p(99.0000) =   4075.870 us/op
     p(99.9000) =   4075.870 us/op
     p(99.9900) =   4075.870 us/op
     p(99.9990) =   4075.870 us/op
     p(99.9999) =   4075.870 us/op
    p(100.0000) =   4075.870 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.250)

# Run progress: 33.71% complete, ETA 00:30:44
# Fork: 1 of 2
# Warmup Iteration   1: 3069.967 us/op
# Warmup Iteration   2: 2091.818 us/op
# Warmup Iteration   3: 1611.410 us/op
# Warmup Iteration   4: 1525.835 us/op
# Warmup Iteration   5: 1719.250 us/op
Iteration   1: 1512.166 us/op
Iteration   2: 1437.049 us/op
Iteration   3: 1128.377 us/op
Iteration   4: 1124.669 us/op
Iteration   5: 1147.646 us/op

# Run progress: 33.90% complete, ETA 00:30:39
# Fork: 2 of 2
# Warmup Iteration   1: 3007.195 us/op
# Warmup Iteration   2: 2081.831 us/op
# Warmup Iteration   3: 2040.742 us/op
# Warmup Iteration   4: 1543.484 us/op
# Warmup Iteration   5: 1691.351 us/op
Iteration   1: 1520.190 us/op
Iteration   2: 1569.872 us/op
Iteration   3: 1143.191 us/op
Iteration   4: 1149.557 us/op
Iteration   5: 1139.647 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1287.236 ±(99.9%) 293.776 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 6 
    [1150.000, 1200.000) = 0 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 1 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   1124.669 us/op
     p(50.0000) =   1148.602 us/op
     p(90.0000) =   1564.904 us/op
     p(95.0000) =   1569.872 us/op
     p(99.0000) =   1569.872 us/op
     p(99.9000) =   1569.872 us/op
     p(99.9900) =   1569.872 us/op
     p(99.9990) =   1569.872 us/op
     p(99.9999) =   1569.872 us/op
    p(100.0000) =   1569.872 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.375)

# Run progress: 34.09% complete, ETA 00:30:33
# Fork: 1 of 2
# Warmup Iteration   1: 2675.651 us/op
# Warmup Iteration   2: 1736.484 us/op
# Warmup Iteration   3: 1769.696 us/op
# Warmup Iteration   4: 1352.308 us/op
# Warmup Iteration   5: 1280.122 us/op
Iteration   1: 1457.816 us/op
Iteration   2: 1577.020 us/op
Iteration   3: 1205.433 us/op
Iteration   4: 1227.750 us/op
Iteration   5: 1292.028 us/op

# Run progress: 34.28% complete, ETA 00:30:28
# Fork: 2 of 2
# Warmup Iteration   1: 2624.263 us/op
# Warmup Iteration   2: 1883.917 us/op
# Warmup Iteration   3: 1506.966 us/op
# Warmup Iteration   4: 1532.863 us/op
# Warmup Iteration   5: 1287.640 us/op
Iteration   1: 1445.923 us/op
Iteration   2: 1398.548 us/op
Iteration   3: 1230.760 us/op
Iteration   4: 1249.791 us/op
Iteration   5: 1233.339 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1331.841 ±(99.9%) 194.200 us/op

  Histogram, us/op:
    [1200.000, 1225.000) = 1 
    [1225.000, 1250.000) = 4 
    [1250.000, 1275.000) = 0 
    [1275.000, 1300.000) = 1 
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 0 
    [1375.000, 1400.000) = 1 
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 1 
    [1450.000, 1475.000) = 1 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 0 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1205.433 us/op
     p(50.0000) =   1270.910 us/op
     p(90.0000) =   1565.100 us/op
     p(95.0000) =   1577.020 us/op
     p(99.0000) =   1577.020 us/op
     p(99.9000) =   1577.020 us/op
     p(99.9900) =   1577.020 us/op
     p(99.9990) =   1577.020 us/op
     p(99.9999) =   1577.020 us/op
    p(100.0000) =   1577.020 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.5)

# Run progress: 34.47% complete, ETA 00:30:23
# Fork: 1 of 2
# Warmup Iteration   1: 3063.279 us/op
# Warmup Iteration   2: 2013.501 us/op
# Warmup Iteration   3: 1865.217 us/op
# Warmup Iteration   4: 1506.214 us/op
# Warmup Iteration   5: 1420.430 us/op
Iteration   1: 1614.876 us/op
Iteration   2: 1566.381 us/op
Iteration   3: 1310.648 us/op
Iteration   4: 1337.969 us/op
Iteration   5: 1302.569 us/op

# Run progress: 34.66% complete, ETA 00:30:18
# Fork: 2 of 2
# Warmup Iteration   1: 2950.601 us/op
# Warmup Iteration   2: 2020.085 us/op
# Warmup Iteration   3: 1483.800 us/op
# Warmup Iteration   4: 1403.752 us/op
# Warmup Iteration   5: 1566.467 us/op
Iteration   1: 1606.554 us/op
Iteration   2: 1526.435 us/op
Iteration   3: 1307.552 us/op
Iteration   4: 1393.350 us/op
Iteration   5: 1329.228 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1429.556 ±(99.9%) 200.756 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 3 
    [1325.000, 1350.000) = 2 
    [1350.000, 1375.000) = 0 
    [1375.000, 1400.000) = 1 
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 0 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 0 
    [1525.000, 1550.000) = 1 
    [1550.000, 1575.000) = 1 
    [1575.000, 1600.000) = 0 
    [1600.000, 1625.000) = 2 
    [1625.000, 1650.000) = 0 
    [1650.000, 1675.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1302.569 us/op
     p(50.0000) =   1365.660 us/op
     p(90.0000) =   1614.044 us/op
     p(95.0000) =   1614.876 us/op
     p(99.0000) =   1614.876 us/op
     p(99.9000) =   1614.876 us/op
     p(99.9900) =   1614.876 us/op
     p(99.9990) =   1614.876 us/op
     p(99.9999) =   1614.876 us/op
    p(100.0000) =   1614.876 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.625)

# Run progress: 34.85% complete, ETA 00:30:12
# Fork: 1 of 2
# Warmup Iteration   1: 2676.991 us/op
# Warmup Iteration   2: 1705.796 us/op
# Warmup Iteration   3: 1528.001 us/op
# Warmup Iteration   4: 1235.114 us/op
# Warmup Iteration   5: 1225.241 us/op
Iteration   1: 1233.856 us/op
Iteration   2: 1527.254 us/op
Iteration   3: 1187.718 us/op
Iteration   4: 1141.158 us/op
Iteration   5: 1096.335 us/op

# Run progress: 35.04% complete, ETA 00:30:07
# Fork: 2 of 2
# Warmup Iteration   1: 2791.125 us/op
# Warmup Iteration   2: 1860.339 us/op
# Warmup Iteration   3: 1555.780 us/op
# Warmup Iteration   4: 1246.075 us/op
# Warmup Iteration   5: 1245.016 us/op
Iteration   1: 1254.773 us/op
Iteration   2: 1432.025 us/op
Iteration   3: 1200.513 us/op
Iteration   4: 1231.920 us/op
Iteration   5: 1189.203 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1249.475 ±(99.9%) 199.105 us/op

  Histogram, us/op:
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 1 
    [1100.000, 1150.000) = 1 
    [1150.000, 1200.000) = 2 
    [1200.000, 1250.000) = 3 
    [1250.000, 1300.000) = 1 
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 1 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1096.335 us/op
     p(50.0000) =   1216.217 us/op
     p(90.0000) =   1517.731 us/op
     p(95.0000) =   1527.254 us/op
     p(99.0000) =   1527.254 us/op
     p(99.9000) =   1527.254 us/op
     p(99.9900) =   1527.254 us/op
     p(99.9990) =   1527.254 us/op
     p(99.9999) =   1527.254 us/op
    p(100.0000) =   1527.254 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.75)

# Run progress: 35.23% complete, ETA 00:30:02
# Fork: 1 of 2
# Warmup Iteration   1: 2911.941 us/op
# Warmup Iteration   2: 1643.030 us/op
# Warmup Iteration   3: 1677.019 us/op
# Warmup Iteration   4: 1609.948 us/op
# Warmup Iteration   5: 1242.531 us/op
Iteration   1: 1323.661 us/op
Iteration   2: 1547.415 us/op
Iteration   3: 1249.315 us/op
Iteration   4: 1265.359 us/op
Iteration   5: 1195.922 us/op

# Run progress: 35.42% complete, ETA 00:29:57
# Fork: 2 of 2
# Warmup Iteration   1: 2868.227 us/op
# Warmup Iteration   2: 1649.975 us/op
# Warmup Iteration   3: 1717.024 us/op
# Warmup Iteration   4: 1682.215 us/op
# Warmup Iteration   5: 1286.798 us/op
Iteration   1: 1289.978 us/op
Iteration   2: 1570.914 us/op
Iteration   3: 1232.840 us/op
Iteration   4: 1236.328 us/op
Iteration   5: 1211.183 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1312.292 ±(99.9%) 204.590 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 1 
    [1200.000, 1250.000) = 4 
    [1250.000, 1300.000) = 2 
    [1300.000, 1350.000) = 1 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1195.922 us/op
     p(50.0000) =   1257.337 us/op
     p(90.0000) =   1568.564 us/op
     p(95.0000) =   1570.914 us/op
     p(99.0000) =   1570.914 us/op
     p(99.9000) =   1570.914 us/op
     p(99.9900) =   1570.914 us/op
     p(99.9990) =   1570.914 us/op
     p(99.9999) =   1570.914 us/op
    p(100.0000) =   1570.914 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.875)

# Run progress: 35.61% complete, ETA 00:29:51
# Fork: 1 of 2
# Warmup Iteration   1: 2621.349 us/op
# Warmup Iteration   2: 1770.194 us/op
# Warmup Iteration   3: 1669.363 us/op
# Warmup Iteration   4: 1757.334 us/op
# Warmup Iteration   5: 1339.175 us/op
Iteration   1: 1386.106 us/op
Iteration   2: 1713.537 us/op
Iteration   3: 1163.507 us/op
Iteration   4: 1186.351 us/op
Iteration   5: 1197.595 us/op

# Run progress: 35.80% complete, ETA 00:29:46
# Fork: 2 of 2
# Warmup Iteration   1: 3180.405 us/op
# Warmup Iteration   2: 1742.445 us/op
# Warmup Iteration   3: 1883.972 us/op
# Warmup Iteration   4: 1327.191 us/op
# Warmup Iteration   5: 1302.366 us/op
Iteration   1: 1312.526 us/op
Iteration   2: 1564.787 us/op
Iteration   3: 1305.040 us/op
Iteration   4: 1165.547 us/op
Iteration   5: 1167.980 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1316.298 ±(99.9%) 286.680 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 5 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 2 
    [1350.000, 1400.000) = 1 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 0 
    [1550.000, 1600.000) = 1 
    [1600.000, 1650.000) = 0 
    [1650.000, 1700.000) = 0 
    [1700.000, 1750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1163.507 us/op
     p(50.0000) =   1251.318 us/op
     p(90.0000) =   1698.662 us/op
     p(95.0000) =   1713.537 us/op
     p(99.0000) =   1713.537 us/op
     p(99.9000) =   1713.537 us/op
     p(99.9900) =   1713.537 us/op
     p(99.9990) =   1713.537 us/op
     p(99.9999) =   1713.537 us/op
    p(100.0000) =   1713.537 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 1)

# Run progress: 35.98% complete, ETA 00:29:41
# Fork: 1 of 2
# Warmup Iteration   1: 2977.394 us/op
# Warmup Iteration   2: 1826.923 us/op
# Warmup Iteration   3: 1681.316 us/op
# Warmup Iteration   4: 1617.677 us/op
# Warmup Iteration   5: 1468.028 us/op
Iteration   1: 1373.725 us/op
Iteration   2: 1609.073 us/op
Iteration   3: 1226.218 us/op
Iteration   4: 1286.236 us/op
Iteration   5: 1270.035 us/op

# Run progress: 36.17% complete, ETA 00:29:35
# Fork: 2 of 2
# Warmup Iteration   1: 2716.486 us/op
# Warmup Iteration   2: 1945.961 us/op
# Warmup Iteration   3: 1846.530 us/op
# Warmup Iteration   4: 1408.461 us/op
# Warmup Iteration   5: 1388.275 us/op
Iteration   1: 1478.506 us/op
Iteration   2: 1535.408 us/op
Iteration   3: 1256.901 us/op
Iteration   4: 1315.958 us/op
Iteration   5: 1253.332 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1360.539 ±(99.9%) 203.096 us/op

  Histogram, us/op:
    [1200.000, 1250.000) = 1 
    [1250.000, 1300.000) = 4 
    [1300.000, 1350.000) = 1 
    [1350.000, 1400.000) = 1 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 1 
    [1500.000, 1550.000) = 1 
    [1550.000, 1600.000) = 0 
    [1600.000, 1650.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1226.218 us/op
     p(50.0000) =   1301.097 us/op
     p(90.0000) =   1601.707 us/op
     p(95.0000) =   1609.073 us/op
     p(99.0000) =   1609.073 us/op
     p(99.9000) =   1609.073 us/op
     p(99.9900) =   1609.073 us/op
     p(99.9990) =   1609.073 us/op
     p(99.9999) =   1609.073 us/op
    p(100.0000) =   1609.073 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.125)

# Run progress: 36.36% complete, ETA 00:29:30
# Fork: 1 of 2
# Warmup Iteration   1: 3326.114 us/op
# Warmup Iteration   2: 2454.369 us/op
# Warmup Iteration   3: 2308.862 us/op
# Warmup Iteration   4: 1977.161 us/op
# Warmup Iteration   5: 1899.461 us/op
Iteration   1: 1874.672 us/op
Iteration   2: 1908.998 us/op
Iteration   3: 1637.203 us/op
Iteration   4: 1580.843 us/op
Iteration   5: 3749.004 us/op

# Run progress: 36.55% complete, ETA 00:29:25
# Fork: 2 of 2
# Warmup Iteration   1: 3464.067 us/op
# Warmup Iteration   2: 2432.128 us/op
# Warmup Iteration   3: 2161.586 us/op
# Warmup Iteration   4: 2146.001 us/op
# Warmup Iteration   5: 1875.276 us/op
Iteration   1: 1950.217 us/op
Iteration   2: 1945.761 us/op
Iteration   3: 1638.368 us/op
Iteration   4: 1593.725 us/op
Iteration   5: 4072.744 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2195.154 ±(99.9%) 1389.940 us/op

  Histogram, us/op:
    [1000.000, 1250.000) = 0 
    [1250.000, 1500.000) = 0 
    [1500.000, 1750.000) = 4 
    [1750.000, 2000.000) = 4 
    [2000.000, 2250.000) = 0 
    [2250.000, 2500.000) = 0 
    [2500.000, 2750.000) = 0 
    [2750.000, 3000.000) = 0 
    [3000.000, 3250.000) = 0 
    [3250.000, 3500.000) = 0 
    [3500.000, 3750.000) = 1 
    [3750.000, 4000.000) = 0 
    [4000.000, 4250.000) = 1 
    [4250.000, 4500.000) = 0 
    [4500.000, 4750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1580.843 us/op
     p(50.0000) =   1891.835 us/op
     p(90.0000) =   4040.370 us/op
     p(95.0000) =   4072.744 us/op
     p(99.0000) =   4072.744 us/op
     p(99.9000) =   4072.744 us/op
     p(99.9900) =   4072.744 us/op
     p(99.9990) =   4072.744 us/op
     p(99.9999) =   4072.744 us/op
    p(100.0000) =   4072.744 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.250)

# Run progress: 36.74% complete, ETA 00:29:20
# Fork: 1 of 2
# Warmup Iteration   1: 3212.134 us/op
# Warmup Iteration   2: 2026.075 us/op
# Warmup Iteration   3: 1988.881 us/op
# Warmup Iteration   4: 1513.724 us/op
# Warmup Iteration   5: 1608.602 us/op
Iteration   1: 1520.951 us/op
Iteration   2: 1456.741 us/op
Iteration   3: 1139.956 us/op
Iteration   4: 1140.637 us/op
Iteration   5: 1107.100 us/op

# Run progress: 36.93% complete, ETA 00:29:14
# Fork: 2 of 2
# Warmup Iteration   1: 3170.774 us/op
# Warmup Iteration   2: 1954.615 us/op
# Warmup Iteration   3: 1920.827 us/op
# Warmup Iteration   4: 1505.776 us/op
# Warmup Iteration   5: 1554.636 us/op
Iteration   1: 1490.893 us/op
Iteration   2: 1470.979 us/op
Iteration   3: 1108.620 us/op
Iteration   4: 1094.429 us/op
Iteration   5: 1104.501 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1263.481 ±(99.9%) 289.959 us/op

  Histogram, us/op:
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 1 
    [1100.000, 1150.000) = 5 
    [1150.000, 1200.000) = 0 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 3 
    [1500.000, 1550.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1094.429 us/op
     p(50.0000) =   1140.297 us/op
     p(90.0000) =   1517.945 us/op
     p(95.0000) =   1520.951 us/op
     p(99.0000) =   1520.951 us/op
     p(99.9000) =   1520.951 us/op
     p(99.9900) =   1520.951 us/op
     p(99.9990) =   1520.951 us/op
     p(99.9999) =   1520.951 us/op
    p(100.0000) =   1520.951 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.375)

# Run progress: 37.12% complete, ETA 00:29:09
# Fork: 1 of 2
# Warmup Iteration   1: 2567.494 us/op
# Warmup Iteration   2: 1769.228 us/op
# Warmup Iteration   3: 1830.100 us/op
# Warmup Iteration   4: 1373.569 us/op
# Warmup Iteration   5: 1300.197 us/op
Iteration   1: 1499.505 us/op
Iteration   2: 1511.488 us/op
Iteration   3: 1213.188 us/op
Iteration   4: 1214.843 us/op
Iteration   5: 1259.451 us/op

# Run progress: 37.31% complete, ETA 00:29:04
# Fork: 2 of 2
# Warmup Iteration   1: 2758.187 us/op
# Warmup Iteration   2: 1729.864 us/op
# Warmup Iteration   3: 1693.837 us/op
# Warmup Iteration   4: 1444.537 us/op
# Warmup Iteration   5: 1285.360 us/op
Iteration   1: 1447.547 us/op
Iteration   2: 1491.612 us/op
Iteration   3: 1227.640 us/op
Iteration   4: 1187.053 us/op
Iteration   5: 1208.259 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1326.059 ±(99.9%) 213.253 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 1 
    [1200.000, 1250.000) = 4 
    [1250.000, 1300.000) = 1 
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 1 
    [1450.000, 1500.000) = 2 
    [1500.000, 1550.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1187.053 us/op
     p(50.0000) =   1243.546 us/op
     p(90.0000) =   1510.290 us/op
     p(95.0000) =   1511.488 us/op
     p(99.0000) =   1511.488 us/op
     p(99.9000) =   1511.488 us/op
     p(99.9900) =   1511.488 us/op
     p(99.9990) =   1511.488 us/op
     p(99.9999) =   1511.488 us/op
    p(100.0000) =   1511.488 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.5)

# Run progress: 37.50% complete, ETA 00:28:58
# Fork: 1 of 2
# Warmup Iteration   1: 3118.576 us/op
# Warmup Iteration   2: 1812.401 us/op
# Warmup Iteration   3: 1816.293 us/op
# Warmup Iteration   4: 1514.208 us/op
# Warmup Iteration   5: 1603.555 us/op
Iteration   1: 1593.824 us/op
Iteration   2: 1570.270 us/op
Iteration   3: 1316.335 us/op
Iteration   4: 1325.423 us/op
Iteration   5: 1395.126 us/op

# Run progress: 37.69% complete, ETA 00:28:53
# Fork: 2 of 2
# Warmup Iteration   1: 2747.788 us/op
# Warmup Iteration   2: 1865.237 us/op
# Warmup Iteration   3: 1825.400 us/op
# Warmup Iteration   4: 1511.506 us/op
# Warmup Iteration   5: 1443.938 us/op
Iteration   1: 1551.415 us/op
Iteration   2: 1510.503 us/op
Iteration   3: 1305.421 us/op
Iteration   4: 1303.003 us/op
Iteration   5: 1469.483 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1434.080 ±(99.9%) 178.778 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 3 
    [1325.000, 1350.000) = 1 
    [1350.000, 1375.000) = 0 
    [1375.000, 1400.000) = 1 
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 1 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 1 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   1303.003 us/op
     p(50.0000) =   1432.305 us/op
     p(90.0000) =   1591.469 us/op
     p(95.0000) =   1593.824 us/op
     p(99.0000) =   1593.824 us/op
     p(99.9000) =   1593.824 us/op
     p(99.9900) =   1593.824 us/op
     p(99.9990) =   1593.824 us/op
     p(99.9999) =   1593.824 us/op
    p(100.0000) =   1593.824 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.625)

# Run progress: 37.88% complete, ETA 00:28:48
# Fork: 1 of 2
# Warmup Iteration   1: 2725.850 us/op
# Warmup Iteration   2: 1530.394 us/op
# Warmup Iteration   3: 1737.309 us/op
# Warmup Iteration   4: 1234.021 us/op
# Warmup Iteration   5: 1220.940 us/op
Iteration   1: 1217.092 us/op
Iteration   2: 1270.432 us/op
Iteration   3: 1277.766 us/op
Iteration   4: 1146.563 us/op
Iteration   5: 1298.508 us/op

# Run progress: 38.07% complete, ETA 00:28:43
# Fork: 2 of 2
# Warmup Iteration   1: 2679.493 us/op
# Warmup Iteration   2: 1582.532 us/op
# Warmup Iteration   3: 1674.011 us/op
# Warmup Iteration   4: 1327.750 us/op
# Warmup Iteration   5: 1211.516 us/op
Iteration   1: 1309.783 us/op
Iteration   2: 1516.919 us/op
Iteration   3: 1158.379 us/op
Iteration   4: 1161.341 us/op
Iteration   5: 1133.129 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1248.991 ±(99.9%) 174.608 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 2 
    [1150.000, 1200.000) = 2 
    [1200.000, 1250.000) = 1 
    [1250.000, 1300.000) = 3 
    [1300.000, 1350.000) = 1 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1133.129 us/op
     p(50.0000) =   1243.762 us/op
     p(90.0000) =   1496.205 us/op
     p(95.0000) =   1516.919 us/op
     p(99.0000) =   1516.919 us/op
     p(99.9000) =   1516.919 us/op
     p(99.9900) =   1516.919 us/op
     p(99.9990) =   1516.919 us/op
     p(99.9999) =   1516.919 us/op
    p(100.0000) =   1516.919 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.75)

# Run progress: 38.26% complete, ETA 00:28:37
# Fork: 1 of 2
# Warmup Iteration   1: 2922.120 us/op
# Warmup Iteration   2: 1633.253 us/op
# Warmup Iteration   3: 1745.448 us/op
# Warmup Iteration   4: 1591.325 us/op
# Warmup Iteration   5: 1236.491 us/op
Iteration   1: 1262.800 us/op
Iteration   2: 1536.193 us/op
Iteration   3: 1149.877 us/op
Iteration   4: 1192.997 us/op
Iteration   5: 1105.743 us/op

# Run progress: 38.45% complete, ETA 00:28:32
# Fork: 2 of 2
# Warmup Iteration   1: 2675.128 us/op
# Warmup Iteration   2: 1667.941 us/op
# Warmup Iteration   3: 1489.287 us/op
# Warmup Iteration   4: 1583.896 us/op
# Warmup Iteration   5: 1260.168 us/op
Iteration   1: 1263.499 us/op
Iteration   2: 1541.385 us/op
Iteration   3: 1201.060 us/op
Iteration   4: 1201.928 us/op
Iteration   5: 1137.567 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1259.305 ±(99.9%) 235.148 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 3 
    [1150.000, 1200.000) = 1 
    [1200.000, 1250.000) = 2 
    [1250.000, 1300.000) = 2 
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   1105.743 us/op
     p(50.0000) =   1201.494 us/op
     p(90.0000) =   1540.866 us/op
     p(95.0000) =   1541.385 us/op
     p(99.0000) =   1541.385 us/op
     p(99.9000) =   1541.385 us/op
     p(99.9900) =   1541.385 us/op
     p(99.9990) =   1541.385 us/op
     p(99.9999) =   1541.385 us/op
    p(100.0000) =   1541.385 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.875)

# Run progress: 38.64% complete, ETA 00:28:27
# Fork: 1 of 2
# Warmup Iteration   1: 3304.445 us/op
# Warmup Iteration   2: 1726.538 us/op
# Warmup Iteration   3: 1560.827 us/op
# Warmup Iteration   4: 1640.663 us/op
# Warmup Iteration   5: 1325.483 us/op
Iteration   1: 1321.364 us/op
Iteration   2: 1530.712 us/op
Iteration   3: 1210.264 us/op
Iteration   4: 1276.353 us/op
Iteration   5: 1153.174 us/op

# Run progress: 38.83% complete, ETA 00:28:21
# Fork: 2 of 2
# Warmup Iteration   1: 2910.123 us/op
# Warmup Iteration   2: 1884.726 us/op
# Warmup Iteration   3: 1569.150 us/op
# Warmup Iteration   4: 1323.290 us/op
# Warmup Iteration   5: 1502.040 us/op
Iteration   1: 1324.387 us/op
Iteration   2: 1651.569 us/op
Iteration   3: 1161.892 us/op
Iteration   4: 1289.600 us/op
Iteration   5: 1153.016 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1307.233 ±(99.9%) 251.124 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 3 
    [1200.000, 1250.000) = 1 
    [1250.000, 1300.000) = 2 
    [1300.000, 1350.000) = 2 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 1 
    [1550.000, 1600.000) = 0 
    [1600.000, 1650.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1153.016 us/op
     p(50.0000) =   1282.977 us/op
     p(90.0000) =   1639.483 us/op
     p(95.0000) =   1651.569 us/op
     p(99.0000) =   1651.569 us/op
     p(99.9000) =   1651.569 us/op
     p(99.9900) =   1651.569 us/op
     p(99.9990) =   1651.569 us/op
     p(99.9999) =   1651.569 us/op
    p(100.0000) =   1651.569 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 1)

# Run progress: 39.02% complete, ETA 00:28:16
# Fork: 1 of 2
# Warmup Iteration   1: 2854.010 us/op
# Warmup Iteration   2: 1802.331 us/op
# Warmup Iteration   3: 1671.534 us/op
# Warmup Iteration   4: 1688.854 us/op
# Warmup Iteration   5: 1383.409 us/op
Iteration   1: 1392.503 us/op
Iteration   2: 1727.269 us/op
Iteration   3: 1308.494 us/op
Iteration   4: 1270.758 us/op
Iteration   5: 1274.151 us/op

# Run progress: 39.20% complete, ETA 00:28:11
# Fork: 2 of 2
# Warmup Iteration   1: 2638.265 us/op
# Warmup Iteration   2: 1765.386 us/op
# Warmup Iteration   3: 1678.767 us/op
# Warmup Iteration   4: 1643.266 us/op
# Warmup Iteration   5: 1380.621 us/op
Iteration   1: 1552.242 us/op
Iteration   2: 1544.662 us/op
Iteration   3: 1260.373 us/op
Iteration   4: 1277.629 us/op
Iteration   5: 1265.552 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1387.363 ±(99.9%) 248.490 us/op

  Histogram, us/op:
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 5 
    [1300.000, 1350.000) = 1 
    [1350.000, 1400.000) = 1 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 1 
    [1550.000, 1600.000) = 1 
    [1600.000, 1650.000) = 0 
    [1650.000, 1700.000) = 0 
    [1700.000, 1750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1260.373 us/op
     p(50.0000) =   1293.061 us/op
     p(90.0000) =   1709.766 us/op
     p(95.0000) =   1727.269 us/op
     p(99.0000) =   1727.269 us/op
     p(99.9000) =   1727.269 us/op
     p(99.9900) =   1727.269 us/op
     p(99.9990) =   1727.269 us/op
     p(99.9999) =   1727.269 us/op
    p(100.0000) =   1727.269 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.125)

# Run progress: 39.39% complete, ETA 00:28:06
# Fork: 1 of 2
# Warmup Iteration   1: 3320.944 us/op
# Warmup Iteration   2: 2500.586 us/op
# Warmup Iteration   3: 2099.410 us/op
# Warmup Iteration   4: 1815.178 us/op
# Warmup Iteration   5: 1809.217 us/op
Iteration   1: 1655.356 us/op
Iteration   2: 1645.840 us/op
Iteration   3: 1278.108 us/op
Iteration   4: 1269.102 us/op
Iteration   5: 3799.821 us/op

# Run progress: 39.58% complete, ETA 00:28:00
# Fork: 2 of 2
# Warmup Iteration   1: 3226.860 us/op
# Warmup Iteration   2: 2548.472 us/op
# Warmup Iteration   3: 2043.341 us/op
# Warmup Iteration   4: 1803.729 us/op
# Warmup Iteration   5: 1794.686 us/op
Iteration   1: 1760.165 us/op
Iteration   2: 1659.796 us/op
Iteration   3: 1330.412 us/op
Iteration   4: 1314.056 us/op
Iteration   5: 3704.104 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1941.676 ±(99.9%) 1469.346 us/op

  Histogram, us/op:
    [1000.000, 1250.000) = 0 
    [1250.000, 1500.000) = 4 
    [1500.000, 1750.000) = 3 
    [1750.000, 2000.000) = 1 
    [2000.000, 2250.000) = 0 
    [2250.000, 2500.000) = 0 
    [2500.000, 2750.000) = 0 
    [2750.000, 3000.000) = 0 
    [3000.000, 3250.000) = 0 
    [3250.000, 3500.000) = 0 
    [3500.000, 3750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1269.102 us/op
     p(50.0000) =   1650.598 us/op
     p(90.0000) =   3790.249 us/op
     p(95.0000) =   3799.821 us/op
     p(99.0000) =   3799.821 us/op
     p(99.9000) =   3799.821 us/op
     p(99.9900) =   3799.821 us/op
     p(99.9990) =   3799.821 us/op
     p(99.9999) =   3799.821 us/op
    p(100.0000) =   3799.821 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.250)

# Run progress: 39.77% complete, ETA 00:27:55
# Fork: 1 of 2
# Warmup Iteration   1: 3140.959 us/op
# Warmup Iteration   2: 2014.220 us/op
# Warmup Iteration   3: 2066.538 us/op
# Warmup Iteration   4: 1524.565 us/op
# Warmup Iteration   5: 1602.518 us/op
Iteration   1: 1530.214 us/op
Iteration   2: 1348.372 us/op
Iteration   3: 1145.285 us/op
Iteration   4: 1116.944 us/op
Iteration   5: 1129.622 us/op

# Run progress: 39.96% complete, ETA 00:27:50
# Fork: 2 of 2
# Warmup Iteration   1: 3046.421 us/op
# Warmup Iteration   2: 1962.618 us/op
# Warmup Iteration   3: 1917.185 us/op
# Warmup Iteration   4: 1508.965 us/op
# Warmup Iteration   5: 1673.951 us/op
Iteration   1: 1502.516 us/op
Iteration   2: 1518.156 us/op
Iteration   3: 1153.528 us/op
Iteration   4: 1116.310 us/op
Iteration   5: 1119.678 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1268.063 ±(99.9%) 279.650 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 5 
    [1150.000, 1200.000) = 1 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 1 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 3 

  Percentiles, us/op:
      p(0.0000) =   1116.310 us/op
     p(50.0000) =   1149.407 us/op
     p(90.0000) =   1529.008 us/op
     p(95.0000) =   1530.214 us/op
     p(99.0000) =   1530.214 us/op
     p(99.9000) =   1530.214 us/op
     p(99.9900) =   1530.214 us/op
     p(99.9990) =   1530.214 us/op
     p(99.9999) =   1530.214 us/op
    p(100.0000) =   1530.214 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.375)

# Run progress: 40.15% complete, ETA 00:27:45
# Fork: 1 of 2
# Warmup Iteration   1: 2897.124 us/op
# Warmup Iteration   2: 1721.092 us/op
# Warmup Iteration   3: 1519.593 us/op
# Warmup Iteration   4: 1608.018 us/op
# Warmup Iteration   5: 1293.807 us/op
Iteration   1: 1449.033 us/op
Iteration   2: 1419.397 us/op
Iteration   3: 1206.536 us/op
Iteration   4: 1188.706 us/op
Iteration   5: 1235.904 us/op

# Run progress: 40.34% complete, ETA 00:27:39
# Fork: 2 of 2
# Warmup Iteration   1: 2749.585 us/op
# Warmup Iteration   2: 1693.905 us/op
# Warmup Iteration   3: 1672.995 us/op
# Warmup Iteration   4: 1339.671 us/op
# Warmup Iteration   5: 1271.630 us/op
Iteration   1: 1449.382 us/op
Iteration   2: 1644.098 us/op
Iteration   3: 1261.738 us/op
Iteration   4: 1220.619 us/op
Iteration   5: 1244.348 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1331.976 ±(99.9%) 227.088 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 1 
    [1200.000, 1250.000) = 4 
    [1250.000, 1300.000) = 1 
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 3 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 0 
    [1550.000, 1600.000) = 0 
    [1600.000, 1650.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1188.706 us/op
     p(50.0000) =   1253.043 us/op
     p(90.0000) =   1624.626 us/op
     p(95.0000) =   1644.098 us/op
     p(99.0000) =   1644.098 us/op
     p(99.9000) =   1644.098 us/op
     p(99.9900) =   1644.098 us/op
     p(99.9990) =   1644.098 us/op
     p(99.9999) =   1644.098 us/op
    p(100.0000) =   1644.098 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.5)

# Run progress: 40.53% complete, ETA 00:27:34
# Fork: 1 of 2
# Warmup Iteration   1: 2865.162 us/op
# Warmup Iteration   2: 1840.861 us/op
# Warmup Iteration   3: 1820.948 us/op
# Warmup Iteration   4: 1417.389 us/op
# Warmup Iteration   5: 1399.304 us/op
Iteration   1: 1574.170 us/op
Iteration   2: 1560.087 us/op
Iteration   3: 1338.024 us/op
Iteration   4: 1315.680 us/op
Iteration   5: 1466.683 us/op

# Run progress: 40.72% complete, ETA 00:27:29
# Fork: 2 of 2
# Warmup Iteration   1: 2929.208 us/op
# Warmup Iteration   2: 1913.895 us/op
# Warmup Iteration   3: 1731.797 us/op
# Warmup Iteration   4: 1374.342 us/op
# Warmup Iteration   5: 1358.712 us/op
Iteration   1: 1562.787 us/op
Iteration   2: 1603.565 us/op
Iteration   3: 1306.687 us/op
Iteration   4: 1273.553 us/op
Iteration   5: 1469.786 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1447.102 ±(99.9%) 193.007 us/op

  Histogram, us/op:
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 1 
    [1300.000, 1350.000) = 3 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 2 
    [1500.000, 1550.000) = 0 
    [1550.000, 1600.000) = 3 
    [1600.000, 1650.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1273.553 us/op
     p(50.0000) =   1468.235 us/op
     p(90.0000) =   1600.626 us/op
     p(95.0000) =   1603.565 us/op
     p(99.0000) =   1603.565 us/op
     p(99.9000) =   1603.565 us/op
     p(99.9900) =   1603.565 us/op
     p(99.9990) =   1603.565 us/op
     p(99.9999) =   1603.565 us/op
    p(100.0000) =   1603.565 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.625)

# Run progress: 40.91% complete, ETA 00:27:23
# Fork: 1 of 2
# Warmup Iteration   1: 2792.186 us/op
# Warmup Iteration   2: 1529.777 us/op
# Warmup Iteration   3: 1701.081 us/op
# Warmup Iteration   4: 1210.708 us/op
# Warmup Iteration   5: 1244.496 us/op
Iteration   1: 1197.542 us/op
Iteration   2: 1426.846 us/op
Iteration   3: 1071.906 us/op
Iteration   4: 1232.408 us/op
Iteration   5: 1038.393 us/op

# Run progress: 41.10% complete, ETA 00:27:18
# Fork: 2 of 2
# Warmup Iteration   1: 2693.915 us/op
# Warmup Iteration   2: 1705.215 us/op
# Warmup Iteration   3: 1771.714 us/op
# Warmup Iteration   4: 1298.666 us/op
# Warmup Iteration   5: 1210.759 us/op
Iteration   1: 1221.863 us/op
Iteration   2: 1380.318 us/op
Iteration   3: 1192.411 us/op
Iteration   4: 1183.609 us/op
Iteration   5: 1066.079 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1201.138 ±(99.9%) 192.745 us/op

  Histogram, us/op:
    [1000.000, 1050.000) = 1 
    [1050.000, 1100.000) = 2 
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 3 
    [1200.000, 1250.000) = 2 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 1 
    [1400.000, 1450.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1038.393 us/op
     p(50.0000) =   1194.977 us/op
     p(90.0000) =   1422.193 us/op
     p(95.0000) =   1426.846 us/op
     p(99.0000) =   1426.846 us/op
     p(99.9000) =   1426.846 us/op
     p(99.9900) =   1426.846 us/op
     p(99.9990) =   1426.846 us/op
     p(99.9999) =   1426.846 us/op
    p(100.0000) =   1426.846 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.75)

# Run progress: 41.29% complete, ETA 00:27:13
# Fork: 1 of 2
# Warmup Iteration   1: 2847.534 us/op
# Warmup Iteration   2: 1663.404 us/op
# Warmup Iteration   3: 1555.923 us/op
# Warmup Iteration   4: 1586.790 us/op
# Warmup Iteration   5: 1292.221 us/op
Iteration   1: 1233.014 us/op
Iteration   2: 1565.565 us/op
Iteration   3: 1155.171 us/op
Iteration   4: 1206.639 us/op
Iteration   5: 1209.806 us/op

# Run progress: 41.48% complete, ETA 00:27:08
# Fork: 2 of 2
# Warmup Iteration   1: 2655.253 us/op
# Warmup Iteration   2: 1555.749 us/op
# Warmup Iteration   3: 1662.798 us/op
# Warmup Iteration   4: 1295.283 us/op
# Warmup Iteration   5: 1281.381 us/op
Iteration   1: 1316.699 us/op
Iteration   2: 1324.321 us/op
Iteration   3: 1194.890 us/op
Iteration   4: 1228.811 us/op
Iteration   5: 1308.091 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1274.301 ±(99.9%) 176.948 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 2 
    [1200.000, 1250.000) = 4 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 3 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1155.171 us/op
     p(50.0000) =   1230.913 us/op
     p(90.0000) =   1541.441 us/op
     p(95.0000) =   1565.565 us/op
     p(99.0000) =   1565.565 us/op
     p(99.9000) =   1565.565 us/op
     p(99.9900) =   1565.565 us/op
     p(99.9990) =   1565.565 us/op
     p(99.9999) =   1565.565 us/op
    p(100.0000) =   1565.565 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.875)

# Run progress: 41.67% complete, ETA 00:27:02
# Fork: 1 of 2
# Warmup Iteration   1: 3022.340 us/op
# Warmup Iteration   2: 1678.798 us/op
# Warmup Iteration   3: 1705.271 us/op
# Warmup Iteration   4: 1315.621 us/op
# Warmup Iteration   5: 1314.084 us/op
Iteration   1: 1332.677 us/op
Iteration   2: 1666.249 us/op
Iteration   3: 1145.997 us/op
Iteration   4: 1305.391 us/op
Iteration   5: 1154.084 us/op

# Run progress: 41.86% complete, ETA 00:26:57
# Fork: 2 of 2
# Warmup Iteration   1: 2799.524 us/op
# Warmup Iteration   2: 1735.495 us/op
# Warmup Iteration   3: 1685.143 us/op
# Warmup Iteration   4: 1531.661 us/op
# Warmup Iteration   5: 1303.589 us/op
Iteration   1: 1316.916 us/op
Iteration   2: 1593.164 us/op
Iteration   3: 1277.026 us/op
Iteration   4: 1260.650 us/op
Iteration   5: 1185.133 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1323.729 ±(99.9%) 264.810 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 1 
    [1150.000, 1200.000) = 2 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 2 
    [1300.000, 1350.000) = 3 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 0 
    [1550.000, 1600.000) = 1 
    [1600.000, 1650.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1145.997 us/op
     p(50.0000) =   1291.209 us/op
     p(90.0000) =   1658.941 us/op
     p(95.0000) =   1666.249 us/op
     p(99.0000) =   1666.249 us/op
     p(99.9000) =   1666.249 us/op
     p(99.9900) =   1666.249 us/op
     p(99.9990) =   1666.249 us/op
     p(99.9999) =   1666.249 us/op
    p(100.0000) =   1666.249 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 1)

# Run progress: 42.05% complete, ETA 00:26:52
# Fork: 1 of 2
# Warmup Iteration   1: 2927.882 us/op
# Warmup Iteration   2: 1835.197 us/op
# Warmup Iteration   3: 1613.135 us/op
# Warmup Iteration   4: 1607.664 us/op
# Warmup Iteration   5: 1352.457 us/op
Iteration   1: 1360.562 us/op
Iteration   2: 1613.893 us/op
Iteration   3: 1376.983 us/op
Iteration   4: 1269.566 us/op
Iteration   5: 1284.714 us/op

# Run progress: 42.23% complete, ETA 00:26:46
# Fork: 2 of 2
# Warmup Iteration   1: 3203.008 us/op
# Warmup Iteration   2: 1763.923 us/op
# Warmup Iteration   3: 1525.844 us/op
# Warmup Iteration   4: 1718.443 us/op
# Warmup Iteration   5: 1396.282 us/op
Iteration   1: 1516.141 us/op
Iteration   2: 1449.071 us/op
Iteration   3: 1290.546 us/op
Iteration   4: 1289.628 us/op
Iteration   5: 1235.489 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1368.659 ±(99.9%) 185.465 us/op

  Histogram, us/op:
    [1200.000, 1250.000) = 1 
    [1250.000, 1300.000) = 4 
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 2 
    [1400.000, 1450.000) = 1 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 1 
    [1550.000, 1600.000) = 0 
    [1600.000, 1650.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1235.489 us/op
     p(50.0000) =   1325.554 us/op
     p(90.0000) =   1604.118 us/op
     p(95.0000) =   1613.893 us/op
     p(99.0000) =   1613.893 us/op
     p(99.9000) =   1613.893 us/op
     p(99.9900) =   1613.893 us/op
     p(99.9990) =   1613.893 us/op
     p(99.9999) =   1613.893 us/op
    p(100.0000) =   1613.893 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.125)

# Run progress: 42.42% complete, ETA 00:26:41
# Fork: 1 of 2
# Warmup Iteration   1: 3424.545 us/op
# Warmup Iteration   2: 2462.447 us/op
# Warmup Iteration   3: 2058.744 us/op
# Warmup Iteration   4: 1774.325 us/op
# Warmup Iteration   5: 1710.769 us/op
Iteration   1: 1615.408 us/op
Iteration   2: 1582.647 us/op
Iteration   3: 1325.202 us/op
Iteration   4: 1406.426 us/op
Iteration   5: 3943.456 us/op

# Run progress: 42.61% complete, ETA 00:26:36
# Fork: 2 of 2
# Warmup Iteration   1: 3351.084 us/op
# Warmup Iteration   2: 2413.265 us/op
# Warmup Iteration   3: 2039.350 us/op
# Warmup Iteration   4: 1807.420 us/op
# Warmup Iteration   5: 1715.280 us/op
Iteration   1: 1675.227 us/op
Iteration   2: 1569.570 us/op
Iteration   3: 1360.730 us/op
Iteration   4: 1309.132 us/op
Iteration   5: 3558.737 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1934.654 ±(99.9%) 1466.707 us/op

  Histogram, us/op:
    [1000.000, 1250.000) = 0 
    [1250.000, 1500.000) = 4 
    [1500.000, 1750.000) = 4 
    [1750.000, 2000.000) = 0 
    [2000.000, 2250.000) = 0 
    [2250.000, 2500.000) = 0 
    [2500.000, 2750.000) = 0 
    [2750.000, 3000.000) = 0 
    [3000.000, 3250.000) = 0 
    [3250.000, 3500.000) = 0 
    [3500.000, 3750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1309.132 us/op
     p(50.0000) =   1576.108 us/op
     p(90.0000) =   3904.984 us/op
     p(95.0000) =   3943.456 us/op
     p(99.0000) =   3943.456 us/op
     p(99.9000) =   3943.456 us/op
     p(99.9900) =   3943.456 us/op
     p(99.9990) =   3943.456 us/op
     p(99.9999) =   3943.456 us/op
    p(100.0000) =   3943.456 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.250)

# Run progress: 42.80% complete, ETA 00:26:31
# Fork: 1 of 2
# Warmup Iteration   1: 3039.801 us/op
# Warmup Iteration   2: 2063.026 us/op
# Warmup Iteration   3: 1730.465 us/op
# Warmup Iteration   4: 1587.433 us/op
# Warmup Iteration   5: 1557.716 us/op
Iteration   1: 1474.709 us/op
Iteration   2: 1459.205 us/op
Iteration   3: 1120.231 us/op
Iteration   4: 1099.381 us/op
Iteration   5: 1133.816 us/op

# Run progress: 42.99% complete, ETA 00:26:25
# Fork: 2 of 2
# Warmup Iteration   1: 3100.045 us/op
# Warmup Iteration   2: 1955.266 us/op
# Warmup Iteration   3: 1885.544 us/op
# Warmup Iteration   4: 1486.284 us/op
# Warmup Iteration   5: 1561.687 us/op
Iteration   1: 1456.806 us/op
Iteration   2: 1413.335 us/op
Iteration   3: 1105.976 us/op
Iteration   4: 1106.108 us/op
Iteration   5: 1090.761 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1246.033 ±(99.9%) 268.271 us/op

  Histogram, us/op:
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 2 
    [1100.000, 1150.000) = 4 
    [1150.000, 1200.000) = 0 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1090.761 us/op
     p(50.0000) =   1127.024 us/op
     p(90.0000) =   1473.159 us/op
     p(95.0000) =   1474.709 us/op
     p(99.0000) =   1474.709 us/op
     p(99.9000) =   1474.709 us/op
     p(99.9900) =   1474.709 us/op
     p(99.9990) =   1474.709 us/op
     p(99.9999) =   1474.709 us/op
    p(100.0000) =   1474.709 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.375)

# Run progress: 43.18% complete, ETA 00:26:20
# Fork: 1 of 2
# Warmup Iteration   1: 2887.984 us/op
# Warmup Iteration   2: 1684.032 us/op
# Warmup Iteration   3: 1497.973 us/op
# Warmup Iteration   4: 1538.986 us/op
# Warmup Iteration   5: 1349.487 us/op
Iteration   1: 1419.057 us/op
Iteration   2: 1476.009 us/op
Iteration   3: 1183.932 us/op
Iteration   4: 1183.055 us/op
Iteration   5: 1211.986 us/op

# Run progress: 43.37% complete, ETA 00:26:15
# Fork: 2 of 2
# Warmup Iteration   1: 2824.116 us/op
# Warmup Iteration   2: 1804.134 us/op
# Warmup Iteration   3: 1680.244 us/op
# Warmup Iteration   4: 1555.809 us/op
# Warmup Iteration   5: 1295.676 us/op
Iteration   1: 1404.237 us/op
Iteration   2: 1464.039 us/op
Iteration   3: 1211.826 us/op
Iteration   4: 1193.689 us/op
Iteration   5: 1249.182 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1299.701 ±(99.9%) 188.212 us/op

  Histogram, us/op:
    [1100.000, 1125.000) = 0 
    [1125.000, 1150.000) = 0 
    [1150.000, 1175.000) = 0 
    [1175.000, 1200.000) = 3 
    [1200.000, 1225.000) = 2 
    [1225.000, 1250.000) = 1 
    [1250.000, 1275.000) = 0 
    [1275.000, 1300.000) = 0 
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 0 
    [1375.000, 1400.000) = 0 
    [1400.000, 1425.000) = 2 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1183.055 us/op
     p(50.0000) =   1230.584 us/op
     p(90.0000) =   1474.812 us/op
     p(95.0000) =   1476.009 us/op
     p(99.0000) =   1476.009 us/op
     p(99.9000) =   1476.009 us/op
     p(99.9900) =   1476.009 us/op
     p(99.9990) =   1476.009 us/op
     p(99.9999) =   1476.009 us/op
    p(100.0000) =   1476.009 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.5)

# Run progress: 43.56% complete, ETA 00:26:10
# Fork: 1 of 2
# Warmup Iteration   1: 2838.748 us/op
# Warmup Iteration   2: 1821.034 us/op
# Warmup Iteration   3: 1841.054 us/op
# Warmup Iteration   4: 1387.365 us/op
# Warmup Iteration   5: 1367.105 us/op
Iteration   1: 1560.936 us/op
Iteration   2: 1522.431 us/op
Iteration   3: 1297.246 us/op
Iteration   4: 1283.894 us/op
Iteration   5: 1273.146 us/op

# Run progress: 43.75% complete, ETA 00:26:04
# Fork: 2 of 2
# Warmup Iteration   1: 3032.464 us/op
# Warmup Iteration   2: 1861.858 us/op
# Warmup Iteration   3: 1828.442 us/op
# Warmup Iteration   4: 1469.062 us/op
# Warmup Iteration   5: 1420.658 us/op
Iteration   1: 1536.197 us/op
Iteration   2: 1552.278 us/op
Iteration   3: 1331.494 us/op
Iteration   4: 1306.241 us/op
Iteration   5: 1562.240 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1422.610 ±(99.9%) 199.970 us/op

  Histogram, us/op:
    [1200.000, 1225.000) = 0 
    [1225.000, 1250.000) = 0 
    [1250.000, 1275.000) = 1 
    [1275.000, 1300.000) = 2 
    [1300.000, 1325.000) = 1 
    [1325.000, 1350.000) = 1 
    [1350.000, 1375.000) = 0 
    [1375.000, 1400.000) = 0 
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 0 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 1 
    [1525.000, 1550.000) = 1 
    [1550.000, 1575.000) = 3 

  Percentiles, us/op:
      p(0.0000) =   1273.146 us/op
     p(50.0000) =   1426.963 us/op
     p(90.0000) =   1562.110 us/op
     p(95.0000) =   1562.240 us/op
     p(99.0000) =   1562.240 us/op
     p(99.9000) =   1562.240 us/op
     p(99.9900) =   1562.240 us/op
     p(99.9990) =   1562.240 us/op
     p(99.9999) =   1562.240 us/op
    p(100.0000) =   1562.240 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.625)

# Run progress: 43.94% complete, ETA 00:25:59
# Fork: 1 of 2
# Warmup Iteration   1: 3516.347 us/op
# Warmup Iteration   2: 1741.460 us/op
# Warmup Iteration   3: 1679.748 us/op
# Warmup Iteration   4: 1282.503 us/op
# Warmup Iteration   5: 1266.721 us/op
Iteration   1: 1254.861 us/op
Iteration   2: 1375.129 us/op
Iteration   3: 1188.898 us/op
Iteration   4: 1206.812 us/op
Iteration   5: 1180.076 us/op

# Run progress: 44.13% complete, ETA 00:25:54
# Fork: 2 of 2
# Warmup Iteration   1: 2820.959 us/op
# Warmup Iteration   2: 1502.263 us/op
# Warmup Iteration   3: 1631.623 us/op
# Warmup Iteration   4: 1266.800 us/op
# Warmup Iteration   5: 1201.867 us/op
Iteration   1: 1253.439 us/op
Iteration   2: 1431.893 us/op
Iteration   3: 1121.628 us/op
Iteration   4: 1190.780 us/op
Iteration   5: 1107.843 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1231.136 ±(99.9%) 156.064 us/op

  Histogram, us/op:
    [1100.000, 1125.000) = 2 
    [1125.000, 1150.000) = 0 
    [1150.000, 1175.000) = 0 
    [1175.000, 1200.000) = 3 
    [1200.000, 1225.000) = 1 
    [1225.000, 1250.000) = 0 
    [1250.000, 1275.000) = 2 
    [1275.000, 1300.000) = 0 
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 0 
    [1375.000, 1400.000) = 1 
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 1 
    [1450.000, 1475.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1107.843 us/op
     p(50.0000) =   1198.796 us/op
     p(90.0000) =   1426.217 us/op
     p(95.0000) =   1431.893 us/op
     p(99.0000) =   1431.893 us/op
     p(99.9000) =   1431.893 us/op
     p(99.9900) =   1431.893 us/op
     p(99.9990) =   1431.893 us/op
     p(99.9999) =   1431.893 us/op
    p(100.0000) =   1431.893 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.75)

# Run progress: 44.32% complete, ETA 00:25:48
# Fork: 1 of 2
# Warmup Iteration   1: 2765.917 us/op
# Warmup Iteration   2: 1579.807 us/op
# Warmup Iteration   3: 1534.129 us/op
# Warmup Iteration   4: 1270.870 us/op
# Warmup Iteration   5: 1249.360 us/op
Iteration   1: 1286.808 us/op
Iteration   2: 1266.200 us/op
Iteration   3: 1186.738 us/op
Iteration   4: 1202.123 us/op
Iteration   5: 1184.383 us/op

# Run progress: 44.51% complete, ETA 00:25:43
# Fork: 2 of 2
# Warmup Iteration   1: 3125.982 us/op
# Warmup Iteration   2: 1828.918 us/op
# Warmup Iteration   3: 1314.690 us/op
# Warmup Iteration   4: 1239.976 us/op
# Warmup Iteration   5: 1230.441 us/op
Iteration   1: 1238.251 us/op
Iteration   2: 1536.060 us/op
Iteration   3: 1163.389 us/op
Iteration   4: 1229.987 us/op
Iteration   5: 1165.855 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1245.979 ±(99.9%) 166.385 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 4 
    [1200.000, 1250.000) = 3 
    [1250.000, 1300.000) = 2 
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1163.389 us/op
     p(50.0000) =   1216.055 us/op
     p(90.0000) =   1511.135 us/op
     p(95.0000) =   1536.060 us/op
     p(99.0000) =   1536.060 us/op
     p(99.9000) =   1536.060 us/op
     p(99.9900) =   1536.060 us/op
     p(99.9990) =   1536.060 us/op
     p(99.9999) =   1536.060 us/op
    p(100.0000) =   1536.060 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.875)

# Run progress: 44.70% complete, ETA 00:25:38
# Fork: 1 of 2
# Warmup Iteration   1: 3138.984 us/op
# Warmup Iteration   2: 1617.483 us/op
# Warmup Iteration   3: 1622.720 us/op
# Warmup Iteration   4: 1326.121 us/op
# Warmup Iteration   5: 1315.023 us/op
Iteration   1: 1308.086 us/op
Iteration   2: 1559.564 us/op
Iteration   3: 1154.478 us/op
Iteration   4: 1326.366 us/op
Iteration   5: 1157.582 us/op

# Run progress: 44.89% complete, ETA 00:25:33
# Fork: 2 of 2
# Warmup Iteration   1: 2915.686 us/op
# Warmup Iteration   2: 1657.465 us/op
# Warmup Iteration   3: 1548.658 us/op
# Warmup Iteration   4: 1689.132 us/op
# Warmup Iteration   5: 1302.788 us/op
Iteration   1: 1324.606 us/op
Iteration   2: 1542.931 us/op
Iteration   3: 1142.445 us/op
Iteration   4: 1345.090 us/op
Iteration   5: 1152.669 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1301.382 ±(99.9%) 235.167 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 1 
    [1150.000, 1200.000) = 3 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 4 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1142.445 us/op
     p(50.0000) =   1316.346 us/op
     p(90.0000) =   1557.901 us/op
     p(95.0000) =   1559.564 us/op
     p(99.0000) =   1559.564 us/op
     p(99.9000) =   1559.564 us/op
     p(99.9900) =   1559.564 us/op
     p(99.9990) =   1559.564 us/op
     p(99.9999) =   1559.564 us/op
    p(100.0000) =   1559.564 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 1)

# Run progress: 45.08% complete, ETA 00:25:27
# Fork: 1 of 2
# Warmup Iteration   1: 2943.628 us/op
# Warmup Iteration   2: 1941.316 us/op
# Warmup Iteration   3: 1394.983 us/op
# Warmup Iteration   4: 1355.748 us/op
# Warmup Iteration   5: 1328.879 us/op
Iteration   1: 1527.317 us/op
Iteration   2: 1576.105 us/op
Iteration   3: 1246.064 us/op
Iteration   4: 1266.088 us/op
Iteration   5: 1382.262 us/op

# Run progress: 45.27% complete, ETA 00:25:22
# Fork: 2 of 2
# Warmup Iteration   1: 3042.010 us/op
# Warmup Iteration   2: 1771.628 us/op
# Warmup Iteration   3: 1842.443 us/op
# Warmup Iteration   4: 1653.169 us/op
# Warmup Iteration   5: 1363.485 us/op
Iteration   1: 1357.964 us/op
Iteration   2: 1559.291 us/op
Iteration   3: 1294.246 us/op
Iteration   4: 1274.888 us/op
Iteration   5: 1250.752 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1373.498 ±(99.9%) 200.567 us/op

  Histogram, us/op:
    [1200.000, 1225.000) = 0 
    [1225.000, 1250.000) = 1 
    [1250.000, 1275.000) = 3 
    [1275.000, 1300.000) = 1 
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 1 
    [1375.000, 1400.000) = 1 
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 0 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 0 
    [1525.000, 1550.000) = 1 
    [1550.000, 1575.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1246.064 us/op
     p(50.0000) =   1326.105 us/op
     p(90.0000) =   1574.424 us/op
     p(95.0000) =   1576.105 us/op
     p(99.0000) =   1576.105 us/op
     p(99.9000) =   1576.105 us/op
     p(99.9900) =   1576.105 us/op
     p(99.9990) =   1576.105 us/op
     p(99.9999) =   1576.105 us/op
    p(100.0000) =   1576.105 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.125)

# Run progress: 45.45% complete, ETA 00:25:17
# Fork: 1 of 2
# Warmup Iteration   1: 3458.657 us/op
# Warmup Iteration   2: 2478.465 us/op
# Warmup Iteration   3: 2084.544 us/op
# Warmup Iteration   4: 1702.842 us/op
# Warmup Iteration   5: 1629.083 us/op
Iteration   1: 1655.351 us/op
Iteration   2: 1533.601 us/op
Iteration   3: 1288.698 us/op
Iteration   4: 1309.511 us/op
Iteration   5: 1276.716 us/op

# Run progress: 45.64% complete, ETA 00:25:12
# Fork: 2 of 2
# Warmup Iteration   1: 3672.051 us/op
# Warmup Iteration   2: 2315.778 us/op
# Warmup Iteration   3: 2140.418 us/op
# Warmup Iteration   4: 1644.026 us/op
# Warmup Iteration   5: 1609.907 us/op
Iteration   1: 1534.984 us/op
Iteration   2: 1714.882 us/op
Iteration   3: 1247.444 us/op
Iteration   4: 1285.483 us/op
Iteration   5: 1224.253 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1407.092 ±(99.9%) 277.390 us/op

  Histogram, us/op:
    [1200.000, 1250.000) = 2 
    [1250.000, 1300.000) = 3 
    [1300.000, 1350.000) = 1 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 2 
    [1550.000, 1600.000) = 0 
    [1600.000, 1650.000) = 0 
    [1650.000, 1700.000) = 1 
    [1700.000, 1750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1224.253 us/op
     p(50.0000) =   1299.105 us/op
     p(90.0000) =   1708.929 us/op
     p(95.0000) =   1714.882 us/op
     p(99.0000) =   1714.882 us/op
     p(99.9000) =   1714.882 us/op
     p(99.9900) =   1714.882 us/op
     p(99.9990) =   1714.882 us/op
     p(99.9999) =   1714.882 us/op
    p(100.0000) =   1714.882 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.250)

# Run progress: 45.83% complete, ETA 00:25:06
# Fork: 1 of 2
# Warmup Iteration   1: 3366.779 us/op
# Warmup Iteration   2: 1878.971 us/op
# Warmup Iteration   3: 1847.551 us/op
# Warmup Iteration   4: 1423.136 us/op
# Warmup Iteration   5: 1459.748 us/op
Iteration   1: 1371.249 us/op
Iteration   2: 1461.790 us/op
Iteration   3: 1227.589 us/op
Iteration   4: 1199.346 us/op
Iteration   5: 1222.067 us/op

# Run progress: 46.02% complete, ETA 00:25:01
# Fork: 2 of 2
# Warmup Iteration   1: 3230.117 us/op
# Warmup Iteration   2: 1786.942 us/op
# Warmup Iteration   3: 1759.110 us/op
# Warmup Iteration   4: 1421.838 us/op
# Warmup Iteration   5: 1482.356 us/op
Iteration   1: 1325.919 us/op
Iteration   2: 1483.583 us/op
Iteration   3: 1198.900 us/op
Iteration   4: 1266.925 us/op
Iteration   5: 1113.920 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1287.129 ±(99.9%) 182.650 us/op

  Histogram, us/op:
    [1100.000, 1125.000) = 1 
    [1125.000, 1150.000) = 0 
    [1150.000, 1175.000) = 0 
    [1175.000, 1200.000) = 2 
    [1200.000, 1225.000) = 1 
    [1225.000, 1250.000) = 1 
    [1250.000, 1275.000) = 1 
    [1275.000, 1300.000) = 0 
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 1 
    [1350.000, 1375.000) = 1 
    [1375.000, 1400.000) = 0 
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1113.920 us/op
     p(50.0000) =   1247.257 us/op
     p(90.0000) =   1481.404 us/op
     p(95.0000) =   1483.583 us/op
     p(99.0000) =   1483.583 us/op
     p(99.9000) =   1483.583 us/op
     p(99.9900) =   1483.583 us/op
     p(99.9990) =   1483.583 us/op
     p(99.9999) =   1483.583 us/op
    p(100.0000) =   1483.583 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.375)

# Run progress: 46.21% complete, ETA 00:24:56
# Fork: 1 of 2
# Warmup Iteration   1: 2807.777 us/op
# Warmup Iteration   2: 1508.158 us/op
# Warmup Iteration   3: 1638.980 us/op
# Warmup Iteration   4: 1136.892 us/op
# Warmup Iteration   5: 1105.820 us/op
Iteration   1: 1134.549 us/op
Iteration   2: 1360.534 us/op
Iteration   3: 1053.971 us/op
Iteration   4: 992.068 us/op
Iteration   5: 1004.352 us/op

# Run progress: 46.40% complete, ETA 00:24:50
# Fork: 2 of 2
# Warmup Iteration   1: 2636.593 us/op
# Warmup Iteration   2: 1512.319 us/op
# Warmup Iteration   3: 1474.237 us/op
# Warmup Iteration   4: 1446.702 us/op
# Warmup Iteration   5: 1201.712 us/op
Iteration   1: 1133.067 us/op
Iteration   2: 1275.634 us/op
Iteration   3: 1019.106 us/op
Iteration   4: 985.212 us/op
Iteration   5: 1018.345 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1097.684 ±(99.9%) 195.351 us/op

  Histogram, us/op:
    [ 900.000,  950.000) = 0 
    [ 950.000, 1000.000) = 2 
    [1000.000, 1050.000) = 3 
    [1050.000, 1100.000) = 1 
    [1100.000, 1150.000) = 2 
    [1150.000, 1200.000) = 0 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 1 
    [1300.000, 1350.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    985.212 us/op
     p(50.0000) =   1036.539 us/op
     p(90.0000) =   1352.044 us/op
     p(95.0000) =   1360.534 us/op
     p(99.0000) =   1360.534 us/op
     p(99.9000) =   1360.534 us/op
     p(99.9900) =   1360.534 us/op
     p(99.9990) =   1360.534 us/op
     p(99.9999) =   1360.534 us/op
    p(100.0000) =   1360.534 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.5)

# Run progress: 46.59% complete, ETA 00:24:45
# Fork: 1 of 2
# Warmup Iteration   1: 3011.460 us/op
# Warmup Iteration   2: 1573.128 us/op
# Warmup Iteration   3: 1478.784 us/op
# Warmup Iteration   4: 1616.063 us/op
# Warmup Iteration   5: 1166.748 us/op
Iteration   1: 1261.070 us/op
Iteration   2: 1211.105 us/op
Iteration   3: 1042.580 us/op
Iteration   4: 1061.297 us/op
Iteration   5: 1052.946 us/op

# Run progress: 46.78% complete, ETA 00:24:40
# Fork: 2 of 2
# Warmup Iteration   1: 2726.968 us/op
# Warmup Iteration   2: 1725.289 us/op
# Warmup Iteration   3: 1788.962 us/op
# Warmup Iteration   4: 1185.807 us/op
# Warmup Iteration   5: 1151.628 us/op
Iteration   1: 1166.647 us/op
Iteration   2: 1391.722 us/op
Iteration   3: 1037.966 us/op
Iteration   4: 1036.389 us/op
Iteration   5: 1020.716 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1128.244 ±(99.9%) 189.263 us/op

  Histogram, us/op:
    [1000.000, 1025.000) = 1 
    [1025.000, 1050.000) = 3 
    [1050.000, 1075.000) = 2 
    [1075.000, 1100.000) = 0 
    [1100.000, 1125.000) = 0 
    [1125.000, 1150.000) = 0 
    [1150.000, 1175.000) = 1 
    [1175.000, 1200.000) = 0 
    [1200.000, 1225.000) = 1 
    [1225.000, 1250.000) = 0 
    [1250.000, 1275.000) = 1 
    [1275.000, 1300.000) = 0 
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1020.716 us/op
     p(50.0000) =   1057.122 us/op
     p(90.0000) =   1378.657 us/op
     p(95.0000) =   1391.722 us/op
     p(99.0000) =   1391.722 us/op
     p(99.9000) =   1391.722 us/op
     p(99.9900) =   1391.722 us/op
     p(99.9990) =   1391.722 us/op
     p(99.9999) =   1391.722 us/op
    p(100.0000) =   1391.722 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.625)

# Run progress: 46.97% complete, ETA 00:24:35
# Fork: 1 of 2
# Warmup Iteration   1: 2044.231 us/op
# Warmup Iteration   2: 1284.353 us/op
# Warmup Iteration   3: 1344.667 us/op
# Warmup Iteration   4: 930.795 us/op
# Warmup Iteration   5: 928.292 us/op
Iteration   1: 924.002 us/op
Iteration   2: 1089.742 us/op
Iteration   3: 845.700 us/op
Iteration   4: 777.720 us/op
Iteration   5: 785.266 us/op

# Run progress: 47.16% complete, ETA 00:24:29
# Fork: 2 of 2
# Warmup Iteration   1: 2047.686 us/op
# Warmup Iteration   2: 1248.695 us/op
# Warmup Iteration   3: 1146.122 us/op
# Warmup Iteration   4: 1227.043 us/op
# Warmup Iteration   5: 972.818 us/op
Iteration   1: 887.288 us/op
Iteration   2: 1087.458 us/op
Iteration   3: 773.111 us/op
Iteration   4: 756.078 us/op
Iteration   5: 794.525 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    872.089 ±(99.9%) 190.634 us/op

  Histogram, us/op:
    [ 700.000,  725.000) = 0 
    [ 725.000,  750.000) = 0 
    [ 750.000,  775.000) = 2 
    [ 775.000,  800.000) = 3 
    [ 800.000,  825.000) = 0 
    [ 825.000,  850.000) = 1 
    [ 850.000,  875.000) = 0 
    [ 875.000,  900.000) = 1 
    [ 900.000,  925.000) = 1 
    [ 925.000,  950.000) = 0 
    [ 950.000,  975.000) = 0 
    [ 975.000, 1000.000) = 0 
    [1000.000, 1025.000) = 0 
    [1025.000, 1050.000) = 0 
    [1050.000, 1075.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    756.078 us/op
     p(50.0000) =    820.113 us/op
     p(90.0000) =   1089.514 us/op
     p(95.0000) =   1089.742 us/op
     p(99.0000) =   1089.742 us/op
     p(99.9000) =   1089.742 us/op
     p(99.9900) =   1089.742 us/op
     p(99.9990) =   1089.742 us/op
     p(99.9999) =   1089.742 us/op
    p(100.0000) =   1089.742 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.75)

# Run progress: 47.35% complete, ETA 00:24:24
# Fork: 1 of 2
# Warmup Iteration   1: 2421.786 us/op
# Warmup Iteration   2: 1524.097 us/op
# Warmup Iteration   3: 1493.804 us/op
# Warmup Iteration   4: 1545.650 us/op
# Warmup Iteration   5: 1268.474 us/op
Iteration   1: 1254.044 us/op
Iteration   2: 1380.777 us/op
Iteration   3: 1078.011 us/op
Iteration   4: 1181.720 us/op
Iteration   5: 1049.774 us/op

# Run progress: 47.54% complete, ETA 00:24:19
# Fork: 2 of 2
# Warmup Iteration   1: 2155.159 us/op
# Warmup Iteration   2: 1286.161 us/op
# Warmup Iteration   3: 1192.002 us/op
# Warmup Iteration   4: 940.175 us/op
# Warmup Iteration   5: 1014.716 us/op
Iteration   1: 934.164 us/op
Iteration   2: 1067.159 us/op
Iteration   3: 792.389 us/op
Iteration   4: 764.564 us/op
Iteration   5: 782.880 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1028.548 ±(99.9%) 317.723 us/op

  Histogram, us/op:
    [ 700.000,  750.000) = 0 
    [ 750.000,  800.000) = 3 
    [ 800.000,  850.000) = 0 
    [ 850.000,  900.000) = 0 
    [ 900.000,  950.000) = 1 
    [ 950.000, 1000.000) = 0 
    [1000.000, 1050.000) = 1 
    [1050.000, 1100.000) = 2 
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 1 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 1 
    [1300.000, 1350.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    764.564 us/op
     p(50.0000) =   1058.467 us/op
     p(90.0000) =   1368.104 us/op
     p(95.0000) =   1380.777 us/op
     p(99.0000) =   1380.777 us/op
     p(99.9000) =   1380.777 us/op
     p(99.9900) =   1380.777 us/op
     p(99.9990) =   1380.777 us/op
     p(99.9999) =   1380.777 us/op
    p(100.0000) =   1380.777 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.875)

# Run progress: 47.73% complete, ETA 00:24:14
# Fork: 1 of 2
# Warmup Iteration   1: 1982.950 us/op
# Warmup Iteration   2: 1437.293 us/op
# Warmup Iteration   3: 1382.001 us/op
# Warmup Iteration   4: 915.242 us/op
# Warmup Iteration   5: 895.803 us/op
Iteration   1: 929.002 us/op
Iteration   2: 1150.120 us/op
Iteration   3: 765.807 us/op
Iteration   4: 768.826 us/op
Iteration   5: 779.021 us/op

# Run progress: 47.92% complete, ETA 00:24:08
# Fork: 2 of 2
# Warmup Iteration   1: 2027.686 us/op
# Warmup Iteration   2: 1370.899 us/op
# Warmup Iteration   3: 1179.170 us/op
# Warmup Iteration   4: 1270.256 us/op
# Warmup Iteration   5: 939.957 us/op
Iteration   1: 926.622 us/op
Iteration   2: 976.943 us/op
Iteration   3: 770.794 us/op
Iteration   4: 776.234 us/op
Iteration   5: 769.977 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    861.335 ±(99.9%) 197.668 us/op

  Histogram, us/op:
    [ 700.000,  750.000) = 0 
    [ 750.000,  800.000) = 6 
    [ 800.000,  850.000) = 0 
    [ 850.000,  900.000) = 0 
    [ 900.000,  950.000) = 2 
    [ 950.000, 1000.000) = 1 
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 0 
    [1100.000, 1150.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    765.807 us/op
     p(50.0000) =    777.628 us/op
     p(90.0000) =   1132.802 us/op
     p(95.0000) =   1150.120 us/op
     p(99.0000) =   1150.120 us/op
     p(99.9000) =   1150.120 us/op
     p(99.9900) =   1150.120 us/op
     p(99.9990) =   1150.120 us/op
     p(99.9999) =   1150.120 us/op
    p(100.0000) =   1150.120 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 1)

# Run progress: 48.11% complete, ETA 00:24:03
# Fork: 1 of 2
# Warmup Iteration   1: 1901.039 us/op
# Warmup Iteration   2: 1343.304 us/op
# Warmup Iteration   3: 1124.561 us/op
# Warmup Iteration   4: 1186.543 us/op
# Warmup Iteration   5: 909.257 us/op
Iteration   1: 929.784 us/op
Iteration   2: 1088.127 us/op
Iteration   3: 747.988 us/op
Iteration   4: 751.345 us/op
Iteration   5: 784.055 us/op

# Run progress: 48.30% complete, ETA 00:23:58
# Fork: 2 of 2
# Warmup Iteration   1: 1994.423 us/op
# Warmup Iteration   2: 1291.373 us/op
# Warmup Iteration   3: 1131.436 us/op
# Warmup Iteration   4: 1239.061 us/op
# Warmup Iteration   5: 903.339 us/op
Iteration   1: 896.322 us/op
Iteration   2: 1048.890 us/op
Iteration   3: 773.472 us/op
Iteration   4: 768.828 us/op
Iteration   5: 785.444 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    857.426 ±(99.9%) 192.113 us/op

  Histogram, us/op:
    [ 700.000,  725.000) = 0 
    [ 725.000,  750.000) = 1 
    [ 750.000,  775.000) = 3 
    [ 775.000,  800.000) = 2 
    [ 800.000,  825.000) = 0 
    [ 825.000,  850.000) = 0 
    [ 850.000,  875.000) = 0 
    [ 875.000,  900.000) = 1 
    [ 900.000,  925.000) = 0 
    [ 925.000,  950.000) = 1 
    [ 950.000,  975.000) = 0 
    [ 975.000, 1000.000) = 0 
    [1000.000, 1025.000) = 0 
    [1025.000, 1050.000) = 1 
    [1050.000, 1075.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    747.988 us/op
     p(50.0000) =    784.749 us/op
     p(90.0000) =   1084.203 us/op
     p(95.0000) =   1088.127 us/op
     p(99.0000) =   1088.127 us/op
     p(99.9000) =   1088.127 us/op
     p(99.9900) =   1088.127 us/op
     p(99.9990) =   1088.127 us/op
     p(99.9999) =   1088.127 us/op
    p(100.0000) =   1088.127 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.125)

# Run progress: 48.48% complete, ETA 00:23:52
# Fork: 1 of 2
# Warmup Iteration   1: 3578.465 us/op
# Warmup Iteration   2: 1981.091 us/op
# Warmup Iteration   3: 1439.399 us/op
# Warmup Iteration   4: 1332.224 us/op
# Warmup Iteration   5: 1345.374 us/op
Iteration   1: 1348.535 us/op
Iteration   2: 1501.289 us/op
Iteration   3: 1152.039 us/op
Iteration   4: 1138.448 us/op
Iteration   5: 1168.843 us/op

# Run progress: 48.67% complete, ETA 00:23:47
# Fork: 2 of 2
# Warmup Iteration   1: 3433.910 us/op
# Warmup Iteration   2: 1932.828 us/op
# Warmup Iteration   3: 1403.905 us/op
# Warmup Iteration   4: 1351.910 us/op
# Warmup Iteration   5: 1331.129 us/op
Iteration   1: 1328.864 us/op
Iteration   2: 1600.997 us/op
Iteration   3: 1149.872 us/op
Iteration   4: 1126.254 us/op
Iteration   5: 1154.128 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1266.927 ±(99.9%) 258.231 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 3 
    [1150.000, 1200.000) = 3 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 2 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 1 
    [1550.000, 1600.000) = 0 
    [1600.000, 1650.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1126.254 us/op
     p(50.0000) =   1161.486 us/op
     p(90.0000) =   1591.026 us/op
     p(95.0000) =   1600.997 us/op
     p(99.0000) =   1600.997 us/op
     p(99.9000) =   1600.997 us/op
     p(99.9900) =   1600.997 us/op
     p(99.9990) =   1600.997 us/op
     p(99.9999) =   1600.997 us/op
    p(100.0000) =   1600.997 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.250)

# Run progress: 48.86% complete, ETA 00:23:42
# Fork: 1 of 2
# Warmup Iteration   1: 1960.858 us/op
# Warmup Iteration   2: 1445.604 us/op
# Warmup Iteration   3: 1163.449 us/op
# Warmup Iteration   4: 1309.428 us/op
# Warmup Iteration   5: 981.242 us/op
Iteration   1: 987.291 us/op
Iteration   2: 1086.127 us/op
Iteration   3: 847.257 us/op
Iteration   4: 835.624 us/op
Iteration   5: 858.737 us/op

# Run progress: 49.05% complete, ETA 00:23:37
# Fork: 2 of 2
# Warmup Iteration   1: 2214.327 us/op
# Warmup Iteration   2: 1352.814 us/op
# Warmup Iteration   3: 1222.388 us/op
# Warmup Iteration   4: 1285.413 us/op
# Warmup Iteration   5: 967.497 us/op
Iteration   1: 986.404 us/op
Iteration   2: 1116.883 us/op
Iteration   3: 830.829 us/op
Iteration   4: 830.693 us/op
Iteration   5: 886.937 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    926.678 ±(99.9%) 165.644 us/op

  Histogram, us/op:
    [ 800.000,  825.000) = 0 
    [ 825.000,  850.000) = 4 
    [ 850.000,  875.000) = 1 
    [ 875.000,  900.000) = 1 
    [ 900.000,  925.000) = 0 
    [ 925.000,  950.000) = 0 
    [ 950.000,  975.000) = 0 
    [ 975.000, 1000.000) = 2 
    [1000.000, 1025.000) = 0 
    [1025.000, 1050.000) = 0 
    [1050.000, 1075.000) = 0 
    [1075.000, 1100.000) = 1 
    [1100.000, 1125.000) = 1 
    [1125.000, 1150.000) = 0 
    [1150.000, 1175.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    830.693 us/op
     p(50.0000) =    872.837 us/op
     p(90.0000) =   1113.807 us/op
     p(95.0000) =   1116.883 us/op
     p(99.0000) =   1116.883 us/op
     p(99.9000) =   1116.883 us/op
     p(99.9900) =   1116.883 us/op
     p(99.9990) =   1116.883 us/op
     p(99.9999) =   1116.883 us/op
    p(100.0000) =   1116.883 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.375)

# Run progress: 49.24% complete, ETA 00:23:31
# Fork: 1 of 2
# Warmup Iteration   1: 2113.220 us/op
# Warmup Iteration   2: 1398.895 us/op
# Warmup Iteration   3: 1180.831 us/op
# Warmup Iteration   4: 1229.218 us/op
# Warmup Iteration   5: 975.551 us/op
Iteration   1: 987.301 us/op
Iteration   2: 1150.730 us/op
Iteration   3: 838.136 us/op
Iteration   4: 831.598 us/op
Iteration   5: 869.870 us/op

# Run progress: 49.43% complete, ETA 00:23:26
# Fork: 2 of 2
# Warmup Iteration   1: 2028.590 us/op
# Warmup Iteration   2: 1307.738 us/op
# Warmup Iteration   3: 1571.384 us/op
# Warmup Iteration   4: 948.584 us/op
# Warmup Iteration   5: 942.869 us/op
Iteration   1: 960.483 us/op
Iteration   2: 1148.076 us/op
Iteration   3: 848.638 us/op
Iteration   4: 849.895 us/op
Iteration   5: 867.231 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    935.196 ±(99.9%) 187.844 us/op

  Histogram, us/op:
    [ 800.000,  825.000) = 0 
    [ 825.000,  850.000) = 4 
    [ 850.000,  875.000) = 2 
    [ 875.000,  900.000) = 0 
    [ 900.000,  925.000) = 0 
    [ 925.000,  950.000) = 0 
    [ 950.000,  975.000) = 1 
    [ 975.000, 1000.000) = 1 
    [1000.000, 1025.000) = 0 
    [1025.000, 1050.000) = 0 
    [1050.000, 1075.000) = 0 
    [1075.000, 1100.000) = 0 
    [1100.000, 1125.000) = 0 
    [1125.000, 1150.000) = 1 
    [1150.000, 1175.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    831.598 us/op
     p(50.0000) =    868.551 us/op
     p(90.0000) =   1150.465 us/op
     p(95.0000) =   1150.730 us/op
     p(99.0000) =   1150.730 us/op
     p(99.9000) =   1150.730 us/op
     p(99.9900) =   1150.730 us/op
     p(99.9990) =   1150.730 us/op
     p(99.9999) =   1150.730 us/op
    p(100.0000) =   1150.730 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.5)

# Run progress: 49.62% complete, ETA 00:23:21
# Fork: 1 of 2
# Warmup Iteration   1: 2034.000 us/op
# Warmup Iteration   2: 1348.911 us/op
# Warmup Iteration   3: 1589.426 us/op
# Warmup Iteration   4: 963.824 us/op
# Warmup Iteration   5: 969.226 us/op
Iteration   1: 968.388 us/op
Iteration   2: 1101.999 us/op
Iteration   3: 835.129 us/op
Iteration   4: 814.834 us/op
Iteration   5: 845.683 us/op

# Run progress: 49.81% complete, ETA 00:23:15
# Fork: 2 of 2
# Warmup Iteration   1: 2350.257 us/op
# Warmup Iteration   2: 1567.660 us/op
# Warmup Iteration   3: 1005.611 us/op
# Warmup Iteration   4: 988.680 us/op
# Warmup Iteration   5: 968.043 us/op
Iteration   1: 982.124 us/op
Iteration   2: 1167.536 us/op
Iteration   3: 834.057 us/op
Iteration   4: 840.262 us/op
Iteration   5: 929.503 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    931.951 ±(99.9%) 186.388 us/op

  Histogram, us/op:
    [ 800.000,  825.000) = 1 
    [ 825.000,  850.000) = 4 
    [ 850.000,  875.000) = 0 
    [ 875.000,  900.000) = 0 
    [ 900.000,  925.000) = 0 
    [ 925.000,  950.000) = 1 
    [ 950.000,  975.000) = 1 
    [ 975.000, 1000.000) = 1 
    [1000.000, 1025.000) = 0 
    [1025.000, 1050.000) = 0 
    [1050.000, 1075.000) = 0 
    [1075.000, 1100.000) = 0 
    [1100.000, 1125.000) = 1 
    [1125.000, 1150.000) = 0 
    [1150.000, 1175.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    814.834 us/op
     p(50.0000) =    887.593 us/op
     p(90.0000) =   1160.982 us/op
     p(95.0000) =   1167.536 us/op
     p(99.0000) =   1167.536 us/op
     p(99.9000) =   1167.536 us/op
     p(99.9900) =   1167.536 us/op
     p(99.9990) =   1167.536 us/op
     p(99.9999) =   1167.536 us/op
    p(100.0000) =   1167.536 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.625)

# Run progress: 50.00% complete, ETA 00:23:10
# Fork: 1 of 2
# Warmup Iteration   1: 2159.352 us/op
# Warmup Iteration   2: 1323.351 us/op
# Warmup Iteration   3: 1155.905 us/op
# Warmup Iteration   4: 1263.446 us/op
# Warmup Iteration   5: 976.076 us/op
Iteration   1: 960.658 us/op
Iteration   2: 1252.648 us/op
Iteration   3: 827.830 us/op
Iteration   4: 833.658 us/op
Iteration   5: 825.551 us/op

# Run progress: 50.19% complete, ETA 00:23:05
# Fork: 2 of 2
# Warmup Iteration   1: 2177.235 us/op
# Warmup Iteration   2: 1683.374 us/op
# Warmup Iteration   3: 1009.146 us/op
# Warmup Iteration   4: 987.527 us/op
# Warmup Iteration   5: 985.932 us/op
Iteration   1: 996.969 us/op
Iteration   2: 1123.428 us/op
Iteration   3: 878.185 us/op
Iteration   4: 826.719 us/op
Iteration   5: 863.710 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    938.936 ±(99.9%) 222.265 us/op

  Histogram, us/op:
    [ 800.000,  850.000) = 4 
    [ 850.000,  900.000) = 2 
    [ 900.000,  950.000) = 0 
    [ 950.000, 1000.000) = 2 
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 0 
    [1100.000, 1150.000) = 1 
    [1150.000, 1200.000) = 0 
    [1200.000, 1250.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    825.551 us/op
     p(50.0000) =    870.948 us/op
     p(90.0000) =   1239.726 us/op
     p(95.0000) =   1252.648 us/op
     p(99.0000) =   1252.648 us/op
     p(99.9000) =   1252.648 us/op
     p(99.9900) =   1252.648 us/op
     p(99.9990) =   1252.648 us/op
     p(99.9999) =   1252.648 us/op
    p(100.0000) =   1252.648 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.75)

# Run progress: 50.38% complete, ETA 00:23:00
# Fork: 1 of 2
# Warmup Iteration   1: 2082.536 us/op
# Warmup Iteration   2: 1541.087 us/op
# Warmup Iteration   3: 979.776 us/op
# Warmup Iteration   4: 970.881 us/op
# Warmup Iteration   5: 951.009 us/op
Iteration   1: 967.216 us/op
Iteration   2: 1193.499 us/op
Iteration   3: 830.028 us/op
Iteration   4: 831.644 us/op
Iteration   5: 848.977 us/op

# Run progress: 50.57% complete, ETA 00:22:54
# Fork: 2 of 2
# Warmup Iteration   1: 1986.277 us/op
# Warmup Iteration   2: 1348.800 us/op
# Warmup Iteration   3: 1428.278 us/op
# Warmup Iteration   4: 986.893 us/op
# Warmup Iteration   5: 1113.232 us/op
Iteration   1: 1117.745 us/op
Iteration   2: 1091.659 us/op
Iteration   3: 821.445 us/op
Iteration   4: 814.601 us/op
Iteration   5: 824.762 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    934.158 ±(99.9%) 222.217 us/op

  Histogram, us/op:
    [ 800.000,  825.000) = 3 
    [ 825.000,  850.000) = 3 
    [ 850.000,  875.000) = 0 
    [ 875.000,  900.000) = 0 
    [ 900.000,  925.000) = 0 
    [ 925.000,  950.000) = 0 
    [ 950.000,  975.000) = 1 
    [ 975.000, 1000.000) = 0 
    [1000.000, 1025.000) = 0 
    [1025.000, 1050.000) = 0 
    [1050.000, 1075.000) = 0 
    [1075.000, 1100.000) = 1 
    [1100.000, 1125.000) = 1 
    [1125.000, 1150.000) = 0 
    [1150.000, 1175.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    814.601 us/op
     p(50.0000) =    840.311 us/op
     p(90.0000) =   1185.924 us/op
     p(95.0000) =   1193.499 us/op
     p(99.0000) =   1193.499 us/op
     p(99.9000) =   1193.499 us/op
     p(99.9900) =   1193.499 us/op
     p(99.9990) =   1193.499 us/op
     p(99.9999) =   1193.499 us/op
    p(100.0000) =   1193.499 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.875)

# Run progress: 50.76% complete, ETA 00:22:49
# Fork: 1 of 2
# Warmup Iteration   1: 2174.107 us/op
# Warmup Iteration   2: 1344.466 us/op
# Warmup Iteration   3: 1189.551 us/op
# Warmup Iteration   4: 1291.213 us/op
# Warmup Iteration   5: 1001.897 us/op
Iteration   1: 1008.619 us/op
Iteration   2: 1060.930 us/op
Iteration   3: 867.595 us/op
Iteration   4: 868.364 us/op
Iteration   5: 900.149 us/op

# Run progress: 50.95% complete, ETA 00:22:44
# Fork: 2 of 2
# Warmup Iteration   1: 2387.763 us/op
# Warmup Iteration   2: 1378.621 us/op
# Warmup Iteration   3: 1225.231 us/op
# Warmup Iteration   4: 1311.702 us/op
# Warmup Iteration   5: 1009.153 us/op
Iteration   1: 1049.550 us/op
Iteration   2: 1166.410 us/op
Iteration   3: 830.103 us/op
Iteration   4: 867.528 us/op
Iteration   5: 872.023 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    949.127 ±(99.9%) 171.399 us/op

  Histogram, us/op:
    [ 800.000,  825.000) = 0 
    [ 825.000,  850.000) = 1 
    [ 850.000,  875.000) = 4 
    [ 875.000,  900.000) = 0 
    [ 900.000,  925.000) = 1 
    [ 925.000,  950.000) = 0 
    [ 950.000,  975.000) = 0 
    [ 975.000, 1000.000) = 0 
    [1000.000, 1025.000) = 1 
    [1025.000, 1050.000) = 1 
    [1050.000, 1075.000) = 1 
    [1075.000, 1100.000) = 0 
    [1100.000, 1125.000) = 0 
    [1125.000, 1150.000) = 0 
    [1150.000, 1175.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    830.103 us/op
     p(50.0000) =    886.086 us/op
     p(90.0000) =   1155.862 us/op
     p(95.0000) =   1166.410 us/op
     p(99.0000) =   1166.410 us/op
     p(99.9000) =   1166.410 us/op
     p(99.9900) =   1166.410 us/op
     p(99.9990) =   1166.410 us/op
     p(99.9999) =   1166.410 us/op
    p(100.0000) =   1166.410 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 1)

# Run progress: 51.14% complete, ETA 00:22:39
# Fork: 1 of 2
# Warmup Iteration   1: 2097.050 us/op
# Warmup Iteration   2: 1351.218 us/op
# Warmup Iteration   3: 1410.209 us/op
# Warmup Iteration   4: 988.885 us/op
# Warmup Iteration   5: 966.517 us/op
Iteration   1: 976.405 us/op
Iteration   2: 1113.816 us/op
Iteration   3: 839.063 us/op
Iteration   4: 892.433 us/op
Iteration   5: 868.249 us/op

# Run progress: 51.33% complete, ETA 00:22:33
# Fork: 2 of 2
# Warmup Iteration   1: 2292.587 us/op
# Warmup Iteration   2: 1344.934 us/op
# Warmup Iteration   3: 1236.873 us/op
# Warmup Iteration   4: 961.859 us/op
# Warmup Iteration   5: 964.880 us/op
Iteration   1: 978.402 us/op
Iteration   2: 1169.396 us/op
Iteration   3: 817.840 us/op
Iteration   4: 913.792 us/op
Iteration   5: 907.976 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    947.737 ±(99.9%) 174.043 us/op

  Histogram, us/op:
    [ 800.000,  825.000) = 1 
    [ 825.000,  850.000) = 1 
    [ 850.000,  875.000) = 1 
    [ 875.000,  900.000) = 1 
    [ 900.000,  925.000) = 2 
    [ 925.000,  950.000) = 0 
    [ 950.000,  975.000) = 0 
    [ 975.000, 1000.000) = 2 
    [1000.000, 1025.000) = 0 
    [1025.000, 1050.000) = 0 
    [1050.000, 1075.000) = 0 
    [1075.000, 1100.000) = 0 
    [1100.000, 1125.000) = 1 
    [1125.000, 1150.000) = 0 
    [1150.000, 1175.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    817.840 us/op
     p(50.0000) =    910.884 us/op
     p(90.0000) =   1163.838 us/op
     p(95.0000) =   1169.396 us/op
     p(99.0000) =   1169.396 us/op
     p(99.9000) =   1169.396 us/op
     p(99.9900) =   1169.396 us/op
     p(99.9990) =   1169.396 us/op
     p(99.9999) =   1169.396 us/op
    p(100.0000) =   1169.396 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.125)

# Run progress: 51.52% complete, ETA 00:22:28
# Fork: 1 of 2
# Warmup Iteration   1: 2347.875 us/op
# Warmup Iteration   2: 1449.701 us/op
# Warmup Iteration   3: 1298.873 us/op
# Warmup Iteration   4: 1372.080 us/op
# Warmup Iteration   5: 1074.457 us/op
Iteration   1: 1044.311 us/op
Iteration   2: 1211.667 us/op
Iteration   3: 938.572 us/op
Iteration   4: 936.689 us/op
Iteration   5: 962.008 us/op

# Run progress: 51.70% complete, ETA 00:22:23
# Fork: 2 of 2
# Warmup Iteration   1: 2392.969 us/op
# Warmup Iteration   2: 1452.130 us/op
# Warmup Iteration   3: 1336.359 us/op
# Warmup Iteration   4: 1472.894 us/op
# Warmup Iteration   5: 1068.382 us/op
Iteration   1: 1044.032 us/op
Iteration   2: 1294.173 us/op
Iteration   3: 942.543 us/op
Iteration   4: 929.761 us/op
Iteration   5: 949.867 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1025.362 ±(99.9%) 194.387 us/op

  Histogram, us/op:
    [ 900.000,  925.000) = 0 
    [ 925.000,  950.000) = 5 
    [ 950.000,  975.000) = 1 
    [ 975.000, 1000.000) = 0 
    [1000.000, 1025.000) = 0 
    [1025.000, 1050.000) = 2 
    [1050.000, 1075.000) = 0 
    [1075.000, 1100.000) = 0 
    [1100.000, 1125.000) = 0 
    [1125.000, 1150.000) = 0 
    [1150.000, 1175.000) = 0 
    [1175.000, 1200.000) = 0 
    [1200.000, 1225.000) = 1 
    [1225.000, 1250.000) = 0 
    [1250.000, 1275.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    929.761 us/op
     p(50.0000) =    955.938 us/op
     p(90.0000) =   1285.922 us/op
     p(95.0000) =   1294.173 us/op
     p(99.0000) =   1294.173 us/op
     p(99.9000) =   1294.173 us/op
     p(99.9900) =   1294.173 us/op
     p(99.9990) =   1294.173 us/op
     p(99.9999) =   1294.173 us/op
    p(100.0000) =   1294.173 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.250)

# Run progress: 51.89% complete, ETA 00:22:17
# Fork: 1 of 2
# Warmup Iteration   1: 2127.395 us/op
# Warmup Iteration   2: 1445.695 us/op
# Warmup Iteration   3: 1293.720 us/op
# Warmup Iteration   4: 1316.246 us/op
# Warmup Iteration   5: 1073.888 us/op
Iteration   1: 1068.715 us/op
Iteration   2: 1241.804 us/op
Iteration   3: 951.070 us/op
Iteration   4: 936.885 us/op
Iteration   5: 1055.813 us/op

# Run progress: 52.08% complete, ETA 00:22:12
# Fork: 2 of 2
# Warmup Iteration   1: 2246.941 us/op
# Warmup Iteration   2: 1441.257 us/op
# Warmup Iteration   3: 1329.387 us/op
# Warmup Iteration   4: 1303.158 us/op
# Warmup Iteration   5: 1075.386 us/op
Iteration   1: 1100.112 us/op
Iteration   2: 1242.374 us/op
Iteration   3: 969.354 us/op
Iteration   4: 954.546 us/op
Iteration   5: 952.743 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1047.342 ±(99.9%) 177.658 us/op

  Histogram, us/op:
    [ 900.000,  925.000) = 0 
    [ 925.000,  950.000) = 1 
    [ 950.000,  975.000) = 4 
    [ 975.000, 1000.000) = 0 
    [1000.000, 1025.000) = 0 
    [1025.000, 1050.000) = 0 
    [1050.000, 1075.000) = 2 
    [1075.000, 1100.000) = 0 
    [1100.000, 1125.000) = 1 
    [1125.000, 1150.000) = 0 
    [1150.000, 1175.000) = 0 
    [1175.000, 1200.000) = 0 
    [1200.000, 1225.000) = 0 
    [1225.000, 1250.000) = 2 
    [1250.000, 1275.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    936.885 us/op
     p(50.0000) =   1012.584 us/op
     p(90.0000) =   1242.317 us/op
     p(95.0000) =   1242.374 us/op
     p(99.0000) =   1242.374 us/op
     p(99.9000) =   1242.374 us/op
     p(99.9900) =   1242.374 us/op
     p(99.9990) =   1242.374 us/op
     p(99.9999) =   1242.374 us/op
    p(100.0000) =   1242.374 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.375)

# Run progress: 52.27% complete, ETA 00:22:07
# Fork: 1 of 2
# Warmup Iteration   1: 2102.522 us/op
# Warmup Iteration   2: 1422.550 us/op
# Warmup Iteration   3: 1300.947 us/op
# Warmup Iteration   4: 1341.011 us/op
# Warmup Iteration   5: 1096.686 us/op
Iteration   1: 1051.897 us/op
Iteration   2: 1178.316 us/op
Iteration   3: 953.878 us/op
Iteration   4: 924.346 us/op
Iteration   5: 945.208 us/op

# Run progress: 52.46% complete, ETA 00:22:02
# Fork: 2 of 2
# Warmup Iteration   1: 2355.499 us/op
# Warmup Iteration   2: 1434.146 us/op
# Warmup Iteration   3: 1368.836 us/op
# Warmup Iteration   4: 1308.161 us/op
# Warmup Iteration   5: 1050.148 us/op
Iteration   1: 1086.783 us/op
Iteration   2: 1233.793 us/op
Iteration   3: 952.411 us/op
Iteration   4: 954.083 us/op
Iteration   5: 955.642 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1023.636 ±(99.9%) 165.836 us/op

  Histogram, us/op:
    [ 900.000,  925.000) = 1 
    [ 925.000,  950.000) = 1 
    [ 950.000,  975.000) = 4 
    [ 975.000, 1000.000) = 0 
    [1000.000, 1025.000) = 0 
    [1025.000, 1050.000) = 0 
    [1050.000, 1075.000) = 1 
    [1075.000, 1100.000) = 1 
    [1100.000, 1125.000) = 0 
    [1125.000, 1150.000) = 0 
    [1150.000, 1175.000) = 0 
    [1175.000, 1200.000) = 1 
    [1200.000, 1225.000) = 0 
    [1225.000, 1250.000) = 1 
    [1250.000, 1275.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    924.346 us/op
     p(50.0000) =    954.863 us/op
     p(90.0000) =   1228.245 us/op
     p(95.0000) =   1233.793 us/op
     p(99.0000) =   1233.793 us/op
     p(99.9000) =   1233.793 us/op
     p(99.9900) =   1233.793 us/op
     p(99.9990) =   1233.793 us/op
     p(99.9999) =   1233.793 us/op
    p(100.0000) =   1233.793 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.5)

# Run progress: 52.65% complete, ETA 00:21:56
# Fork: 1 of 2
# Warmup Iteration   1: 2220.513 us/op
# Warmup Iteration   2: 1397.370 us/op
# Warmup Iteration   3: 1373.550 us/op
# Warmup Iteration   4: 1365.233 us/op
# Warmup Iteration   5: 1092.857 us/op
Iteration   1: 1054.117 us/op
Iteration   2: 1198.713 us/op
Iteration   3: 938.222 us/op
Iteration   4: 916.881 us/op
Iteration   5: 933.079 us/op

# Run progress: 52.84% complete, ETA 00:21:51
# Fork: 2 of 2
# Warmup Iteration   1: 2045.662 us/op
# Warmup Iteration   2: 1569.902 us/op
# Warmup Iteration   3: 1260.687 us/op
# Warmup Iteration   4: 1320.681 us/op
# Warmup Iteration   5: 1062.174 us/op
Iteration   1: 1062.788 us/op
Iteration   2: 1208.856 us/op
Iteration   3: 937.052 us/op
Iteration   4: 934.768 us/op
Iteration   5: 935.427 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1011.990 ±(99.9%) 171.738 us/op

  Histogram, us/op:
    [ 900.000,  925.000) = 1 
    [ 925.000,  950.000) = 5 
    [ 950.000,  975.000) = 0 
    [ 975.000, 1000.000) = 0 
    [1000.000, 1025.000) = 0 
    [1025.000, 1050.000) = 0 
    [1050.000, 1075.000) = 2 
    [1075.000, 1100.000) = 0 
    [1100.000, 1125.000) = 0 
    [1125.000, 1150.000) = 0 
    [1150.000, 1175.000) = 0 
    [1175.000, 1200.000) = 1 
    [1200.000, 1225.000) = 1 
    [1225.000, 1250.000) = 0 
    [1250.000, 1275.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    916.881 us/op
     p(50.0000) =    937.637 us/op
     p(90.0000) =   1207.842 us/op
     p(95.0000) =   1208.856 us/op
     p(99.0000) =   1208.856 us/op
     p(99.9000) =   1208.856 us/op
     p(99.9900) =   1208.856 us/op
     p(99.9990) =   1208.856 us/op
     p(99.9999) =   1208.856 us/op
    p(100.0000) =   1208.856 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.625)

# Run progress: 53.03% complete, ETA 00:21:46
# Fork: 1 of 2
# Warmup Iteration   1: 2237.840 us/op
# Warmup Iteration   2: 1430.116 us/op
# Warmup Iteration   3: 1325.757 us/op
# Warmup Iteration   4: 1331.143 us/op
# Warmup Iteration   5: 1048.474 us/op
Iteration   1: 1028.535 us/op
Iteration   2: 1268.989 us/op
Iteration   3: 929.673 us/op
Iteration   4: 921.748 us/op
Iteration   5: 944.965 us/op

# Run progress: 53.22% complete, ETA 00:21:40
# Fork: 2 of 2
# Warmup Iteration   1: 2467.059 us/op
# Warmup Iteration   2: 1883.044 us/op
# Warmup Iteration   3: 1606.460 us/op
# Warmup Iteration   4: 1062.122 us/op
# Warmup Iteration   5: 1051.007 us/op
Iteration   1: 1070.829 us/op
Iteration   2: 1212.173 us/op
Iteration   3: 943.829 us/op
Iteration   4: 940.088 us/op
Iteration   5: 944.851 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1020.568 ±(99.9%) 190.476 us/op

  Histogram, us/op:
    [ 900.000,  925.000) = 1 
    [ 925.000,  950.000) = 5 
    [ 950.000,  975.000) = 0 
    [ 975.000, 1000.000) = 0 
    [1000.000, 1025.000) = 0 
    [1025.000, 1050.000) = 1 
    [1050.000, 1075.000) = 1 
    [1075.000, 1100.000) = 0 
    [1100.000, 1125.000) = 0 
    [1125.000, 1150.000) = 0 
    [1150.000, 1175.000) = 0 
    [1175.000, 1200.000) = 0 
    [1200.000, 1225.000) = 1 
    [1225.000, 1250.000) = 0 
    [1250.000, 1275.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    921.748 us/op
     p(50.0000) =    944.908 us/op
     p(90.0000) =   1263.307 us/op
     p(95.0000) =   1268.989 us/op
     p(99.0000) =   1268.989 us/op
     p(99.9000) =   1268.989 us/op
     p(99.9900) =   1268.989 us/op
     p(99.9990) =   1268.989 us/op
     p(99.9999) =   1268.989 us/op
    p(100.0000) =   1268.989 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.75)

# Run progress: 53.41% complete, ETA 00:21:35
# Fork: 1 of 2
# Warmup Iteration   1: 2222.643 us/op
# Warmup Iteration   2: 1542.309 us/op
# Warmup Iteration   3: 1352.805 us/op
# Warmup Iteration   4: 1088.264 us/op
# Warmup Iteration   5: 1091.270 us/op
Iteration   1: 1131.551 us/op
Iteration   2: 1318.260 us/op
Iteration   3: 926.023 us/op
Iteration   4: 911.637 us/op
Iteration   5: 931.026 us/op

# Run progress: 53.60% complete, ETA 00:21:30
# Fork: 2 of 2
# Warmup Iteration   1: 2099.783 us/op
# Warmup Iteration   2: 1427.878 us/op
# Warmup Iteration   3: 1350.186 us/op
# Warmup Iteration   4: 1446.415 us/op
# Warmup Iteration   5: 1105.942 us/op
Iteration   1: 1074.827 us/op
Iteration   2: 1271.836 us/op
Iteration   3: 948.752 us/op
Iteration   4: 964.273 us/op
Iteration   5: 985.394 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1046.358 ±(99.9%) 224.670 us/op

  Histogram, us/op:
    [ 900.000,  950.000) = 4 
    [ 950.000, 1000.000) = 2 
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 1 
    [1100.000, 1150.000) = 1 
    [1150.000, 1200.000) = 0 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 1 
    [1300.000, 1350.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    911.637 us/op
     p(50.0000) =    974.834 us/op
     p(90.0000) =   1313.618 us/op
     p(95.0000) =   1318.260 us/op
     p(99.0000) =   1318.260 us/op
     p(99.9000) =   1318.260 us/op
     p(99.9900) =   1318.260 us/op
     p(99.9990) =   1318.260 us/op
     p(99.9999) =   1318.260 us/op
    p(100.0000) =   1318.260 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.875)

# Run progress: 53.79% complete, ETA 00:21:25
# Fork: 1 of 2
# Warmup Iteration   1: 2140.509 us/op
# Warmup Iteration   2: 1443.599 us/op
# Warmup Iteration   3: 1460.526 us/op
# Warmup Iteration   4: 1076.453 us/op
# Warmup Iteration   5: 1043.594 us/op
Iteration   1: 1086.917 us/op
Iteration   2: 1222.536 us/op
Iteration   3: 945.463 us/op
Iteration   4: 910.399 us/op
Iteration   5: 953.191 us/op

# Run progress: 53.98% complete, ETA 00:21:19
# Fork: 2 of 2
# Warmup Iteration   1: 2238.496 us/op
# Warmup Iteration   2: 1479.555 us/op
# Warmup Iteration   3: 1350.739 us/op
# Warmup Iteration   4: 1501.313 us/op
# Warmup Iteration   5: 1084.961 us/op
Iteration   1: 1072.940 us/op
Iteration   2: 1190.030 us/op
Iteration   3: 977.608 us/op
Iteration   4: 928.471 us/op
Iteration   5: 950.758 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1023.831 ±(99.9%) 170.203 us/op

  Histogram, us/op:
    [ 900.000,  925.000) = 1 
    [ 925.000,  950.000) = 2 
    [ 950.000,  975.000) = 2 
    [ 975.000, 1000.000) = 1 
    [1000.000, 1025.000) = 0 
    [1025.000, 1050.000) = 0 
    [1050.000, 1075.000) = 1 
    [1075.000, 1100.000) = 1 
    [1100.000, 1125.000) = 0 
    [1125.000, 1150.000) = 0 
    [1150.000, 1175.000) = 0 
    [1175.000, 1200.000) = 1 
    [1200.000, 1225.000) = 1 
    [1225.000, 1250.000) = 0 
    [1250.000, 1275.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    910.399 us/op
     p(50.0000) =    965.400 us/op
     p(90.0000) =   1219.285 us/op
     p(95.0000) =   1222.536 us/op
     p(99.0000) =   1222.536 us/op
     p(99.9000) =   1222.536 us/op
     p(99.9900) =   1222.536 us/op
     p(99.9990) =   1222.536 us/op
     p(99.9999) =   1222.536 us/op
    p(100.0000) =   1222.536 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 1)

# Run progress: 54.17% complete, ETA 00:21:14
# Fork: 1 of 2
# Warmup Iteration   1: 2082.550 us/op
# Warmup Iteration   2: 1465.128 us/op
# Warmup Iteration   3: 1349.520 us/op
# Warmup Iteration   4: 1315.204 us/op
# Warmup Iteration   5: 1040.059 us/op
Iteration   1: 1119.561 us/op
Iteration   2: 1263.570 us/op
Iteration   3: 934.807 us/op
Iteration   4: 911.335 us/op
Iteration   5: 914.580 us/op

# Run progress: 54.36% complete, ETA 00:21:09
# Fork: 2 of 2
# Warmup Iteration   1: 2099.843 us/op
# Warmup Iteration   2: 1456.755 us/op
# Warmup Iteration   3: 1431.500 us/op
# Warmup Iteration   4: 1378.566 us/op
# Warmup Iteration   5: 1093.783 us/op
Iteration   1: 1066.926 us/op
Iteration   2: 1325.426 us/op
Iteration   3: 970.614 us/op
Iteration   4: 937.499 us/op
Iteration   5: 954.848 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1039.917 ±(99.9%) 227.856 us/op

  Histogram, us/op:
    [ 900.000,  950.000) = 4 
    [ 950.000, 1000.000) = 2 
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 1 
    [1100.000, 1150.000) = 1 
    [1150.000, 1200.000) = 0 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 1 
    [1300.000, 1350.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    911.335 us/op
     p(50.0000) =    962.731 us/op
     p(90.0000) =   1319.240 us/op
     p(95.0000) =   1325.426 us/op
     p(99.0000) =   1325.426 us/op
     p(99.9000) =   1325.426 us/op
     p(99.9900) =   1325.426 us/op
     p(99.9990) =   1325.426 us/op
     p(99.9999) =   1325.426 us/op
    p(100.0000) =   1325.426 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.125)

# Run progress: 54.55% complete, ETA 00:21:04
# Fork: 1 of 2
# Warmup Iteration   1: 2888.663 us/op
# Warmup Iteration   2: 2050.063 us/op
# Warmup Iteration   3: 2580.430 us/op
# Warmup Iteration   4: 1666.313 us/op
# Warmup Iteration   5: 1808.826 us/op
Iteration   1: 1654.376 us/op
Iteration   2: 1990.359 us/op
Iteration   3: 1565.417 us/op
Iteration   4: 1696.446 us/op
Iteration   5: 1577.646 us/op

# Run progress: 54.73% complete, ETA 00:20:58
# Fork: 2 of 2
# Warmup Iteration   1: 3113.608 us/op
# Warmup Iteration   2: 2146.051 us/op
# Warmup Iteration   3: 2589.890 us/op
# Warmup Iteration   4: 1662.515 us/op
# Warmup Iteration   5: 1828.991 us/op
Iteration   1: 1603.961 us/op
Iteration   2: 2157.110 us/op
Iteration   3: 1616.788 us/op
Iteration   4: 1809.415 us/op
Iteration   5: 1564.735 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1723.625 ±(99.9%) 306.240 us/op

  Histogram, us/op:
    [1500.000, 1550.000) = 0 
    [1550.000, 1600.000) = 3 
    [1600.000, 1650.000) = 2 
    [1650.000, 1700.000) = 2 
    [1700.000, 1750.000) = 0 
    [1750.000, 1800.000) = 0 
    [1800.000, 1850.000) = 1 
    [1850.000, 1900.000) = 0 
    [1900.000, 1950.000) = 0 
    [1950.000, 2000.000) = 1 
    [2000.000, 2050.000) = 0 
    [2050.000, 2100.000) = 0 
    [2100.000, 2150.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1564.735 us/op
     p(50.0000) =   1635.582 us/op
     p(90.0000) =   2140.435 us/op
     p(95.0000) =   2157.110 us/op
     p(99.0000) =   2157.110 us/op
     p(99.9000) =   2157.110 us/op
     p(99.9900) =   2157.110 us/op
     p(99.9990) =   2157.110 us/op
     p(99.9999) =   2157.110 us/op
    p(100.0000) =   2157.110 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.250)

# Run progress: 54.92% complete, ETA 00:20:53
# Fork: 1 of 2
# Warmup Iteration   1: 2851.385 us/op
# Warmup Iteration   2: 2123.181 us/op
# Warmup Iteration   3: 2708.159 us/op
# Warmup Iteration   4: 1792.422 us/op
# Warmup Iteration   5: 1843.473 us/op
Iteration   1: 1620.910 us/op
Iteration   2: 2071.805 us/op
Iteration   3: 1520.032 us/op
Iteration   4: 1753.542 us/op
Iteration   5: 1547.304 us/op

# Run progress: 55.11% complete, ETA 00:20:48
# Fork: 2 of 2
# Warmup Iteration   1: 2921.878 us/op
# Warmup Iteration   2: 2131.808 us/op
# Warmup Iteration   3: 2510.049 us/op
# Warmup Iteration   4: 1711.608 us/op
# Warmup Iteration   5: 1843.372 us/op
Iteration   1: 1692.452 us/op
Iteration   2: 2059.401 us/op
Iteration   3: 1591.952 us/op
Iteration   4: 1868.575 us/op
Iteration   5: 1602.577 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1732.855 ±(99.9%) 306.989 us/op

  Histogram, us/op:
    [1500.000, 1550.000) = 2 
    [1550.000, 1600.000) = 1 
    [1600.000, 1650.000) = 2 
    [1650.000, 1700.000) = 1 
    [1700.000, 1750.000) = 0 
    [1750.000, 1800.000) = 1 
    [1800.000, 1850.000) = 0 
    [1850.000, 1900.000) = 1 
    [1900.000, 1950.000) = 0 
    [1950.000, 2000.000) = 0 
    [2000.000, 2050.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1520.032 us/op
     p(50.0000) =   1656.681 us/op
     p(90.0000) =   2070.565 us/op
     p(95.0000) =   2071.805 us/op
     p(99.0000) =   2071.805 us/op
     p(99.9000) =   2071.805 us/op
     p(99.9900) =   2071.805 us/op
     p(99.9990) =   2071.805 us/op
     p(99.9999) =   2071.805 us/op
    p(100.0000) =   2071.805 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.375)

# Run progress: 55.30% complete, ETA 00:20:42
# Fork: 1 of 2
# Warmup Iteration   1: 2976.908 us/op
# Warmup Iteration   2: 2185.597 us/op
# Warmup Iteration   3: 2643.757 us/op
# Warmup Iteration   4: 1721.069 us/op
# Warmup Iteration   5: 1859.512 us/op
Iteration   1: 1760.094 us/op
Iteration   2: 2159.911 us/op
Iteration   3: 1562.532 us/op
Iteration   4: 1760.502 us/op
Iteration   5: 1666.763 us/op

# Run progress: 55.49% complete, ETA 00:20:37
# Fork: 2 of 2
# Warmup Iteration   1: 2856.381 us/op
# Warmup Iteration   2: 2101.162 us/op
# Warmup Iteration   3: 2524.816 us/op
# Warmup Iteration   4: 1638.019 us/op
# Warmup Iteration   5: 1789.143 us/op
Iteration   1: 1715.108 us/op
Iteration   2: 2012.432 us/op
Iteration   3: 1554.609 us/op
Iteration   4: 1684.442 us/op
Iteration   5: 1512.838 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1738.923 ±(99.9%) 309.795 us/op

  Histogram, us/op:
    [1500.000, 1550.000) = 1 
    [1550.000, 1600.000) = 2 
    [1600.000, 1650.000) = 0 
    [1650.000, 1700.000) = 2 
    [1700.000, 1750.000) = 1 
    [1750.000, 1800.000) = 2 
    [1800.000, 1850.000) = 0 
    [1850.000, 1900.000) = 0 
    [1900.000, 1950.000) = 0 
    [1950.000, 2000.000) = 0 
    [2000.000, 2050.000) = 1 
    [2050.000, 2100.000) = 0 
    [2100.000, 2150.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1512.838 us/op
     p(50.0000) =   1699.775 us/op
     p(90.0000) =   2145.163 us/op
     p(95.0000) =   2159.911 us/op
     p(99.0000) =   2159.911 us/op
     p(99.9000) =   2159.911 us/op
     p(99.9900) =   2159.911 us/op
     p(99.9990) =   2159.911 us/op
     p(99.9999) =   2159.911 us/op
    p(100.0000) =   2159.911 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.5)

# Run progress: 55.68% complete, ETA 00:20:32
# Fork: 1 of 2
# Warmup Iteration   1: 2751.503 us/op
# Warmup Iteration   2: 2308.676 us/op
# Warmup Iteration   3: 2493.365 us/op
# Warmup Iteration   4: 1676.734 us/op
# Warmup Iteration   5: 1835.614 us/op
Iteration   1: 1654.475 us/op
Iteration   2: 1998.623 us/op
Iteration   3: 1560.088 us/op
Iteration   4: 1690.843 us/op
Iteration   5: 1740.330 us/op

# Run progress: 55.87% complete, ETA 00:20:27
# Fork: 2 of 2
# Warmup Iteration   1: 2897.216 us/op
# Warmup Iteration   2: 2190.053 us/op
# Warmup Iteration   3: 2493.442 us/op
# Warmup Iteration   4: 1737.416 us/op
# Warmup Iteration   5: 1888.562 us/op
Iteration   1: 1669.767 us/op
Iteration   2: 2080.388 us/op
Iteration   3: 1596.455 us/op
Iteration   4: 1723.149 us/op
Iteration   5: 1578.570 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1729.269 ±(99.9%) 264.553 us/op

  Histogram, us/op:
    [1500.000, 1550.000) = 0 
    [1550.000, 1600.000) = 3 
    [1600.000, 1650.000) = 0 
    [1650.000, 1700.000) = 3 
    [1700.000, 1750.000) = 2 
    [1750.000, 1800.000) = 0 
    [1800.000, 1850.000) = 0 
    [1850.000, 1900.000) = 0 
    [1900.000, 1950.000) = 0 
    [1950.000, 2000.000) = 1 
    [2000.000, 2050.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1560.088 us/op
     p(50.0000) =   1680.305 us/op
     p(90.0000) =   2072.212 us/op
     p(95.0000) =   2080.388 us/op
     p(99.0000) =   2080.388 us/op
     p(99.9000) =   2080.388 us/op
     p(99.9900) =   2080.388 us/op
     p(99.9990) =   2080.388 us/op
     p(99.9999) =   2080.388 us/op
    p(100.0000) =   2080.388 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.625)

# Run progress: 56.06% complete, ETA 00:20:21
# Fork: 1 of 2
# Warmup Iteration   1: 2893.060 us/op
# Warmup Iteration   2: 2061.676 us/op
# Warmup Iteration   3: 2490.059 us/op
# Warmup Iteration   4: 1646.607 us/op
# Warmup Iteration   5: 1956.001 us/op
Iteration   1: 1649.264 us/op
Iteration   2: 1957.676 us/op
Iteration   3: 1529.714 us/op
Iteration   4: 1704.901 us/op
Iteration   5: 1552.896 us/op

# Run progress: 56.25% complete, ETA 00:20:16
# Fork: 2 of 2
# Warmup Iteration   1: 2882.251 us/op
# Warmup Iteration   2: 2246.201 us/op
# Warmup Iteration   3: 2527.671 us/op
# Warmup Iteration   4: 1722.656 us/op
# Warmup Iteration   5: 1843.090 us/op
Iteration   1: 1703.354 us/op
Iteration   2: 2020.214 us/op
Iteration   3: 1556.533 us/op
Iteration   4: 1709.223 us/op
Iteration   5: 1573.627 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1695.740 ±(99.9%) 256.292 us/op

  Histogram, us/op:
    [1500.000, 1550.000) = 1 
    [1550.000, 1600.000) = 3 
    [1600.000, 1650.000) = 1 
    [1650.000, 1700.000) = 0 
    [1700.000, 1750.000) = 3 
    [1750.000, 1800.000) = 0 
    [1800.000, 1850.000) = 0 
    [1850.000, 1900.000) = 0 
    [1900.000, 1950.000) = 0 
    [1950.000, 2000.000) = 1 
    [2000.000, 2050.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1529.714 us/op
     p(50.0000) =   1676.309 us/op
     p(90.0000) =   2013.960 us/op
     p(95.0000) =   2020.214 us/op
     p(99.0000) =   2020.214 us/op
     p(99.9000) =   2020.214 us/op
     p(99.9900) =   2020.214 us/op
     p(99.9990) =   2020.214 us/op
     p(99.9999) =   2020.214 us/op
    p(100.0000) =   2020.214 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.75)

# Run progress: 56.44% complete, ETA 00:20:11
# Fork: 1 of 2
# Warmup Iteration   1: 2897.426 us/op
# Warmup Iteration   2: 2085.871 us/op
# Warmup Iteration   3: 2533.193 us/op
# Warmup Iteration   4: 1659.688 us/op
# Warmup Iteration   5: 1763.886 us/op
Iteration   1: 1709.922 us/op
Iteration   2: 2082.143 us/op
Iteration   3: 1554.734 us/op
Iteration   4: 1766.684 us/op
Iteration   5: 1564.949 us/op

# Run progress: 56.63% complete, ETA 00:20:06
# Fork: 2 of 2
# Warmup Iteration   1: 2889.606 us/op
# Warmup Iteration   2: 2082.734 us/op
# Warmup Iteration   3: 2488.089 us/op
# Warmup Iteration   4: 1675.440 us/op
# Warmup Iteration   5: 1800.049 us/op
Iteration   1: 1631.295 us/op
Iteration   2: 2061.046 us/op
Iteration   3: 1568.330 us/op
Iteration   4: 1752.417 us/op
Iteration   5: 1550.953 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1724.247 ±(99.9%) 302.965 us/op

  Histogram, us/op:
    [1500.000, 1550.000) = 0 
    [1550.000, 1600.000) = 4 
    [1600.000, 1650.000) = 1 
    [1650.000, 1700.000) = 0 
    [1700.000, 1750.000) = 1 
    [1750.000, 1800.000) = 2 
    [1800.000, 1850.000) = 0 
    [1850.000, 1900.000) = 0 
    [1900.000, 1950.000) = 0 
    [1950.000, 2000.000) = 0 
    [2000.000, 2050.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1550.953 us/op
     p(50.0000) =   1670.609 us/op
     p(90.0000) =   2080.033 us/op
     p(95.0000) =   2082.143 us/op
     p(99.0000) =   2082.143 us/op
     p(99.9000) =   2082.143 us/op
     p(99.9900) =   2082.143 us/op
     p(99.9990) =   2082.143 us/op
     p(99.9999) =   2082.143 us/op
    p(100.0000) =   2082.143 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.875)

# Run progress: 56.82% complete, ETA 00:20:00
# Fork: 1 of 2
# Warmup Iteration   1: 2635.582 us/op
# Warmup Iteration   2: 2252.416 us/op
# Warmup Iteration   3: 2460.024 us/op
# Warmup Iteration   4: 1640.209 us/op
# Warmup Iteration   5: 1798.710 us/op
Iteration   1: 1632.656 us/op
Iteration   2: 2041.923 us/op
Iteration   3: 1565.135 us/op
Iteration   4: 1659.425 us/op
Iteration   5: 1695.381 us/op

# Run progress: 57.01% complete, ETA 00:19:55
# Fork: 2 of 2
# Warmup Iteration   1: 2918.017 us/op
# Warmup Iteration   2: 2337.846 us/op
# Warmup Iteration   3: 2595.022 us/op
# Warmup Iteration   4: 1708.410 us/op
# Warmup Iteration   5: 1812.179 us/op
Iteration   1: 1735.547 us/op
Iteration   2: 1988.562 us/op
Iteration   3: 1627.089 us/op
Iteration   4: 1753.375 us/op
Iteration   5: 1795.261 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1749.435 ±(99.9%) 235.640 us/op

  Histogram, us/op:
    [1500.000, 1550.000) = 0 
    [1550.000, 1600.000) = 1 
    [1600.000, 1650.000) = 2 
    [1650.000, 1700.000) = 2 
    [1700.000, 1750.000) = 1 
    [1750.000, 1800.000) = 2 
    [1800.000, 1850.000) = 0 
    [1850.000, 1900.000) = 0 
    [1900.000, 1950.000) = 0 
    [1950.000, 2000.000) = 1 
    [2000.000, 2050.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1565.135 us/op
     p(50.0000) =   1715.464 us/op
     p(90.0000) =   2036.587 us/op
     p(95.0000) =   2041.923 us/op
     p(99.0000) =   2041.923 us/op
     p(99.9000) =   2041.923 us/op
     p(99.9900) =   2041.923 us/op
     p(99.9990) =   2041.923 us/op
     p(99.9999) =   2041.923 us/op
    p(100.0000) =   2041.923 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 1)

# Run progress: 57.20% complete, ETA 00:19:50
# Fork: 1 of 2
# Warmup Iteration   1: 2796.438 us/op
# Warmup Iteration   2: 2115.685 us/op
# Warmup Iteration   3: 2462.268 us/op
# Warmup Iteration   4: 1658.181 us/op
# Warmup Iteration   5: 1744.839 us/op
Iteration   1: 1638.358 us/op
Iteration   2: 2049.152 us/op
Iteration   3: 1538.258 us/op
Iteration   4: 1791.676 us/op
Iteration   5: 1613.999 us/op

# Run progress: 57.39% complete, ETA 00:19:45
# Fork: 2 of 2
# Warmup Iteration   1: 2841.389 us/op
# Warmup Iteration   2: 2297.137 us/op
# Warmup Iteration   3: 2544.937 us/op
# Warmup Iteration   4: 1714.571 us/op
# Warmup Iteration   5: 1797.863 us/op
Iteration   1: 1733.552 us/op
Iteration   2: 2065.305 us/op
Iteration   3: 1583.233 us/op
Iteration   4: 1699.126 us/op
Iteration   5: 1673.705 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1738.636 ±(99.9%) 276.780 us/op

  Histogram, us/op:
    [1500.000, 1550.000) = 1 
    [1550.000, 1600.000) = 1 
    [1600.000, 1650.000) = 2 
    [1650.000, 1700.000) = 2 
    [1700.000, 1750.000) = 1 
    [1750.000, 1800.000) = 1 
    [1800.000, 1850.000) = 0 
    [1850.000, 1900.000) = 0 
    [1900.000, 1950.000) = 0 
    [1950.000, 2000.000) = 0 
    [2000.000, 2050.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1538.258 us/op
     p(50.0000) =   1686.416 us/op
     p(90.0000) =   2063.690 us/op
     p(95.0000) =   2065.305 us/op
     p(99.0000) =   2065.305 us/op
     p(99.9000) =   2065.305 us/op
     p(99.9900) =   2065.305 us/op
     p(99.9990) =   2065.305 us/op
     p(99.9999) =   2065.305 us/op
    p(100.0000) =   2065.305 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.125)

# Run progress: 57.58% complete, ETA 00:19:39
# Fork: 1 of 2
# Warmup Iteration   1: 3585.884 us/op
# Warmup Iteration   2: 3219.196 us/op
# Warmup Iteration   3: 3013.821 us/op
# Warmup Iteration   4: 2429.891 us/op
# Warmup Iteration   5: 2429.194 us/op
Iteration   1: 2457.887 us/op
Iteration   2: 2611.077 us/op
Iteration   3: 2395.290 us/op
Iteration   4: 2407.536 us/op
Iteration   5: 2390.801 us/op

# Run progress: 57.77% complete, ETA 00:19:34
# Fork: 2 of 2
# Warmup Iteration   1: 3671.112 us/op
# Warmup Iteration   2: 3124.295 us/op
# Warmup Iteration   3: 3204.417 us/op
# Warmup Iteration   4: 2414.832 us/op
# Warmup Iteration   5: 2426.691 us/op
Iteration   1: 2432.824 us/op
Iteration   2: 2565.652 us/op
Iteration   3: 2297.368 us/op
Iteration   4: 2380.140 us/op
Iteration   5: 2316.453 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2425.503 ±(99.9%) 149.488 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 1 
    [2300.000, 2350.000) = 1 
    [2350.000, 2400.000) = 3 
    [2400.000, 2450.000) = 2 
    [2450.000, 2500.000) = 1 
    [2500.000, 2550.000) = 0 
    [2550.000, 2600.000) = 1 
    [2600.000, 2650.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2297.368 us/op
     p(50.0000) =   2401.413 us/op
     p(90.0000) =   2606.535 us/op
     p(95.0000) =   2611.077 us/op
     p(99.0000) =   2611.077 us/op
     p(99.9000) =   2611.077 us/op
     p(99.9900) =   2611.077 us/op
     p(99.9990) =   2611.077 us/op
     p(99.9999) =   2611.077 us/op
    p(100.0000) =   2611.077 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.250)

# Run progress: 57.95% complete, ETA 00:19:29
# Fork: 1 of 2
# Warmup Iteration   1: 3511.287 us/op
# Warmup Iteration   2: 3621.099 us/op
# Warmup Iteration   3: 2577.978 us/op
# Warmup Iteration   4: 2455.116 us/op
# Warmup Iteration   5: 2441.321 us/op
Iteration   1: 2451.253 us/op
Iteration   2: 2764.185 us/op
Iteration   3: 2466.486 us/op
Iteration   4: 2439.867 us/op
Iteration   5: 2369.972 us/op

# Run progress: 58.14% complete, ETA 00:19:24
# Fork: 2 of 2
# Warmup Iteration   1: 3501.491 us/op
# Warmup Iteration   2: 3210.008 us/op
# Warmup Iteration   3: 2794.189 us/op
# Warmup Iteration   4: 2400.200 us/op
# Warmup Iteration   5: 2457.614 us/op
Iteration   1: 2428.458 us/op
Iteration   2: 2645.350 us/op
Iteration   3: 2356.532 us/op
Iteration   4: 2303.016 us/op
Iteration   5: 2316.767 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2454.189 ±(99.9%) 220.841 us/op

  Histogram, us/op:
    [2300.000, 2350.000) = 2 
    [2350.000, 2400.000) = 2 
    [2400.000, 2450.000) = 2 
    [2450.000, 2500.000) = 2 
    [2500.000, 2550.000) = 0 
    [2550.000, 2600.000) = 0 
    [2600.000, 2650.000) = 1 
    [2650.000, 2700.000) = 0 
    [2700.000, 2750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2303.016 us/op
     p(50.0000) =   2434.163 us/op
     p(90.0000) =   2752.302 us/op
     p(95.0000) =   2764.185 us/op
     p(99.0000) =   2764.185 us/op
     p(99.9000) =   2764.185 us/op
     p(99.9900) =   2764.185 us/op
     p(99.9990) =   2764.185 us/op
     p(99.9999) =   2764.185 us/op
    p(100.0000) =   2764.185 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.375)

# Run progress: 58.33% complete, ETA 00:19:18
# Fork: 1 of 2
# Warmup Iteration   1: 3675.926 us/op
# Warmup Iteration   2: 3294.478 us/op
# Warmup Iteration   3: 3016.188 us/op
# Warmup Iteration   4: 2454.038 us/op
# Warmup Iteration   5: 2398.780 us/op
Iteration   1: 2451.046 us/op
Iteration   2: 2691.841 us/op
Iteration   3: 2390.860 us/op
Iteration   4: 2384.575 us/op
Iteration   5: 2365.750 us/op

# Run progress: 58.52% complete, ETA 00:19:13
# Fork: 2 of 2
# Warmup Iteration   1: 3547.801 us/op
# Warmup Iteration   2: 3407.250 us/op
# Warmup Iteration   3: 3063.311 us/op
# Warmup Iteration   4: 2448.702 us/op
# Warmup Iteration   5: 2471.929 us/op
Iteration   1: 2475.562 us/op
Iteration   2: 2647.184 us/op
Iteration   3: 2321.148 us/op
Iteration   4: 2406.172 us/op
Iteration   5: 2396.950 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2453.109 ±(99.9%) 184.574 us/op

  Histogram, us/op:
    [2300.000, 2325.000) = 1 
    [2325.000, 2350.000) = 0 
    [2350.000, 2375.000) = 1 
    [2375.000, 2400.000) = 3 
    [2400.000, 2425.000) = 1 
    [2425.000, 2450.000) = 0 
    [2450.000, 2475.000) = 1 
    [2475.000, 2500.000) = 1 
    [2500.000, 2525.000) = 0 
    [2525.000, 2550.000) = 0 
    [2550.000, 2575.000) = 0 
    [2575.000, 2600.000) = 0 
    [2600.000, 2625.000) = 0 
    [2625.000, 2650.000) = 1 
    [2650.000, 2675.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2321.148 us/op
     p(50.0000) =   2401.561 us/op
     p(90.0000) =   2687.375 us/op
     p(95.0000) =   2691.841 us/op
     p(99.0000) =   2691.841 us/op
     p(99.9000) =   2691.841 us/op
     p(99.9900) =   2691.841 us/op
     p(99.9990) =   2691.841 us/op
     p(99.9999) =   2691.841 us/op
    p(100.0000) =   2691.841 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.5)

# Run progress: 58.71% complete, ETA 00:19:08
# Fork: 1 of 2
# Warmup Iteration   1: 3627.057 us/op
# Warmup Iteration   2: 3528.842 us/op
# Warmup Iteration   3: 3034.861 us/op
# Warmup Iteration   4: 2501.805 us/op
# Warmup Iteration   5: 2440.128 us/op
Iteration   1: 2481.747 us/op
Iteration   2: 2645.989 us/op
Iteration   3: 2407.636 us/op
Iteration   4: 2392.847 us/op
Iteration   5: 2438.749 us/op

# Run progress: 58.90% complete, ETA 00:19:02
# Fork: 2 of 2
# Warmup Iteration   1: 3720.467 us/op
# Warmup Iteration   2: 3201.678 us/op
# Warmup Iteration   3: 3125.854 us/op
# Warmup Iteration   4: 2364.386 us/op
# Warmup Iteration   5: 2437.156 us/op
Iteration   1: 2414.406 us/op
Iteration   2: 2702.631 us/op
Iteration   3: 2292.443 us/op
Iteration   4: 2339.633 us/op
Iteration   5: 2375.365 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2449.145 ±(99.9%) 196.648 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 1 
    [2300.000, 2350.000) = 1 
    [2350.000, 2400.000) = 2 
    [2400.000, 2450.000) = 3 
    [2450.000, 2500.000) = 1 
    [2500.000, 2550.000) = 0 
    [2550.000, 2600.000) = 0 
    [2600.000, 2650.000) = 1 
    [2650.000, 2700.000) = 0 
    [2700.000, 2750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2292.443 us/op
     p(50.0000) =   2411.021 us/op
     p(90.0000) =   2696.967 us/op
     p(95.0000) =   2702.631 us/op
     p(99.0000) =   2702.631 us/op
     p(99.9000) =   2702.631 us/op
     p(99.9900) =   2702.631 us/op
     p(99.9990) =   2702.631 us/op
     p(99.9999) =   2702.631 us/op
    p(100.0000) =   2702.631 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.625)

# Run progress: 59.09% complete, ETA 00:18:57
# Fork: 1 of 2
# Warmup Iteration   1: 3467.740 us/op
# Warmup Iteration   2: 3219.255 us/op
# Warmup Iteration   3: 3096.218 us/op
# Warmup Iteration   4: 2464.708 us/op
# Warmup Iteration   5: 2409.157 us/op
Iteration   1: 2421.912 us/op
Iteration   2: 2644.976 us/op
Iteration   3: 2369.875 us/op
Iteration   4: 2351.400 us/op
Iteration   5: 2346.002 us/op

# Run progress: 59.28% complete, ETA 00:18:52
# Fork: 2 of 2
# Warmup Iteration   1: 3628.547 us/op
# Warmup Iteration   2: 3218.630 us/op
# Warmup Iteration   3: 2848.855 us/op
# Warmup Iteration   4: 2570.921 us/op
# Warmup Iteration   5: 2476.360 us/op
Iteration   1: 2524.831 us/op
Iteration   2: 2577.568 us/op
Iteration   3: 2338.528 us/op
Iteration   4: 2330.843 us/op
Iteration   5: 2353.758 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2425.969 ±(99.9%) 172.928 us/op

  Histogram, us/op:
    [2300.000, 2325.000) = 0 
    [2325.000, 2350.000) = 3 
    [2350.000, 2375.000) = 3 
    [2375.000, 2400.000) = 0 
    [2400.000, 2425.000) = 1 
    [2425.000, 2450.000) = 0 
    [2450.000, 2475.000) = 0 
    [2475.000, 2500.000) = 0 
    [2500.000, 2525.000) = 1 
    [2525.000, 2550.000) = 0 
    [2550.000, 2575.000) = 0 
    [2575.000, 2600.000) = 1 
    [2600.000, 2625.000) = 0 
    [2625.000, 2650.000) = 1 
    [2650.000, 2675.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2330.843 us/op
     p(50.0000) =   2361.817 us/op
     p(90.0000) =   2638.235 us/op
     p(95.0000) =   2644.976 us/op
     p(99.0000) =   2644.976 us/op
     p(99.9000) =   2644.976 us/op
     p(99.9900) =   2644.976 us/op
     p(99.9990) =   2644.976 us/op
     p(99.9999) =   2644.976 us/op
    p(100.0000) =   2644.976 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.75)

# Run progress: 59.47% complete, ETA 00:18:47
# Fork: 1 of 2
# Warmup Iteration   1: 3745.041 us/op
# Warmup Iteration   2: 3281.137 us/op
# Warmup Iteration   3: 3102.832 us/op
# Warmup Iteration   4: 2529.549 us/op
# Warmup Iteration   5: 2641.831 us/op
Iteration   1: 2436.111 us/op
Iteration   2: 2628.693 us/op
Iteration   3: 2345.476 us/op
Iteration   4: 2358.424 us/op
Iteration   5: 2410.393 us/op

# Run progress: 59.66% complete, ETA 00:18:41
# Fork: 2 of 2
# Warmup Iteration   1: 3673.454 us/op
# Warmup Iteration   2: 3186.834 us/op
# Warmup Iteration   3: 3115.534 us/op
# Warmup Iteration   4: 2422.324 us/op
# Warmup Iteration   5: 2563.273 us/op
Iteration   1: 2384.658 us/op
Iteration   2: 2761.200 us/op
Iteration   3: 2322.373 us/op
Iteration   4: 2313.104 us/op
Iteration   5: 2554.025 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2451.446 ±(99.9%) 225.345 us/op

  Histogram, us/op:
    [2300.000, 2350.000) = 3 
    [2350.000, 2400.000) = 2 
    [2400.000, 2450.000) = 2 
    [2450.000, 2500.000) = 0 
    [2500.000, 2550.000) = 0 
    [2550.000, 2600.000) = 1 
    [2600.000, 2650.000) = 1 
    [2650.000, 2700.000) = 0 
    [2700.000, 2750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2313.104 us/op
     p(50.0000) =   2397.525 us/op
     p(90.0000) =   2747.949 us/op
     p(95.0000) =   2761.200 us/op
     p(99.0000) =   2761.200 us/op
     p(99.9000) =   2761.200 us/op
     p(99.9900) =   2761.200 us/op
     p(99.9990) =   2761.200 us/op
     p(99.9999) =   2761.200 us/op
    p(100.0000) =   2761.200 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.875)

# Run progress: 59.85% complete, ETA 00:18:36
# Fork: 1 of 2
# Warmup Iteration   1: 3491.630 us/op
# Warmup Iteration   2: 3135.845 us/op
# Warmup Iteration   3: 3042.582 us/op
# Warmup Iteration   4: 2532.507 us/op
# Warmup Iteration   5: 2436.634 us/op
Iteration   1: 2465.271 us/op
Iteration   2: 2669.806 us/op
Iteration   3: 2422.877 us/op
Iteration   4: 2315.731 us/op
Iteration   5: 2437.606 us/op

# Run progress: 60.04% complete, ETA 00:18:31
# Fork: 2 of 2
# Warmup Iteration   1: 3925.134 us/op
# Warmup Iteration   2: 3250.025 us/op
# Warmup Iteration   3: 3117.972 us/op
# Warmup Iteration   4: 2496.550 us/op
# Warmup Iteration   5: 2541.086 us/op
Iteration   1: 2577.377 us/op
Iteration   2: 2699.132 us/op
Iteration   3: 2439.954 us/op
Iteration   4: 2482.553 us/op
Iteration   5: 2494.079 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2500.439 ±(99.9%) 177.044 us/op

  Histogram, us/op:
    [2300.000, 2325.000) = 1 
    [2325.000, 2350.000) = 0 
    [2350.000, 2375.000) = 0 
    [2375.000, 2400.000) = 0 
    [2400.000, 2425.000) = 1 
    [2425.000, 2450.000) = 2 
    [2450.000, 2475.000) = 1 
    [2475.000, 2500.000) = 2 
    [2500.000, 2525.000) = 0 
    [2525.000, 2550.000) = 0 
    [2550.000, 2575.000) = 0 
    [2575.000, 2600.000) = 1 
    [2600.000, 2625.000) = 0 
    [2625.000, 2650.000) = 0 
    [2650.000, 2675.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2315.731 us/op
     p(50.0000) =   2473.912 us/op
     p(90.0000) =   2696.199 us/op
     p(95.0000) =   2699.132 us/op
     p(99.0000) =   2699.132 us/op
     p(99.9000) =   2699.132 us/op
     p(99.9900) =   2699.132 us/op
     p(99.9990) =   2699.132 us/op
     p(99.9999) =   2699.132 us/op
    p(100.0000) =   2699.132 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 1)

# Run progress: 60.23% complete, ETA 00:18:26
# Fork: 1 of 2
# Warmup Iteration   1: 3473.664 us/op
# Warmup Iteration   2: 3463.570 us/op
# Warmup Iteration   3: 2550.116 us/op
# Warmup Iteration   4: 2434.458 us/op
# Warmup Iteration   5: 2406.469 us/op
Iteration   1: 2451.319 us/op
Iteration   2: 2805.909 us/op
Iteration   3: 2259.066 us/op
Iteration   4: 2430.275 us/op
Iteration   5: 2459.489 us/op

# Run progress: 60.42% complete, ETA 00:18:20
# Fork: 2 of 2
# Warmup Iteration   1: 3661.319 us/op
# Warmup Iteration   2: 3150.621 us/op
# Warmup Iteration   3: 3033.629 us/op
# Warmup Iteration   4: 2464.965 us/op
# Warmup Iteration   5: 2373.171 us/op
Iteration   1: 2434.311 us/op
Iteration   2: 2984.594 us/op
Iteration   3: 2346.587 us/op
Iteration   4: 2367.077 us/op
Iteration   5: 2353.850 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2489.248 ±(99.9%) 342.189 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 1 
    [2300.000, 2350.000) = 1 
    [2350.000, 2400.000) = 2 
    [2400.000, 2450.000) = 2 
    [2450.000, 2500.000) = 2 
    [2500.000, 2550.000) = 0 
    [2550.000, 2600.000) = 0 
    [2600.000, 2650.000) = 0 
    [2650.000, 2700.000) = 0 
    [2700.000, 2750.000) = 0 
    [2750.000, 2800.000) = 0 
    [2800.000, 2850.000) = 1 
    [2850.000, 2900.000) = 0 
    [2900.000, 2950.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2259.066 us/op
     p(50.0000) =   2432.293 us/op
     p(90.0000) =   2966.726 us/op
     p(95.0000) =   2984.594 us/op
     p(99.0000) =   2984.594 us/op
     p(99.9000) =   2984.594 us/op
     p(99.9900) =   2984.594 us/op
     p(99.9990) =   2984.594 us/op
     p(99.9999) =   2984.594 us/op
    p(100.0000) =   2984.594 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.125)

# Run progress: 60.61% complete, ETA 00:18:15
# Fork: 1 of 2
# Warmup Iteration   1: 3652.772 us/op
# Warmup Iteration   2: 3107.479 us/op
# Warmup Iteration   3: 3083.488 us/op
# Warmup Iteration   4: 2489.631 us/op
# Warmup Iteration   5: 2445.623 us/op
Iteration   1: 2442.475 us/op
Iteration   2: 2679.320 us/op
Iteration   3: 2352.787 us/op
Iteration   4: 2290.739 us/op
Iteration   5: 2326.235 us/op

# Run progress: 60.80% complete, ETA 00:18:10
# Fork: 2 of 2
# Warmup Iteration   1: 3998.650 us/op
# Warmup Iteration   2: 3351.391 us/op
# Warmup Iteration   3: 2517.655 us/op
# Warmup Iteration   4: 2466.217 us/op
# Warmup Iteration   5: 2401.715 us/op
Iteration   1: 2430.245 us/op
Iteration   2: 2674.144 us/op
Iteration   3: 2328.652 us/op
Iteration   4: 2336.772 us/op
Iteration   5: 2385.788 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2424.716 ±(99.9%) 213.026 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 1 
    [2300.000, 2350.000) = 3 
    [2350.000, 2400.000) = 2 
    [2400.000, 2450.000) = 2 
    [2450.000, 2500.000) = 0 
    [2500.000, 2550.000) = 0 
    [2550.000, 2600.000) = 0 
    [2600.000, 2650.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2290.739 us/op
     p(50.0000) =   2369.288 us/op
     p(90.0000) =   2678.802 us/op
     p(95.0000) =   2679.320 us/op
     p(99.0000) =   2679.320 us/op
     p(99.9000) =   2679.320 us/op
     p(99.9900) =   2679.320 us/op
     p(99.9990) =   2679.320 us/op
     p(99.9999) =   2679.320 us/op
    p(100.0000) =   2679.320 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.250)

# Run progress: 60.98% complete, ETA 00:18:05
# Fork: 1 of 2
# Warmup Iteration   1: 3693.234 us/op
# Warmup Iteration   2: 3269.460 us/op
# Warmup Iteration   3: 3121.617 us/op
# Warmup Iteration   4: 2433.767 us/op
# Warmup Iteration   5: 2599.111 us/op
Iteration   1: 2549.468 us/op
Iteration   2: 2609.187 us/op
Iteration   3: 2347.351 us/op
Iteration   4: 2352.925 us/op
Iteration   5: 2391.737 us/op

# Run progress: 61.17% complete, ETA 00:17:59
# Fork: 2 of 2
# Warmup Iteration   1: 3731.906 us/op
# Warmup Iteration   2: 3261.585 us/op
# Warmup Iteration   3: 3239.958 us/op
# Warmup Iteration   4: 2463.190 us/op
# Warmup Iteration   5: 2507.419 us/op
Iteration   1: 2462.896 us/op
Iteration   2: 2615.982 us/op
Iteration   3: 2362.111 us/op
Iteration   4: 2363.065 us/op
Iteration   5: 2422.567 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2447.729 ±(99.9%) 161.177 us/op

  Histogram, us/op:
    [2300.000, 2325.000) = 0 
    [2325.000, 2350.000) = 1 
    [2350.000, 2375.000) = 3 
    [2375.000, 2400.000) = 1 
    [2400.000, 2425.000) = 1 
    [2425.000, 2450.000) = 0 
    [2450.000, 2475.000) = 1 
    [2475.000, 2500.000) = 0 
    [2500.000, 2525.000) = 0 
    [2525.000, 2550.000) = 1 
    [2550.000, 2575.000) = 0 
    [2575.000, 2600.000) = 0 
    [2600.000, 2625.000) = 2 
    [2625.000, 2650.000) = 0 
    [2650.000, 2675.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2347.351 us/op
     p(50.0000) =   2407.152 us/op
     p(90.0000) =   2615.303 us/op
     p(95.0000) =   2615.982 us/op
     p(99.0000) =   2615.982 us/op
     p(99.9000) =   2615.982 us/op
     p(99.9900) =   2615.982 us/op
     p(99.9990) =   2615.982 us/op
     p(99.9999) =   2615.982 us/op
    p(100.0000) =   2615.982 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.375)

# Run progress: 61.36% complete, ETA 00:17:54
# Fork: 1 of 2
# Warmup Iteration   1: 3575.084 us/op
# Warmup Iteration   2: 3262.530 us/op
# Warmup Iteration   3: 2894.635 us/op
# Warmup Iteration   4: 2423.646 us/op
# Warmup Iteration   5: 2395.150 us/op
Iteration   1: 2425.247 us/op
Iteration   2: 2704.014 us/op
Iteration   3: 2382.322 us/op
Iteration   4: 2338.440 us/op
Iteration   5: 2353.130 us/op

# Run progress: 61.55% complete, ETA 00:17:49
# Fork: 2 of 2
# Warmup Iteration   1: 3525.950 us/op
# Warmup Iteration   2: 3405.096 us/op
# Warmup Iteration   3: 2917.859 us/op
# Warmup Iteration   4: 2434.343 us/op
# Warmup Iteration   5: 2498.462 us/op
Iteration   1: 2445.034 us/op
Iteration   2: 2709.101 us/op
Iteration   3: 2413.689 us/op
Iteration   4: 2317.408 us/op
Iteration   5: 2380.356 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2446.874 ±(99.9%) 215.203 us/op

  Histogram, us/op:
    [2300.000, 2350.000) = 2 
    [2350.000, 2400.000) = 3 
    [2400.000, 2450.000) = 3 
    [2450.000, 2500.000) = 0 
    [2500.000, 2550.000) = 0 
    [2550.000, 2600.000) = 0 
    [2600.000, 2650.000) = 0 
    [2650.000, 2700.000) = 0 
    [2700.000, 2750.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   2317.408 us/op
     p(50.0000) =   2398.006 us/op
     p(90.0000) =   2708.592 us/op
     p(95.0000) =   2709.101 us/op
     p(99.0000) =   2709.101 us/op
     p(99.9000) =   2709.101 us/op
     p(99.9900) =   2709.101 us/op
     p(99.9990) =   2709.101 us/op
     p(99.9999) =   2709.101 us/op
    p(100.0000) =   2709.101 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.5)

# Run progress: 61.74% complete, ETA 00:17:44
# Fork: 1 of 2
# Warmup Iteration   1: 3977.210 us/op
# Warmup Iteration   2: 3140.302 us/op
# Warmup Iteration   3: 2870.418 us/op
# Warmup Iteration   4: 2425.821 us/op
# Warmup Iteration   5: 2448.225 us/op
Iteration   1: 2446.923 us/op
Iteration   2: 2726.385 us/op
Iteration   3: 2395.592 us/op
Iteration   4: 2333.858 us/op
Iteration   5: 2368.732 us/op

# Run progress: 61.93% complete, ETA 00:17:38
# Fork: 2 of 2
# Warmup Iteration   1: 3990.447 us/op
# Warmup Iteration   2: 3101.211 us/op
# Warmup Iteration   3: 2887.712 us/op
# Warmup Iteration   4: 2379.894 us/op
# Warmup Iteration   5: 2392.933 us/op
Iteration   1: 2433.871 us/op
Iteration   2: 2819.979 us/op
Iteration   3: 2341.033 us/op
Iteration   4: 2286.747 us/op
Iteration   5: 2407.499 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2456.062 ±(99.9%) 265.024 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 1 
    [2300.000, 2350.000) = 2 
    [2350.000, 2400.000) = 2 
    [2400.000, 2450.000) = 3 
    [2450.000, 2500.000) = 0 
    [2500.000, 2550.000) = 0 
    [2550.000, 2600.000) = 0 
    [2600.000, 2650.000) = 0 
    [2650.000, 2700.000) = 0 
    [2700.000, 2750.000) = 1 
    [2750.000, 2800.000) = 0 
    [2800.000, 2850.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2286.747 us/op
     p(50.0000) =   2401.546 us/op
     p(90.0000) =   2810.620 us/op
     p(95.0000) =   2819.979 us/op
     p(99.0000) =   2819.979 us/op
     p(99.9000) =   2819.979 us/op
     p(99.9900) =   2819.979 us/op
     p(99.9990) =   2819.979 us/op
     p(99.9999) =   2819.979 us/op
    p(100.0000) =   2819.979 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.625)

# Run progress: 62.12% complete, ETA 00:17:33
# Fork: 1 of 2
# Warmup Iteration   1: 3498.466 us/op
# Warmup Iteration   2: 3255.989 us/op
# Warmup Iteration   3: 3107.503 us/op
# Warmup Iteration   4: 2401.259 us/op
# Warmup Iteration   5: 2356.744 us/op
Iteration   1: 2387.863 us/op
Iteration   2: 2703.517 us/op
Iteration   3: 2305.047 us/op
Iteration   4: 2388.971 us/op
Iteration   5: 2413.841 us/op

# Run progress: 62.31% complete, ETA 00:17:28
# Fork: 2 of 2
# Warmup Iteration   1: 3497.294 us/op
# Warmup Iteration   2: 3280.245 us/op
# Warmup Iteration   3: 3064.293 us/op
# Warmup Iteration   4: 2581.050 us/op
# Warmup Iteration   5: 2439.283 us/op
Iteration   1: 2509.992 us/op
Iteration   2: 2677.039 us/op
Iteration   3: 2394.905 us/op
Iteration   4: 2326.209 us/op
Iteration   5: 2398.341 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2450.572 ±(99.9%) 207.996 us/op

  Histogram, us/op:
    [2300.000, 2350.000) = 2 
    [2350.000, 2400.000) = 4 
    [2400.000, 2450.000) = 1 
    [2450.000, 2500.000) = 0 
    [2500.000, 2550.000) = 1 
    [2550.000, 2600.000) = 0 
    [2600.000, 2650.000) = 0 
    [2650.000, 2700.000) = 1 
    [2700.000, 2750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2305.047 us/op
     p(50.0000) =   2396.623 us/op
     p(90.0000) =   2700.869 us/op
     p(95.0000) =   2703.517 us/op
     p(99.0000) =   2703.517 us/op
     p(99.9000) =   2703.517 us/op
     p(99.9900) =   2703.517 us/op
     p(99.9990) =   2703.517 us/op
     p(99.9999) =   2703.517 us/op
    p(100.0000) =   2703.517 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.75)

# Run progress: 62.50% complete, ETA 00:17:23
# Fork: 1 of 2
# Warmup Iteration   1: 3822.385 us/op
# Warmup Iteration   2: 3310.976 us/op
# Warmup Iteration   3: 2955.511 us/op
# Warmup Iteration   4: 2458.686 us/op
# Warmup Iteration   5: 2445.110 us/op
Iteration   1: 2512.798 us/op
Iteration   2: 2719.033 us/op
Iteration   3: 2288.558 us/op
Iteration   4: 2387.309 us/op
Iteration   5: 2362.587 us/op

# Run progress: 62.69% complete, ETA 00:17:17
# Fork: 2 of 2
# Warmup Iteration   1: 3510.871 us/op
# Warmup Iteration   2: 3382.181 us/op
# Warmup Iteration   3: 2906.765 us/op
# Warmup Iteration   4: 2422.585 us/op
# Warmup Iteration   5: 2479.482 us/op
Iteration   1: 2453.870 us/op
Iteration   2: 2827.455 us/op
Iteration   3: 2336.643 us/op
Iteration   4: 2337.443 us/op
Iteration   5: 2386.235 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2461.193 ±(99.9%) 268.931 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 1 
    [2300.000, 2350.000) = 2 
    [2350.000, 2400.000) = 3 
    [2400.000, 2450.000) = 0 
    [2450.000, 2500.000) = 1 
    [2500.000, 2550.000) = 1 
    [2550.000, 2600.000) = 0 
    [2600.000, 2650.000) = 0 
    [2650.000, 2700.000) = 0 
    [2700.000, 2750.000) = 1 
    [2750.000, 2800.000) = 0 
    [2800.000, 2850.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2288.558 us/op
     p(50.0000) =   2386.772 us/op
     p(90.0000) =   2816.613 us/op
     p(95.0000) =   2827.455 us/op
     p(99.0000) =   2827.455 us/op
     p(99.9000) =   2827.455 us/op
     p(99.9900) =   2827.455 us/op
     p(99.9990) =   2827.455 us/op
     p(99.9999) =   2827.455 us/op
    p(100.0000) =   2827.455 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.875)

# Run progress: 62.88% complete, ETA 00:17:12
# Fork: 1 of 2
# Warmup Iteration   1: 3704.437 us/op
# Warmup Iteration   2: 3346.795 us/op
# Warmup Iteration   3: 2614.990 us/op
# Warmup Iteration   4: 2433.964 us/op
# Warmup Iteration   5: 2393.874 us/op
Iteration   1: 2596.254 us/op
Iteration   2: 2643.905 us/op
Iteration   3: 2305.072 us/op
Iteration   4: 2359.165 us/op
Iteration   5: 2413.179 us/op

# Run progress: 63.07% complete, ETA 00:17:07
# Fork: 2 of 2
# Warmup Iteration   1: 3901.496 us/op
# Warmup Iteration   2: 3157.699 us/op
# Warmup Iteration   3: 2955.438 us/op
# Warmup Iteration   4: 2496.395 us/op
# Warmup Iteration   5: 2434.321 us/op
Iteration   1: 2499.550 us/op
Iteration   2: 2794.180 us/op
Iteration   3: 2279.052 us/op
Iteration   4: 2241.075 us/op
Iteration   5: 2371.560 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2450.299 ±(99.9%) 271.171 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 1 
    [2250.000, 2300.000) = 1 
    [2300.000, 2350.000) = 1 
    [2350.000, 2400.000) = 2 
    [2400.000, 2450.000) = 1 
    [2450.000, 2500.000) = 1 
    [2500.000, 2550.000) = 0 
    [2550.000, 2600.000) = 1 
    [2600.000, 2650.000) = 1 
    [2650.000, 2700.000) = 0 
    [2700.000, 2750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2241.075 us/op
     p(50.0000) =   2392.370 us/op
     p(90.0000) =   2779.153 us/op
     p(95.0000) =   2794.180 us/op
     p(99.0000) =   2794.180 us/op
     p(99.9000) =   2794.180 us/op
     p(99.9900) =   2794.180 us/op
     p(99.9990) =   2794.180 us/op
     p(99.9999) =   2794.180 us/op
    p(100.0000) =   2794.180 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 1)

# Run progress: 63.26% complete, ETA 00:17:01
# Fork: 1 of 2
# Warmup Iteration   1: 3765.481 us/op
# Warmup Iteration   2: 3271.375 us/op
# Warmup Iteration   3: 2998.427 us/op
# Warmup Iteration   4: 2442.693 us/op
# Warmup Iteration   5: 2433.853 us/op
Iteration   1: 2428.936 us/op
Iteration   2: 2658.942 us/op
Iteration   3: 2314.948 us/op
Iteration   4: 2317.424 us/op
Iteration   5: 2324.692 us/op

# Run progress: 63.45% complete, ETA 00:16:56
# Fork: 2 of 2
# Warmup Iteration   1: 3931.826 us/op
# Warmup Iteration   2: 3164.844 us/op
# Warmup Iteration   3: 3003.286 us/op
# Warmup Iteration   4: 2439.767 us/op
# Warmup Iteration   5: 2440.869 us/op
Iteration   1: 2437.850 us/op
Iteration   2: 2845.200 us/op
Iteration   3: 2372.324 us/op
Iteration   4: 2343.343 us/op
Iteration   5: 2390.938 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2443.460 ±(99.9%) 263.032 us/op

  Histogram, us/op:
    [2300.000, 2350.000) = 4 
    [2350.000, 2400.000) = 2 
    [2400.000, 2450.000) = 2 
    [2450.000, 2500.000) = 0 
    [2500.000, 2550.000) = 0 
    [2550.000, 2600.000) = 0 
    [2600.000, 2650.000) = 0 
    [2650.000, 2700.000) = 1 
    [2700.000, 2750.000) = 0 
    [2750.000, 2800.000) = 0 
    [2800.000, 2850.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2314.948 us/op
     p(50.0000) =   2381.631 us/op
     p(90.0000) =   2826.574 us/op
     p(95.0000) =   2845.200 us/op
     p(99.0000) =   2845.200 us/op
     p(99.9000) =   2845.200 us/op
     p(99.9900) =   2845.200 us/op
     p(99.9990) =   2845.200 us/op
     p(99.9999) =   2845.200 us/op
    p(100.0000) =   2845.200 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.125)

# Run progress: 63.64% complete, ETA 00:16:51
# Fork: 1 of 2
# Warmup Iteration   1: 4800.212 us/op
# Warmup Iteration   2: 4702.770 us/op
# Warmup Iteration   3: 4392.283 us/op
# Warmup Iteration   4: 3912.348 us/op
# Warmup Iteration   5: 3936.927 us/op
Iteration   1: 3910.527 us/op
Iteration   2: 4161.162 us/op
Iteration   3: 3708.235 us/op
Iteration   4: 3763.668 us/op
Iteration   5: 3926.003 us/op

# Run progress: 63.83% complete, ETA 00:16:46
# Fork: 2 of 2
# Warmup Iteration   1: 4957.189 us/op
# Warmup Iteration   2: 5050.174 us/op
# Warmup Iteration   3: 4271.998 us/op
# Warmup Iteration   4: 4283.740 us/op
# Warmup Iteration   5: 4185.008 us/op
Iteration   1: 4058.591 us/op
Iteration   2: 4452.615 us/op
Iteration   3: 4674.497 us/op
Iteration   4: 5029.733 us/op
Iteration   5: 5048.776 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   4273.381 ±(99.9%) 757.034 us/op

  Histogram, us/op:
    [3000.000, 3250.000) = 0 
    [3250.000, 3500.000) = 0 
    [3500.000, 3750.000) = 1 
    [3750.000, 4000.000) = 3 
    [4000.000, 4250.000) = 2 
    [4250.000, 4500.000) = 1 
    [4500.000, 4750.000) = 1 
    [4750.000, 5000.000) = 0 
    [5000.000, 5250.000) = 2 
    [5250.000, 5500.000) = 0 
    [5500.000, 5750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   3708.235 us/op
     p(50.0000) =   4109.877 us/op
     p(90.0000) =   5046.872 us/op
     p(95.0000) =   5048.776 us/op
     p(99.0000) =   5048.776 us/op
     p(99.9000) =   5048.776 us/op
     p(99.9900) =   5048.776 us/op
     p(99.9990) =   5048.776 us/op
     p(99.9999) =   5048.776 us/op
    p(100.0000) =   5048.776 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.250)

# Run progress: 64.02% complete, ETA 00:16:40
# Fork: 1 of 2
# Warmup Iteration   1: 5387.898 us/op
# Warmup Iteration   2: 4921.972 us/op
# Warmup Iteration   3: 4045.491 us/op
# Warmup Iteration   4: 4162.599 us/op
# Warmup Iteration   5: 3983.526 us/op
Iteration   1: 4034.000 us/op
Iteration   2: 4416.270 us/op
Iteration   3: 3930.742 us/op
Iteration   4: 4252.301 us/op
Iteration   5: 4281.767 us/op

# Run progress: 64.20% complete, ETA 00:16:35
# Fork: 2 of 2
# Warmup Iteration   1: 5047.313 us/op
# Warmup Iteration   2: 4786.408 us/op
# Warmup Iteration   3: 4505.325 us/op
# Warmup Iteration   4: 3900.115 us/op
# Warmup Iteration   5: 3880.311 us/op
Iteration   1: 3865.282 us/op
Iteration   2: 4255.460 us/op
Iteration   3: 3794.968 us/op
Iteration   4: 3728.305 us/op
Iteration   5: 3789.421 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   4034.852 ±(99.9%) 375.011 us/op

  Histogram, us/op:
    [3700.000, 3750.000) = 1 
    [3750.000, 3800.000) = 2 
    [3800.000, 3850.000) = 0 
    [3850.000, 3900.000) = 1 
    [3900.000, 3950.000) = 1 
    [3950.000, 4000.000) = 0 
    [4000.000, 4050.000) = 1 
    [4050.000, 4100.000) = 0 
    [4100.000, 4150.000) = 0 
    [4150.000, 4200.000) = 0 
    [4200.000, 4250.000) = 0 
    [4250.000, 4300.000) = 3 
    [4300.000, 4350.000) = 0 
    [4350.000, 4400.000) = 0 
    [4400.000, 4450.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   3728.305 us/op
     p(50.0000) =   3982.371 us/op
     p(90.0000) =   4402.820 us/op
     p(95.0000) =   4416.270 us/op
     p(99.0000) =   4416.270 us/op
     p(99.9000) =   4416.270 us/op
     p(99.9900) =   4416.270 us/op
     p(99.9990) =   4416.270 us/op
     p(99.9999) =   4416.270 us/op
    p(100.0000) =   4416.270 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.375)

# Run progress: 64.39% complete, ETA 00:16:30
# Fork: 1 of 2
# Warmup Iteration   1: 4986.286 us/op
# Warmup Iteration   2: 4944.219 us/op
# Warmup Iteration   3: 4075.181 us/op
# Warmup Iteration   4: 3968.424 us/op
# Warmup Iteration   5: 4077.880 us/op
Iteration   1: 3967.739 us/op
Iteration   2: 4235.412 us/op
Iteration   3: 3880.591 us/op
Iteration   4: 3819.993 us/op
Iteration   5: 3970.917 us/op

# Run progress: 64.58% complete, ETA 00:16:25
# Fork: 2 of 2
# Warmup Iteration   1: 4977.742 us/op
# Warmup Iteration   2: 4881.104 us/op
# Warmup Iteration   3: 4509.830 us/op
# Warmup Iteration   4: 3898.316 us/op
# Warmup Iteration   5: 3960.711 us/op
Iteration   1: 3926.360 us/op
Iteration   2: 4268.798 us/op
Iteration   3: 3901.933 us/op
Iteration   4: 3825.089 us/op
Iteration   5: 3869.522 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   3966.635 ±(99.9%) 240.499 us/op

  Histogram, us/op:
    [3800.000, 3850.000) = 2 
    [3850.000, 3900.000) = 2 
    [3900.000, 3950.000) = 2 
    [3950.000, 4000.000) = 2 
    [4000.000, 4050.000) = 0 
    [4050.000, 4100.000) = 0 
    [4100.000, 4150.000) = 0 
    [4150.000, 4200.000) = 0 
    [4200.000, 4250.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   3819.993 us/op
     p(50.0000) =   3914.147 us/op
     p(90.0000) =   4265.459 us/op
     p(95.0000) =   4268.798 us/op
     p(99.0000) =   4268.798 us/op
     p(99.9000) =   4268.798 us/op
     p(99.9900) =   4268.798 us/op
     p(99.9990) =   4268.798 us/op
     p(99.9999) =   4268.798 us/op
    p(100.0000) =   4268.798 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.5)

# Run progress: 64.77% complete, ETA 00:16:19
# Fork: 1 of 2
# Warmup Iteration   1: 5298.248 us/op
# Warmup Iteration   2: 5034.377 us/op
# Warmup Iteration   3: 4386.910 us/op
# Warmup Iteration   4: 4112.244 us/op
# Warmup Iteration   5: 4074.446 us/op
Iteration   1: 4118.699 us/op
Iteration   2: 4635.319 us/op
Iteration   3: 4782.631 us/op
Iteration   4: 4957.659 us/op
Iteration   5: 4922.472 us/op

# Run progress: 64.96% complete, ETA 00:16:14
# Fork: 2 of 2
# Warmup Iteration   1: 5130.835 us/op
# Warmup Iteration   2: 4799.495 us/op
# Warmup Iteration   3: 4465.757 us/op
# Warmup Iteration   4: 4046.412 us/op
# Warmup Iteration   5: 4189.653 us/op
Iteration   1: 4404.423 us/op
Iteration   2: 4879.685 us/op
Iteration   3: 4958.158 us/op
Iteration   4: 4882.784 us/op
Iteration   5: 4860.580 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   4740.241 ±(99.9%) 419.858 us/op

  Histogram, us/op:
    [4100.000, 4150.000) = 1 
    [4150.000, 4200.000) = 0 
    [4200.000, 4250.000) = 0 
    [4250.000, 4300.000) = 0 
    [4300.000, 4350.000) = 0 
    [4350.000, 4400.000) = 0 
    [4400.000, 4450.000) = 1 
    [4450.000, 4500.000) = 0 
    [4500.000, 4550.000) = 0 
    [4550.000, 4600.000) = 0 
    [4600.000, 4650.000) = 1 
    [4650.000, 4700.000) = 0 
    [4700.000, 4750.000) = 0 
    [4750.000, 4800.000) = 1 
    [4800.000, 4850.000) = 0 
    [4850.000, 4900.000) = 3 
    [4900.000, 4950.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   4118.699 us/op
     p(50.0000) =   4870.133 us/op
     p(90.0000) =   4958.108 us/op
     p(95.0000) =   4958.158 us/op
     p(99.0000) =   4958.158 us/op
     p(99.9000) =   4958.158 us/op
     p(99.9900) =   4958.158 us/op
     p(99.9990) =   4958.158 us/op
     p(99.9999) =   4958.158 us/op
    p(100.0000) =   4958.158 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.625)

# Run progress: 65.15% complete, ETA 00:16:09
# Fork: 1 of 2
# Warmup Iteration   1: 5024.732 us/op
# Warmup Iteration   2: 4689.791 us/op
# Warmup Iteration   3: 4403.327 us/op
# Warmup Iteration   4: 3930.534 us/op
# Warmup Iteration   5: 4011.073 us/op
Iteration   1: 4079.173 us/op
Iteration   2: 4264.354 us/op
Iteration   3: 3881.555 us/op
Iteration   4: 3856.657 us/op
Iteration   5: 3950.496 us/op

# Run progress: 65.34% complete, ETA 00:16:04
# Fork: 2 of 2
# Warmup Iteration   1: 5097.810 us/op
# Warmup Iteration   2: 4735.830 us/op
# Warmup Iteration   3: 4381.688 us/op
# Warmup Iteration   4: 4142.521 us/op
# Warmup Iteration   5: 4019.489 us/op
Iteration   1: 4051.591 us/op
Iteration   2: 4313.652 us/op
Iteration   3: 3918.932 us/op
Iteration   4: 3848.205 us/op
Iteration   5: 3969.295 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   4013.391 ±(99.9%) 248.414 us/op

  Histogram, us/op:
    [3800.000, 3850.000) = 1 
    [3850.000, 3900.000) = 2 
    [3900.000, 3950.000) = 1 
    [3950.000, 4000.000) = 2 
    [4000.000, 4050.000) = 0 
    [4050.000, 4100.000) = 2 
    [4100.000, 4150.000) = 0 
    [4150.000, 4200.000) = 0 
    [4200.000, 4250.000) = 0 
    [4250.000, 4300.000) = 1 
    [4300.000, 4350.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   3848.205 us/op
     p(50.0000) =   3959.896 us/op
     p(90.0000) =   4308.722 us/op
     p(95.0000) =   4313.652 us/op
     p(99.0000) =   4313.652 us/op
     p(99.9000) =   4313.652 us/op
     p(99.9900) =   4313.652 us/op
     p(99.9990) =   4313.652 us/op
     p(99.9999) =   4313.652 us/op
    p(100.0000) =   4313.652 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.75)

# Run progress: 65.53% complete, ETA 00:15:58
# Fork: 1 of 2
# Warmup Iteration   1: 5068.693 us/op
# Warmup Iteration   2: 4834.705 us/op
# Warmup Iteration   3: 4611.027 us/op
# Warmup Iteration   4: 4046.801 us/op
# Warmup Iteration   5: 3944.536 us/op
Iteration   1: 4038.139 us/op
Iteration   2: 4400.260 us/op
Iteration   3: 3913.252 us/op
Iteration   4: 3814.304 us/op
Iteration   5: 3880.735 us/op

# Run progress: 65.72% complete, ETA 00:15:53
# Fork: 2 of 2
# Warmup Iteration   1: 5038.035 us/op
# Warmup Iteration   2: 4984.108 us/op
# Warmup Iteration   3: 4075.449 us/op
# Warmup Iteration   4: 4036.335 us/op
# Warmup Iteration   5: 3970.137 us/op
Iteration   1: 4030.466 us/op
Iteration   2: 4221.506 us/op
Iteration   3: 3838.796 us/op
Iteration   4: 3885.686 us/op
Iteration   5: 3923.360 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   3994.650 ±(99.9%) 281.732 us/op

  Histogram, us/op:
    [3800.000, 3850.000) = 2 
    [3850.000, 3900.000) = 2 
    [3900.000, 3950.000) = 2 
    [3950.000, 4000.000) = 0 
    [4000.000, 4050.000) = 2 
    [4050.000, 4100.000) = 0 
    [4100.000, 4150.000) = 0 
    [4150.000, 4200.000) = 0 
    [4200.000, 4250.000) = 1 
    [4250.000, 4300.000) = 0 
    [4300.000, 4350.000) = 0 
    [4350.000, 4400.000) = 0 
    [4400.000, 4450.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   3814.304 us/op
     p(50.0000) =   3918.306 us/op
     p(90.0000) =   4382.385 us/op
     p(95.0000) =   4400.260 us/op
     p(99.0000) =   4400.260 us/op
     p(99.9000) =   4400.260 us/op
     p(99.9900) =   4400.260 us/op
     p(99.9990) =   4400.260 us/op
     p(99.9999) =   4400.260 us/op
    p(100.0000) =   4400.260 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.875)

# Run progress: 65.91% complete, ETA 00:15:48
# Fork: 1 of 2
# Warmup Iteration   1: 5365.167 us/op
# Warmup Iteration   2: 5244.175 us/op
# Warmup Iteration   3: 4159.568 us/op
# Warmup Iteration   4: 3907.638 us/op
# Warmup Iteration   5: 3898.183 us/op
Iteration   1: 3913.484 us/op
Iteration   2: 4265.751 us/op
Iteration   3: 3837.289 us/op
Iteration   4: 3874.978 us/op
Iteration   5: 3978.459 us/op

# Run progress: 66.10% complete, ETA 00:15:43
# Fork: 2 of 2
# Warmup Iteration   1: 5277.939 us/op
# Warmup Iteration   2: 4833.350 us/op
# Warmup Iteration   3: 4293.215 us/op
# Warmup Iteration   4: 4152.879 us/op
# Warmup Iteration   5: 4016.233 us/op
Iteration   1: 4021.796 us/op
Iteration   2: 4136.338 us/op
Iteration   3: 3987.829 us/op
Iteration   4: 3984.832 us/op
Iteration   5: 3997.232 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   3999.799 ±(99.9%) 188.647 us/op

  Histogram, us/op:
    [3800.000, 3850.000) = 1 
    [3850.000, 3900.000) = 1 
    [3900.000, 3950.000) = 1 
    [3950.000, 4000.000) = 4 
    [4000.000, 4050.000) = 1 
    [4050.000, 4100.000) = 0 
    [4100.000, 4150.000) = 1 
    [4150.000, 4200.000) = 0 
    [4200.000, 4250.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   3837.289 us/op
     p(50.0000) =   3986.331 us/op
     p(90.0000) =   4252.810 us/op
     p(95.0000) =   4265.751 us/op
     p(99.0000) =   4265.751 us/op
     p(99.9000) =   4265.751 us/op
     p(99.9900) =   4265.751 us/op
     p(99.9990) =   4265.751 us/op
     p(99.9999) =   4265.751 us/op
    p(100.0000) =   4265.751 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 1)

# Run progress: 66.29% complete, ETA 00:15:37
# Fork: 1 of 2
# Warmup Iteration   1: 5225.630 us/op
# Warmup Iteration   2: 5192.026 us/op
# Warmup Iteration   3: 4286.730 us/op
# Warmup Iteration   4: 4036.889 us/op
# Warmup Iteration   5: 4114.982 us/op
Iteration   1: 4072.376 us/op
Iteration   2: 4273.165 us/op
Iteration   3: 4023.775 us/op
Iteration   4: 4033.449 us/op
Iteration   5: 4167.984 us/op

# Run progress: 66.48% complete, ETA 00:15:32
# Fork: 2 of 2
# Warmup Iteration   1: 5084.519 us/op
# Warmup Iteration   2: 4827.230 us/op
# Warmup Iteration   3: 4054.773 us/op
# Warmup Iteration   4: 3966.224 us/op
# Warmup Iteration   5: 4039.681 us/op
Iteration   1: 3971.326 us/op
Iteration   2: 4234.418 us/op
Iteration   3: 3906.925 us/op
Iteration   4: 3945.880 us/op
Iteration   5: 3850.397 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   4047.970 ±(99.9%) 211.718 us/op

  Histogram, us/op:
    [3800.000, 3850.000) = 0 
    [3850.000, 3900.000) = 1 
    [3900.000, 3950.000) = 2 
    [3950.000, 4000.000) = 1 
    [4000.000, 4050.000) = 2 
    [4050.000, 4100.000) = 1 
    [4100.000, 4150.000) = 0 
    [4150.000, 4200.000) = 1 
    [4200.000, 4250.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   3850.397 us/op
     p(50.0000) =   4028.612 us/op
     p(90.0000) =   4269.290 us/op
     p(95.0000) =   4273.165 us/op
     p(99.0000) =   4273.165 us/op
     p(99.9000) =   4273.165 us/op
     p(99.9900) =   4273.165 us/op
     p(99.9990) =   4273.165 us/op
     p(99.9999) =   4273.165 us/op
    p(100.0000) =   4273.165 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.125)

# Run progress: 66.67% complete, ETA 00:15:27
# Fork: 1 of 2
# Warmup Iteration   1: 3320.546 us/op
# Warmup Iteration   2: 2301.026 us/op
# Warmup Iteration   3: 2045.697 us/op
# Warmup Iteration   4: 1818.741 us/op
# Warmup Iteration   5: 1724.194 us/op
Iteration   1: 1678.959 us/op
Iteration   2: 1479.401 us/op
Iteration   3: 1264.340 us/op
Iteration   4: 1311.334 us/op
Iteration   5: 1270.372 us/op

# Run progress: 66.86% complete, ETA 00:15:22
# Fork: 2 of 2
# Warmup Iteration   1: 3446.507 us/op
# Warmup Iteration   2: 2377.634 us/op
# Warmup Iteration   3: 2080.964 us/op
# Warmup Iteration   4: 1761.451 us/op
# Warmup Iteration   5: 1697.887 us/op
Iteration   1: 1812.238 us/op
Iteration   2: 1651.394 us/op
Iteration   3: 1291.153 us/op
Iteration   4: 1391.586 us/op
Iteration   5: 1261.791 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1441.257 ±(99.9%) 308.331 us/op

  Histogram, us/op:
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 4 
    [1300.000, 1350.000) = 1 
    [1350.000, 1400.000) = 1 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 1 
    [1500.000, 1550.000) = 0 
    [1550.000, 1600.000) = 0 
    [1600.000, 1650.000) = 0 
    [1650.000, 1700.000) = 2 
    [1700.000, 1750.000) = 0 
    [1750.000, 1800.000) = 0 
    [1800.000, 1850.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1261.791 us/op
     p(50.0000) =   1351.460 us/op
     p(90.0000) =   1798.910 us/op
     p(95.0000) =   1812.238 us/op
     p(99.0000) =   1812.238 us/op
     p(99.9000) =   1812.238 us/op
     p(99.9900) =   1812.238 us/op
     p(99.9990) =   1812.238 us/op
     p(99.9999) =   1812.238 us/op
    p(100.0000) =   1812.238 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.250)

# Run progress: 67.05% complete, ETA 00:15:16
# Fork: 1 of 2
# Warmup Iteration   1: 2940.467 us/op
# Warmup Iteration   2: 2192.349 us/op
# Warmup Iteration   3: 1639.222 us/op
# Warmup Iteration   4: 1533.654 us/op
# Warmup Iteration   5: 1586.453 us/op
Iteration   1: 1523.866 us/op
Iteration   2: 1335.342 us/op
Iteration   3: 1102.386 us/op
Iteration   4: 1086.395 us/op
Iteration   5: 1086.621 us/op

# Run progress: 67.23% complete, ETA 00:15:11
# Fork: 2 of 2
# Warmup Iteration   1: 3036.708 us/op
# Warmup Iteration   2: 1915.971 us/op
# Warmup Iteration   3: 1982.492 us/op
# Warmup Iteration   4: 1513.861 us/op
# Warmup Iteration   5: 1575.097 us/op
Iteration   1: 1534.046 us/op
Iteration   2: 1334.337 us/op
Iteration   3: 1150.348 us/op
Iteration   4: 1086.705 us/op
Iteration   5: 1107.827 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1234.787 ±(99.9%) 275.945 us/op

  Histogram, us/op:
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 3 
    [1100.000, 1150.000) = 2 
    [1150.000, 1200.000) = 1 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 2 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   1086.395 us/op
     p(50.0000) =   1129.088 us/op
     p(90.0000) =   1533.028 us/op
     p(95.0000) =   1534.046 us/op
     p(99.0000) =   1534.046 us/op
     p(99.9000) =   1534.046 us/op
     p(99.9900) =   1534.046 us/op
     p(99.9990) =   1534.046 us/op
     p(99.9999) =   1534.046 us/op
    p(100.0000) =   1534.046 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.375)

# Run progress: 67.42% complete, ETA 00:15:06
# Fork: 1 of 2
# Warmup Iteration   1: 3004.959 us/op
# Warmup Iteration   2: 1604.933 us/op
# Warmup Iteration   3: 1699.327 us/op
# Warmup Iteration   4: 1304.657 us/op
# Warmup Iteration   5: 1254.144 us/op
Iteration   1: 1412.598 us/op
Iteration   2: 1670.881 us/op
Iteration   3: 1161.681 us/op
Iteration   4: 1155.013 us/op
Iteration   5: 1160.618 us/op

# Run progress: 67.61% complete, ETA 00:15:01
# Fork: 2 of 2
# Warmup Iteration   1: 2859.670 us/op
# Warmup Iteration   2: 1754.642 us/op
# Warmup Iteration   3: 1782.598 us/op
# Warmup Iteration   4: 1328.855 us/op
# Warmup Iteration   5: 1243.925 us/op
Iteration   1: 1480.928 us/op
Iteration   2: 1469.774 us/op
Iteration   3: 1200.493 us/op
Iteration   4: 1196.021 us/op
Iteration   5: 1195.033 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1310.304 ±(99.9%) 276.963 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 5 
    [1200.000, 1250.000) = 1 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 1 
    [1450.000, 1500.000) = 2 
    [1500.000, 1550.000) = 0 
    [1550.000, 1600.000) = 0 
    [1600.000, 1650.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1155.013 us/op
     p(50.0000) =   1198.257 us/op
     p(90.0000) =   1651.886 us/op
     p(95.0000) =   1670.881 us/op
     p(99.0000) =   1670.881 us/op
     p(99.9000) =   1670.881 us/op
     p(99.9900) =   1670.881 us/op
     p(99.9990) =   1670.881 us/op
     p(99.9999) =   1670.881 us/op
    p(100.0000) =   1670.881 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.5)

# Run progress: 67.80% complete, ETA 00:14:55
# Fork: 1 of 2
# Warmup Iteration   1: 3118.847 us/op
# Warmup Iteration   2: 1859.033 us/op
# Warmup Iteration   3: 1763.390 us/op
# Warmup Iteration   4: 1402.177 us/op
# Warmup Iteration   5: 1524.359 us/op
Iteration   1: 1439.302 us/op
Iteration   2: 1498.498 us/op
Iteration   3: 1206.529 us/op
Iteration   4: 1275.592 us/op
Iteration   5: 1091.869 us/op

# Run progress: 67.99% complete, ETA 00:14:50
# Fork: 2 of 2
# Warmup Iteration   1: 2995.901 us/op
# Warmup Iteration   2: 1836.980 us/op
# Warmup Iteration   3: 1726.825 us/op
# Warmup Iteration   4: 1413.508 us/op
# Warmup Iteration   5: 1488.526 us/op
Iteration   1: 1448.327 us/op
Iteration   2: 1500.207 us/op
Iteration   3: 1243.573 us/op
Iteration   4: 1302.696 us/op
Iteration   5: 1118.613 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1312.521 ±(99.9%) 229.874 us/op

  Histogram, us/op:
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 1 
    [1100.000, 1150.000) = 1 
    [1150.000, 1200.000) = 0 
    [1200.000, 1250.000) = 2 
    [1250.000, 1300.000) = 1 
    [1300.000, 1350.000) = 1 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 2 
    [1450.000, 1500.000) = 1 
    [1500.000, 1550.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1091.869 us/op
     p(50.0000) =   1289.144 us/op
     p(90.0000) =   1500.036 us/op
     p(95.0000) =   1500.207 us/op
     p(99.0000) =   1500.207 us/op
     p(99.9000) =   1500.207 us/op
     p(99.9900) =   1500.207 us/op
     p(99.9990) =   1500.207 us/op
     p(99.9999) =   1500.207 us/op
    p(100.0000) =   1500.207 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.625)

# Run progress: 68.18% complete, ETA 00:14:45
# Fork: 1 of 2
# Warmup Iteration   1: 2710.620 us/op
# Warmup Iteration   2: 1549.968 us/op
# Warmup Iteration   3: 1812.839 us/op
# Warmup Iteration   4: 1201.793 us/op
# Warmup Iteration   5: 1188.808 us/op
Iteration   1: 1187.580 us/op
Iteration   2: 1527.062 us/op
Iteration   3: 1115.549 us/op
Iteration   4: 1158.790 us/op
Iteration   5: 1077.967 us/op

# Run progress: 68.37% complete, ETA 00:14:39
# Fork: 2 of 2
# Warmup Iteration   1: 2918.816 us/op
# Warmup Iteration   2: 1529.291 us/op
# Warmup Iteration   3: 1582.857 us/op
# Warmup Iteration   4: 1188.623 us/op
# Warmup Iteration   5: 1162.377 us/op
Iteration   1: 1144.501 us/op
Iteration   2: 1490.887 us/op
Iteration   3: 1140.454 us/op
Iteration   4: 1097.436 us/op
Iteration   5: 1054.997 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1199.522 ±(99.9%) 253.799 us/op

  Histogram, us/op:
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 3 
    [1100.000, 1150.000) = 3 
    [1150.000, 1200.000) = 2 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 1 
    [1500.000, 1550.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1054.997 us/op
     p(50.0000) =   1142.478 us/op
     p(90.0000) =   1523.444 us/op
     p(95.0000) =   1527.062 us/op
     p(99.0000) =   1527.062 us/op
     p(99.9000) =   1527.062 us/op
     p(99.9900) =   1527.062 us/op
     p(99.9990) =   1527.062 us/op
     p(99.9999) =   1527.062 us/op
    p(100.0000) =   1527.062 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.75)

# Run progress: 68.56% complete, ETA 00:14:34
# Fork: 1 of 2
# Warmup Iteration   1: 2980.705 us/op
# Warmup Iteration   2: 1817.412 us/op
# Warmup Iteration   3: 1298.527 us/op
# Warmup Iteration   4: 1287.007 us/op
# Warmup Iteration   5: 1253.433 us/op
Iteration   1: 1267.879 us/op
Iteration   2: 1552.268 us/op
Iteration   3: 1310.077 us/op
Iteration   4: 1162.615 us/op
Iteration   5: 1143.286 us/op

# Run progress: 68.75% complete, ETA 00:14:29
# Fork: 2 of 2
# Warmup Iteration   1: 3230.926 us/op
# Warmup Iteration   2: 1494.823 us/op
# Warmup Iteration   3: 1420.879 us/op
# Warmup Iteration   4: 1613.616 us/op
# Warmup Iteration   5: 1238.581 us/op
Iteration   1: 1445.122 us/op
Iteration   2: 1492.528 us/op
Iteration   3: 1115.787 us/op
Iteration   4: 1134.713 us/op
Iteration   5: 1177.214 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1280.149 ±(99.9%) 246.228 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 3 
    [1150.000, 1200.000) = 2 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 1 
    [1300.000, 1350.000) = 1 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 1 
    [1450.000, 1500.000) = 1 
    [1500.000, 1550.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1115.787 us/op
     p(50.0000) =   1222.547 us/op
     p(90.0000) =   1546.294 us/op
     p(95.0000) =   1552.268 us/op
     p(99.0000) =   1552.268 us/op
     p(99.9000) =   1552.268 us/op
     p(99.9900) =   1552.268 us/op
     p(99.9990) =   1552.268 us/op
     p(99.9999) =   1552.268 us/op
    p(100.0000) =   1552.268 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.875)

# Run progress: 68.94% complete, ETA 00:14:24
# Fork: 1 of 2
# Warmup Iteration   1: 3132.072 us/op
# Warmup Iteration   2: 1873.971 us/op
# Warmup Iteration   3: 1634.845 us/op
# Warmup Iteration   4: 1285.564 us/op
# Warmup Iteration   5: 1272.557 us/op
Iteration   1: 1466.693 us/op
Iteration   2: 1462.981 us/op
Iteration   3: 1200.607 us/op
Iteration   4: 1171.138 us/op
Iteration   5: 1184.541 us/op

# Run progress: 69.13% complete, ETA 00:14:18
# Fork: 2 of 2
# Warmup Iteration   1: 2580.007 us/op
# Warmup Iteration   2: 1746.577 us/op
# Warmup Iteration   3: 1538.729 us/op
# Warmup Iteration   4: 1570.557 us/op
# Warmup Iteration   5: 1264.837 us/op
Iteration   1: 1255.731 us/op
Iteration   2: 1516.555 us/op
Iteration   3: 1191.410 us/op
Iteration   4: 1141.297 us/op
Iteration   5: 1120.438 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1271.139 ±(99.9%) 227.568 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 2 
    [1150.000, 1200.000) = 3 
    [1200.000, 1250.000) = 1 
    [1250.000, 1300.000) = 1 
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 2 
    [1500.000, 1550.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1120.438 us/op
     p(50.0000) =   1196.009 us/op
     p(90.0000) =   1511.569 us/op
     p(95.0000) =   1516.555 us/op
     p(99.0000) =   1516.555 us/op
     p(99.9000) =   1516.555 us/op
     p(99.9900) =   1516.555 us/op
     p(99.9990) =   1516.555 us/op
     p(99.9999) =   1516.555 us/op
    p(100.0000) =   1516.555 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 1)

# Run progress: 69.32% complete, ETA 00:14:13
# Fork: 1 of 2
# Warmup Iteration   1: 2841.507 us/op
# Warmup Iteration   2: 1716.389 us/op
# Warmup Iteration   3: 1647.552 us/op
# Warmup Iteration   4: 1630.789 us/op
# Warmup Iteration   5: 1340.421 us/op
Iteration   1: 1452.106 us/op
Iteration   2: 1489.173 us/op
Iteration   3: 1165.009 us/op
Iteration   4: 1214.436 us/op
Iteration   5: 1259.837 us/op

# Run progress: 69.51% complete, ETA 00:14:08
# Fork: 2 of 2
# Warmup Iteration   1: 2833.871 us/op
# Warmup Iteration   2: 1719.589 us/op
# Warmup Iteration   3: 1880.439 us/op
# Warmup Iteration   4: 1511.968 us/op
# Warmup Iteration   5: 1347.195 us/op
Iteration   1: 1345.753 us/op
Iteration   2: 1724.304 us/op
Iteration   3: 1201.758 us/op
Iteration   4: 1262.673 us/op
Iteration   5: 1236.302 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1335.135 ±(99.9%) 262.329 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 1 
    [1200.000, 1250.000) = 3 
    [1250.000, 1300.000) = 2 
    [1300.000, 1350.000) = 1 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 2 
    [1500.000, 1550.000) = 0 
    [1550.000, 1600.000) = 0 
    [1600.000, 1650.000) = 0 
    [1650.000, 1700.000) = 0 
    [1700.000, 1750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1165.009 us/op
     p(50.0000) =   1261.255 us/op
     p(90.0000) =   1700.791 us/op
     p(95.0000) =   1724.304 us/op
     p(99.0000) =   1724.304 us/op
     p(99.9000) =   1724.304 us/op
     p(99.9900) =   1724.304 us/op
     p(99.9990) =   1724.304 us/op
     p(99.9999) =   1724.304 us/op
    p(100.0000) =   1724.304 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.125)

# Run progress: 69.70% complete, ETA 00:14:03
# Fork: 1 of 2
# Warmup Iteration   1: 3234.085 us/op
# Warmup Iteration   2: 2412.135 us/op
# Warmup Iteration   3: 2474.354 us/op
# Warmup Iteration   4: 1925.501 us/op
# Warmup Iteration   5: 1837.254 us/op
Iteration   1: 1851.751 us/op
Iteration   2: 1852.203 us/op
Iteration   3: 1807.332 us/op
Iteration   4: 1662.314 us/op
Iteration   5: 1371.016 us/op

# Run progress: 69.89% complete, ETA 00:13:57
# Fork: 2 of 2
# Warmup Iteration   1: 3164.730 us/op
# Warmup Iteration   2: 2371.447 us/op
# Warmup Iteration   3: 2198.518 us/op
# Warmup Iteration   4: 2062.202 us/op
# Warmup Iteration   5: 1874.547 us/op
Iteration   1: 1896.852 us/op
Iteration   2: 1923.992 us/op
Iteration   3: 1559.027 us/op
Iteration   4: 1643.068 us/op
Iteration   5: 1559.937 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1712.749 ±(99.9%) 274.825 us/op

  Histogram, us/op:
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 1 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 0 
    [1550.000, 1600.000) = 2 
    [1600.000, 1650.000) = 1 
    [1650.000, 1700.000) = 1 
    [1700.000, 1750.000) = 0 
    [1750.000, 1800.000) = 0 
    [1800.000, 1850.000) = 1 
    [1850.000, 1900.000) = 3 
    [1900.000, 1950.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1371.016 us/op
     p(50.0000) =   1734.823 us/op
     p(90.0000) =   1921.278 us/op
     p(95.0000) =   1923.992 us/op
     p(99.0000) =   1923.992 us/op
     p(99.9000) =   1923.992 us/op
     p(99.9900) =   1923.992 us/op
     p(99.9990) =   1923.992 us/op
     p(99.9999) =   1923.992 us/op
    p(100.0000) =   1923.992 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.250)

# Run progress: 70.08% complete, ETA 00:13:52
# Fork: 1 of 2
# Warmup Iteration   1: 3055.851 us/op
# Warmup Iteration   2: 1889.118 us/op
# Warmup Iteration   3: 1868.259 us/op
# Warmup Iteration   4: 1537.437 us/op
# Warmup Iteration   5: 1564.145 us/op
Iteration   1: 1500.417 us/op
Iteration   2: 1342.409 us/op
Iteration   3: 1104.024 us/op
Iteration   4: 1098.103 us/op
Iteration   5: 1153.037 us/op

# Run progress: 70.27% complete, ETA 00:13:47
# Fork: 2 of 2
# Warmup Iteration   1: 3079.499 us/op
# Warmup Iteration   2: 1893.871 us/op
# Warmup Iteration   3: 1978.319 us/op
# Warmup Iteration   4: 1467.699 us/op
# Warmup Iteration   5: 1575.546 us/op
Iteration   1: 1525.450 us/op
Iteration   2: 1388.617 us/op
Iteration   3: 1096.019 us/op
Iteration   4: 1077.510 us/op
Iteration   5: 1161.291 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1244.688 ±(99.9%) 267.223 us/op

  Histogram, us/op:
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 3 
    [1100.000, 1150.000) = 1 
    [1150.000, 1200.000) = 2 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 1 
    [1350.000, 1400.000) = 1 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   1077.510 us/op
     p(50.0000) =   1157.164 us/op
     p(90.0000) =   1522.947 us/op
     p(95.0000) =   1525.450 us/op
     p(99.0000) =   1525.450 us/op
     p(99.9000) =   1525.450 us/op
     p(99.9900) =   1525.450 us/op
     p(99.9990) =   1525.450 us/op
     p(99.9999) =   1525.450 us/op
    p(100.0000) =   1525.450 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.375)

# Run progress: 70.45% complete, ETA 00:13:41
# Fork: 1 of 2
# Warmup Iteration   1: 2639.776 us/op
# Warmup Iteration   2: 1676.578 us/op
# Warmup Iteration   3: 1654.286 us/op
# Warmup Iteration   4: 1313.049 us/op
# Warmup Iteration   5: 1331.939 us/op
Iteration   1: 1414.183 us/op
Iteration   2: 1484.236 us/op
Iteration   3: 1210.765 us/op
Iteration   4: 1166.843 us/op
Iteration   5: 1207.894 us/op

# Run progress: 70.64% complete, ETA 00:13:36
# Fork: 2 of 2
# Warmup Iteration   1: 2758.513 us/op
# Warmup Iteration   2: 1680.613 us/op
# Warmup Iteration   3: 1681.256 us/op
# Warmup Iteration   4: 1332.703 us/op
# Warmup Iteration   5: 1286.704 us/op
Iteration   1: 1443.895 us/op
Iteration   2: 1379.831 us/op
Iteration   3: 1170.729 us/op
Iteration   4: 1160.728 us/op
Iteration   5: 1186.546 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1282.565 ±(99.9%) 197.878 us/op

  Histogram, us/op:
    [1100.000, 1125.000) = 0 
    [1125.000, 1150.000) = 0 
    [1150.000, 1175.000) = 3 
    [1175.000, 1200.000) = 1 
    [1200.000, 1225.000) = 2 
    [1225.000, 1250.000) = 0 
    [1250.000, 1275.000) = 0 
    [1275.000, 1300.000) = 0 
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 0 
    [1375.000, 1400.000) = 1 
    [1400.000, 1425.000) = 1 
    [1425.000, 1450.000) = 1 
    [1450.000, 1475.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1160.728 us/op
     p(50.0000) =   1209.330 us/op
     p(90.0000) =   1480.202 us/op
     p(95.0000) =   1484.236 us/op
     p(99.0000) =   1484.236 us/op
     p(99.9000) =   1484.236 us/op
     p(99.9900) =   1484.236 us/op
     p(99.9990) =   1484.236 us/op
     p(99.9999) =   1484.236 us/op
    p(100.0000) =   1484.236 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.5)

# Run progress: 70.83% complete, ETA 00:13:31
# Fork: 1 of 2
# Warmup Iteration   1: 2786.943 us/op
# Warmup Iteration   2: 2114.421 us/op
# Warmup Iteration   3: 1462.890 us/op
# Warmup Iteration   4: 1362.899 us/op
# Warmup Iteration   5: 1348.932 us/op
Iteration   1: 1506.784 us/op
Iteration   2: 1595.529 us/op
Iteration   3: 1216.952 us/op
Iteration   4: 1239.054 us/op
Iteration   5: 1315.749 us/op

# Run progress: 71.02% complete, ETA 00:13:26
# Fork: 2 of 2
# Warmup Iteration   1: 3026.311 us/op
# Warmup Iteration   2: 1939.156 us/op
# Warmup Iteration   3: 1755.173 us/op
# Warmup Iteration   4: 1405.209 us/op
# Warmup Iteration   5: 1350.575 us/op
Iteration   1: 1479.503 us/op
Iteration   2: 1586.110 us/op
Iteration   3: 1292.189 us/op
Iteration   4: 1236.752 us/op
Iteration   5: 1266.387 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1373.501 ±(99.9%) 228.843 us/op

  Histogram, us/op:
    [1200.000, 1225.000) = 1 
    [1225.000, 1250.000) = 2 
    [1250.000, 1275.000) = 1 
    [1275.000, 1300.000) = 1 
    [1300.000, 1325.000) = 1 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 0 
    [1375.000, 1400.000) = 0 
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 0 
    [1475.000, 1500.000) = 1 
    [1500.000, 1525.000) = 1 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1216.952 us/op
     p(50.0000) =   1303.969 us/op
     p(90.0000) =   1594.587 us/op
     p(95.0000) =   1595.529 us/op
     p(99.0000) =   1595.529 us/op
     p(99.9000) =   1595.529 us/op
     p(99.9900) =   1595.529 us/op
     p(99.9990) =   1595.529 us/op
     p(99.9999) =   1595.529 us/op
    p(100.0000) =   1595.529 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.625)

# Run progress: 71.21% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: 2552.089 us/op
# Warmup Iteration   2: 1673.940 us/op
# Warmup Iteration   3: 1510.773 us/op
# Warmup Iteration   4: 1204.123 us/op
# Warmup Iteration   5: 1219.140 us/op
Iteration   1: 1206.487 us/op
Iteration   2: 1263.674 us/op
Iteration   3: 1199.966 us/op
Iteration   4: 1125.325 us/op
Iteration   5: 1362.522 us/op

# Run progress: 71.40% complete, ETA 00:13:15
# Fork: 2 of 2
# Warmup Iteration   1: 2858.858 us/op
# Warmup Iteration   2: 1528.765 us/op
# Warmup Iteration   3: 1426.128 us/op
# Warmup Iteration   4: 1417.148 us/op
# Warmup Iteration   5: 1144.852 us/op
Iteration   1: 1181.795 us/op
Iteration   2: 1283.018 us/op
Iteration   3: 1185.740 us/op
Iteration   4: 1049.378 us/op
Iteration   5: 1429.818 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1228.772 ±(99.9%) 167.702 us/op

  Histogram, us/op:
    [1000.000, 1050.000) = 1 
    [1050.000, 1100.000) = 0 
    [1100.000, 1150.000) = 1 
    [1150.000, 1200.000) = 3 
    [1200.000, 1250.000) = 1 
    [1250.000, 1300.000) = 2 
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 1 
    [1400.000, 1450.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1049.378 us/op
     p(50.0000) =   1203.227 us/op
     p(90.0000) =   1423.088 us/op
     p(95.0000) =   1429.818 us/op
     p(99.0000) =   1429.818 us/op
     p(99.9000) =   1429.818 us/op
     p(99.9900) =   1429.818 us/op
     p(99.9990) =   1429.818 us/op
     p(99.9999) =   1429.818 us/op
    p(100.0000) =   1429.818 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.75)

# Run progress: 71.59% complete, ETA 00:13:10
# Fork: 1 of 2
# Warmup Iteration   1: 2958.056 us/op
# Warmup Iteration   2: 1522.264 us/op
# Warmup Iteration   3: 1574.944 us/op
# Warmup Iteration   4: 1252.789 us/op
# Warmup Iteration   5: 1238.892 us/op
Iteration   1: 1244.629 us/op
Iteration   2: 1454.634 us/op
Iteration   3: 1161.346 us/op
Iteration   4: 1064.916 us/op
Iteration   5: 1092.223 us/op

# Run progress: 71.78% complete, ETA 00:13:05
# Fork: 2 of 2
# Warmup Iteration   1: 2850.465 us/op
# Warmup Iteration   2: 1609.498 us/op
# Warmup Iteration   3: 1724.943 us/op
# Warmup Iteration   4: 1219.002 us/op
# Warmup Iteration   5: 1197.913 us/op
Iteration   1: 1201.211 us/op
Iteration   2: 1539.776 us/op
Iteration   3: 1070.713 us/op
Iteration   4: 1236.478 us/op
Iteration   5: 1094.812 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1216.074 ±(99.9%) 246.969 us/op

  Histogram, us/op:
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 4 
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 1 
    [1200.000, 1250.000) = 3 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 1 
    [1500.000, 1550.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1064.916 us/op
     p(50.0000) =   1181.279 us/op
     p(90.0000) =   1531.262 us/op
     p(95.0000) =   1539.776 us/op
     p(99.0000) =   1539.776 us/op
     p(99.9000) =   1539.776 us/op
     p(99.9900) =   1539.776 us/op
     p(99.9990) =   1539.776 us/op
     p(99.9999) =   1539.776 us/op
    p(100.0000) =   1539.776 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.875)

# Run progress: 71.97% complete, ETA 00:12:59
# Fork: 1 of 2
# Warmup Iteration   1: 2972.886 us/op
# Warmup Iteration   2: 1669.073 us/op
# Warmup Iteration   3: 1639.475 us/op
# Warmup Iteration   4: 1285.137 us/op
# Warmup Iteration   5: 1289.421 us/op
Iteration   1: 1309.559 us/op
Iteration   2: 1651.559 us/op
Iteration   3: 1191.348 us/op
Iteration   4: 1168.443 us/op
Iteration   5: 1145.323 us/op

# Run progress: 72.16% complete, ETA 00:12:54
# Fork: 2 of 2
# Warmup Iteration   1: 3196.427 us/op
# Warmup Iteration   2: 1739.492 us/op
# Warmup Iteration   3: 1312.411 us/op
# Warmup Iteration   4: 1396.355 us/op
# Warmup Iteration   5: 1319.636 us/op
Iteration   1: 1319.614 us/op
Iteration   2: 1338.458 us/op
Iteration   3: 1120.942 us/op
Iteration   4: 1207.163 us/op
Iteration   5: 1165.112 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1261.752 ±(99.9%) 237.891 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 2 
    [1150.000, 1200.000) = 3 
    [1200.000, 1250.000) = 1 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 3 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 0 
    [1550.000, 1600.000) = 0 
    [1600.000, 1650.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1120.942 us/op
     p(50.0000) =   1199.256 us/op
     p(90.0000) =   1620.249 us/op
     p(95.0000) =   1651.559 us/op
     p(99.0000) =   1651.559 us/op
     p(99.9000) =   1651.559 us/op
     p(99.9900) =   1651.559 us/op
     p(99.9990) =   1651.559 us/op
     p(99.9999) =   1651.559 us/op
    p(100.0000) =   1651.559 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 1)

# Run progress: 72.35% complete, ETA 00:12:49
# Fork: 1 of 2
# Warmup Iteration   1: 2943.557 us/op
# Warmup Iteration   2: 1707.484 us/op
# Warmup Iteration   3: 1583.453 us/op
# Warmup Iteration   4: 1665.385 us/op
# Warmup Iteration   5: 1335.703 us/op
Iteration   1: 1400.309 us/op
Iteration   2: 1593.249 us/op
Iteration   3: 1230.782 us/op
Iteration   4: 1218.233 us/op
Iteration   5: 1285.544 us/op

# Run progress: 72.54% complete, ETA 00:12:43
# Fork: 2 of 2
# Warmup Iteration   1: 2923.799 us/op
# Warmup Iteration   2: 1743.863 us/op
# Warmup Iteration   3: 1589.480 us/op
# Warmup Iteration   4: 1630.729 us/op
# Warmup Iteration   5: 1354.281 us/op
Iteration   1: 1358.647 us/op
Iteration   2: 1569.918 us/op
Iteration   3: 1229.651 us/op
Iteration   4: 1289.849 us/op
Iteration   5: 1238.241 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1341.442 ±(99.9%) 211.257 us/op

  Histogram, us/op:
    [1200.000, 1225.000) = 1 
    [1225.000, 1250.000) = 3 
    [1250.000, 1275.000) = 0 
    [1275.000, 1300.000) = 2 
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 1 
    [1375.000, 1400.000) = 0 
    [1400.000, 1425.000) = 1 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 0 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 0 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1218.233 us/op
     p(50.0000) =   1287.697 us/op
     p(90.0000) =   1590.916 us/op
     p(95.0000) =   1593.249 us/op
     p(99.0000) =   1593.249 us/op
     p(99.9000) =   1593.249 us/op
     p(99.9900) =   1593.249 us/op
     p(99.9990) =   1593.249 us/op
     p(99.9999) =   1593.249 us/op
    p(100.0000) =   1593.249 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.125)

# Run progress: 72.73% complete, ETA 00:12:38
# Fork: 1 of 2
# Warmup Iteration   1: 3205.279 us/op
# Warmup Iteration   2: 2349.352 us/op
# Warmup Iteration   3: 2137.778 us/op
# Warmup Iteration   4: 1729.514 us/op
# Warmup Iteration   5: 1648.189 us/op
Iteration   1: 1661.260 us/op
Iteration   2: 1570.843 us/op
Iteration   3: 1259.119 us/op
Iteration   4: 1334.826 us/op
Iteration   5: 1298.253 us/op

# Run progress: 72.92% complete, ETA 00:12:33
# Fork: 2 of 2
# Warmup Iteration   1: 3159.608 us/op
# Warmup Iteration   2: 2356.772 us/op
# Warmup Iteration   3: 2123.160 us/op
# Warmup Iteration   4: 1707.367 us/op
# Warmup Iteration   5: 1624.820 us/op
Iteration   1: 1642.133 us/op
Iteration   2: 1548.043 us/op
Iteration   3: 1235.502 us/op
Iteration   4: 1280.778 us/op
Iteration   5: 1307.378 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1413.814 ±(99.9%) 257.155 us/op

  Histogram, us/op:
    [1200.000, 1250.000) = 1 
    [1250.000, 1300.000) = 3 
    [1300.000, 1350.000) = 2 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 1 
    [1550.000, 1600.000) = 1 
    [1600.000, 1650.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1235.502 us/op
     p(50.0000) =   1321.102 us/op
     p(90.0000) =   1659.347 us/op
     p(95.0000) =   1661.260 us/op
     p(99.0000) =   1661.260 us/op
     p(99.9000) =   1661.260 us/op
     p(99.9900) =   1661.260 us/op
     p(99.9990) =   1661.260 us/op
     p(99.9999) =   1661.260 us/op
    p(100.0000) =   1661.260 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.250)

# Run progress: 73.11% complete, ETA 00:12:28
# Fork: 1 of 2
# Warmup Iteration   1: 3376.568 us/op
# Warmup Iteration   2: 2054.448 us/op
# Warmup Iteration   3: 1674.550 us/op
# Warmup Iteration   4: 1470.806 us/op
# Warmup Iteration   5: 1532.134 us/op
Iteration   1: 1485.229 us/op
Iteration   2: 1396.496 us/op
Iteration   3: 1109.176 us/op
Iteration   4: 1105.133 us/op
Iteration   5: 1078.782 us/op

# Run progress: 73.30% complete, ETA 00:12:22
# Fork: 2 of 2
# Warmup Iteration   1: 3198.592 us/op
# Warmup Iteration   2: 1890.558 us/op
# Warmup Iteration   3: 1842.505 us/op
# Warmup Iteration   4: 1459.456 us/op
# Warmup Iteration   5: 1518.019 us/op
Iteration   1: 1477.264 us/op
Iteration   2: 1372.700 us/op
Iteration   3: 1153.102 us/op
Iteration   4: 1082.157 us/op
Iteration   5: 1073.618 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1233.366 ±(99.9%) 266.445 us/op

  Histogram, us/op:
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 3 
    [1100.000, 1150.000) = 2 
    [1150.000, 1200.000) = 1 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 2 
    [1400.000, 1450.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1073.618 us/op
     p(50.0000) =   1131.139 us/op
     p(90.0000) =   1484.433 us/op
     p(95.0000) =   1485.229 us/op
     p(99.0000) =   1485.229 us/op
     p(99.9000) =   1485.229 us/op
     p(99.9900) =   1485.229 us/op
     p(99.9990) =   1485.229 us/op
     p(99.9999) =   1485.229 us/op
    p(100.0000) =   1485.229 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.375)

# Run progress: 73.48% complete, ETA 00:12:17
# Fork: 1 of 2
# Warmup Iteration   1: 2714.355 us/op
# Warmup Iteration   2: 1755.610 us/op
# Warmup Iteration   3: 1732.112 us/op
# Warmup Iteration   4: 1367.812 us/op
# Warmup Iteration   5: 1240.201 us/op
Iteration   1: 1374.513 us/op
Iteration   2: 1483.958 us/op
Iteration   3: 1137.340 us/op
Iteration   4: 1142.692 us/op
Iteration   5: 1117.705 us/op

# Run progress: 73.67% complete, ETA 00:12:12
# Fork: 2 of 2
# Warmup Iteration   1: 2619.951 us/op
# Warmup Iteration   2: 1641.285 us/op
# Warmup Iteration   3: 1574.045 us/op
# Warmup Iteration   4: 1297.224 us/op
# Warmup Iteration   5: 1275.765 us/op
Iteration   1: 1411.125 us/op
Iteration   2: 1577.819 us/op
Iteration   3: 1185.099 us/op
Iteration   4: 1148.472 us/op
Iteration   5: 1169.254 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1274.798 ±(99.9%) 257.098 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 4 
    [1150.000, 1200.000) = 2 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 1 
    [1400.000, 1450.000) = 1 
    [1450.000, 1500.000) = 1 
    [1500.000, 1550.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1117.705 us/op
     p(50.0000) =   1177.177 us/op
     p(90.0000) =   1568.433 us/op
     p(95.0000) =   1577.819 us/op
     p(99.0000) =   1577.819 us/op
     p(99.9000) =   1577.819 us/op
     p(99.9900) =   1577.819 us/op
     p(99.9990) =   1577.819 us/op
     p(99.9999) =   1577.819 us/op
    p(100.0000) =   1577.819 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.5)

# Run progress: 73.86% complete, ETA 00:12:07
# Fork: 1 of 2
# Warmup Iteration   1: 2946.089 us/op
# Warmup Iteration   2: 1875.001 us/op
# Warmup Iteration   3: 1578.621 us/op
# Warmup Iteration   4: 1379.308 us/op
# Warmup Iteration   5: 1345.058 us/op
Iteration   1: 1528.503 us/op
Iteration   2: 1475.591 us/op
Iteration   3: 1244.944 us/op
Iteration   4: 1221.603 us/op
Iteration   5: 1192.017 us/op

# Run progress: 74.05% complete, ETA 00:12:01
# Fork: 2 of 2
# Warmup Iteration   1: 2706.629 us/op
# Warmup Iteration   2: 1967.988 us/op
# Warmup Iteration   3: 1756.274 us/op
# Warmup Iteration   4: 1454.603 us/op
# Warmup Iteration   5: 1358.148 us/op
Iteration   1: 1472.454 us/op
Iteration   2: 1443.388 us/op
Iteration   3: 1287.605 us/op
Iteration   4: 1240.342 us/op
Iteration   5: 1301.908 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1340.836 ±(99.9%) 189.385 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 1 
    [1200.000, 1250.000) = 3 
    [1250.000, 1300.000) = 1 
    [1300.000, 1350.000) = 1 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 1 
    [1450.000, 1500.000) = 2 
    [1500.000, 1550.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1192.017 us/op
     p(50.0000) =   1294.757 us/op
     p(90.0000) =   1523.212 us/op
     p(95.0000) =   1528.503 us/op
     p(99.0000) =   1528.503 us/op
     p(99.9000) =   1528.503 us/op
     p(99.9900) =   1528.503 us/op
     p(99.9990) =   1528.503 us/op
     p(99.9999) =   1528.503 us/op
    p(100.0000) =   1528.503 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.625)

# Run progress: 74.24% complete, ETA 00:11:56
# Fork: 1 of 2
# Warmup Iteration   1: 2689.860 us/op
# Warmup Iteration   2: 1542.948 us/op
# Warmup Iteration   3: 1687.514 us/op
# Warmup Iteration   4: 1172.252 us/op
# Warmup Iteration   5: 1142.358 us/op
Iteration   1: 1179.632 us/op
Iteration   2: 1329.017 us/op
Iteration   3: 1105.063 us/op
Iteration   4: 1210.217 us/op
Iteration   5: 1052.840 us/op

# Run progress: 74.43% complete, ETA 00:11:51
# Fork: 2 of 2
# Warmup Iteration   1: 2770.035 us/op
# Warmup Iteration   2: 1451.314 us/op
# Warmup Iteration   3: 1552.686 us/op
# Warmup Iteration   4: 1203.735 us/op
# Warmup Iteration   5: 1130.518 us/op
Iteration   1: 1281.434 us/op
Iteration   2: 1409.408 us/op
Iteration   3: 1091.773 us/op
Iteration   4: 1119.293 us/op
Iteration   5: 1035.398 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1181.407 ±(99.9%) 188.683 us/op

  Histogram, us/op:
    [1000.000, 1050.000) = 1 
    [1050.000, 1100.000) = 2 
    [1100.000, 1150.000) = 2 
    [1150.000, 1200.000) = 1 
    [1200.000, 1250.000) = 1 
    [1250.000, 1300.000) = 1 
    [1300.000, 1350.000) = 1 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1035.398 us/op
     p(50.0000) =   1149.463 us/op
     p(90.0000) =   1401.369 us/op
     p(95.0000) =   1409.408 us/op
     p(99.0000) =   1409.408 us/op
     p(99.9000) =   1409.408 us/op
     p(99.9900) =   1409.408 us/op
     p(99.9990) =   1409.408 us/op
     p(99.9999) =   1409.408 us/op
    p(100.0000) =   1409.408 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.75)

# Run progress: 74.62% complete, ETA 00:11:45
# Fork: 1 of 2
# Warmup Iteration   1: 2896.543 us/op
# Warmup Iteration   2: 1636.579 us/op
# Warmup Iteration   3: 1572.423 us/op
# Warmup Iteration   4: 1498.513 us/op
# Warmup Iteration   5: 1211.306 us/op
Iteration   1: 1214.145 us/op
Iteration   2: 1307.431 us/op
Iteration   3: 1111.853 us/op
Iteration   4: 1148.422 us/op
Iteration   5: 1122.236 us/op

# Run progress: 74.81% complete, ETA 00:11:40
# Fork: 2 of 2
# Warmup Iteration   1: 2759.391 us/op
# Warmup Iteration   2: 1663.688 us/op
# Warmup Iteration   3: 1450.685 us/op
# Warmup Iteration   4: 1521.176 us/op
# Warmup Iteration   5: 1309.622 us/op
Iteration   1: 1226.970 us/op
Iteration   2: 1571.193 us/op
Iteration   3: 1090.758 us/op
Iteration   4: 1158.790 us/op
Iteration   5: 1203.025 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1215.482 ±(99.9%) 212.603 us/op

  Histogram, us/op:
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 1 
    [1100.000, 1150.000) = 3 
    [1150.000, 1200.000) = 1 
    [1200.000, 1250.000) = 3 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 1 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1090.758 us/op
     p(50.0000) =   1180.908 us/op
     p(90.0000) =   1544.817 us/op
     p(95.0000) =   1571.193 us/op
     p(99.0000) =   1571.193 us/op
     p(99.9000) =   1571.193 us/op
     p(99.9900) =   1571.193 us/op
     p(99.9990) =   1571.193 us/op
     p(99.9999) =   1571.193 us/op
    p(100.0000) =   1571.193 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.875)

# Run progress: 75.00% complete, ETA 00:11:35
# Fork: 1 of 2
# Warmup Iteration   1: 2806.380 us/op
# Warmup Iteration   2: 1743.505 us/op
# Warmup Iteration   3: 1679.621 us/op
# Warmup Iteration   4: 1268.406 us/op
# Warmup Iteration   5: 1260.262 us/op
Iteration   1: 1257.783 us/op
Iteration   2: 1427.994 us/op
Iteration   3: 1114.783 us/op
Iteration   4: 1286.054 us/op
Iteration   5: 1109.773 us/op

# Run progress: 75.19% complete, ETA 00:11:30
# Fork: 2 of 2
# Warmup Iteration   1: 3046.197 us/op
# Warmup Iteration   2: 1691.508 us/op
# Warmup Iteration   3: 1479.747 us/op
# Warmup Iteration   4: 1514.719 us/op
# Warmup Iteration   5: 1266.822 us/op
Iteration   1: 1260.967 us/op
Iteration   2: 1424.348 us/op
Iteration   3: 1134.455 us/op
Iteration   4: 1323.219 us/op
Iteration   5: 1135.199 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1247.458 ±(99.9%) 184.017 us/op

  Histogram, us/op:
    [1100.000, 1125.000) = 2 
    [1125.000, 1150.000) = 2 
    [1150.000, 1175.000) = 0 
    [1175.000, 1200.000) = 0 
    [1200.000, 1225.000) = 0 
    [1225.000, 1250.000) = 0 
    [1250.000, 1275.000) = 2 
    [1275.000, 1300.000) = 1 
    [1300.000, 1325.000) = 1 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 0 
    [1375.000, 1400.000) = 0 
    [1400.000, 1425.000) = 1 
    [1425.000, 1450.000) = 1 
    [1450.000, 1475.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1109.773 us/op
     p(50.0000) =   1259.375 us/op
     p(90.0000) =   1427.629 us/op
     p(95.0000) =   1427.994 us/op
     p(99.0000) =   1427.994 us/op
     p(99.9000) =   1427.994 us/op
     p(99.9900) =   1427.994 us/op
     p(99.9990) =   1427.994 us/op
     p(99.9999) =   1427.994 us/op
    p(100.0000) =   1427.994 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 1)

# Run progress: 75.38% complete, ETA 00:11:24
# Fork: 1 of 2
# Warmup Iteration   1: 2783.620 us/op
# Warmup Iteration   2: 1912.480 us/op
# Warmup Iteration   3: 1433.036 us/op
# Warmup Iteration   4: 1301.011 us/op
# Warmup Iteration   5: 1313.332 us/op
Iteration   1: 1345.044 us/op
Iteration   2: 1643.765 us/op
Iteration   3: 1227.541 us/op
Iteration   4: 1247.961 us/op
Iteration   5: 1188.755 us/op

# Run progress: 75.57% complete, ETA 00:11:19
# Fork: 2 of 2
# Warmup Iteration   1: 2910.520 us/op
# Warmup Iteration   2: 1719.310 us/op
# Warmup Iteration   3: 1800.824 us/op
# Warmup Iteration   4: 1346.437 us/op
# Warmup Iteration   5: 1351.665 us/op
Iteration   1: 1362.128 us/op
Iteration   2: 1603.074 us/op
Iteration   3: 1247.122 us/op
Iteration   4: 1268.042 us/op
Iteration   5: 1217.202 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1335.063 ±(99.9%) 244.107 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 1 
    [1200.000, 1250.000) = 4 
    [1250.000, 1300.000) = 1 
    [1300.000, 1350.000) = 1 
    [1350.000, 1400.000) = 1 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 0 
    [1550.000, 1600.000) = 0 
    [1600.000, 1650.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   1188.755 us/op
     p(50.0000) =   1258.001 us/op
     p(90.0000) =   1639.696 us/op
     p(95.0000) =   1643.765 us/op
     p(99.0000) =   1643.765 us/op
     p(99.9000) =   1643.765 us/op
     p(99.9900) =   1643.765 us/op
     p(99.9990) =   1643.765 us/op
     p(99.9999) =   1643.765 us/op
    p(100.0000) =   1643.765 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.125)

# Run progress: 75.76% complete, ETA 00:11:14
# Fork: 1 of 2
# Warmup Iteration   1: 3351.674 us/op
# Warmup Iteration   2: 2339.965 us/op
# Warmup Iteration   3: 2049.133 us/op
# Warmup Iteration   4: 1866.074 us/op
# Warmup Iteration   5: 1672.518 us/op
Iteration   1: 1673.972 us/op
Iteration   2: 1533.763 us/op
Iteration   3: 1295.242 us/op
Iteration   4: 1319.821 us/op
Iteration   5: 1304.177 us/op

# Run progress: 75.95% complete, ETA 00:11:09
# Fork: 2 of 2
# Warmup Iteration   1: 3355.118 us/op
# Warmup Iteration   2: 2410.504 us/op
# Warmup Iteration   3: 2020.951 us/op
# Warmup Iteration   4: 1725.252 us/op
# Warmup Iteration   5: 1739.292 us/op
Iteration   1: 1661.550 us/op
Iteration   2: 1524.253 us/op
Iteration   3: 1257.663 us/op
Iteration   4: 1443.568 us/op
Iteration   5: 1252.698 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1426.671 ±(99.9%) 246.951 us/op

  Histogram, us/op:
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 3 
    [1300.000, 1350.000) = 2 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 1 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 2 
    [1550.000, 1600.000) = 0 
    [1600.000, 1650.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1252.698 us/op
     p(50.0000) =   1381.695 us/op
     p(90.0000) =   1672.730 us/op
     p(95.0000) =   1673.972 us/op
     p(99.0000) =   1673.972 us/op
     p(99.9000) =   1673.972 us/op
     p(99.9900) =   1673.972 us/op
     p(99.9990) =   1673.972 us/op
     p(99.9999) =   1673.972 us/op
    p(100.0000) =   1673.972 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.250)

# Run progress: 76.14% complete, ETA 00:11:03
# Fork: 1 of 2
# Warmup Iteration   1: 3197.022 us/op
# Warmup Iteration   2: 1918.031 us/op
# Warmup Iteration   3: 1964.066 us/op
# Warmup Iteration   4: 1454.550 us/op
# Warmup Iteration   5: 1526.283 us/op
Iteration   1: 1454.610 us/op
Iteration   2: 1423.441 us/op
Iteration   3: 1080.339 us/op
Iteration   4: 1051.167 us/op
Iteration   5: 1067.276 us/op

# Run progress: 76.33% complete, ETA 00:10:58
# Fork: 2 of 2
# Warmup Iteration   1: 3052.252 us/op
# Warmup Iteration   2: 2076.158 us/op
# Warmup Iteration   3: 1666.311 us/op
# Warmup Iteration   4: 1516.599 us/op
# Warmup Iteration   5: 1608.430 us/op
Iteration   1: 1478.722 us/op
Iteration   2: 1337.902 us/op
Iteration   3: 1092.323 us/op
Iteration   4: 1107.134 us/op
Iteration   5: 1085.141 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1217.806 ±(99.9%) 274.078 us/op

  Histogram, us/op:
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 5 
    [1100.000, 1150.000) = 1 
    [1150.000, 1200.000) = 0 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 1 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1051.167 us/op
     p(50.0000) =   1099.729 us/op
     p(90.0000) =   1476.311 us/op
     p(95.0000) =   1478.722 us/op
     p(99.0000) =   1478.722 us/op
     p(99.9000) =   1478.722 us/op
     p(99.9900) =   1478.722 us/op
     p(99.9990) =   1478.722 us/op
     p(99.9999) =   1478.722 us/op
    p(100.0000) =   1478.722 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.375)

# Run progress: 76.52% complete, ETA 00:10:53
# Fork: 1 of 2
# Warmup Iteration   1: 3061.898 us/op
# Warmup Iteration   2: 1664.677 us/op
# Warmup Iteration   3: 1735.439 us/op
# Warmup Iteration   4: 1330.879 us/op
# Warmup Iteration   5: 1267.967 us/op
Iteration   1: 1396.755 us/op
Iteration   2: 1564.748 us/op
Iteration   3: 1143.171 us/op
Iteration   4: 1151.458 us/op
Iteration   5: 1145.098 us/op

# Run progress: 76.70% complete, ETA 00:10:48
# Fork: 2 of 2
# Warmup Iteration   1: 2631.734 us/op
# Warmup Iteration   2: 1810.597 us/op
# Warmup Iteration   3: 1599.533 us/op
# Warmup Iteration   4: 1283.688 us/op
# Warmup Iteration   5: 1320.510 us/op
Iteration   1: 1343.973 us/op
Iteration   2: 1428.217 us/op
Iteration   3: 1176.111 us/op
Iteration   4: 1153.014 us/op
Iteration   5: 1155.715 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1265.826 ±(99.9%) 233.441 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 2 
    [1150.000, 1200.000) = 4 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 1 
    [1350.000, 1400.000) = 1 
    [1400.000, 1450.000) = 1 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1143.171 us/op
     p(50.0000) =   1165.913 us/op
     p(90.0000) =   1551.095 us/op
     p(95.0000) =   1564.748 us/op
     p(99.0000) =   1564.748 us/op
     p(99.9000) =   1564.748 us/op
     p(99.9900) =   1564.748 us/op
     p(99.9990) =   1564.748 us/op
     p(99.9999) =   1564.748 us/op
    p(100.0000) =   1564.748 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.5)

# Run progress: 76.89% complete, ETA 00:10:42
# Fork: 1 of 2
# Warmup Iteration   1: 3163.686 us/op
# Warmup Iteration   2: 1757.523 us/op
# Warmup Iteration   3: 1747.646 us/op
# Warmup Iteration   4: 1391.669 us/op
# Warmup Iteration   5: 1365.574 us/op
Iteration   1: 1525.783 us/op
Iteration   2: 1653.414 us/op
Iteration   3: 1291.080 us/op
Iteration   4: 1243.907 us/op
Iteration   5: 1318.846 us/op

# Run progress: 77.08% complete, ETA 00:10:37
# Fork: 2 of 2
# Warmup Iteration   1: 2819.379 us/op
# Warmup Iteration   2: 1719.567 us/op
# Warmup Iteration   3: 1741.084 us/op
# Warmup Iteration   4: 1398.106 us/op
# Warmup Iteration   5: 1380.722 us/op
Iteration   1: 1547.228 us/op
Iteration   2: 1610.091 us/op
Iteration   3: 1270.091 us/op
Iteration   4: 1244.210 us/op
Iteration   5: 1337.240 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1404.189 ±(99.9%) 243.560 us/op

  Histogram, us/op:
    [1200.000, 1250.000) = 2 
    [1250.000, 1300.000) = 2 
    [1300.000, 1350.000) = 2 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 2 
    [1550.000, 1600.000) = 0 
    [1600.000, 1650.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1243.907 us/op
     p(50.0000) =   1328.043 us/op
     p(90.0000) =   1649.082 us/op
     p(95.0000) =   1653.414 us/op
     p(99.0000) =   1653.414 us/op
     p(99.9000) =   1653.414 us/op
     p(99.9900) =   1653.414 us/op
     p(99.9990) =   1653.414 us/op
     p(99.9999) =   1653.414 us/op
    p(100.0000) =   1653.414 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.625)

# Run progress: 77.27% complete, ETA 00:10:32
# Fork: 1 of 2
# Warmup Iteration   1: 2465.038 us/op
# Warmup Iteration   2: 1593.334 us/op
# Warmup Iteration   3: 1393.017 us/op
# Warmup Iteration   4: 1476.184 us/op
# Warmup Iteration   5: 1157.616 us/op
Iteration   1: 1163.444 us/op
Iteration   2: 1243.571 us/op
Iteration   3: 1116.821 us/op
Iteration   4: 1181.607 us/op
Iteration   5: 1062.292 us/op

# Run progress: 77.46% complete, ETA 00:10:26
# Fork: 2 of 2
# Warmup Iteration   1: 2967.927 us/op
# Warmup Iteration   2: 1719.770 us/op
# Warmup Iteration   3: 1532.683 us/op
# Warmup Iteration   4: 1172.701 us/op
# Warmup Iteration   5: 1233.549 us/op
Iteration   1: 1158.923 us/op
Iteration   2: 1434.470 us/op
Iteration   3: 1047.198 us/op
Iteration   4: 1195.765 us/op
Iteration   5: 1069.173 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1167.326 ±(99.9%) 171.585 us/op

  Histogram, us/op:
    [1000.000, 1050.000) = 1 
    [1050.000, 1100.000) = 2 
    [1100.000, 1150.000) = 1 
    [1150.000, 1200.000) = 4 
    [1200.000, 1250.000) = 1 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1047.198 us/op
     p(50.0000) =   1161.184 us/op
     p(90.0000) =   1415.380 us/op
     p(95.0000) =   1434.470 us/op
     p(99.0000) =   1434.470 us/op
     p(99.9000) =   1434.470 us/op
     p(99.9900) =   1434.470 us/op
     p(99.9990) =   1434.470 us/op
     p(99.9999) =   1434.470 us/op
    p(100.0000) =   1434.470 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.75)

# Run progress: 77.65% complete, ETA 00:10:21
# Fork: 1 of 2
# Warmup Iteration   1: 2751.834 us/op
# Warmup Iteration   2: 1578.565 us/op
# Warmup Iteration   3: 1464.304 us/op
# Warmup Iteration   4: 1552.303 us/op
# Warmup Iteration   5: 1204.362 us/op
Iteration   1: 1217.539 us/op
Iteration   2: 1389.560 us/op
Iteration   3: 1143.244 us/op
Iteration   4: 1123.216 us/op
Iteration   5: 1193.713 us/op

# Run progress: 77.84% complete, ETA 00:10:16
# Fork: 2 of 2
# Warmup Iteration   1: 2718.346 us/op
# Warmup Iteration   2: 1623.769 us/op
# Warmup Iteration   3: 1684.603 us/op
# Warmup Iteration   4: 1228.656 us/op
# Warmup Iteration   5: 1223.414 us/op
Iteration   1: 1224.066 us/op
Iteration   2: 1317.808 us/op
Iteration   3: 1123.891 us/op
Iteration   4: 1152.709 us/op
Iteration   5: 1148.091 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1203.384 ±(99.9%) 133.775 us/op

  Histogram, us/op:
    [1100.000, 1125.000) = 2 
    [1125.000, 1150.000) = 2 
    [1150.000, 1175.000) = 1 
    [1175.000, 1200.000) = 1 
    [1200.000, 1225.000) = 2 
    [1225.000, 1250.000) = 0 
    [1250.000, 1275.000) = 0 
    [1275.000, 1300.000) = 0 
    [1300.000, 1325.000) = 1 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1123.216 us/op
     p(50.0000) =   1173.211 us/op
     p(90.0000) =   1382.385 us/op
     p(95.0000) =   1389.560 us/op
     p(99.0000) =   1389.560 us/op
     p(99.9000) =   1389.560 us/op
     p(99.9900) =   1389.560 us/op
     p(99.9990) =   1389.560 us/op
     p(99.9999) =   1389.560 us/op
    p(100.0000) =   1389.560 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.875)

# Run progress: 78.03% complete, ETA 00:10:11
# Fork: 1 of 2
# Warmup Iteration   1: 2844.997 us/op
# Warmup Iteration   2: 1628.419 us/op
# Warmup Iteration   3: 1831.647 us/op
# Warmup Iteration   4: 1301.274 us/op
# Warmup Iteration   5: 1239.944 us/op
Iteration   1: 1231.072 us/op
Iteration   2: 1465.768 us/op
Iteration   3: 1246.280 us/op
Iteration   4: 1190.040 us/op
Iteration   5: 1129.758 us/op

# Run progress: 78.22% complete, ETA 00:10:05
# Fork: 2 of 2
# Warmup Iteration   1: 2961.343 us/op
# Warmup Iteration   2: 1678.462 us/op
# Warmup Iteration   3: 1482.319 us/op
# Warmup Iteration   4: 1551.171 us/op
# Warmup Iteration   5: 1279.854 us/op
Iteration   1: 1324.390 us/op
Iteration   2: 1471.108 us/op
Iteration   3: 1218.113 us/op
Iteration   4: 1244.341 us/op
Iteration   5: 1163.187 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1268.406 ±(99.9%) 177.890 us/op

  Histogram, us/op:
    [1100.000, 1125.000) = 0 
    [1125.000, 1150.000) = 1 
    [1150.000, 1175.000) = 1 
    [1175.000, 1200.000) = 1 
    [1200.000, 1225.000) = 1 
    [1225.000, 1250.000) = 3 
    [1250.000, 1275.000) = 0 
    [1275.000, 1300.000) = 0 
    [1300.000, 1325.000) = 1 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 0 
    [1375.000, 1400.000) = 0 
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   1129.758 us/op
     p(50.0000) =   1237.706 us/op
     p(90.0000) =   1470.574 us/op
     p(95.0000) =   1471.108 us/op
     p(99.0000) =   1471.108 us/op
     p(99.9000) =   1471.108 us/op
     p(99.9900) =   1471.108 us/op
     p(99.9990) =   1471.108 us/op
     p(99.9999) =   1471.108 us/op
    p(100.0000) =   1471.108 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 1)

# Run progress: 78.41% complete, ETA 00:10:00
# Fork: 1 of 2
# Warmup Iteration   1: 2653.930 us/op
# Warmup Iteration   2: 1664.367 us/op
# Warmup Iteration   3: 1760.039 us/op
# Warmup Iteration   4: 1462.568 us/op
# Warmup Iteration   5: 1281.727 us/op
Iteration   1: 1320.773 us/op
Iteration   2: 1517.920 us/op
Iteration   3: 1245.735 us/op
Iteration   4: 1200.430 us/op
Iteration   5: 1221.929 us/op

# Run progress: 78.60% complete, ETA 00:09:55
# Fork: 2 of 2
# Warmup Iteration   1: 2698.318 us/op
# Warmup Iteration   2: 1863.313 us/op
# Warmup Iteration   3: 1856.220 us/op
# Warmup Iteration   4: 1292.464 us/op
# Warmup Iteration   5: 1290.325 us/op
Iteration   1: 1336.308 us/op
Iteration   2: 1452.024 us/op
Iteration   3: 1249.700 us/op
Iteration   4: 1322.011 us/op
Iteration   5: 1254.735 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1312.157 ±(99.9%) 155.239 us/op

  Histogram, us/op:
    [1200.000, 1225.000) = 2 
    [1225.000, 1250.000) = 2 
    [1250.000, 1275.000) = 1 
    [1275.000, 1300.000) = 0 
    [1300.000, 1325.000) = 2 
    [1325.000, 1350.000) = 1 
    [1350.000, 1375.000) = 0 
    [1375.000, 1400.000) = 0 
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 1 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 1 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1200.430 us/op
     p(50.0000) =   1287.754 us/op
     p(90.0000) =   1511.330 us/op
     p(95.0000) =   1517.920 us/op
     p(99.0000) =   1517.920 us/op
     p(99.9000) =   1517.920 us/op
     p(99.9900) =   1517.920 us/op
     p(99.9990) =   1517.920 us/op
     p(99.9999) =   1517.920 us/op
    p(100.0000) =   1517.920 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.125)

# Run progress: 78.79% complete, ETA 00:09:50
# Fork: 1 of 2
# Warmup Iteration   1: 3282.062 us/op
# Warmup Iteration   2: 2120.155 us/op
# Warmup Iteration   3: 1838.137 us/op
# Warmup Iteration   4: 1741.693 us/op
# Warmup Iteration   5: 1860.371 us/op
Iteration   1: 1531.151 us/op
Iteration   2: 1572.281 us/op
Iteration   3: 1222.443 us/op
Iteration   4: 1290.043 us/op
Iteration   5: 1213.920 us/op

# Run progress: 78.98% complete, ETA 00:09:44
# Fork: 2 of 2
# Warmup Iteration   1: 3599.395 us/op
# Warmup Iteration   2: 2377.010 us/op
# Warmup Iteration   3: 1873.499 us/op
# Warmup Iteration   4: 1631.870 us/op
# Warmup Iteration   5: 1560.811 us/op
Iteration   1: 1717.574 us/op
Iteration   2: 1929.183 us/op
Iteration   3: 1263.052 us/op
Iteration   4: 1327.496 us/op
Iteration   5: 1196.626 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1426.377 ±(99.9%) 378.611 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 1 
    [1200.000, 1250.000) = 2 
    [1250.000, 1300.000) = 2 
    [1300.000, 1350.000) = 1 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 1 
    [1550.000, 1600.000) = 1 
    [1600.000, 1650.000) = 0 
    [1650.000, 1700.000) = 0 
    [1700.000, 1750.000) = 1 
    [1750.000, 1800.000) = 0 
    [1800.000, 1850.000) = 0 
    [1850.000, 1900.000) = 0 
    [1900.000, 1950.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1196.626 us/op
     p(50.0000) =   1308.769 us/op
     p(90.0000) =   1908.022 us/op
     p(95.0000) =   1929.183 us/op
     p(99.0000) =   1929.183 us/op
     p(99.9000) =   1929.183 us/op
     p(99.9900) =   1929.183 us/op
     p(99.9990) =   1929.183 us/op
     p(99.9999) =   1929.183 us/op
    p(100.0000) =   1929.183 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.250)

# Run progress: 79.17% complete, ETA 00:09:39
# Fork: 1 of 2
# Warmup Iteration   1: 3271.706 us/op
# Warmup Iteration   2: 1753.278 us/op
# Warmup Iteration   3: 1861.605 us/op
# Warmup Iteration   4: 1395.803 us/op
# Warmup Iteration   5: 1366.662 us/op
Iteration   1: 1392.505 us/op
Iteration   2: 1568.035 us/op
Iteration   3: 1175.110 us/op
Iteration   4: 1214.617 us/op
Iteration   5: 1207.713 us/op

# Run progress: 79.36% complete, ETA 00:09:34
# Fork: 2 of 2
# Warmup Iteration   1: 3083.546 us/op
# Warmup Iteration   2: 1702.645 us/op
# Warmup Iteration   3: 1788.341 us/op
# Warmup Iteration   4: 1409.488 us/op
# Warmup Iteration   5: 1411.330 us/op
Iteration   1: 1488.881 us/op
Iteration   2: 1467.928 us/op
Iteration   3: 1173.928 us/op
Iteration   4: 1186.290 us/op
Iteration   5: 1144.432 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1301.944 ±(99.9%) 240.986 us/op

  Histogram, us/op:
    [1100.000, 1150.000) = 1 
    [1150.000, 1200.000) = 3 
    [1200.000, 1250.000) = 2 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 1 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 2 
    [1500.000, 1550.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1144.432 us/op
     p(50.0000) =   1211.165 us/op
     p(90.0000) =   1560.120 us/op
     p(95.0000) =   1568.035 us/op
     p(99.0000) =   1568.035 us/op
     p(99.9000) =   1568.035 us/op
     p(99.9900) =   1568.035 us/op
     p(99.9990) =   1568.035 us/op
     p(99.9999) =   1568.035 us/op
    p(100.0000) =   1568.035 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.375)

# Run progress: 79.55% complete, ETA 00:09:28
# Fork: 1 of 2
# Warmup Iteration   1: 2538.619 us/op
# Warmup Iteration   2: 1378.655 us/op
# Warmup Iteration   3: 1521.713 us/op
# Warmup Iteration   4: 1108.072 us/op
# Warmup Iteration   5: 1199.684 us/op
Iteration   1: 1086.959 us/op
Iteration   2: 1344.784 us/op
Iteration   3: 917.702 us/op
Iteration   4: 917.088 us/op
Iteration   5: 949.301 us/op

# Run progress: 79.73% complete, ETA 00:09:23
# Fork: 2 of 2
# Warmup Iteration   1: 2454.950 us/op
# Warmup Iteration   2: 1431.593 us/op
# Warmup Iteration   3: 1688.200 us/op
# Warmup Iteration   4: 1160.643 us/op
# Warmup Iteration   5: 1102.786 us/op
Iteration   1: 1094.307 us/op
Iteration   2: 1248.856 us/op
Iteration   3: 950.052 us/op
Iteration   4: 930.167 us/op
Iteration   5: 972.942 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1041.216 ±(99.9%) 227.949 us/op

  Histogram, us/op:
    [ 900.000,  950.000) = 4 
    [ 950.000, 1000.000) = 2 
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 2 
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 0 
    [1200.000, 1250.000) = 1 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    917.088 us/op
     p(50.0000) =    961.497 us/op
     p(90.0000) =   1335.191 us/op
     p(95.0000) =   1344.784 us/op
     p(99.0000) =   1344.784 us/op
     p(99.9000) =   1344.784 us/op
     p(99.9900) =   1344.784 us/op
     p(99.9990) =   1344.784 us/op
     p(99.9999) =   1344.784 us/op
    p(100.0000) =   1344.784 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.5)

# Run progress: 79.92% complete, ETA 00:09:18
# Fork: 1 of 2
# Warmup Iteration   1: 2852.692 us/op
# Warmup Iteration   2: 1512.664 us/op
# Warmup Iteration   3: 1574.040 us/op
# Warmup Iteration   4: 1140.607 us/op
# Warmup Iteration   5: 1115.672 us/op
Iteration   1: 1126.016 us/op
Iteration   2: 1373.770 us/op
Iteration   3: 967.194 us/op
Iteration   4: 983.979 us/op
Iteration   5: 1010.132 us/op

# Run progress: 80.11% complete, ETA 00:09:13
# Fork: 2 of 2
# Warmup Iteration   1: 2660.973 us/op
# Warmup Iteration   2: 1447.469 us/op
# Warmup Iteration   3: 1584.925 us/op
# Warmup Iteration   4: 1176.449 us/op
# Warmup Iteration   5: 1144.359 us/op
Iteration   1: 1149.206 us/op
Iteration   2: 1401.250 us/op
Iteration   3: 993.357 us/op
Iteration   4: 978.539 us/op
Iteration   5: 1007.025 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1099.047 ±(99.9%) 248.288 us/op

  Histogram, us/op:
    [ 900.000,  950.000) = 0 
    [ 950.000, 1000.000) = 4 
    [1000.000, 1050.000) = 2 
    [1050.000, 1100.000) = 0 
    [1100.000, 1150.000) = 2 
    [1150.000, 1200.000) = 0 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 1 
    [1400.000, 1450.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    967.194 us/op
     p(50.0000) =   1008.579 us/op
     p(90.0000) =   1398.502 us/op
     p(95.0000) =   1401.250 us/op
     p(99.0000) =   1401.250 us/op
     p(99.9000) =   1401.250 us/op
     p(99.9900) =   1401.250 us/op
     p(99.9990) =   1401.250 us/op
     p(99.9999) =   1401.250 us/op
    p(100.0000) =   1401.250 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.625)

# Run progress: 80.30% complete, ETA 00:09:07
# Fork: 1 of 2
# Warmup Iteration   1: 2166.746 us/op
# Warmup Iteration   2: 1320.872 us/op
# Warmup Iteration   3: 1166.142 us/op
# Warmup Iteration   4: 1211.468 us/op
# Warmup Iteration   5: 904.989 us/op
Iteration   1: 876.415 us/op
Iteration   2: 1087.450 us/op
Iteration   3: 758.703 us/op
Iteration   4: 705.830 us/op
Iteration   5: 838.188 us/op

# Run progress: 80.49% complete, ETA 00:09:02
# Fork: 2 of 2
# Warmup Iteration   1: 2179.860 us/op
# Warmup Iteration   2: 1378.356 us/op
# Warmup Iteration   3: 1161.632 us/op
# Warmup Iteration   4: 1199.423 us/op
# Warmup Iteration   5: 926.010 us/op
Iteration   1: 863.380 us/op
Iteration   2: 1007.872 us/op
Iteration   3: 741.006 us/op
Iteration   4: 715.939 us/op
Iteration   5: 718.633 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    831.342 ±(99.9%) 198.451 us/op

  Histogram, us/op:
    [ 700.000,  725.000) = 3 
    [ 725.000,  750.000) = 1 
    [ 750.000,  775.000) = 1 
    [ 775.000,  800.000) = 0 
    [ 800.000,  825.000) = 0 
    [ 825.000,  850.000) = 1 
    [ 850.000,  875.000) = 1 
    [ 875.000,  900.000) = 1 
    [ 900.000,  925.000) = 0 
    [ 925.000,  950.000) = 0 
    [ 950.000,  975.000) = 0 
    [ 975.000, 1000.000) = 0 
    [1000.000, 1025.000) = 1 
    [1025.000, 1050.000) = 0 
    [1050.000, 1075.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    705.830 us/op
     p(50.0000) =    798.446 us/op
     p(90.0000) =   1079.492 us/op
     p(95.0000) =   1087.450 us/op
     p(99.0000) =   1087.450 us/op
     p(99.9000) =   1087.450 us/op
     p(99.9900) =   1087.450 us/op
     p(99.9990) =   1087.450 us/op
     p(99.9999) =   1087.450 us/op
    p(100.0000) =   1087.450 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.75)

# Run progress: 80.68% complete, ETA 00:08:57
# Fork: 1 of 2
# Warmup Iteration   1: 2082.471 us/op
# Warmup Iteration   2: 1189.288 us/op
# Warmup Iteration   3: 1215.678 us/op
# Warmup Iteration   4: 950.371 us/op
# Warmup Iteration   5: 913.160 us/op
Iteration   1: 912.504 us/op
Iteration   2: 1034.634 us/op
Iteration   3: 775.199 us/op
Iteration   4: 734.267 us/op
Iteration   5: 764.020 us/op

# Run progress: 80.87% complete, ETA 00:08:52
# Fork: 2 of 2
# Warmup Iteration   1: 2234.239 us/op
# Warmup Iteration   2: 1500.968 us/op
# Warmup Iteration   3: 918.111 us/op
# Warmup Iteration   4: 891.295 us/op
# Warmup Iteration   5: 885.583 us/op
Iteration   1: 883.607 us/op
Iteration   2: 1145.422 us/op
Iteration   3: 734.890 us/op
Iteration   4: 713.224 us/op
Iteration   5: 739.640 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    843.741 ±(99.9%) 223.409 us/op

  Histogram, us/op:
    [ 700.000,  750.000) = 4 
    [ 750.000,  800.000) = 2 
    [ 800.000,  850.000) = 0 
    [ 850.000,  900.000) = 1 
    [ 900.000,  950.000) = 1 
    [ 950.000, 1000.000) = 0 
    [1000.000, 1050.000) = 1 
    [1050.000, 1100.000) = 0 
    [1100.000, 1150.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    713.224 us/op
     p(50.0000) =    769.610 us/op
     p(90.0000) =   1134.343 us/op
     p(95.0000) =   1145.422 us/op
     p(99.0000) =   1145.422 us/op
     p(99.9000) =   1145.422 us/op
     p(99.9900) =   1145.422 us/op
     p(99.9990) =   1145.422 us/op
     p(99.9999) =   1145.422 us/op
    p(100.0000) =   1145.422 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.875)

# Run progress: 81.06% complete, ETA 00:08:46
# Fork: 1 of 2
# Warmup Iteration   1: 1875.575 us/op
# Warmup Iteration   2: 1238.580 us/op
# Warmup Iteration   3: 1086.982 us/op
# Warmup Iteration   4: 1193.857 us/op
# Warmup Iteration   5: 908.636 us/op
Iteration   1: 891.884 us/op
Iteration   2: 1037.935 us/op
Iteration   3: 752.725 us/op
Iteration   4: 742.623 us/op
Iteration   5: 743.764 us/op

# Run progress: 81.25% complete, ETA 00:08:41
# Fork: 2 of 2
# Warmup Iteration   1: 2191.461 us/op
# Warmup Iteration   2: 1497.469 us/op
# Warmup Iteration   3: 949.281 us/op
# Warmup Iteration   4: 900.971 us/op
# Warmup Iteration   5: 947.075 us/op
Iteration   1: 889.120 us/op
Iteration   2: 1084.148 us/op
Iteration   3: 762.314 us/op
Iteration   4: 727.700 us/op
Iteration   5: 797.041 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    842.925 ±(99.9%) 195.608 us/op

  Histogram, us/op:
    [ 700.000,  725.000) = 0 
    [ 725.000,  750.000) = 3 
    [ 750.000,  775.000) = 2 
    [ 775.000,  800.000) = 1 
    [ 800.000,  825.000) = 0 
    [ 825.000,  850.000) = 0 
    [ 850.000,  875.000) = 0 
    [ 875.000,  900.000) = 2 
    [ 900.000,  925.000) = 0 
    [ 925.000,  950.000) = 0 
    [ 950.000,  975.000) = 0 
    [ 975.000, 1000.000) = 0 
    [1000.000, 1025.000) = 0 
    [1025.000, 1050.000) = 1 
    [1050.000, 1075.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    727.700 us/op
     p(50.0000) =    779.678 us/op
     p(90.0000) =   1079.527 us/op
     p(95.0000) =   1084.148 us/op
     p(99.0000) =   1084.148 us/op
     p(99.9000) =   1084.148 us/op
     p(99.9900) =   1084.148 us/op
     p(99.9990) =   1084.148 us/op
     p(99.9999) =   1084.148 us/op
    p(100.0000) =   1084.148 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 1)

# Run progress: 81.44% complete, ETA 00:08:36
# Fork: 1 of 2
# Warmup Iteration   1: 1885.485 us/op
# Warmup Iteration   2: 1217.099 us/op
# Warmup Iteration   3: 1087.523 us/op
# Warmup Iteration   4: 1281.159 us/op
# Warmup Iteration   5: 908.868 us/op
Iteration   1: 966.333 us/op
Iteration   2: 1041.283 us/op
Iteration   3: 753.744 us/op
Iteration   4: 748.163 us/op
Iteration   5: 739.521 us/op

# Run progress: 81.63% complete, ETA 00:08:30
# Fork: 2 of 2
# Warmup Iteration   1: 2148.903 us/op
# Warmup Iteration   2: 1242.181 us/op
# Warmup Iteration   3: 1096.242 us/op
# Warmup Iteration   4: 889.077 us/op
# Warmup Iteration   5: 890.683 us/op
Iteration   1: 955.476 us/op
Iteration   2: 1091.949 us/op
Iteration   3: 738.121 us/op
Iteration   4: 710.357 us/op
Iteration   5: 735.173 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    848.012 ±(99.9%) 223.559 us/op

  Histogram, us/op:
    [ 700.000,  725.000) = 1 
    [ 725.000,  750.000) = 4 
    [ 750.000,  775.000) = 1 
    [ 775.000,  800.000) = 0 
    [ 800.000,  825.000) = 0 
    [ 825.000,  850.000) = 0 
    [ 850.000,  875.000) = 0 
    [ 875.000,  900.000) = 0 
    [ 900.000,  925.000) = 0 
    [ 925.000,  950.000) = 0 
    [ 950.000,  975.000) = 2 
    [ 975.000, 1000.000) = 0 
    [1000.000, 1025.000) = 0 
    [1025.000, 1050.000) = 1 
    [1050.000, 1075.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    710.357 us/op
     p(50.0000) =    750.954 us/op
     p(90.0000) =   1086.882 us/op
     p(95.0000) =   1091.949 us/op
     p(99.0000) =   1091.949 us/op
     p(99.9000) =   1091.949 us/op
     p(99.9900) =   1091.949 us/op
     p(99.9990) =   1091.949 us/op
     p(99.9999) =   1091.949 us/op
    p(100.0000) =   1091.949 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.125)

# Run progress: 81.82% complete, ETA 00:08:25
# Fork: 1 of 2
# Warmup Iteration   1: 3482.232 us/op
# Warmup Iteration   2: 2063.911 us/op
# Warmup Iteration   3: 1396.264 us/op
# Warmup Iteration   4: 1279.538 us/op
# Warmup Iteration   5: 1394.488 us/op
Iteration   1: 1292.643 us/op
Iteration   2: 1602.567 us/op
Iteration   3: 1095.743 us/op
Iteration   4: 1075.065 us/op
Iteration   5: 1130.457 us/op

# Run progress: 82.01% complete, ETA 00:08:20
# Fork: 2 of 2
# Warmup Iteration   1: 3632.046 us/op
# Warmup Iteration   2: 2117.458 us/op
# Warmup Iteration   3: 1463.242 us/op
# Warmup Iteration   4: 1303.154 us/op
# Warmup Iteration   5: 1307.545 us/op
Iteration   1: 1339.850 us/op
Iteration   2: 1578.617 us/op
Iteration   3: 1125.722 us/op
Iteration   4: 1078.779 us/op
Iteration   5: 1136.705 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1245.615 ±(99.9%) 305.828 us/op

  Histogram, us/op:
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 3 
    [1100.000, 1150.000) = 3 
    [1150.000, 1200.000) = 0 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 1 
    [1300.000, 1350.000) = 1 
    [1350.000, 1400.000) = 0 
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 0 
    [1500.000, 1550.000) = 0 
    [1550.000, 1600.000) = 1 
    [1600.000, 1650.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1075.065 us/op
     p(50.0000) =   1133.581 us/op
     p(90.0000) =   1600.172 us/op
     p(95.0000) =   1602.567 us/op
     p(99.0000) =   1602.567 us/op
     p(99.9000) =   1602.567 us/op
     p(99.9900) =   1602.567 us/op
     p(99.9990) =   1602.567 us/op
     p(99.9999) =   1602.567 us/op
    p(100.0000) =   1602.567 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.250)

# Run progress: 82.20% complete, ETA 00:08:15
# Fork: 1 of 2
# Warmup Iteration   1: 2024.570 us/op
# Warmup Iteration   2: 1299.944 us/op
# Warmup Iteration   3: 1397.263 us/op
# Warmup Iteration   4: 938.870 us/op
# Warmup Iteration   5: 992.479 us/op
Iteration   1: 920.688 us/op
Iteration   2: 1248.880 us/op
Iteration   3: 785.856 us/op
Iteration   4: 774.661 us/op
Iteration   5: 782.640 us/op

# Run progress: 82.39% complete, ETA 00:08:09
# Fork: 2 of 2
# Warmup Iteration   1: 2068.768 us/op
# Warmup Iteration   2: 1303.094 us/op
# Warmup Iteration   3: 1175.977 us/op
# Warmup Iteration   4: 1102.567 us/op
# Warmup Iteration   5: 1327.421 us/op
Iteration   1: 961.800 us/op
Iteration   2: 1099.846 us/op
Iteration   3: 819.609 us/op
Iteration   4: 822.204 us/op
Iteration   5: 830.606 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    904.679 ±(99.9%) 239.325 us/op

  Histogram, us/op:
    [ 700.000,  750.000) = 0 
    [ 750.000,  800.000) = 3 
    [ 800.000,  850.000) = 3 
    [ 850.000,  900.000) = 0 
    [ 900.000,  950.000) = 1 
    [ 950.000, 1000.000) = 1 
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 1 
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 0 
    [1200.000, 1250.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    774.661 us/op
     p(50.0000) =    826.405 us/op
     p(90.0000) =   1233.977 us/op
     p(95.0000) =   1248.880 us/op
     p(99.0000) =   1248.880 us/op
     p(99.9000) =   1248.880 us/op
     p(99.9900) =   1248.880 us/op
     p(99.9990) =   1248.880 us/op
     p(99.9999) =   1248.880 us/op
    p(100.0000) =   1248.880 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.375)

# Run progress: 82.58% complete, ETA 00:08:04
# Fork: 1 of 2
# Warmup Iteration   1: 2154.146 us/op
# Warmup Iteration   2: 1464.271 us/op
# Warmup Iteration   3: 1123.796 us/op
# Warmup Iteration   4: 1147.793 us/op
# Warmup Iteration   5: 930.349 us/op
Iteration   1: 948.417 us/op
Iteration   2: 1149.658 us/op
Iteration   3: 804.504 us/op
Iteration   4: 791.256 us/op
Iteration   5: 818.453 us/op

# Run progress: 82.77% complete, ETA 00:07:59
# Fork: 2 of 2
# Warmup Iteration   1: 2291.824 us/op
# Warmup Iteration   2: 1740.013 us/op
# Warmup Iteration   3: 973.825 us/op
# Warmup Iteration   4: 952.192 us/op
# Warmup Iteration   5: 924.287 us/op
Iteration   1: 929.379 us/op
Iteration   2: 1141.626 us/op
Iteration   3: 807.436 us/op
Iteration   4: 782.095 us/op
Iteration   5: 798.766 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    897.159 ±(99.9%) 216.261 us/op

  Histogram, us/op:
    [ 700.000,  750.000) = 0 
    [ 750.000,  800.000) = 3 
    [ 800.000,  850.000) = 3 
    [ 850.000,  900.000) = 0 
    [ 900.000,  950.000) = 2 
    [ 950.000, 1000.000) = 0 
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 0 
    [1100.000, 1150.000) = 2 

  Percentiles, us/op:
      p(0.0000) =    782.095 us/op
     p(50.0000) =    812.945 us/op
     p(90.0000) =   1148.855 us/op
     p(95.0000) =   1149.658 us/op
     p(99.0000) =   1149.658 us/op
     p(99.9000) =   1149.658 us/op
     p(99.9900) =   1149.658 us/op
     p(99.9990) =   1149.658 us/op
     p(99.9999) =   1149.658 us/op
    p(100.0000) =   1149.658 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.5)

# Run progress: 82.95% complete, ETA 00:07:54
# Fork: 1 of 2
# Warmup Iteration   1: 1953.130 us/op
# Warmup Iteration   2: 1332.608 us/op
# Warmup Iteration   3: 1418.933 us/op
# Warmup Iteration   4: 965.416 us/op
# Warmup Iteration   5: 916.428 us/op
Iteration   1: 921.508 us/op
Iteration   2: 1087.491 us/op
Iteration   3: 796.508 us/op
Iteration   4: 771.638 us/op
Iteration   5: 805.204 us/op

# Run progress: 83.14% complete, ETA 00:07:48
# Fork: 2 of 2
# Warmup Iteration   1: 1983.882 us/op
# Warmup Iteration   2: 1293.016 us/op
# Warmup Iteration   3: 1338.016 us/op
# Warmup Iteration   4: 942.848 us/op
# Warmup Iteration   5: 940.926 us/op
Iteration   1: 956.093 us/op
Iteration   2: 1145.544 us/op
Iteration   3: 809.933 us/op
Iteration   4: 790.722 us/op
Iteration   5: 807.063 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    889.170 ±(99.9%) 203.303 us/op

  Histogram, us/op:
    [ 700.000,  750.000) = 0 
    [ 750.000,  800.000) = 3 
    [ 800.000,  850.000) = 3 
    [ 850.000,  900.000) = 0 
    [ 900.000,  950.000) = 1 
    [ 950.000, 1000.000) = 1 
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 1 
    [1100.000, 1150.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    771.638 us/op
     p(50.0000) =    808.498 us/op
     p(90.0000) =   1139.739 us/op
     p(95.0000) =   1145.544 us/op
     p(99.0000) =   1145.544 us/op
     p(99.9000) =   1145.544 us/op
     p(99.9900) =   1145.544 us/op
     p(99.9990) =   1145.544 us/op
     p(99.9999) =   1145.544 us/op
    p(100.0000) =   1145.544 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.625)

# Run progress: 83.33% complete, ETA 00:07:43
# Fork: 1 of 2
# Warmup Iteration   1: 2259.772 us/op
# Warmup Iteration   2: 1265.368 us/op
# Warmup Iteration   3: 1200.561 us/op
# Warmup Iteration   4: 1246.514 us/op
# Warmup Iteration   5: 994.466 us/op
Iteration   1: 947.434 us/op
Iteration   2: 1146.825 us/op
Iteration   3: 812.833 us/op
Iteration   4: 805.711 us/op
Iteration   5: 805.258 us/op

# Run progress: 83.52% complete, ETA 00:07:38
# Fork: 2 of 2
# Warmup Iteration   1: 1877.422 us/op
# Warmup Iteration   2: 1392.969 us/op
# Warmup Iteration   3: 1323.903 us/op
# Warmup Iteration   4: 926.652 us/op
# Warmup Iteration   5: 915.066 us/op
Iteration   1: 911.511 us/op
Iteration   2: 1052.894 us/op
Iteration   3: 788.079 us/op
Iteration   4: 819.746 us/op
Iteration   5: 813.622 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    890.391 ±(99.9%) 186.973 us/op

  Histogram, us/op:
    [ 700.000,  750.000) = 0 
    [ 750.000,  800.000) = 1 
    [ 800.000,  850.000) = 5 
    [ 850.000,  900.000) = 0 
    [ 900.000,  950.000) = 2 
    [ 950.000, 1000.000) = 0 
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 1 
    [1100.000, 1150.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    788.079 us/op
     p(50.0000) =    816.684 us/op
     p(90.0000) =   1137.432 us/op
     p(95.0000) =   1146.825 us/op
     p(99.0000) =   1146.825 us/op
     p(99.9000) =   1146.825 us/op
     p(99.9900) =   1146.825 us/op
     p(99.9990) =   1146.825 us/op
     p(99.9999) =   1146.825 us/op
    p(100.0000) =   1146.825 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.75)

# Run progress: 83.71% complete, ETA 00:07:33
# Fork: 1 of 2
# Warmup Iteration   1: 2170.897 us/op
# Warmup Iteration   2: 1408.979 us/op
# Warmup Iteration   3: 1176.102 us/op
# Warmup Iteration   4: 1189.108 us/op
# Warmup Iteration   5: 928.581 us/op
Iteration   1: 915.294 us/op
Iteration   2: 1076.469 us/op
Iteration   3: 823.607 us/op
Iteration   4: 786.378 us/op
Iteration   5: 785.785 us/op

# Run progress: 83.90% complete, ETA 00:07:27
# Fork: 2 of 2
# Warmup Iteration   1: 1969.073 us/op
# Warmup Iteration   2: 1304.375 us/op
# Warmup Iteration   3: 1159.291 us/op
# Warmup Iteration   4: 1286.467 us/op
# Warmup Iteration   5: 947.549 us/op
Iteration   1: 954.239 us/op
Iteration   2: 1130.486 us/op
Iteration   3: 811.926 us/op
Iteration   4: 892.226 us/op
Iteration   5: 809.753 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    898.616 ±(99.9%) 185.284 us/op

  Histogram, us/op:
    [ 700.000,  750.000) = 0 
    [ 750.000,  800.000) = 2 
    [ 800.000,  850.000) = 3 
    [ 850.000,  900.000) = 1 
    [ 900.000,  950.000) = 1 
    [ 950.000, 1000.000) = 1 
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 1 
    [1100.000, 1150.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    785.785 us/op
     p(50.0000) =    857.917 us/op
     p(90.0000) =   1125.084 us/op
     p(95.0000) =   1130.486 us/op
     p(99.0000) =   1130.486 us/op
     p(99.9000) =   1130.486 us/op
     p(99.9900) =   1130.486 us/op
     p(99.9990) =   1130.486 us/op
     p(99.9999) =   1130.486 us/op
    p(100.0000) =   1130.486 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.875)

# Run progress: 84.09% complete, ETA 00:07:22
# Fork: 1 of 2
# Warmup Iteration   1: 1905.175 us/op
# Warmup Iteration   2: 1379.137 us/op
# Warmup Iteration   3: 1213.401 us/op
# Warmup Iteration   4: 1178.035 us/op
# Warmup Iteration   5: 955.941 us/op
Iteration   1: 944.725 us/op
Iteration   2: 1084.278 us/op
Iteration   3: 793.690 us/op
Iteration   4: 803.216 us/op
Iteration   5: 799.975 us/op

# Run progress: 84.28% complete, ETA 00:07:17
# Fork: 2 of 2
# Warmup Iteration   1: 2189.962 us/op
# Warmup Iteration   2: 1285.686 us/op
# Warmup Iteration   3: 1384.480 us/op
# Warmup Iteration   4: 963.595 us/op
# Warmup Iteration   5: 944.488 us/op
Iteration   1: 937.453 us/op
Iteration   2: 1040.725 us/op
Iteration   3: 799.528 us/op
Iteration   4: 806.364 us/op
Iteration   5: 836.135 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    884.609 ±(99.9%) 165.931 us/op

  Histogram, us/op:
    [ 700.000,  725.000) = 0 
    [ 725.000,  750.000) = 0 
    [ 750.000,  775.000) = 0 
    [ 775.000,  800.000) = 3 
    [ 800.000,  825.000) = 2 
    [ 825.000,  850.000) = 1 
    [ 850.000,  875.000) = 0 
    [ 875.000,  900.000) = 0 
    [ 900.000,  925.000) = 0 
    [ 925.000,  950.000) = 2 
    [ 950.000,  975.000) = 0 
    [ 975.000, 1000.000) = 0 
    [1000.000, 1025.000) = 0 
    [1025.000, 1050.000) = 1 
    [1050.000, 1075.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    793.690 us/op
     p(50.0000) =    821.250 us/op
     p(90.0000) =   1079.923 us/op
     p(95.0000) =   1084.278 us/op
     p(99.0000) =   1084.278 us/op
     p(99.9000) =   1084.278 us/op
     p(99.9900) =   1084.278 us/op
     p(99.9990) =   1084.278 us/op
     p(99.9999) =   1084.278 us/op
    p(100.0000) =   1084.278 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 1)

# Run progress: 84.47% complete, ETA 00:07:11
# Fork: 1 of 2
# Warmup Iteration   1: 1963.365 us/op
# Warmup Iteration   2: 1282.819 us/op
# Warmup Iteration   3: 1204.370 us/op
# Warmup Iteration   4: 1182.233 us/op
# Warmup Iteration   5: 936.813 us/op
Iteration   1: 931.968 us/op
Iteration   2: 1137.430 us/op
Iteration   3: 804.264 us/op
Iteration   4: 799.355 us/op
Iteration   5: 806.553 us/op

# Run progress: 84.66% complete, ETA 00:07:06
# Fork: 2 of 2
# Warmup Iteration   1: 2229.404 us/op
# Warmup Iteration   2: 1353.598 us/op
# Warmup Iteration   3: 1211.469 us/op
# Warmup Iteration   4: 995.353 us/op
# Warmup Iteration   5: 984.452 us/op
Iteration   1: 984.859 us/op
Iteration   2: 1062.528 us/op
Iteration   3: 819.570 us/op
Iteration   4: 816.234 us/op
Iteration   5: 864.828 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    902.759 ±(99.9%) 184.260 us/op

  Histogram, us/op:
    [ 700.000,  750.000) = 0 
    [ 750.000,  800.000) = 1 
    [ 800.000,  850.000) = 4 
    [ 850.000,  900.000) = 1 
    [ 900.000,  950.000) = 1 
    [ 950.000, 1000.000) = 1 
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 1 
    [1100.000, 1150.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    799.355 us/op
     p(50.0000) =    842.199 us/op
     p(90.0000) =   1129.940 us/op
     p(95.0000) =   1137.430 us/op
     p(99.0000) =   1137.430 us/op
     p(99.9000) =   1137.430 us/op
     p(99.9900) =   1137.430 us/op
     p(99.9990) =   1137.430 us/op
     p(99.9999) =   1137.430 us/op
    p(100.0000) =   1137.430 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.125)

# Run progress: 84.85% complete, ETA 00:07:01
# Fork: 1 of 2
# Warmup Iteration   1: 2154.116 us/op
# Warmup Iteration   2: 1544.777 us/op
# Warmup Iteration   3: 1453.030 us/op
# Warmup Iteration   4: 1183.920 us/op
# Warmup Iteration   5: 1193.431 us/op
Iteration   1: 1183.088 us/op
Iteration   2: 1367.748 us/op
Iteration   3: 901.924 us/op
Iteration   4: 912.940 us/op
Iteration   5: 945.647 us/op

# Run progress: 85.04% complete, ETA 00:06:56
# Fork: 2 of 2
# Warmup Iteration   1: 2121.139 us/op
# Warmup Iteration   2: 1380.618 us/op
# Warmup Iteration   3: 1204.529 us/op
# Warmup Iteration   4: 1244.454 us/op
# Warmup Iteration   5: 1041.071 us/op
Iteration   1: 1030.899 us/op
Iteration   2: 1281.196 us/op
Iteration   3: 891.697 us/op
Iteration   4: 910.837 us/op
Iteration   5: 895.535 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1032.151 ±(99.9%) 271.009 us/op

  Histogram, us/op:
    [ 800.000,  850.000) = 0 
    [ 850.000,  900.000) = 2 
    [ 900.000,  950.000) = 4 
    [ 950.000, 1000.000) = 0 
    [1000.000, 1050.000) = 1 
    [1050.000, 1100.000) = 0 
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 1 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 1 
    [1300.000, 1350.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    891.697 us/op
     p(50.0000) =    929.294 us/op
     p(90.0000) =   1359.093 us/op
     p(95.0000) =   1367.748 us/op
     p(99.0000) =   1367.748 us/op
     p(99.9000) =   1367.748 us/op
     p(99.9900) =   1367.748 us/op
     p(99.9990) =   1367.748 us/op
     p(99.9999) =   1367.748 us/op
    p(100.0000) =   1367.748 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.250)

# Run progress: 85.23% complete, ETA 00:06:50
# Fork: 1 of 2
# Warmup Iteration   1: 2120.957 us/op
# Warmup Iteration   2: 1399.557 us/op
# Warmup Iteration   3: 1191.364 us/op
# Warmup Iteration   4: 1276.707 us/op
# Warmup Iteration   5: 1048.268 us/op
Iteration   1: 1024.209 us/op
Iteration   2: 1200.589 us/op
Iteration   3: 896.417 us/op
Iteration   4: 902.471 us/op
Iteration   5: 922.453 us/op

# Run progress: 85.42% complete, ETA 00:06:45
# Fork: 2 of 2
# Warmup Iteration   1: 2080.098 us/op
# Warmup Iteration   2: 1460.678 us/op
# Warmup Iteration   3: 1460.829 us/op
# Warmup Iteration   4: 1035.310 us/op
# Warmup Iteration   5: 1020.970 us/op
Iteration   1: 1041.104 us/op
Iteration   2: 1215.523 us/op
Iteration   3: 986.042 us/op
Iteration   4: 902.456 us/op
Iteration   5: 937.934 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1002.920 ±(99.9%) 180.787 us/op

  Histogram, us/op:
    [ 800.000,  850.000) = 0 
    [ 850.000,  900.000) = 1 
    [ 900.000,  950.000) = 4 
    [ 950.000, 1000.000) = 1 
    [1000.000, 1050.000) = 2 
    [1050.000, 1100.000) = 0 
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 0 
    [1200.000, 1250.000) = 2 

  Percentiles, us/op:
      p(0.0000) =    896.417 us/op
     p(50.0000) =    961.988 us/op
     p(90.0000) =   1214.030 us/op
     p(95.0000) =   1215.523 us/op
     p(99.0000) =   1215.523 us/op
     p(99.9000) =   1215.523 us/op
     p(99.9900) =   1215.523 us/op
     p(99.9990) =   1215.523 us/op
     p(99.9999) =   1215.523 us/op
    p(100.0000) =   1215.523 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.375)

# Run progress: 85.61% complete, ETA 00:06:40
# Fork: 1 of 2
# Warmup Iteration   1: 2309.776 us/op
# Warmup Iteration   2: 1563.509 us/op
# Warmup Iteration   3: 1089.618 us/op
# Warmup Iteration   4: 1059.954 us/op
# Warmup Iteration   5: 1057.775 us/op
Iteration   1: 1043.081 us/op
Iteration   2: 1230.156 us/op
Iteration   3: 926.517 us/op
Iteration   4: 928.085 us/op
Iteration   5: 910.201 us/op

# Run progress: 85.80% complete, ETA 00:06:35
# Fork: 2 of 2
# Warmup Iteration   1: 2161.781 us/op
# Warmup Iteration   2: 1444.325 us/op
# Warmup Iteration   3: 1511.332 us/op
# Warmup Iteration   4: 1066.827 us/op
# Warmup Iteration   5: 1025.192 us/op
Iteration   1: 1001.708 us/op
Iteration   2: 1337.584 us/op
Iteration   3: 897.769 us/op
Iteration   4: 939.078 us/op
Iteration   5: 903.617 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1011.780 ±(99.9%) 230.661 us/op

  Histogram, us/op:
    [ 800.000,  850.000) = 0 
    [ 850.000,  900.000) = 1 
    [ 900.000,  950.000) = 5 
    [ 950.000, 1000.000) = 0 
    [1000.000, 1050.000) = 2 
    [1050.000, 1100.000) = 0 
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 0 
    [1200.000, 1250.000) = 1 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    897.769 us/op
     p(50.0000) =    933.582 us/op
     p(90.0000) =   1326.841 us/op
     p(95.0000) =   1337.584 us/op
     p(99.0000) =   1337.584 us/op
     p(99.9000) =   1337.584 us/op
     p(99.9900) =   1337.584 us/op
     p(99.9990) =   1337.584 us/op
     p(99.9999) =   1337.584 us/op
    p(100.0000) =   1337.584 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.5)

# Run progress: 85.98% complete, ETA 00:06:29
# Fork: 1 of 2
# Warmup Iteration   1: 2160.592 us/op
# Warmup Iteration   2: 1410.060 us/op
# Warmup Iteration   3: 1560.313 us/op
# Warmup Iteration   4: 1054.375 us/op
# Warmup Iteration   5: 1044.880 us/op
Iteration   1: 1042.165 us/op
Iteration   2: 1278.284 us/op
Iteration   3: 919.556 us/op
Iteration   4: 903.267 us/op
Iteration   5: 916.302 us/op

# Run progress: 86.17% complete, ETA 00:06:24
# Fork: 2 of 2
# Warmup Iteration   1: 2288.266 us/op
# Warmup Iteration   2: 1447.755 us/op
# Warmup Iteration   3: 1426.875 us/op
# Warmup Iteration   4: 1310.845 us/op
# Warmup Iteration   5: 1030.522 us/op
Iteration   1: 1018.223 us/op
Iteration   2: 1200.240 us/op
Iteration   3: 889.304 us/op
Iteration   4: 897.995 us/op
Iteration   5: 969.948 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1003.528 ±(99.9%) 205.276 us/op

  Histogram, us/op:
    [ 800.000,  850.000) = 0 
    [ 850.000,  900.000) = 2 
    [ 900.000,  950.000) = 3 
    [ 950.000, 1000.000) = 1 
    [1000.000, 1050.000) = 2 
    [1050.000, 1100.000) = 0 
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 0 
    [1200.000, 1250.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    889.304 us/op
     p(50.0000) =    944.752 us/op
     p(90.0000) =   1270.480 us/op
     p(95.0000) =   1278.284 us/op
     p(99.0000) =   1278.284 us/op
     p(99.9000) =   1278.284 us/op
     p(99.9900) =   1278.284 us/op
     p(99.9990) =   1278.284 us/op
     p(99.9999) =   1278.284 us/op
    p(100.0000) =   1278.284 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.625)

# Run progress: 86.36% complete, ETA 00:06:19
# Fork: 1 of 2
# Warmup Iteration   1: 1983.024 us/op
# Warmup Iteration   2: 1382.851 us/op
# Warmup Iteration   3: 1321.500 us/op
# Warmup Iteration   4: 1327.475 us/op
# Warmup Iteration   5: 1074.258 us/op
Iteration   1: 1055.909 us/op
Iteration   2: 1184.044 us/op
Iteration   3: 914.578 us/op
Iteration   4: 921.807 us/op
Iteration   5: 947.263 us/op

# Run progress: 86.55% complete, ETA 00:06:13
# Fork: 2 of 2
# Warmup Iteration   1: 2261.802 us/op
# Warmup Iteration   2: 1460.493 us/op
# Warmup Iteration   3: 1367.453 us/op
# Warmup Iteration   4: 1019.299 us/op
# Warmup Iteration   5: 1052.383 us/op
Iteration   1: 1069.798 us/op
Iteration   2: 1102.084 us/op
Iteration   3: 930.766 us/op
Iteration   4: 943.763 us/op
Iteration   5: 937.763 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1000.778 ±(99.9%) 142.812 us/op

  Histogram, us/op:
    [ 900.000,  925.000) = 2 
    [ 925.000,  950.000) = 4 
    [ 950.000,  975.000) = 0 
    [ 975.000, 1000.000) = 0 
    [1000.000, 1025.000) = 0 
    [1025.000, 1050.000) = 0 
    [1050.000, 1075.000) = 2 
    [1075.000, 1100.000) = 0 
    [1100.000, 1125.000) = 1 
    [1125.000, 1150.000) = 0 
    [1150.000, 1175.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    914.578 us/op
     p(50.0000) =    945.513 us/op
     p(90.0000) =   1175.848 us/op
     p(95.0000) =   1184.044 us/op
     p(99.0000) =   1184.044 us/op
     p(99.9000) =   1184.044 us/op
     p(99.9900) =   1184.044 us/op
     p(99.9990) =   1184.044 us/op
     p(99.9999) =   1184.044 us/op
    p(100.0000) =   1184.044 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.75)

# Run progress: 86.74% complete, ETA 00:06:08
# Fork: 1 of 2
# Warmup Iteration   1: 2573.760 us/op
# Warmup Iteration   2: 1465.433 us/op
# Warmup Iteration   3: 1451.592 us/op
# Warmup Iteration   4: 1050.644 us/op
# Warmup Iteration   5: 1024.802 us/op
Iteration   1: 1013.848 us/op
Iteration   2: 1198.069 us/op
Iteration   3: 900.842 us/op
Iteration   4: 899.078 us/op
Iteration   5: 922.215 us/op

# Run progress: 86.93% complete, ETA 00:06:03
# Fork: 2 of 2
# Warmup Iteration   1: 2214.650 us/op
# Warmup Iteration   2: 1370.982 us/op
# Warmup Iteration   3: 1294.964 us/op
# Warmup Iteration   4: 1039.511 us/op
# Warmup Iteration   5: 1060.664 us/op
Iteration   1: 1030.849 us/op
Iteration   2: 1188.921 us/op
Iteration   3: 966.396 us/op
Iteration   4: 929.072 us/op
Iteration   5: 904.451 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    995.374 ±(99.9%) 172.533 us/op

  Histogram, us/op:
    [ 800.000,  825.000) = 0 
    [ 825.000,  850.000) = 0 
    [ 850.000,  875.000) = 0 
    [ 875.000,  900.000) = 1 
    [ 900.000,  925.000) = 3 
    [ 925.000,  950.000) = 1 
    [ 950.000,  975.000) = 1 
    [ 975.000, 1000.000) = 0 
    [1000.000, 1025.000) = 1 
    [1025.000, 1050.000) = 1 
    [1050.000, 1075.000) = 0 
    [1075.000, 1100.000) = 0 
    [1100.000, 1125.000) = 0 
    [1125.000, 1150.000) = 0 
    [1150.000, 1175.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    899.078 us/op
     p(50.0000) =    947.734 us/op
     p(90.0000) =   1197.154 us/op
     p(95.0000) =   1198.069 us/op
     p(99.0000) =   1198.069 us/op
     p(99.9000) =   1198.069 us/op
     p(99.9900) =   1198.069 us/op
     p(99.9990) =   1198.069 us/op
     p(99.9999) =   1198.069 us/op
    p(100.0000) =   1198.069 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.875)

# Run progress: 87.12% complete, ETA 00:05:58
# Fork: 1 of 2
# Warmup Iteration   1: 2028.945 us/op
# Warmup Iteration   2: 1412.848 us/op
# Warmup Iteration   3: 1357.088 us/op
# Warmup Iteration   4: 1340.198 us/op
# Warmup Iteration   5: 1057.242 us/op
Iteration   1: 1002.418 us/op
Iteration   2: 1246.566 us/op
Iteration   3: 918.414 us/op
Iteration   4: 914.942 us/op
Iteration   5: 894.439 us/op

# Run progress: 87.31% complete, ETA 00:05:52
# Fork: 2 of 2
# Warmup Iteration   1: 2097.964 us/op
# Warmup Iteration   2: 1402.872 us/op
# Warmup Iteration   3: 1217.584 us/op
# Warmup Iteration   4: 1297.855 us/op
# Warmup Iteration   5: 1047.452 us/op
Iteration   1: 1027.074 us/op
Iteration   2: 1185.904 us/op
Iteration   3: 904.515 us/op
Iteration   4: 904.345 us/op
Iteration   5: 1041.466 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1004.008 ±(99.9%) 189.203 us/op

  Histogram, us/op:
    [ 800.000,  850.000) = 0 
    [ 850.000,  900.000) = 1 
    [ 900.000,  950.000) = 4 
    [ 950.000, 1000.000) = 0 
    [1000.000, 1050.000) = 3 
    [1050.000, 1100.000) = 0 
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 1 
    [1200.000, 1250.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    894.439 us/op
     p(50.0000) =    960.416 us/op
     p(90.0000) =   1240.500 us/op
     p(95.0000) =   1246.566 us/op
     p(99.0000) =   1246.566 us/op
     p(99.9000) =   1246.566 us/op
     p(99.9900) =   1246.566 us/op
     p(99.9990) =   1246.566 us/op
     p(99.9999) =   1246.566 us/op
    p(100.0000) =   1246.566 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 1)

# Run progress: 87.50% complete, ETA 00:05:47
# Fork: 1 of 2
# Warmup Iteration   1: 2087.886 us/op
# Warmup Iteration   2: 1372.403 us/op
# Warmup Iteration   3: 1569.452 us/op
# Warmup Iteration   4: 1021.258 us/op
# Warmup Iteration   5: 1042.897 us/op
Iteration   1: 1019.001 us/op
Iteration   2: 1209.088 us/op
Iteration   3: 905.024 us/op
Iteration   4: 919.871 us/op
Iteration   5: 881.160 us/op

# Run progress: 87.69% complete, ETA 00:05:42
# Fork: 2 of 2
# Warmup Iteration   1: 2140.558 us/op
# Warmup Iteration   2: 1387.927 us/op
# Warmup Iteration   3: 1256.210 us/op
# Warmup Iteration   4: 1285.857 us/op
# Warmup Iteration   5: 1051.658 us/op
Iteration   1: 1080.080 us/op
Iteration   2: 1261.012 us/op
Iteration   3: 1032.418 us/op
Iteration   4: 962.296 us/op
Iteration   5: 993.254 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1026.320 ±(99.9%) 191.086 us/op

  Histogram, us/op:
    [ 800.000,  850.000) = 0 
    [ 850.000,  900.000) = 1 
    [ 900.000,  950.000) = 2 
    [ 950.000, 1000.000) = 2 
    [1000.000, 1050.000) = 2 
    [1050.000, 1100.000) = 1 
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 0 
    [1200.000, 1250.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    881.160 us/op
     p(50.0000) =   1006.128 us/op
     p(90.0000) =   1255.820 us/op
     p(95.0000) =   1261.012 us/op
     p(99.0000) =   1261.012 us/op
     p(99.9000) =   1261.012 us/op
     p(99.9900) =   1261.012 us/op
     p(99.9990) =   1261.012 us/op
     p(99.9999) =   1261.012 us/op
    p(100.0000) =   1261.012 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.125)

# Run progress: 87.88% complete, ETA 00:05:37
# Fork: 1 of 2
# Warmup Iteration   1: 2939.951 us/op
# Warmup Iteration   2: 2111.417 us/op
# Warmup Iteration   3: 2385.935 us/op
# Warmup Iteration   4: 1668.868 us/op
# Warmup Iteration   5: 1747.957 us/op
Iteration   1: 1631.252 us/op
Iteration   2: 1953.656 us/op
Iteration   3: 1523.271 us/op
Iteration   4: 1714.147 us/op
Iteration   5: 1539.699 us/op

# Run progress: 88.07% complete, ETA 00:05:31
# Fork: 2 of 2
# Warmup Iteration   1: 2653.834 us/op
# Warmup Iteration   2: 2097.255 us/op
# Warmup Iteration   3: 2445.317 us/op
# Warmup Iteration   4: 1641.045 us/op
# Warmup Iteration   5: 1805.209 us/op
Iteration   1: 1674.835 us/op
Iteration   2: 2100.895 us/op
Iteration   3: 1524.371 us/op
Iteration   4: 1752.849 us/op
Iteration   5: 1599.772 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1701.475 ±(99.9%) 290.029 us/op

  Histogram, us/op:
    [1500.000, 1550.000) = 3 
    [1550.000, 1600.000) = 1 
    [1600.000, 1650.000) = 1 
    [1650.000, 1700.000) = 1 
    [1700.000, 1750.000) = 1 
    [1750.000, 1800.000) = 1 
    [1800.000, 1850.000) = 0 
    [1850.000, 1900.000) = 0 
    [1900.000, 1950.000) = 0 
    [1950.000, 2000.000) = 1 
    [2000.000, 2050.000) = 0 
    [2050.000, 2100.000) = 0 
    [2100.000, 2150.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1523.271 us/op
     p(50.0000) =   1653.044 us/op
     p(90.0000) =   2086.171 us/op
     p(95.0000) =   2100.895 us/op
     p(99.0000) =   2100.895 us/op
     p(99.9000) =   2100.895 us/op
     p(99.9900) =   2100.895 us/op
     p(99.9990) =   2100.895 us/op
     p(99.9999) =   2100.895 us/op
    p(100.0000) =   2100.895 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.250)

# Run progress: 88.26% complete, ETA 00:05:26
# Fork: 1 of 2
# Warmup Iteration   1: 2782.409 us/op
# Warmup Iteration   2: 2061.281 us/op
# Warmup Iteration   3: 2498.410 us/op
# Warmup Iteration   4: 1674.756 us/op
# Warmup Iteration   5: 1811.828 us/op
Iteration   1: 1650.726 us/op
Iteration   2: 2091.862 us/op
Iteration   3: 1505.447 us/op
Iteration   4: 1616.728 us/op
Iteration   5: 1519.811 us/op

# Run progress: 88.45% complete, ETA 00:05:21
# Fork: 2 of 2
# Warmup Iteration   1: 2703.361 us/op
# Warmup Iteration   2: 2001.762 us/op
# Warmup Iteration   3: 2642.805 us/op
# Warmup Iteration   4: 1667.035 us/op
# Warmup Iteration   5: 1795.667 us/op
Iteration   1: 1644.838 us/op
Iteration   2: 1987.228 us/op
Iteration   3: 1535.887 us/op
Iteration   4: 1643.402 us/op
Iteration   5: 1538.546 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1673.447 ±(99.9%) 305.685 us/op

  Histogram, us/op:
    [1500.000, 1550.000) = 4 
    [1550.000, 1600.000) = 0 
    [1600.000, 1650.000) = 3 
    [1650.000, 1700.000) = 1 
    [1700.000, 1750.000) = 0 
    [1750.000, 1800.000) = 0 
    [1800.000, 1850.000) = 0 
    [1850.000, 1900.000) = 0 
    [1900.000, 1950.000) = 0 
    [1950.000, 2000.000) = 1 
    [2000.000, 2050.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1505.447 us/op
     p(50.0000) =   1630.065 us/op
     p(90.0000) =   2081.399 us/op
     p(95.0000) =   2091.862 us/op
     p(99.0000) =   2091.862 us/op
     p(99.9000) =   2091.862 us/op
     p(99.9900) =   2091.862 us/op
     p(99.9990) =   2091.862 us/op
     p(99.9999) =   2091.862 us/op
    p(100.0000) =   2091.862 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.375)

# Run progress: 88.64% complete, ETA 00:05:16
# Fork: 1 of 2
# Warmup Iteration   1: 2801.697 us/op
# Warmup Iteration   2: 2105.544 us/op
# Warmup Iteration   3: 2492.045 us/op
# Warmup Iteration   4: 1639.865 us/op
# Warmup Iteration   5: 1835.954 us/op
Iteration   1: 1650.741 us/op
Iteration   2: 2100.962 us/op
Iteration   3: 1498.271 us/op
Iteration   4: 1692.989 us/op
Iteration   5: 1498.550 us/op

# Run progress: 88.83% complete, ETA 00:05:10
# Fork: 2 of 2
# Warmup Iteration   1: 2820.673 us/op
# Warmup Iteration   2: 2083.162 us/op
# Warmup Iteration   3: 2582.501 us/op
# Warmup Iteration   4: 1704.446 us/op
# Warmup Iteration   5: 1796.017 us/op
Iteration   1: 1633.831 us/op
Iteration   2: 1903.999 us/op
Iteration   3: 1542.388 us/op
Iteration   4: 1665.237 us/op
Iteration   5: 1559.065 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1674.603 ±(99.9%) 289.490 us/op

  Histogram, us/op:
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 2 
    [1500.000, 1550.000) = 1 
    [1550.000, 1600.000) = 1 
    [1600.000, 1650.000) = 1 
    [1650.000, 1700.000) = 3 
    [1700.000, 1750.000) = 0 
    [1750.000, 1800.000) = 0 
    [1800.000, 1850.000) = 0 
    [1850.000, 1900.000) = 0 
    [1900.000, 1950.000) = 1 
    [1950.000, 2000.000) = 0 
    [2000.000, 2050.000) = 0 
    [2050.000, 2100.000) = 0 
    [2100.000, 2150.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1498.271 us/op
     p(50.0000) =   1642.286 us/op
     p(90.0000) =   2081.266 us/op
     p(95.0000) =   2100.962 us/op
     p(99.0000) =   2100.962 us/op
     p(99.9000) =   2100.962 us/op
     p(99.9900) =   2100.962 us/op
     p(99.9990) =   2100.962 us/op
     p(99.9999) =   2100.962 us/op
    p(100.0000) =   2100.962 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.5)

# Run progress: 89.02% complete, ETA 00:05:05
# Fork: 1 of 2
# Warmup Iteration   1: 2602.162 us/op
# Warmup Iteration   2: 2203.348 us/op
# Warmup Iteration   3: 2398.326 us/op
# Warmup Iteration   4: 1668.645 us/op
# Warmup Iteration   5: 1772.974 us/op
Iteration   1: 1630.389 us/op
Iteration   2: 2041.385 us/op
Iteration   3: 1550.609 us/op
Iteration   4: 1734.178 us/op
Iteration   5: 1577.250 us/op

# Run progress: 89.20% complete, ETA 00:05:00
# Fork: 2 of 2
# Warmup Iteration   1: 2804.834 us/op
# Warmup Iteration   2: 2368.157 us/op
# Warmup Iteration   3: 2445.974 us/op
# Warmup Iteration   4: 1646.428 us/op
# Warmup Iteration   5: 1774.208 us/op
Iteration   1: 1661.532 us/op
Iteration   2: 1951.023 us/op
Iteration   3: 1494.746 us/op
Iteration   4: 1721.934 us/op
Iteration   5: 1644.778 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1700.782 ±(99.9%) 261.904 us/op

  Histogram, us/op:
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 1 
    [1500.000, 1550.000) = 0 
    [1550.000, 1600.000) = 2 
    [1600.000, 1650.000) = 2 
    [1650.000, 1700.000) = 1 
    [1700.000, 1750.000) = 2 
    [1750.000, 1800.000) = 0 
    [1800.000, 1850.000) = 0 
    [1850.000, 1900.000) = 0 
    [1900.000, 1950.000) = 0 
    [1950.000, 2000.000) = 1 
    [2000.000, 2050.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1494.746 us/op
     p(50.0000) =   1653.155 us/op
     p(90.0000) =   2032.349 us/op
     p(95.0000) =   2041.385 us/op
     p(99.0000) =   2041.385 us/op
     p(99.9000) =   2041.385 us/op
     p(99.9900) =   2041.385 us/op
     p(99.9990) =   2041.385 us/op
     p(99.9999) =   2041.385 us/op
    p(100.0000) =   2041.385 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.625)

# Run progress: 89.39% complete, ETA 00:04:54
# Fork: 1 of 2
# Warmup Iteration   1: 2772.121 us/op
# Warmup Iteration   2: 2056.167 us/op
# Warmup Iteration   3: 2363.857 us/op
# Warmup Iteration   4: 1732.961 us/op
# Warmup Iteration   5: 1797.495 us/op
Iteration   1: 1723.802 us/op
Iteration   2: 2089.068 us/op
Iteration   3: 1541.476 us/op
Iteration   4: 1709.935 us/op
Iteration   5: 1553.488 us/op

# Run progress: 89.58% complete, ETA 00:04:49
# Fork: 2 of 2
# Warmup Iteration   1: 2822.889 us/op
# Warmup Iteration   2: 2137.359 us/op
# Warmup Iteration   3: 2604.919 us/op
# Warmup Iteration   4: 1744.115 us/op
# Warmup Iteration   5: 1814.394 us/op
Iteration   1: 1634.077 us/op
Iteration   2: 2050.847 us/op
Iteration   3: 1553.335 us/op
Iteration   4: 1697.021 us/op
Iteration   5: 1542.390 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1709.544 ±(99.9%) 307.173 us/op

  Histogram, us/op:
    [1500.000, 1550.000) = 2 
    [1550.000, 1600.000) = 2 
    [1600.000, 1650.000) = 1 
    [1650.000, 1700.000) = 1 
    [1700.000, 1750.000) = 2 
    [1750.000, 1800.000) = 0 
    [1800.000, 1850.000) = 0 
    [1850.000, 1900.000) = 0 
    [1900.000, 1950.000) = 0 
    [1950.000, 2000.000) = 0 
    [2000.000, 2050.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1541.476 us/op
     p(50.0000) =   1665.549 us/op
     p(90.0000) =   2085.246 us/op
     p(95.0000) =   2089.068 us/op
     p(99.0000) =   2089.068 us/op
     p(99.9000) =   2089.068 us/op
     p(99.9900) =   2089.068 us/op
     p(99.9990) =   2089.068 us/op
     p(99.9999) =   2089.068 us/op
    p(100.0000) =   2089.068 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.75)

# Run progress: 89.77% complete, ETA 00:04:44
# Fork: 1 of 2
# Warmup Iteration   1: 2702.397 us/op
# Warmup Iteration   2: 2031.590 us/op
# Warmup Iteration   3: 2297.348 us/op
# Warmup Iteration   4: 1677.398 us/op
# Warmup Iteration   5: 1745.496 us/op
Iteration   1: 1674.696 us/op
Iteration   2: 1907.940 us/op
Iteration   3: 1519.622 us/op
Iteration   4: 1747.865 us/op
Iteration   5: 1749.263 us/op

# Run progress: 89.96% complete, ETA 00:04:39
# Fork: 2 of 2
# Warmup Iteration   1: 2960.024 us/op
# Warmup Iteration   2: 2170.257 us/op
# Warmup Iteration   3: 2535.145 us/op
# Warmup Iteration   4: 1815.939 us/op
# Warmup Iteration   5: 1944.029 us/op
Iteration   1: 1824.125 us/op
Iteration   2: 2134.431 us/op
Iteration   3: 1536.781 us/op
Iteration   4: 1651.183 us/op
Iteration   5: 1507.061 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1725.297 ±(99.9%) 296.057 us/op

  Histogram, us/op:
    [1500.000, 1550.000) = 3 
    [1550.000, 1600.000) = 0 
    [1600.000, 1650.000) = 0 
    [1650.000, 1700.000) = 2 
    [1700.000, 1750.000) = 2 
    [1750.000, 1800.000) = 0 
    [1800.000, 1850.000) = 1 
    [1850.000, 1900.000) = 0 
    [1900.000, 1950.000) = 1 
    [1950.000, 2000.000) = 0 
    [2000.000, 2050.000) = 0 
    [2050.000, 2100.000) = 0 
    [2100.000, 2150.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1507.061 us/op
     p(50.0000) =   1711.280 us/op
     p(90.0000) =   2111.782 us/op
     p(95.0000) =   2134.431 us/op
     p(99.0000) =   2134.431 us/op
     p(99.9000) =   2134.431 us/op
     p(99.9900) =   2134.431 us/op
     p(99.9990) =   2134.431 us/op
     p(99.9999) =   2134.431 us/op
    p(100.0000) =   2134.431 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.875)

# Run progress: 90.15% complete, ETA 00:04:33
# Fork: 1 of 2
# Warmup Iteration   1: 2715.736 us/op
# Warmup Iteration   2: 2025.660 us/op
# Warmup Iteration   3: 2515.745 us/op
# Warmup Iteration   4: 1706.384 us/op
# Warmup Iteration   5: 1825.553 us/op
Iteration   1: 1684.551 us/op
Iteration   2: 2078.143 us/op
Iteration   3: 1559.439 us/op
Iteration   4: 1675.402 us/op
Iteration   5: 1586.801 us/op

# Run progress: 90.34% complete, ETA 00:04:28
# Fork: 2 of 2
# Warmup Iteration   1: 2761.166 us/op
# Warmup Iteration   2: 2008.180 us/op
# Warmup Iteration   3: 2451.866 us/op
# Warmup Iteration   4: 1605.774 us/op
# Warmup Iteration   5: 1710.452 us/op
Iteration   1: 1621.051 us/op
Iteration   2: 2253.496 us/op
Iteration   3: 1477.256 us/op
Iteration   4: 1675.401 us/op
Iteration   5: 1554.393 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1716.593 ±(99.9%) 376.337 us/op

  Histogram, us/op:
    [1400.000, 1450.000) = 0 
    [1450.000, 1500.000) = 1 
    [1500.000, 1550.000) = 0 
    [1550.000, 1600.000) = 3 
    [1600.000, 1650.000) = 1 
    [1650.000, 1700.000) = 3 
    [1700.000, 1750.000) = 0 
    [1750.000, 1800.000) = 0 
    [1800.000, 1850.000) = 0 
    [1850.000, 1900.000) = 0 
    [1900.000, 1950.000) = 0 
    [1950.000, 2000.000) = 0 
    [2000.000, 2050.000) = 0 
    [2050.000, 2100.000) = 1 
    [2100.000, 2150.000) = 0 
    [2150.000, 2200.000) = 0 
    [2200.000, 2250.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1477.256 us/op
     p(50.0000) =   1648.226 us/op
     p(90.0000) =   2235.961 us/op
     p(95.0000) =   2253.496 us/op
     p(99.0000) =   2253.496 us/op
     p(99.9000) =   2253.496 us/op
     p(99.9900) =   2253.496 us/op
     p(99.9990) =   2253.496 us/op
     p(99.9999) =   2253.496 us/op
    p(100.0000) =   2253.496 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 1)

# Run progress: 90.53% complete, ETA 00:04:23
# Fork: 1 of 2
# Warmup Iteration   1: 2906.082 us/op
# Warmup Iteration   2: 2912.337 us/op
# Warmup Iteration   3: 4356.365 us/op
# Warmup Iteration   4: 2135.614 us/op
# Warmup Iteration   5: 2010.558 us/op
Iteration   1: 2271.327 us/op
Iteration   2: 1990.641 us/op
Iteration   3: 1502.308 us/op
Iteration   4: 1692.153 us/op
Iteration   5: 1583.556 us/op

# Run progress: 90.72% complete, ETA 00:04:18
# Fork: 2 of 2
# Warmup Iteration   1: 2807.767 us/op
# Warmup Iteration   2: 1980.598 us/op
# Warmup Iteration   3: 2559.935 us/op
# Warmup Iteration   4: 1729.095 us/op
# Warmup Iteration   5: 1851.777 us/op
Iteration   1: 1685.603 us/op
Iteration   2: 2186.001 us/op
Iteration   3: 1521.869 us/op
Iteration   4: 1703.742 us/op
Iteration   5: 1576.607 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1771.381 ±(99.9%) 420.434 us/op

  Histogram, us/op:
    [1500.000, 1550.000) = 2 
    [1550.000, 1600.000) = 2 
    [1600.000, 1650.000) = 0 
    [1650.000, 1700.000) = 2 
    [1700.000, 1750.000) = 1 
    [1750.000, 1800.000) = 0 
    [1800.000, 1850.000) = 0 
    [1850.000, 1900.000) = 0 
    [1900.000, 1950.000) = 0 
    [1950.000, 2000.000) = 1 
    [2000.000, 2050.000) = 0 
    [2050.000, 2100.000) = 0 
    [2100.000, 2150.000) = 0 
    [2150.000, 2200.000) = 1 
    [2200.000, 2250.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1502.308 us/op
     p(50.0000) =   1688.878 us/op
     p(90.0000) =   2262.794 us/op
     p(95.0000) =   2271.327 us/op
     p(99.0000) =   2271.327 us/op
     p(99.9000) =   2271.327 us/op
     p(99.9900) =   2271.327 us/op
     p(99.9990) =   2271.327 us/op
     p(99.9999) =   2271.327 us/op
    p(100.0000) =   2271.327 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.125)

# Run progress: 90.91% complete, ETA 00:04:12
# Fork: 1 of 2
# Warmup Iteration   1: 3609.964 us/op
# Warmup Iteration   2: 3234.103 us/op
# Warmup Iteration   3: 2961.715 us/op
# Warmup Iteration   4: 2412.286 us/op
# Warmup Iteration   5: 2404.420 us/op
Iteration   1: 2419.035 us/op
Iteration   2: 2733.072 us/op
Iteration   3: 2297.185 us/op
Iteration   4: 2324.403 us/op
Iteration   5: 2304.517 us/op

# Run progress: 91.10% complete, ETA 00:04:07
# Fork: 2 of 2
# Warmup Iteration   1: 3755.167 us/op
# Warmup Iteration   2: 3150.247 us/op
# Warmup Iteration   3: 2888.858 us/op
# Warmup Iteration   4: 2377.632 us/op
# Warmup Iteration   5: 2324.259 us/op
Iteration   1: 2376.769 us/op
Iteration   2: 2812.329 us/op
Iteration   3: 2422.285 us/op
Iteration   4: 2369.837 us/op
Iteration   5: 2424.644 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2448.408 ±(99.9%) 269.432 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 1 
    [2300.000, 2350.000) = 2 
    [2350.000, 2400.000) = 2 
    [2400.000, 2450.000) = 3 
    [2450.000, 2500.000) = 0 
    [2500.000, 2550.000) = 0 
    [2550.000, 2600.000) = 0 
    [2600.000, 2650.000) = 0 
    [2650.000, 2700.000) = 0 
    [2700.000, 2750.000) = 1 
    [2750.000, 2800.000) = 0 
    [2800.000, 2850.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2297.185 us/op
     p(50.0000) =   2397.902 us/op
     p(90.0000) =   2804.403 us/op
     p(95.0000) =   2812.329 us/op
     p(99.0000) =   2812.329 us/op
     p(99.9000) =   2812.329 us/op
     p(99.9900) =   2812.329 us/op
     p(99.9990) =   2812.329 us/op
     p(99.9999) =   2812.329 us/op
    p(100.0000) =   2812.329 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.250)

# Run progress: 91.29% complete, ETA 00:04:02
# Fork: 1 of 2
# Warmup Iteration   1: 3439.240 us/op
# Warmup Iteration   2: 3133.777 us/op
# Warmup Iteration   3: 2971.313 us/op
# Warmup Iteration   4: 2403.769 us/op
# Warmup Iteration   5: 2472.564 us/op
Iteration   1: 2418.705 us/op
Iteration   2: 2632.066 us/op
Iteration   3: 2345.261 us/op
Iteration   4: 2427.030 us/op
Iteration   5: 2377.750 us/op

# Run progress: 91.48% complete, ETA 00:03:57
# Fork: 2 of 2
# Warmup Iteration   1: 3680.128 us/op
# Warmup Iteration   2: 3253.552 us/op
# Warmup Iteration   3: 2552.568 us/op
# Warmup Iteration   4: 2443.209 us/op
# Warmup Iteration   5: 2441.742 us/op
Iteration   1: 2419.622 us/op
Iteration   2: 2721.794 us/op
Iteration   3: 2284.725 us/op
Iteration   4: 2308.366 us/op
Iteration   5: 2397.775 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2433.309 ±(99.9%) 209.585 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 1 
    [2300.000, 2350.000) = 2 
    [2350.000, 2400.000) = 2 
    [2400.000, 2450.000) = 3 
    [2450.000, 2500.000) = 0 
    [2500.000, 2550.000) = 0 
    [2550.000, 2600.000) = 0 
    [2600.000, 2650.000) = 1 
    [2650.000, 2700.000) = 0 
    [2700.000, 2750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2284.725 us/op
     p(50.0000) =   2408.240 us/op
     p(90.0000) =   2712.821 us/op
     p(95.0000) =   2721.794 us/op
     p(99.0000) =   2721.794 us/op
     p(99.9000) =   2721.794 us/op
     p(99.9900) =   2721.794 us/op
     p(99.9990) =   2721.794 us/op
     p(99.9999) =   2721.794 us/op
    p(100.0000) =   2721.794 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.375)

# Run progress: 91.67% complete, ETA 00:03:51
# Fork: 1 of 2
# Warmup Iteration   1: 3451.689 us/op
# Warmup Iteration   2: 3166.176 us/op
# Warmup Iteration   3: 2929.388 us/op
# Warmup Iteration   4: 2368.043 us/op
# Warmup Iteration   5: 2404.512 us/op
Iteration   1: 2445.833 us/op
Iteration   2: 2596.885 us/op
Iteration   3: 2413.859 us/op
Iteration   4: 2306.917 us/op
Iteration   5: 2327.936 us/op

# Run progress: 91.86% complete, ETA 00:03:46
# Fork: 2 of 2
# Warmup Iteration   1: 3498.398 us/op
# Warmup Iteration   2: 3284.952 us/op
# Warmup Iteration   3: 3057.270 us/op
# Warmup Iteration   4: 2560.297 us/op
# Warmup Iteration   5: 2346.749 us/op
Iteration   1: 2367.018 us/op
Iteration   2: 2696.334 us/op
Iteration   3: 2326.918 us/op
Iteration   4: 2278.857 us/op
Iteration   5: 2298.616 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2405.917 ±(99.9%) 210.071 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 2 
    [2300.000, 2350.000) = 3 
    [2350.000, 2400.000) = 1 
    [2400.000, 2450.000) = 2 
    [2450.000, 2500.000) = 0 
    [2500.000, 2550.000) = 0 
    [2550.000, 2600.000) = 1 
    [2600.000, 2650.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2278.857 us/op
     p(50.0000) =   2347.477 us/op
     p(90.0000) =   2686.389 us/op
     p(95.0000) =   2696.334 us/op
     p(99.0000) =   2696.334 us/op
     p(99.9000) =   2696.334 us/op
     p(99.9900) =   2696.334 us/op
     p(99.9990) =   2696.334 us/op
     p(99.9999) =   2696.334 us/op
    p(100.0000) =   2696.334 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.5)

# Run progress: 92.05% complete, ETA 00:03:41
# Fork: 1 of 2
# Warmup Iteration   1: 3535.158 us/op
# Warmup Iteration   2: 3339.383 us/op
# Warmup Iteration   3: 2574.698 us/op
# Warmup Iteration   4: 2431.864 us/op
# Warmup Iteration   5: 2408.100 us/op
Iteration   1: 2395.963 us/op
Iteration   2: 2682.581 us/op
Iteration   3: 2280.816 us/op
Iteration   4: 2341.571 us/op
Iteration   5: 2413.023 us/op

# Run progress: 92.23% complete, ETA 00:03:35
# Fork: 2 of 2
# Warmup Iteration   1: 3453.562 us/op
# Warmup Iteration   2: 3206.187 us/op
# Warmup Iteration   3: 3022.846 us/op
# Warmup Iteration   4: 2486.534 us/op
# Warmup Iteration   5: 2496.934 us/op
Iteration   1: 2488.749 us/op
Iteration   2: 2561.509 us/op
Iteration   3: 2377.783 us/op
Iteration   4: 2322.722 us/op
Iteration   5: 2378.135 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2424.285 ±(99.9%) 183.555 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 1 
    [2300.000, 2350.000) = 2 
    [2350.000, 2400.000) = 3 
    [2400.000, 2450.000) = 1 
    [2450.000, 2500.000) = 1 
    [2500.000, 2550.000) = 0 
    [2550.000, 2600.000) = 1 
    [2600.000, 2650.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2280.816 us/op
     p(50.0000) =   2387.049 us/op
     p(90.0000) =   2670.474 us/op
     p(95.0000) =   2682.581 us/op
     p(99.0000) =   2682.581 us/op
     p(99.9000) =   2682.581 us/op
     p(99.9900) =   2682.581 us/op
     p(99.9990) =   2682.581 us/op
     p(99.9999) =   2682.581 us/op
    p(100.0000) =   2682.581 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.625)

# Run progress: 92.42% complete, ETA 00:03:30
# Fork: 1 of 2
# Warmup Iteration   1: 3393.959 us/op
# Warmup Iteration   2: 3353.456 us/op
# Warmup Iteration   3: 2672.304 us/op
# Warmup Iteration   4: 2395.991 us/op
# Warmup Iteration   5: 2427.163 us/op
Iteration   1: 2835.178 us/op
Iteration   2: 2826.702 us/op
Iteration   3: 2901.527 us/op
Iteration   4: 2792.212 us/op
Iteration   5: 2688.245 us/op

# Run progress: 92.61% complete, ETA 00:03:25
# Fork: 2 of 2
# Warmup Iteration   1: 3678.601 us/op
# Warmup Iteration   2: 3650.110 us/op
# Warmup Iteration   3: 2532.119 us/op
# Warmup Iteration   4: 2397.666 us/op
# Warmup Iteration   5: 2383.622 us/op
Iteration   1: 2448.819 us/op
Iteration   2: 2693.259 us/op
Iteration   3: 2326.250 us/op
Iteration   4: 2261.085 us/op
Iteration   5: 2395.465 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2616.874 ±(99.9%) 357.308 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 1 
    [2300.000, 2350.000) = 1 
    [2350.000, 2400.000) = 1 
    [2400.000, 2450.000) = 1 
    [2450.000, 2500.000) = 0 
    [2500.000, 2550.000) = 0 
    [2550.000, 2600.000) = 0 
    [2600.000, 2650.000) = 0 
    [2650.000, 2700.000) = 2 
    [2700.000, 2750.000) = 0 
    [2750.000, 2800.000) = 1 
    [2800.000, 2850.000) = 2 
    [2850.000, 2900.000) = 0 
    [2900.000, 2950.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2261.085 us/op
     p(50.0000) =   2690.752 us/op
     p(90.0000) =   2894.892 us/op
     p(95.0000) =   2901.527 us/op
     p(99.0000) =   2901.527 us/op
     p(99.9000) =   2901.527 us/op
     p(99.9900) =   2901.527 us/op
     p(99.9990) =   2901.527 us/op
     p(99.9999) =   2901.527 us/op
    p(100.0000) =   2901.527 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.75)

# Run progress: 92.80% complete, ETA 00:03:20
# Fork: 1 of 2
# Warmup Iteration   1: 3639.684 us/op
# Warmup Iteration   2: 3292.280 us/op
# Warmup Iteration   3: 2933.792 us/op
# Warmup Iteration   4: 2452.519 us/op
# Warmup Iteration   5: 2455.025 us/op
Iteration   1: 2425.114 us/op
Iteration   2: 2517.373 us/op
Iteration   3: 2321.716 us/op
Iteration   4: 2251.403 us/op
Iteration   5: 2322.460 us/op

# Run progress: 92.99% complete, ETA 00:03:14
# Fork: 2 of 2
# Warmup Iteration   1: 3482.918 us/op
# Warmup Iteration   2: 3250.176 us/op
# Warmup Iteration   3: 3058.800 us/op
# Warmup Iteration   4: 2520.320 us/op
# Warmup Iteration   5: 2462.799 us/op
Iteration   1: 2534.980 us/op
Iteration   2: 2648.469 us/op
Iteration   3: 2373.127 us/op
Iteration   4: 2299.257 us/op
Iteration   5: 2358.771 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2405.267 ±(99.9%) 189.153 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 2 
    [2300.000, 2350.000) = 2 
    [2350.000, 2400.000) = 2 
    [2400.000, 2450.000) = 1 
    [2450.000, 2500.000) = 0 
    [2500.000, 2550.000) = 2 
    [2550.000, 2600.000) = 0 
    [2600.000, 2650.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2251.403 us/op
     p(50.0000) =   2365.949 us/op
     p(90.0000) =   2637.120 us/op
     p(95.0000) =   2648.469 us/op
     p(99.0000) =   2648.469 us/op
     p(99.9000) =   2648.469 us/op
     p(99.9900) =   2648.469 us/op
     p(99.9990) =   2648.469 us/op
     p(99.9999) =   2648.469 us/op
    p(100.0000) =   2648.469 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.875)

# Run progress: 93.18% complete, ETA 00:03:09
# Fork: 1 of 2
# Warmup Iteration   1: 3416.930 us/op
# Warmup Iteration   2: 3115.401 us/op
# Warmup Iteration   3: 2941.416 us/op
# Warmup Iteration   4: 2488.465 us/op
# Warmup Iteration   5: 2380.248 us/op
Iteration   1: 2411.241 us/op
Iteration   2: 2645.764 us/op
Iteration   3: 2285.686 us/op
Iteration   4: 2301.661 us/op
Iteration   5: 2437.766 us/op

# Run progress: 93.37% complete, ETA 00:03:04
# Fork: 2 of 2
# Warmup Iteration   1: 3492.546 us/op
# Warmup Iteration   2: 3239.853 us/op
# Warmup Iteration   3: 3065.572 us/op
# Warmup Iteration   4: 2479.956 us/op
# Warmup Iteration   5: 2366.320 us/op
Iteration   1: 2524.220 us/op
Iteration   2: 2771.672 us/op
Iteration   3: 2389.225 us/op
Iteration   4: 2311.164 us/op
Iteration   5: 2583.985 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2466.238 ±(99.9%) 244.946 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 1 
    [2300.000, 2350.000) = 2 
    [2350.000, 2400.000) = 1 
    [2400.000, 2450.000) = 2 
    [2450.000, 2500.000) = 0 
    [2500.000, 2550.000) = 1 
    [2550.000, 2600.000) = 1 
    [2600.000, 2650.000) = 1 
    [2650.000, 2700.000) = 0 
    [2700.000, 2750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2285.686 us/op
     p(50.0000) =   2424.504 us/op
     p(90.0000) =   2759.081 us/op
     p(95.0000) =   2771.672 us/op
     p(99.0000) =   2771.672 us/op
     p(99.9000) =   2771.672 us/op
     p(99.9900) =   2771.672 us/op
     p(99.9990) =   2771.672 us/op
     p(99.9999) =   2771.672 us/op
    p(100.0000) =   2771.672 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 1)

# Run progress: 93.56% complete, ETA 00:02:59
# Fork: 1 of 2
# Warmup Iteration   1: 3379.881 us/op
# Warmup Iteration   2: 3264.817 us/op
# Warmup Iteration   3: 2929.389 us/op
# Warmup Iteration   4: 2455.456 us/op
# Warmup Iteration   5: 2437.101 us/op
Iteration   1: 2417.599 us/op
Iteration   2: 2556.675 us/op
Iteration   3: 2284.686 us/op
Iteration   4: 2278.303 us/op
Iteration   5: 2358.767 us/op

# Run progress: 93.75% complete, ETA 00:02:53
# Fork: 2 of 2
# Warmup Iteration   1: 3551.780 us/op
# Warmup Iteration   2: 3165.944 us/op
# Warmup Iteration   3: 2939.325 us/op
# Warmup Iteration   4: 2451.134 us/op
# Warmup Iteration   5: 2464.618 us/op
Iteration   1: 2458.016 us/op
Iteration   2: 2710.922 us/op
Iteration   3: 2296.124 us/op
Iteration   4: 2270.322 us/op
Iteration   5: 2441.678 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2407.309 ±(99.9%) 215.885 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 4 
    [2300.000, 2350.000) = 0 
    [2350.000, 2400.000) = 1 
    [2400.000, 2450.000) = 2 
    [2450.000, 2500.000) = 1 
    [2500.000, 2550.000) = 0 
    [2550.000, 2600.000) = 1 
    [2600.000, 2650.000) = 0 
    [2650.000, 2700.000) = 0 
    [2700.000, 2750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2270.322 us/op
     p(50.0000) =   2388.183 us/op
     p(90.0000) =   2695.497 us/op
     p(95.0000) =   2710.922 us/op
     p(99.0000) =   2710.922 us/op
     p(99.9000) =   2710.922 us/op
     p(99.9900) =   2710.922 us/op
     p(99.9990) =   2710.922 us/op
     p(99.9999) =   2710.922 us/op
    p(100.0000) =   2710.922 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.125)

# Run progress: 93.94% complete, ETA 00:02:48
# Fork: 1 of 2
# Warmup Iteration   1: 3505.743 us/op
# Warmup Iteration   2: 3087.694 us/op
# Warmup Iteration   3: 2862.278 us/op
# Warmup Iteration   4: 2443.124 us/op
# Warmup Iteration   5: 2420.697 us/op
Iteration   1: 2391.840 us/op
Iteration   2: 2733.469 us/op
Iteration   3: 2302.643 us/op
Iteration   4: 2263.933 us/op
Iteration   5: 2314.819 us/op

# Run progress: 94.13% complete, ETA 00:02:43
# Fork: 2 of 2
# Warmup Iteration   1: 3496.442 us/op
# Warmup Iteration   2: 3228.170 us/op
# Warmup Iteration   3: 2849.916 us/op
# Warmup Iteration   4: 2455.924 us/op
# Warmup Iteration   5: 2426.944 us/op
Iteration   1: 2420.494 us/op
Iteration   2: 2518.503 us/op
Iteration   3: 2353.295 us/op
Iteration   4: 2371.362 us/op
Iteration   5: 2468.441 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2413.880 ±(99.9%) 205.782 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 1 
    [2300.000, 2350.000) = 2 
    [2350.000, 2400.000) = 3 
    [2400.000, 2450.000) = 1 
    [2450.000, 2500.000) = 1 
    [2500.000, 2550.000) = 1 
    [2550.000, 2600.000) = 0 
    [2600.000, 2650.000) = 0 
    [2650.000, 2700.000) = 0 
    [2700.000, 2750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2263.933 us/op
     p(50.0000) =   2381.601 us/op
     p(90.0000) =   2711.972 us/op
     p(95.0000) =   2733.469 us/op
     p(99.0000) =   2733.469 us/op
     p(99.9000) =   2733.469 us/op
     p(99.9900) =   2733.469 us/op
     p(99.9990) =   2733.469 us/op
     p(99.9999) =   2733.469 us/op
    p(100.0000) =   2733.469 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.250)

# Run progress: 94.32% complete, ETA 00:02:38
# Fork: 1 of 2
# Warmup Iteration   1: 3590.704 us/op
# Warmup Iteration   2: 3328.722 us/op
# Warmup Iteration   3: 2533.175 us/op
# Warmup Iteration   4: 2440.266 us/op
# Warmup Iteration   5: 2379.414 us/op
Iteration   1: 2432.200 us/op
Iteration   2: 2727.225 us/op
Iteration   3: 2337.942 us/op
Iteration   4: 2296.216 us/op
Iteration   5: 2387.654 us/op

# Run progress: 94.51% complete, ETA 00:02:32
# Fork: 2 of 2
# Warmup Iteration   1: 3493.683 us/op
# Warmup Iteration   2: 3213.599 us/op
# Warmup Iteration   3: 3033.068 us/op
# Warmup Iteration   4: 2466.034 us/op
# Warmup Iteration   5: 2466.570 us/op
Iteration   1: 2390.965 us/op
Iteration   2: 2705.670 us/op
Iteration   3: 2313.551 us/op
Iteration   4: 2344.263 us/op
Iteration   5: 2451.781 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2438.747 ±(99.9%) 233.484 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 1 
    [2300.000, 2350.000) = 3 
    [2350.000, 2400.000) = 2 
    [2400.000, 2450.000) = 1 
    [2450.000, 2500.000) = 1 
    [2500.000, 2550.000) = 0 
    [2550.000, 2600.000) = 0 
    [2600.000, 2650.000) = 0 
    [2650.000, 2700.000) = 0 
    [2700.000, 2750.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   2296.216 us/op
     p(50.0000) =   2389.310 us/op
     p(90.0000) =   2725.070 us/op
     p(95.0000) =   2727.225 us/op
     p(99.0000) =   2727.225 us/op
     p(99.9000) =   2727.225 us/op
     p(99.9900) =   2727.225 us/op
     p(99.9990) =   2727.225 us/op
     p(99.9999) =   2727.225 us/op
    p(100.0000) =   2727.225 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.375)

# Run progress: 94.70% complete, ETA 00:02:27
# Fork: 1 of 2
# Warmup Iteration   1: 3478.750 us/op
# Warmup Iteration   2: 3343.024 us/op
# Warmup Iteration   3: 3053.271 us/op
# Warmup Iteration   4: 2471.068 us/op
# Warmup Iteration   5: 2395.183 us/op
Iteration   1: 2443.381 us/op
Iteration   2: 2728.438 us/op
Iteration   3: 2330.252 us/op
Iteration   4: 2343.387 us/op
Iteration   5: 2385.750 us/op

# Run progress: 94.89% complete, ETA 00:02:22
# Fork: 2 of 2
# Warmup Iteration   1: 3620.640 us/op
# Warmup Iteration   2: 3144.837 us/op
# Warmup Iteration   3: 2836.866 us/op
# Warmup Iteration   4: 2495.673 us/op
# Warmup Iteration   5: 2634.327 us/op
Iteration   1: 2415.199 us/op
Iteration   2: 2697.836 us/op
Iteration   3: 2384.879 us/op
Iteration   4: 2338.746 us/op
Iteration   5: 2333.765 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2440.163 ±(99.9%) 224.923 us/op

  Histogram, us/op:
    [2300.000, 2350.000) = 4 
    [2350.000, 2400.000) = 2 
    [2400.000, 2450.000) = 2 
    [2450.000, 2500.000) = 0 
    [2500.000, 2550.000) = 0 
    [2550.000, 2600.000) = 0 
    [2600.000, 2650.000) = 0 
    [2650.000, 2700.000) = 1 
    [2700.000, 2750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2330.252 us/op
     p(50.0000) =   2385.315 us/op
     p(90.0000) =   2725.378 us/op
     p(95.0000) =   2728.438 us/op
     p(99.0000) =   2728.438 us/op
     p(99.9000) =   2728.438 us/op
     p(99.9900) =   2728.438 us/op
     p(99.9990) =   2728.438 us/op
     p(99.9999) =   2728.438 us/op
    p(100.0000) =   2728.438 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.5)

# Run progress: 95.08% complete, ETA 00:02:16
# Fork: 1 of 2
# Warmup Iteration   1: 3762.788 us/op
# Warmup Iteration   2: 3128.864 us/op
# Warmup Iteration   3: 3069.617 us/op
# Warmup Iteration   4: 2424.150 us/op
# Warmup Iteration   5: 2432.079 us/op
Iteration   1: 2470.446 us/op
Iteration   2: 2629.938 us/op
Iteration   3: 2336.178 us/op
Iteration   4: 2319.178 us/op
Iteration   5: 2347.691 us/op

# Run progress: 95.27% complete, ETA 00:02:11
# Fork: 2 of 2
# Warmup Iteration   1: 3596.033 us/op
# Warmup Iteration   2: 3078.534 us/op
# Warmup Iteration   3: 2979.221 us/op
# Warmup Iteration   4: 2361.699 us/op
# Warmup Iteration   5: 2396.171 us/op
Iteration   1: 2424.148 us/op
Iteration   2: 2646.348 us/op
Iteration   3: 2265.855 us/op
Iteration   4: 2269.069 us/op
Iteration   5: 2363.438 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2407.229 ±(99.9%) 206.804 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 2 
    [2300.000, 2350.000) = 3 
    [2350.000, 2400.000) = 1 
    [2400.000, 2450.000) = 1 
    [2450.000, 2500.000) = 1 
    [2500.000, 2550.000) = 0 
    [2550.000, 2600.000) = 0 
    [2600.000, 2650.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   2265.855 us/op
     p(50.0000) =   2355.565 us/op
     p(90.0000) =   2644.707 us/op
     p(95.0000) =   2646.348 us/op
     p(99.0000) =   2646.348 us/op
     p(99.9000) =   2646.348 us/op
     p(99.9900) =   2646.348 us/op
     p(99.9990) =   2646.348 us/op
     p(99.9999) =   2646.348 us/op
    p(100.0000) =   2646.348 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.625)

# Run progress: 95.45% complete, ETA 00:02:06
# Fork: 1 of 2
# Warmup Iteration   1: 3345.863 us/op
# Warmup Iteration   2: 3192.868 us/op
# Warmup Iteration   3: 2908.489 us/op
# Warmup Iteration   4: 2523.533 us/op
# Warmup Iteration   5: 2413.883 us/op
Iteration   1: 2380.859 us/op
Iteration   2: 2536.504 us/op
Iteration   3: 2264.798 us/op
Iteration   4: 2178.404 us/op
Iteration   5: 2286.887 us/op

# Run progress: 95.64% complete, ETA 00:02:01
# Fork: 2 of 2
# Warmup Iteration   1: 3447.731 us/op
# Warmup Iteration   2: 3158.545 us/op
# Warmup Iteration   3: 3134.411 us/op
# Warmup Iteration   4: 2427.058 us/op
# Warmup Iteration   5: 2475.536 us/op
Iteration   1: 2459.355 us/op
Iteration   2: 2869.590 us/op
Iteration   3: 2422.259 us/op
Iteration   4: 2292.643 us/op
Iteration   5: 2379.941 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2407.124 ±(99.9%) 291.741 us/op

  Histogram, us/op:
    [2100.000, 2150.000) = 0 
    [2150.000, 2200.000) = 1 
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 3 
    [2300.000, 2350.000) = 0 
    [2350.000, 2400.000) = 2 
    [2400.000, 2450.000) = 1 
    [2450.000, 2500.000) = 1 
    [2500.000, 2550.000) = 1 
    [2550.000, 2600.000) = 0 
    [2600.000, 2650.000) = 0 
    [2650.000, 2700.000) = 0 
    [2700.000, 2750.000) = 0 
    [2750.000, 2800.000) = 0 
    [2800.000, 2850.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2178.404 us/op
     p(50.0000) =   2380.400 us/op
     p(90.0000) =   2836.281 us/op
     p(95.0000) =   2869.590 us/op
     p(99.0000) =   2869.590 us/op
     p(99.9000) =   2869.590 us/op
     p(99.9900) =   2869.590 us/op
     p(99.9990) =   2869.590 us/op
     p(99.9999) =   2869.590 us/op
    p(100.0000) =   2869.590 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.75)

# Run progress: 95.83% complete, ETA 00:01:55
# Fork: 1 of 2
# Warmup Iteration   1: 3771.201 us/op
# Warmup Iteration   2: 3172.665 us/op
# Warmup Iteration   3: 2986.838 us/op
# Warmup Iteration   4: 2390.621 us/op
# Warmup Iteration   5: 2443.289 us/op
Iteration   1: 2430.241 us/op
Iteration   2: 2704.298 us/op
Iteration   3: 2291.302 us/op
Iteration   4: 2256.972 us/op
Iteration   5: 2313.135 us/op

# Run progress: 96.02% complete, ETA 00:01:50
# Fork: 2 of 2
# Warmup Iteration   1: 3779.347 us/op
# Warmup Iteration   2: 3423.455 us/op
# Warmup Iteration   3: 2578.991 us/op
# Warmup Iteration   4: 2425.174 us/op
# Warmup Iteration   5: 2445.984 us/op
Iteration   1: 2537.841 us/op
Iteration   2: 2814.013 us/op
Iteration   3: 2348.657 us/op
Iteration   4: 2389.950 us/op
Iteration   5: 2403.903 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2449.031 ±(99.9%) 277.150 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 2 
    [2300.000, 2350.000) = 2 
    [2350.000, 2400.000) = 1 
    [2400.000, 2450.000) = 2 
    [2450.000, 2500.000) = 0 
    [2500.000, 2550.000) = 1 
    [2550.000, 2600.000) = 0 
    [2600.000, 2650.000) = 0 
    [2650.000, 2700.000) = 0 
    [2700.000, 2750.000) = 1 
    [2750.000, 2800.000) = 0 
    [2800.000, 2850.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2256.972 us/op
     p(50.0000) =   2396.926 us/op
     p(90.0000) =   2803.042 us/op
     p(95.0000) =   2814.013 us/op
     p(99.0000) =   2814.013 us/op
     p(99.9000) =   2814.013 us/op
     p(99.9900) =   2814.013 us/op
     p(99.9990) =   2814.013 us/op
     p(99.9999) =   2814.013 us/op
    p(100.0000) =   2814.013 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.875)

# Run progress: 96.21% complete, ETA 00:01:45
# Fork: 1 of 2
# Warmup Iteration   1: 3654.565 us/op
# Warmup Iteration   2: 3609.345 us/op
# Warmup Iteration   3: 2605.121 us/op
# Warmup Iteration   4: 2357.197 us/op
# Warmup Iteration   5: 2388.952 us/op
Iteration   1: 2425.625 us/op
Iteration   2: 2699.106 us/op
Iteration   3: 2283.034 us/op
Iteration   4: 2260.054 us/op
Iteration   5: 2366.353 us/op

# Run progress: 96.40% complete, ETA 00:01:40
# Fork: 2 of 2
# Warmup Iteration   1: 3575.072 us/op
# Warmup Iteration   2: 3130.405 us/op
# Warmup Iteration   3: 3019.450 us/op
# Warmup Iteration   4: 2494.649 us/op
# Warmup Iteration   5: 2443.491 us/op
Iteration   1: 2446.681 us/op
Iteration   2: 2629.654 us/op
Iteration   3: 2338.829 us/op
Iteration   4: 2348.259 us/op
Iteration   5: 2395.753 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2419.335 ±(99.9%) 215.075 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 2 
    [2300.000, 2350.000) = 2 
    [2350.000, 2400.000) = 2 
    [2400.000, 2450.000) = 2 
    [2450.000, 2500.000) = 0 
    [2500.000, 2550.000) = 0 
    [2550.000, 2600.000) = 0 
    [2600.000, 2650.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2260.054 us/op
     p(50.0000) =   2381.053 us/op
     p(90.0000) =   2692.161 us/op
     p(95.0000) =   2699.106 us/op
     p(99.0000) =   2699.106 us/op
     p(99.9000) =   2699.106 us/op
     p(99.9900) =   2699.106 us/op
     p(99.9990) =   2699.106 us/op
     p(99.9999) =   2699.106 us/op
    p(100.0000) =   2699.106 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 1)

# Run progress: 96.59% complete, ETA 00:01:34
# Fork: 1 of 2
# Warmup Iteration   1: 3505.871 us/op
# Warmup Iteration   2: 3234.644 us/op
# Warmup Iteration   3: 2770.939 us/op
# Warmup Iteration   4: 2537.467 us/op
# Warmup Iteration   5: 2474.565 us/op
Iteration   1: 2454.774 us/op
Iteration   2: 2700.806 us/op
Iteration   3: 2362.825 us/op
Iteration   4: 2305.196 us/op
Iteration   5: 2356.462 us/op

# Run progress: 96.78% complete, ETA 00:01:29
# Fork: 2 of 2
# Warmup Iteration   1: 3892.861 us/op
# Warmup Iteration   2: 3411.956 us/op
# Warmup Iteration   3: 2530.647 us/op
# Warmup Iteration   4: 2542.507 us/op
# Warmup Iteration   5: 2379.458 us/op
Iteration   1: 2427.977 us/op
Iteration   2: 2665.391 us/op
Iteration   3: 2352.900 us/op
Iteration   4: 2280.203 us/op
Iteration   5: 2317.062 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2422.360 ±(99.9%) 222.775 us/op

  Histogram, us/op:
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 1 
    [2300.000, 2350.000) = 2 
    [2350.000, 2400.000) = 3 
    [2400.000, 2450.000) = 1 
    [2450.000, 2500.000) = 1 
    [2500.000, 2550.000) = 0 
    [2550.000, 2600.000) = 0 
    [2600.000, 2650.000) = 0 
    [2650.000, 2700.000) = 1 
    [2700.000, 2750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2280.203 us/op
     p(50.0000) =   2359.644 us/op
     p(90.0000) =   2697.265 us/op
     p(95.0000) =   2700.806 us/op
     p(99.0000) =   2700.806 us/op
     p(99.9000) =   2700.806 us/op
     p(99.9900) =   2700.806 us/op
     p(99.9990) =   2700.806 us/op
     p(99.9999) =   2700.806 us/op
    p(100.0000) =   2700.806 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.125)

# Run progress: 96.97% complete, ETA 00:01:24
# Fork: 1 of 2
# Warmup Iteration   1: 6027.143 us/op
# Warmup Iteration   2: 4943.832 us/op
# Warmup Iteration   3: 4002.913 us/op
# Warmup Iteration   4: 4477.034 us/op
# Warmup Iteration   5: 4479.699 us/op
Iteration   1: 4902.811 us/op
Iteration   2: 5156.646 us/op
Iteration   3: 4881.259 us/op
Iteration   4: 4988.315 us/op
Iteration   5: 4997.359 us/op

# Run progress: 97.16% complete, ETA 00:01:19
# Fork: 2 of 2
# Warmup Iteration   1: 4828.372 us/op
# Warmup Iteration   2: 5196.458 us/op
# Warmup Iteration   3: 4201.046 us/op
# Warmup Iteration   4: 3950.907 us/op
# Warmup Iteration   5: 3891.467 us/op
Iteration   1: 3908.542 us/op
Iteration   2: 4411.780 us/op
Iteration   3: 3879.108 us/op
Iteration   4: 3906.825 us/op
Iteration   5: 3928.877 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   4496.152 ±(99.9%) 819.697 us/op

  Histogram, us/op:
    [3000.000, 3250.000) = 0 
    [3250.000, 3500.000) = 0 
    [3500.000, 3750.000) = 0 
    [3750.000, 4000.000) = 4 
    [4000.000, 4250.000) = 0 
    [4250.000, 4500.000) = 1 
    [4500.000, 4750.000) = 0 
    [4750.000, 5000.000) = 4 
    [5000.000, 5250.000) = 1 
    [5250.000, 5500.000) = 0 
    [5500.000, 5750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   3879.108 us/op
     p(50.0000) =   4646.520 us/op
     p(90.0000) =   5140.717 us/op
     p(95.0000) =   5156.646 us/op
     p(99.0000) =   5156.646 us/op
     p(99.9000) =   5156.646 us/op
     p(99.9900) =   5156.646 us/op
     p(99.9990) =   5156.646 us/op
     p(99.9999) =   5156.646 us/op
    p(100.0000) =   5156.646 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.250)

# Run progress: 97.35% complete, ETA 00:01:13
# Fork: 1 of 2
# Warmup Iteration   1: 5147.460 us/op
# Warmup Iteration   2: 5233.201 us/op
# Warmup Iteration   3: 4109.905 us/op
# Warmup Iteration   4: 4046.351 us/op
# Warmup Iteration   5: 3987.923 us/op
Iteration   1: 3982.622 us/op
Iteration   2: 4334.411 us/op
Iteration   3: 3964.660 us/op
Iteration   4: 3850.324 us/op
Iteration   5: 4035.697 us/op

# Run progress: 97.54% complete, ETA 00:01:08
# Fork: 2 of 2
# Warmup Iteration   1: 4955.966 us/op
# Warmup Iteration   2: 4973.525 us/op
# Warmup Iteration   3: 3997.926 us/op
# Warmup Iteration   4: 3920.145 us/op
# Warmup Iteration   5: 3915.953 us/op
Iteration   1: 3965.791 us/op
Iteration   2: 4225.191 us/op
Iteration   3: 3825.128 us/op
Iteration   4: 3790.349 us/op
Iteration   5: 3855.362 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   3982.954 ±(99.9%) 267.374 us/op

  Histogram, us/op:
    [3700.000, 3750.000) = 0 
    [3750.000, 3800.000) = 1 
    [3800.000, 3850.000) = 1 
    [3850.000, 3900.000) = 2 
    [3900.000, 3950.000) = 0 
    [3950.000, 4000.000) = 3 
    [4000.000, 4050.000) = 1 
    [4050.000, 4100.000) = 0 
    [4100.000, 4150.000) = 0 
    [4150.000, 4200.000) = 0 
    [4200.000, 4250.000) = 1 
    [4250.000, 4300.000) = 0 
    [4300.000, 4350.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   3790.349 us/op
     p(50.0000) =   3965.226 us/op
     p(90.0000) =   4323.489 us/op
     p(95.0000) =   4334.411 us/op
     p(99.0000) =   4334.411 us/op
     p(99.9000) =   4334.411 us/op
     p(99.9900) =   4334.411 us/op
     p(99.9990) =   4334.411 us/op
     p(99.9999) =   4334.411 us/op
    p(100.0000) =   4334.411 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.375)

# Run progress: 97.73% complete, ETA 00:01:03
# Fork: 1 of 2
# Warmup Iteration   1: 4842.653 us/op
# Warmup Iteration   2: 5028.584 us/op
# Warmup Iteration   3: 3955.865 us/op
# Warmup Iteration   4: 4016.100 us/op
# Warmup Iteration   5: 3921.986 us/op
Iteration   1: 3988.239 us/op
Iteration   2: 4354.451 us/op
Iteration   3: 3846.769 us/op
Iteration   4: 3820.008 us/op
Iteration   5: 3995.504 us/op

# Run progress: 97.92% complete, ETA 00:00:57
# Fork: 2 of 2
# Warmup Iteration   1: 4840.955 us/op
# Warmup Iteration   2: 4841.065 us/op
# Warmup Iteration   3: 4066.667 us/op
# Warmup Iteration   4: 3859.816 us/op
# Warmup Iteration   5: 3920.464 us/op
Iteration   1: 4021.420 us/op
Iteration   2: 4335.679 us/op
Iteration   3: 3927.566 us/op
Iteration   4: 3818.747 us/op
Iteration   5: 3905.725 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   4001.411 ±(99.9%) 294.619 us/op

  Histogram, us/op:
    [3800.000, 3850.000) = 3 
    [3850.000, 3900.000) = 0 
    [3900.000, 3950.000) = 2 
    [3950.000, 4000.000) = 2 
    [4000.000, 4050.000) = 1 
    [4050.000, 4100.000) = 0 
    [4100.000, 4150.000) = 0 
    [4150.000, 4200.000) = 0 
    [4200.000, 4250.000) = 0 
    [4250.000, 4300.000) = 0 
    [4300.000, 4350.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   3818.747 us/op
     p(50.0000) =   3957.903 us/op
     p(90.0000) =   4352.574 us/op
     p(95.0000) =   4354.451 us/op
     p(99.0000) =   4354.451 us/op
     p(99.9000) =   4354.451 us/op
     p(99.9900) =   4354.451 us/op
     p(99.9990) =   4354.451 us/op
     p(99.9999) =   4354.451 us/op
    p(100.0000) =   4354.451 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.5)

# Run progress: 98.11% complete, ETA 00:00:52
# Fork: 1 of 2
# Warmup Iteration   1: 4760.627 us/op
# Warmup Iteration   2: 4666.164 us/op
# Warmup Iteration   3: 4498.948 us/op
# Warmup Iteration   4: 3979.992 us/op
# Warmup Iteration   5: 3960.976 us/op
Iteration   1: 4030.167 us/op
Iteration   2: 4445.294 us/op
Iteration   3: 4026.689 us/op
Iteration   4: 3935.040 us/op
Iteration   5: 4059.906 us/op

# Run progress: 98.30% complete, ETA 00:00:47
# Fork: 2 of 2
# Warmup Iteration   1: 5014.492 us/op
# Warmup Iteration   2: 4791.497 us/op
# Warmup Iteration   3: 4019.770 us/op
# Warmup Iteration   4: 4092.432 us/op
# Warmup Iteration   5: 4142.385 us/op
Iteration   1: 4350.970 us/op
Iteration   2: 4297.192 us/op
Iteration   3: 3852.285 us/op
Iteration   4: 3868.499 us/op
Iteration   5: 4030.434 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   4089.648 ±(99.9%) 310.204 us/op

  Histogram, us/op:
    [3800.000, 3850.000) = 0 
    [3850.000, 3900.000) = 2 
    [3900.000, 3950.000) = 1 
    [3950.000, 4000.000) = 0 
    [4000.000, 4050.000) = 3 
    [4050.000, 4100.000) = 1 
    [4100.000, 4150.000) = 0 
    [4150.000, 4200.000) = 0 
    [4200.000, 4250.000) = 0 
    [4250.000, 4300.000) = 1 
    [4300.000, 4350.000) = 0 
    [4350.000, 4400.000) = 1 
    [4400.000, 4450.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   3852.285 us/op
     p(50.0000) =   4030.301 us/op
     p(90.0000) =   4435.862 us/op
     p(95.0000) =   4445.294 us/op
     p(99.0000) =   4445.294 us/op
     p(99.9000) =   4445.294 us/op
     p(99.9900) =   4445.294 us/op
     p(99.9990) =   4445.294 us/op
     p(99.9999) =   4445.294 us/op
    p(100.0000) =   4445.294 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.625)

# Run progress: 98.48% complete, ETA 00:00:42
# Fork: 1 of 2
# Warmup Iteration   1: 5002.268 us/op
# Warmup Iteration   2: 5078.648 us/op
# Warmup Iteration   3: 4171.126 us/op
# Warmup Iteration   4: 3908.454 us/op
# Warmup Iteration   5: 4033.617 us/op
Iteration   1: 4077.197 us/op
Iteration   2: 4259.468 us/op
Iteration   3: 3933.181 us/op
Iteration   4: 4007.640 us/op
Iteration   5: 4327.312 us/op

# Run progress: 98.67% complete, ETA 00:00:36
# Fork: 2 of 2
# Warmup Iteration   1: 4940.289 us/op
# Warmup Iteration   2: 4983.231 us/op
# Warmup Iteration   3: 4112.521 us/op
# Warmup Iteration   4: 3949.036 us/op
# Warmup Iteration   5: 3975.749 us/op
Iteration   1: 3917.018 us/op
Iteration   2: 4254.708 us/op
Iteration   3: 3990.859 us/op
Iteration   4: 4059.038 us/op
Iteration   5: 4078.358 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   4090.478 ±(99.9%) 216.493 us/op

  Histogram, us/op:
    [3900.000, 3950.000) = 2 
    [3950.000, 4000.000) = 1 
    [4000.000, 4050.000) = 1 
    [4050.000, 4100.000) = 3 
    [4100.000, 4150.000) = 0 
    [4150.000, 4200.000) = 0 
    [4200.000, 4250.000) = 0 
    [4250.000, 4300.000) = 2 
    [4300.000, 4350.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   3917.018 us/op
     p(50.0000) =   4068.118 us/op
     p(90.0000) =   4320.528 us/op
     p(95.0000) =   4327.312 us/op
     p(99.0000) =   4327.312 us/op
     p(99.9000) =   4327.312 us/op
     p(99.9900) =   4327.312 us/op
     p(99.9990) =   4327.312 us/op
     p(99.9999) =   4327.312 us/op
    p(100.0000) =   4327.312 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.75)

# Run progress: 98.86% complete, ETA 00:00:31
# Fork: 1 of 2
# Warmup Iteration   1: 5168.941 us/op
# Warmup Iteration   2: 5127.377 us/op
# Warmup Iteration   3: 4186.850 us/op
# Warmup Iteration   4: 4117.513 us/op
# Warmup Iteration   5: 4118.373 us/op
Iteration   1: 4032.858 us/op
Iteration   2: 4259.402 us/op
Iteration   3: 3966.156 us/op
Iteration   4: 4111.823 us/op
Iteration   5: 4676.459 us/op

# Run progress: 99.05% complete, ETA 00:00:26
# Fork: 2 of 2
# Warmup Iteration   1: 5136.742 us/op
# Warmup Iteration   2: 4956.573 us/op
# Warmup Iteration   3: 4145.501 us/op
# Warmup Iteration   4: 4009.472 us/op
# Warmup Iteration   5: 3974.233 us/op
Iteration   1: 4067.426 us/op
Iteration   2: 4362.266 us/op
Iteration   3: 4028.020 us/op
Iteration   4: 3866.172 us/op
Iteration   5: 4070.983 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   4144.156 ±(99.9%) 353.242 us/op

  Histogram, us/op:
    [3800.000, 3850.000) = 0 
    [3850.000, 3900.000) = 1 
    [3900.000, 3950.000) = 0 
    [3950.000, 4000.000) = 1 
    [4000.000, 4050.000) = 2 
    [4050.000, 4100.000) = 2 
    [4100.000, 4150.000) = 1 
    [4150.000, 4200.000) = 0 
    [4200.000, 4250.000) = 0 
    [4250.000, 4300.000) = 1 
    [4300.000, 4350.000) = 0 
    [4350.000, 4400.000) = 1 
    [4400.000, 4450.000) = 0 
    [4450.000, 4500.000) = 0 
    [4500.000, 4550.000) = 0 
    [4550.000, 4600.000) = 0 
    [4600.000, 4650.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   3866.172 us/op
     p(50.0000) =   4069.205 us/op
     p(90.0000) =   4645.040 us/op
     p(95.0000) =   4676.459 us/op
     p(99.0000) =   4676.459 us/op
     p(99.9000) =   4676.459 us/op
     p(99.9900) =   4676.459 us/op
     p(99.9990) =   4676.459 us/op
     p(99.9999) =   4676.459 us/op
    p(100.0000) =   4676.459 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.875)

# Run progress: 99.24% complete, ETA 00:00:21
# Fork: 1 of 2
# Warmup Iteration   1: 5049.558 us/op
# Warmup Iteration   2: 4656.437 us/op
# Warmup Iteration   3: 4402.368 us/op
# Warmup Iteration   4: 3916.923 us/op
# Warmup Iteration   5: 3912.194 us/op
Iteration   1: 4060.878 us/op
Iteration   2: 4295.250 us/op
Iteration   3: 3950.908 us/op
Iteration   4: 3835.800 us/op
Iteration   5: 3964.009 us/op

# Run progress: 99.43% complete, ETA 00:00:15
# Fork: 2 of 2
# Warmup Iteration   1: 5172.827 us/op
# Warmup Iteration   2: 4925.141 us/op
# Warmup Iteration   3: 4137.577 us/op
# Warmup Iteration   4: 3988.652 us/op
# Warmup Iteration   5: 3933.743 us/op
Iteration   1: 4045.442 us/op
Iteration   2: 4385.052 us/op
Iteration   3: 3905.940 us/op
Iteration   4: 3794.431 us/op
Iteration   5: 3824.020 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   4006.173 ±(99.9%) 299.659 us/op

  Histogram, us/op:
    [3700.000, 3750.000) = 0 
    [3750.000, 3800.000) = 1 
    [3800.000, 3850.000) = 2 
    [3850.000, 3900.000) = 0 
    [3900.000, 3950.000) = 1 
    [3950.000, 4000.000) = 2 
    [4000.000, 4050.000) = 1 
    [4050.000, 4100.000) = 1 
    [4100.000, 4150.000) = 0 
    [4150.000, 4200.000) = 0 
    [4200.000, 4250.000) = 0 
    [4250.000, 4300.000) = 1 
    [4300.000, 4350.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   3794.431 us/op
     p(50.0000) =   3957.458 us/op
     p(90.0000) =   4376.072 us/op
     p(95.0000) =   4385.052 us/op
     p(99.0000) =   4385.052 us/op
     p(99.9000) =   4385.052 us/op
     p(99.9900) =   4385.052 us/op
     p(99.9990) =   4385.052 us/op
     p(99.9999) =   4385.052 us/op
    p(100.0000) =   4385.052 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10000 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 1)

# Run progress: 99.62% complete, ETA 00:00:10
# Fork: 1 of 2
# Warmup Iteration   1: 5261.384 us/op
# Warmup Iteration   2: 5279.245 us/op
# Warmup Iteration   3: 4141.201 us/op
# Warmup Iteration   4: 4054.522 us/op
# Warmup Iteration   5: 4038.044 us/op
Iteration   1: 4191.516 us/op
Iteration   2: 4742.628 us/op
Iteration   3: 4904.426 us/op
Iteration   4: 4916.444 us/op
Iteration   5: 4885.169 us/op

# Run progress: 99.81% complete, ETA 00:00:05
# Fork: 2 of 2
# Warmup Iteration   1: 5136.863 us/op
# Warmup Iteration   2: 5159.733 us/op
# Warmup Iteration   3: 4234.484 us/op
# Warmup Iteration   4: 3938.081 us/op
# Warmup Iteration   5: 3968.614 us/op
Iteration   1: 3907.842 us/op
Iteration   2: 4296.736 us/op
Iteration   3: 3906.962 us/op
Iteration   4: 3881.813 us/op
Iteration   5: 3952.831 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   4358.637 ±(99.9%) 688.176 us/op

  Histogram, us/op:
    [3000.000, 3125.000) = 0 
    [3125.000, 3250.000) = 0 
    [3250.000, 3375.000) = 0 
    [3375.000, 3500.000) = 0 
    [3500.000, 3625.000) = 0 
    [3625.000, 3750.000) = 0 
    [3750.000, 3875.000) = 0 
    [3875.000, 4000.000) = 4 
    [4000.000, 4125.000) = 0 
    [4125.000, 4250.000) = 1 
    [4250.000, 4375.000) = 1 
    [4375.000, 4500.000) = 0 
    [4500.000, 4625.000) = 0 
    [4625.000, 4750.000) = 1 
    [4750.000, 4875.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   3881.813 us/op
     p(50.0000) =   4244.126 us/op
     p(90.0000) =   4915.242 us/op
     p(95.0000) =   4916.444 us/op
     p(99.0000) =   4916.444 us/op
     p(99.9000) =   4916.444 us/op
     p(99.9900) =   4916.444 us/op
     p(99.9990) =   4916.444 us/op
     p(99.9999) =   4916.444 us/op
    p(100.0000) =   4916.444 us/op


# Run complete. Total time: 00:46:21

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                    (initialCapacity)  (loadFactor)  Mode  Cnt     Score      Error  Units
JavaHashMapBenchMarkPut.put                                 16         0.125    ss   10  1461.132 ±  278.864  us/op
JavaHashMapBenchMarkPut.put                                 16         0.250    ss   10  1287.367 ±  288.485  us/op
JavaHashMapBenchMarkPut.put                                 16         0.375    ss   10  1361.958 ±  200.351  us/op
JavaHashMapBenchMarkPut.put                                 16           0.5    ss   10  1514.292 ±  278.097  us/op
JavaHashMapBenchMarkPut.put                                 16         0.625    ss   10  1250.914 ±  185.546  us/op
JavaHashMapBenchMarkPut.put                                 16          0.75    ss   10  1256.325 ±  255.974  us/op
JavaHashMapBenchMarkPut.put                                 16         0.875    ss   10  1231.028 ±  150.220  us/op
JavaHashMapBenchMarkPut.put                                 16             1    ss   10  1345.387 ±  172.644  us/op
JavaHashMapBenchMarkPut.put                                100         0.125    ss   10  1735.305 ±  292.426  us/op
JavaHashMapBenchMarkPut.put                                100         0.250    ss   10  1255.576 ±  263.079  us/op
JavaHashMapBenchMarkPut.put                                100         0.375    ss   10  1323.176 ±  174.175  us/op
JavaHashMapBenchMarkPut.put                                100           0.5    ss   10  1469.150 ±  344.062  us/op
JavaHashMapBenchMarkPut.put                                100         0.625    ss   10  1275.624 ±  365.084  us/op
JavaHashMapBenchMarkPut.put                                100          0.75    ss   10  1211.696 ±  175.021  us/op
JavaHashMapBenchMarkPut.put                                100         0.875    ss   10  1241.288 ±  115.156  us/op
JavaHashMapBenchMarkPut.put                                100             1    ss   10  1324.258 ±  201.016  us/op
JavaHashMapBenchMarkPut.put                               1024         0.125    ss   10  1461.516 ±  332.260  us/op
JavaHashMapBenchMarkPut.put                               1024         0.250    ss   10  1232.503 ±  282.602  us/op
JavaHashMapBenchMarkPut.put                               1024         0.375    ss   10  1237.266 ±  155.357  us/op
JavaHashMapBenchMarkPut.put                               1024           0.5    ss   10  1408.672 ±  136.389  us/op
JavaHashMapBenchMarkPut.put                               1024         0.625    ss   10  1188.330 ±  213.373  us/op
JavaHashMapBenchMarkPut.put                               1024          0.75    ss   10  1296.530 ±  259.437  us/op
JavaHashMapBenchMarkPut.put                               1024         0.875    ss   10  1302.780 ±  191.864  us/op
JavaHashMapBenchMarkPut.put                               1024             1    ss   10  1360.523 ±  215.111  us/op
JavaHashMapBenchMarkPut.put                               1000         0.125    ss   10  1448.390 ±  289.113  us/op
JavaHashMapBenchMarkPut.put                               1000         0.250    ss   10  1231.177 ±  288.819  us/op
JavaHashMapBenchMarkPut.put                               1000         0.375    ss   10  1260.048 ±  218.145  us/op
JavaHashMapBenchMarkPut.put                               1000           0.5    ss   10  1374.628 ±  163.645  us/op
JavaHashMapBenchMarkPut.put                               1000         0.625    ss   10  1199.483 ±  310.032  us/op
JavaHashMapBenchMarkPut.put                               1000          0.75    ss   10  1272.426 ±  315.095  us/op
JavaHashMapBenchMarkPut.put                               1000         0.875    ss   10  1250.945 ±  164.480  us/op
JavaHashMapBenchMarkPut.put                               1000             1    ss   10  1330.307 ±  232.756  us/op
JavaHashMapBenchMarkPut.put                              10000         0.125    ss   10  1379.069 ±  258.403  us/op
JavaHashMapBenchMarkPut.put                              10000         0.250    ss   10  1272.779 ±  183.802  us/op
JavaHashMapBenchMarkPut.put                              10000         0.375    ss   10  1008.782 ±  142.261  us/op
JavaHashMapBenchMarkPut.put                              10000           0.5    ss   10  1111.177 ±  205.066  us/op
JavaHashMapBenchMarkPut.put                              10000         0.625    ss   10   860.923 ±  215.128  us/op
JavaHashMapBenchMarkPut.put                              10000          0.75    ss   10   802.517 ±  157.870  us/op
JavaHashMapBenchMarkPut.put                              10000         0.875    ss   10   823.528 ±  180.837  us/op
JavaHashMapBenchMarkPut.put                              10000             1    ss   10   802.730 ±  160.101  us/op
JavaHashMapBenchMarkPut.put                              65536         0.125    ss   10  1264.448 ±  247.625  us/op
JavaHashMapBenchMarkPut.put                              65536         0.250    ss   10   900.169 ±  215.468  us/op
JavaHashMapBenchMarkPut.put                              65536         0.375    ss   10   916.262 ±  204.010  us/op
JavaHashMapBenchMarkPut.put                              65536           0.5    ss   10   971.780 ±  306.033  us/op
JavaHashMapBenchMarkPut.put                              65536         0.625    ss   10   878.099 ±  199.626  us/op
JavaHashMapBenchMarkPut.put                              65536          0.75    ss   10   879.159 ±  167.328  us/op
JavaHashMapBenchMarkPut.put                              65536         0.875    ss   10   885.466 ±  208.094  us/op
JavaHashMapBenchMarkPut.put                              65536             1    ss   10   879.774 ±  210.130  us/op
JavaHashMapBenchMarkPut.put                             100000         0.125    ss   10   993.132 ±  173.955  us/op
JavaHashMapBenchMarkPut.put                             100000         0.250    ss   10   985.322 ±  173.942  us/op
JavaHashMapBenchMarkPut.put                             100000         0.375    ss   10  1013.572 ±  276.108  us/op
JavaHashMapBenchMarkPut.put                             100000           0.5    ss   10   990.824 ±  215.828  us/op
JavaHashMapBenchMarkPut.put                             100000         0.625    ss   10   971.335 ±  180.456  us/op
JavaHashMapBenchMarkPut.put                             100000          0.75    ss   10   988.488 ±  207.784  us/op
JavaHashMapBenchMarkPut.put                             100000         0.875    ss   10   977.380 ±  198.213  us/op
JavaHashMapBenchMarkPut.put                             100000             1    ss   10   981.322 ±  213.489  us/op
JavaHashMapBenchMarkPut.put                             524288         0.125    ss   10  1681.911 ±  295.730  us/op
JavaHashMapBenchMarkPut.put                             524288         0.250    ss   10  1677.309 ±  330.975  us/op
JavaHashMapBenchMarkPut.put                             524288         0.375    ss   10  1658.675 ±  311.804  us/op
JavaHashMapBenchMarkPut.put                             524288           0.5    ss   10  1667.860 ±  265.341  us/op
JavaHashMapBenchMarkPut.put                             524288         0.625    ss   10  1673.452 ±  295.903  us/op
JavaHashMapBenchMarkPut.put                             524288          0.75    ss   10  1654.049 ±  272.025  us/op
JavaHashMapBenchMarkPut.put                             524288         0.875    ss   10  1648.437 ±  295.844  us/op
JavaHashMapBenchMarkPut.put                             524288             1    ss   10  1664.373 ±  317.434  us/op
JavaHashMapBenchMarkPut.put                            1000000         0.125    ss   10  2410.708 ±  239.680  us/op
JavaHashMapBenchMarkPut.put                            1000000         0.250    ss   10  2391.136 ±  192.111  us/op
JavaHashMapBenchMarkPut.put                            1000000         0.375    ss   10  2406.172 ±  253.491  us/op
JavaHashMapBenchMarkPut.put                            1000000           0.5    ss   10  2392.758 ±  162.985  us/op
JavaHashMapBenchMarkPut.put                            1000000         0.625    ss   10  2414.380 ±  215.549  us/op
JavaHashMapBenchMarkPut.put                            1000000          0.75    ss   10  2386.538 ±  179.095  us/op
JavaHashMapBenchMarkPut.put                            1000000         0.875    ss   10  2363.350 ±  249.483  us/op
JavaHashMapBenchMarkPut.put                            1000000             1    ss   10  2435.290 ±  339.359  us/op
JavaHashMapBenchMarkPut.put                            1048576         0.125    ss   10  2424.214 ±  166.092  us/op
JavaHashMapBenchMarkPut.put                            1048576         0.250    ss   10  2378.410 ±  206.027  us/op
JavaHashMapBenchMarkPut.put                            1048576         0.375    ss   10  2386.141 ±  199.470  us/op
JavaHashMapBenchMarkPut.put                            1048576           0.5    ss   10  2368.612 ±  263.018  us/op
JavaHashMapBenchMarkPut.put                            1048576         0.625    ss   10  2398.893 ±  222.559  us/op
JavaHashMapBenchMarkPut.put                            1048576          0.75    ss   10  2427.410 ±  254.051  us/op
JavaHashMapBenchMarkPut.put                            1048576         0.875    ss   10  2377.832 ±  136.516  us/op
JavaHashMapBenchMarkPut.put                            1048576             1    ss   10  2402.540 ±  217.562  us/op
JavaHashMapBenchMarkPut.put                            2097152         0.125    ss   10  4246.839 ±  425.968  us/op
JavaHashMapBenchMarkPut.put                            2097152         0.250    ss   10  3908.276 ±  234.811  us/op
JavaHashMapBenchMarkPut.put                            2097152         0.375    ss   10  4401.605 ±  721.130  us/op
JavaHashMapBenchMarkPut.put                            2097152           0.5    ss   10  4029.308 ±  237.808  us/op
JavaHashMapBenchMarkPut.put                            2097152         0.625    ss   10  4018.874 ±  281.042  us/op
JavaHashMapBenchMarkPut.put                            2097152          0.75    ss   10  3984.060 ±  253.210  us/op
JavaHashMapBenchMarkPut.put                            2097152         0.875    ss   10  3965.978 ±  275.718  us/op
JavaHashMapBenchMarkPut.put                            2097152             1    ss   10  3956.500 ±  216.207  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16         0.125    ss   10  1921.598 ± 1411.303  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16         0.250    ss   10  1287.236 ±  293.776  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16         0.375    ss   10  1331.841 ±  194.200  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16           0.5    ss   10  1429.556 ±  200.756  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16         0.625    ss   10  1249.475 ±  199.105  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16          0.75    ss   10  1312.292 ±  204.590  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16         0.875    ss   10  1316.298 ±  286.680  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16             1    ss   10  1360.539 ±  203.096  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100         0.125    ss   10  2195.154 ± 1389.940  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100         0.250    ss   10  1263.481 ±  289.959  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100         0.375    ss   10  1326.059 ±  213.253  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100           0.5    ss   10  1434.080 ±  178.778  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100         0.625    ss   10  1248.991 ±  174.608  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100          0.75    ss   10  1259.305 ±  235.148  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100         0.875    ss   10  1307.233 ±  251.124  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100             1    ss   10  1387.363 ±  248.490  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024         0.125    ss   10  1941.676 ± 1469.346  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024         0.250    ss   10  1268.063 ±  279.650  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024         0.375    ss   10  1331.976 ±  227.088  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024           0.5    ss   10  1447.102 ±  193.007  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024         0.625    ss   10  1201.138 ±  192.745  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024          0.75    ss   10  1274.301 ±  176.948  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024         0.875    ss   10  1323.729 ±  264.810  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024             1    ss   10  1368.659 ±  185.465  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000         0.125    ss   10  1934.654 ± 1466.707  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000         0.250    ss   10  1246.033 ±  268.271  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000         0.375    ss   10  1299.701 ±  188.212  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000           0.5    ss   10  1422.610 ±  199.970  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000         0.625    ss   10  1231.136 ±  156.064  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000          0.75    ss   10  1245.979 ±  166.385  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000         0.875    ss   10  1301.382 ±  235.167  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000             1    ss   10  1373.498 ±  200.567  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000         0.125    ss   10  1407.092 ±  277.390  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000         0.250    ss   10  1287.129 ±  182.650  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000         0.375    ss   10  1097.684 ±  195.351  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000           0.5    ss   10  1128.244 ±  189.263  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000         0.625    ss   10   872.089 ±  190.634  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000          0.75    ss   10  1028.548 ±  317.723  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000         0.875    ss   10   861.335 ±  197.668  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000             1    ss   10   857.426 ±  192.113  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536         0.125    ss   10  1266.927 ±  258.231  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536         0.250    ss   10   926.678 ±  165.644  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536         0.375    ss   10   935.196 ±  187.844  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536           0.5    ss   10   931.951 ±  186.388  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536         0.625    ss   10   938.936 ±  222.265  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536          0.75    ss   10   934.158 ±  222.217  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536         0.875    ss   10   949.127 ±  171.399  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536             1    ss   10   947.737 ±  174.043  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000         0.125    ss   10  1025.362 ±  194.387  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000         0.250    ss   10  1047.342 ±  177.658  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000         0.375    ss   10  1023.636 ±  165.836  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000           0.5    ss   10  1011.990 ±  171.738  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000         0.625    ss   10  1020.568 ±  190.476  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000          0.75    ss   10  1046.358 ±  224.670  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000         0.875    ss   10  1023.831 ±  170.203  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000             1    ss   10  1039.917 ±  227.856  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288         0.125    ss   10  1723.625 ±  306.240  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288         0.250    ss   10  1732.855 ±  306.989  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288         0.375    ss   10  1738.923 ±  309.795  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288           0.5    ss   10  1729.269 ±  264.553  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288         0.625    ss   10  1695.740 ±  256.292  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288          0.75    ss   10  1724.247 ±  302.965  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288         0.875    ss   10  1749.435 ±  235.640  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288             1    ss   10  1738.636 ±  276.780  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000         0.125    ss   10  2425.503 ±  149.488  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000         0.250    ss   10  2454.189 ±  220.841  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000         0.375    ss   10  2453.109 ±  184.574  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000           0.5    ss   10  2449.145 ±  196.648  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000         0.625    ss   10  2425.969 ±  172.928  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000          0.75    ss   10  2451.446 ±  225.345  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000         0.875    ss   10  2500.439 ±  177.044  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000             1    ss   10  2489.248 ±  342.189  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576         0.125    ss   10  2424.716 ±  213.026  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576         0.250    ss   10  2447.729 ±  161.177  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576         0.375    ss   10  2446.874 ±  215.203  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576           0.5    ss   10  2456.062 ±  265.024  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576         0.625    ss   10  2450.572 ±  207.996  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576          0.75    ss   10  2461.193 ±  268.931  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576         0.875    ss   10  2450.299 ±  271.171  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576             1    ss   10  2443.460 ±  263.032  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152         0.125    ss   10  4273.381 ±  757.034  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152         0.250    ss   10  4034.852 ±  375.011  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152         0.375    ss   10  3966.635 ±  240.499  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152           0.5    ss   10  4740.241 ±  419.858  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152         0.625    ss   10  4013.391 ±  248.414  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152          0.75    ss   10  3994.650 ±  281.732  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152         0.875    ss   10  3999.799 ±  188.647  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152             1    ss   10  4047.970 ±  211.718  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16         0.125    ss   10  1441.257 ±  308.331  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16         0.250    ss   10  1234.787 ±  275.945  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16         0.375    ss   10  1310.304 ±  276.963  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16           0.5    ss   10  1312.521 ±  229.874  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16         0.625    ss   10  1199.522 ±  253.799  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16          0.75    ss   10  1280.149 ±  246.228  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16         0.875    ss   10  1271.139 ±  227.568  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16             1    ss   10  1335.135 ±  262.329  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100         0.125    ss   10  1712.749 ±  274.825  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100         0.250    ss   10  1244.688 ±  267.223  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100         0.375    ss   10  1282.565 ±  197.878  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100           0.5    ss   10  1373.501 ±  228.843  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100         0.625    ss   10  1228.772 ±  167.702  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100          0.75    ss   10  1216.074 ±  246.969  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100         0.875    ss   10  1261.752 ±  237.891  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100             1    ss   10  1341.442 ±  211.257  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024         0.125    ss   10  1413.814 ±  257.155  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024         0.250    ss   10  1233.366 ±  266.445  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024         0.375    ss   10  1274.798 ±  257.098  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024           0.5    ss   10  1340.836 ±  189.385  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024         0.625    ss   10  1181.407 ±  188.683  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024          0.75    ss   10  1215.482 ±  212.603  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024         0.875    ss   10  1247.458 ±  184.017  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024             1    ss   10  1335.063 ±  244.107  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000         0.125    ss   10  1426.671 ±  246.951  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000         0.250    ss   10  1217.806 ±  274.078  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000         0.375    ss   10  1265.826 ±  233.441  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000           0.5    ss   10  1404.189 ±  243.560  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000         0.625    ss   10  1167.326 ±  171.585  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000          0.75    ss   10  1203.384 ±  133.775  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000         0.875    ss   10  1268.406 ±  177.890  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000             1    ss   10  1312.157 ±  155.239  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000         0.125    ss   10  1426.377 ±  378.611  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000         0.250    ss   10  1301.944 ±  240.986  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000         0.375    ss   10  1041.216 ±  227.949  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000           0.5    ss   10  1099.047 ±  248.288  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000         0.625    ss   10   831.342 ±  198.451  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000          0.75    ss   10   843.741 ±  223.409  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000         0.875    ss   10   842.925 ±  195.608  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000             1    ss   10   848.012 ±  223.559  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536         0.125    ss   10  1245.615 ±  305.828  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536         0.250    ss   10   904.679 ±  239.325  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536         0.375    ss   10   897.159 ±  216.261  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536           0.5    ss   10   889.170 ±  203.303  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536         0.625    ss   10   890.391 ±  186.973  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536          0.75    ss   10   898.616 ±  185.284  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536         0.875    ss   10   884.609 ±  165.931  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536             1    ss   10   902.759 ±  184.260  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000         0.125    ss   10  1032.151 ±  271.009  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000         0.250    ss   10  1002.920 ±  180.787  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000         0.375    ss   10  1011.780 ±  230.661  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000           0.5    ss   10  1003.528 ±  205.276  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000         0.625    ss   10  1000.778 ±  142.812  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000          0.75    ss   10   995.374 ±  172.533  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000         0.875    ss   10  1004.008 ±  189.203  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000             1    ss   10  1026.320 ±  191.086  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288         0.125    ss   10  1701.475 ±  290.029  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288         0.250    ss   10  1673.447 ±  305.685  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288         0.375    ss   10  1674.603 ±  289.490  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288           0.5    ss   10  1700.782 ±  261.904  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288         0.625    ss   10  1709.544 ±  307.173  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288          0.75    ss   10  1725.297 ±  296.057  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288         0.875    ss   10  1716.593 ±  376.337  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288             1    ss   10  1771.381 ±  420.434  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000         0.125    ss   10  2448.408 ±  269.432  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000         0.250    ss   10  2433.309 ±  209.585  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000         0.375    ss   10  2405.917 ±  210.071  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000           0.5    ss   10  2424.285 ±  183.555  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000         0.625    ss   10  2616.874 ±  357.308  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000          0.75    ss   10  2405.267 ±  189.153  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000         0.875    ss   10  2466.238 ±  244.946  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000             1    ss   10  2407.309 ±  215.885  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576         0.125    ss   10  2413.880 ±  205.782  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576         0.250    ss   10  2438.747 ±  233.484  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576         0.375    ss   10  2440.163 ±  224.923  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576           0.5    ss   10  2407.229 ±  206.804  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576         0.625    ss   10  2407.124 ±  291.741  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576          0.75    ss   10  2449.031 ±  277.150  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576         0.875    ss   10  2419.335 ±  215.075  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576             1    ss   10  2422.360 ±  222.775  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152         0.125    ss   10  4496.152 ±  819.697  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152         0.250    ss   10  3982.954 ±  267.374  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152         0.375    ss   10  4001.411 ±  294.619  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152           0.5    ss   10  4089.648 ±  310.204  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152         0.625    ss   10  4090.478 ±  216.493  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152          0.75    ss   10  4144.156 ±  353.242  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152         0.875    ss   10  4006.173 ±  299.659  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152             1    ss   10  4358.637 ±  688.176  us/op

Benchmark result is saved to results/machine_out_10000.csv
