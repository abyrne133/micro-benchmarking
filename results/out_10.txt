# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.125)

# Run progress: 0.00% complete, ETA 00:00:05
# Fork: 1 of 2
# Warmup Iteration   1: 3063.691 us/op
# Warmup Iteration   2: 2441.923 us/op
# Warmup Iteration   3: 1957.922 us/op
# Warmup Iteration   4: 1997.633 us/op
# Warmup Iteration   5: 1778.047 us/op
Iteration   1: 2.061 us/op
Iteration   2: 4.758 us/op
Iteration   3: 11.132 us/op
Iteration   4: 10.567 us/op
Iteration   5: 1.502 us/op

# Run progress: 0.19% complete, ETA 00:46:23
# Fork: 2 of 2
# Warmup Iteration   1: 2986.839 us/op
# Warmup Iteration   2: 2414.332 us/op
# Warmup Iteration   3: 1909.483 us/op
# Warmup Iteration   4: 1909.417 us/op
# Warmup Iteration   5: 1847.852 us/op
Iteration   1: 2.213 us/op
Iteration   2: 15.732 us/op
Iteration   3: 7.026 us/op
Iteration   4: 5.699 us/op
Iteration   5: 1.550 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =      6.224 ±(99.9%) 7.372 us/op

  Histogram, us/op:
    [ 0.000,  1.250) = 0 
    [ 1.250,  2.500) = 4 
    [ 2.500,  3.750) = 0 
    [ 3.750,  5.000) = 1 
    [ 5.000,  6.250) = 1 
    [ 6.250,  7.500) = 1 
    [ 7.500,  8.750) = 0 
    [ 8.750, 10.000) = 0 
    [10.000, 11.250) = 2 
    [11.250, 12.500) = 0 
    [12.500, 13.750) = 0 
    [13.750, 15.000) = 0 
    [15.000, 16.250) = 1 
    [16.250, 17.500) = 0 
    [17.500, 18.750) = 0 

  Percentiles, us/op:
      p(0.0000) =      1.502 us/op
     p(50.0000) =      5.229 us/op
     p(90.0000) =     15.272 us/op
     p(95.0000) =     15.732 us/op
     p(99.0000) =     15.732 us/op
     p(99.9000) =     15.732 us/op
     p(99.9900) =     15.732 us/op
     p(99.9990) =     15.732 us/op
     p(99.9999) =     15.732 us/op
    p(100.0000) =     15.732 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.250)

# Run progress: 0.38% complete, ETA 00:46:12
# Fork: 1 of 2
# Warmup Iteration   1: 3005.300 us/op
# Warmup Iteration   2: 1936.348 us/op
# Warmup Iteration   3: 1642.603 us/op
# Warmup Iteration   4: 1515.953 us/op
# Warmup Iteration   5: 1613.883 us/op
Iteration   1: 1.957 us/op
Iteration   2: 1.740 us/op
Iteration   3: 1.818 us/op
Iteration   4: 1.700 us/op
Iteration   5: 5.999 us/op

# Run progress: 0.57% complete, ETA 00:46:09
# Fork: 2 of 2
# Warmup Iteration   1: 2959.729 us/op
# Warmup Iteration   2: 1828.749 us/op
# Warmup Iteration   3: 1598.948 us/op
# Warmup Iteration   4: 1504.326 us/op
# Warmup Iteration   5: 1586.760 us/op
Iteration   1: 2.045 us/op
Iteration   2: 24.199 us/op
Iteration   3: 2.048 us/op
Iteration   4: 2.051 us/op
Iteration   5: 19.821 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =      6.338 ±(99.9%) 12.733 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 7 
    [ 2.500,  5.000) = 0 
    [ 5.000,  7.500) = 1 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 1 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 1 
    [25.000, 27.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      1.700 us/op
     p(50.0000) =      2.047 us/op
     p(90.0000) =     23.761 us/op
     p(95.0000) =     24.199 us/op
     p(99.0000) =     24.199 us/op
     p(99.9000) =     24.199 us/op
     p(99.9900) =     24.199 us/op
     p(99.9990) =     24.199 us/op
     p(99.9999) =     24.199 us/op
    p(100.0000) =     24.199 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.375)

# Run progress: 0.76% complete, ETA 00:46:01
# Fork: 1 of 2
# Warmup Iteration   1: 2896.645 us/op
# Warmup Iteration   2: 1677.303 us/op
# Warmup Iteration   3: 1625.216 us/op
# Warmup Iteration   4: 1383.240 us/op
# Warmup Iteration   5: 1313.752 us/op
Iteration   1: 1.441 us/op
Iteration   2: 3.577 us/op
Iteration   3: 1.637 us/op
Iteration   4: 1.589 us/op
Iteration   5: 5.554 us/op

# Run progress: 0.95% complete, ETA 00:45:55
# Fork: 2 of 2
# Warmup Iteration   1: 2609.561 us/op
# Warmup Iteration   2: 1637.586 us/op
# Warmup Iteration   3: 1570.257 us/op
# Warmup Iteration   4: 1366.457 us/op
# Warmup Iteration   5: 1306.091 us/op
Iteration   1: 1.581 us/op
Iteration   2: 3.971 us/op
Iteration   3: 1.706 us/op
Iteration   4: 1.715 us/op
Iteration   5: 19.998 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =      4.277 ±(99.9%) 8.612 us/op

  Histogram, us/op:
    [ 0.000,  1.250) = 0 
    [ 1.250,  2.500) = 6 
    [ 2.500,  3.750) = 1 
    [ 3.750,  5.000) = 1 
    [ 5.000,  6.250) = 1 
    [ 6.250,  7.500) = 0 
    [ 7.500,  8.750) = 0 
    [ 8.750, 10.000) = 0 
    [10.000, 11.250) = 0 
    [11.250, 12.500) = 0 
    [12.500, 13.750) = 0 
    [13.750, 15.000) = 0 
    [15.000, 16.250) = 0 
    [16.250, 17.500) = 0 
    [17.500, 18.750) = 0 

  Percentiles, us/op:
      p(0.0000) =      1.441 us/op
     p(50.0000) =      1.711 us/op
     p(90.0000) =     18.554 us/op
     p(95.0000) =     19.998 us/op
     p(99.0000) =     19.998 us/op
     p(99.9000) =     19.998 us/op
     p(99.9900) =     19.998 us/op
     p(99.9990) =     19.998 us/op
     p(99.9999) =     19.998 us/op
    p(100.0000) =     19.998 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.5)

# Run progress: 1.14% complete, ETA 00:45:48
# Fork: 1 of 2
# Warmup Iteration   1: 2728.423 us/op
# Warmup Iteration   2: 1825.612 us/op
# Warmup Iteration   3: 1470.309 us/op
# Warmup Iteration   4: 1494.503 us/op
# Warmup Iteration   5: 1446.240 us/op
Iteration   1: 1.515 us/op
Iteration   2: 1.760 us/op
Iteration   3: 1.763 us/op
Iteration   4: 1.840 us/op
Iteration   5: 1.844 us/op

# Run progress: 1.33% complete, ETA 00:45:42
# Fork: 2 of 2
# Warmup Iteration   1: 2785.368 us/op
# Warmup Iteration   2: 1841.819 us/op
# Warmup Iteration   3: 1678.890 us/op
# Warmup Iteration   4: 1458.694 us/op
# Warmup Iteration   5: 1386.182 us/op
Iteration   1: 1.384 us/op
Iteration   2: 1.584 us/op
Iteration   3: 1.567 us/op
Iteration   4: 1.451 us/op
Iteration   5: 1.796 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =      1.650 ±(99.9%) 0.257 us/op

  Histogram, us/op:
    [1.300, 1.350) = 0 
    [1.350, 1.400) = 1 
    [1.400, 1.450) = 0 
    [1.450, 1.500) = 1 
    [1.500, 1.550) = 1 
    [1.550, 1.600) = 2 
    [1.600, 1.650) = 0 
    [1.650, 1.700) = 0 
    [1.700, 1.750) = 0 
    [1.750, 1.800) = 3 
    [1.800, 1.850) = 2 
    [1.850, 1.900) = 0 

  Percentiles, us/op:
      p(0.0000) =      1.384 us/op
     p(50.0000) =      1.672 us/op
     p(90.0000) =      1.844 us/op
     p(95.0000) =      1.844 us/op
     p(99.0000) =      1.844 us/op
     p(99.9000) =      1.844 us/op
     p(99.9900) =      1.844 us/op
     p(99.9990) =      1.844 us/op
     p(99.9999) =      1.844 us/op
    p(100.0000) =      1.844 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.625)

# Run progress: 1.52% complete, ETA 00:45:37
# Fork: 1 of 2
# Warmup Iteration   1: 2490.479 us/op
# Warmup Iteration   2: 1552.546 us/op
# Warmup Iteration   3: 1399.967 us/op
# Warmup Iteration   4: 1239.475 us/op
# Warmup Iteration   5: 1229.950 us/op
Iteration   1: 1.053 us/op
Iteration   2: 1.411 us/op
Iteration   3: 1.154 us/op
Iteration   4: 1.115 us/op
Iteration   5: 1.295 us/op

# Run progress: 1.70% complete, ETA 00:45:31
# Fork: 2 of 2
# Warmup Iteration   1: 2851.136 us/op
# Warmup Iteration   2: 1481.957 us/op
# Warmup Iteration   3: 1364.807 us/op
# Warmup Iteration   4: 1228.078 us/op
# Warmup Iteration   5: 1221.634 us/op
Iteration   1: 1.424 us/op
Iteration   2: 1.146 us/op
Iteration   3: 1.182 us/op
Iteration   4: 1.026 us/op
Iteration   5: 1.233 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =      1.204 ±(99.9%) 0.207 us/op

  Histogram, us/op:
    [1.000, 1.050) = 1 
    [1.050, 1.100) = 1 
    [1.100, 1.150) = 2 
    [1.150, 1.200) = 2 
    [1.200, 1.250) = 1 
    [1.250, 1.300) = 1 
    [1.300, 1.350) = 0 
    [1.350, 1.400) = 0 
    [1.400, 1.450) = 2 

  Percentiles, us/op:
      p(0.0000) =      1.026 us/op
     p(50.0000) =      1.168 us/op
     p(90.0000) =      1.423 us/op
     p(95.0000) =      1.424 us/op
     p(99.0000) =      1.424 us/op
     p(99.9000) =      1.424 us/op
     p(99.9900) =      1.424 us/op
     p(99.9990) =      1.424 us/op
     p(99.9999) =      1.424 us/op
    p(100.0000) =      1.424 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.75)

# Run progress: 1.89% complete, ETA 00:45:25
# Fork: 1 of 2
# Warmup Iteration   1: 2622.917 us/op
# Warmup Iteration   2: 1647.227 us/op
# Warmup Iteration   3: 1572.442 us/op
# Warmup Iteration   4: 1339.673 us/op
# Warmup Iteration   5: 1279.032 us/op
Iteration   1: 3.048 us/op
Iteration   2: 1.134 us/op
Iteration   3: 1.078 us/op
Iteration   4: 3.553 us/op
Iteration   5: 1.086 us/op

# Run progress: 2.08% complete, ETA 00:45:19
# Fork: 2 of 2
# Warmup Iteration   1: 2508.128 us/op
# Warmup Iteration   2: 1623.264 us/op
# Warmup Iteration   3: 1726.460 us/op
# Warmup Iteration   4: 1411.904 us/op
# Warmup Iteration   5: 1285.205 us/op
Iteration   1: 1.166 us/op
Iteration   2: 1.517 us/op
Iteration   3: 1.112 us/op
Iteration   4: 4.511 us/op
Iteration   5: 1.082 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =      1.929 ±(99.9%) 1.936 us/op

  Histogram, us/op:
    [1.000, 1.250) = 6 
    [1.250, 1.500) = 0 
    [1.500, 1.750) = 1 
    [1.750, 2.000) = 0 
    [2.000, 2.250) = 0 
    [2.250, 2.500) = 0 
    [2.500, 2.750) = 0 
    [2.750, 3.000) = 0 
    [3.000, 3.250) = 1 
    [3.250, 3.500) = 0 
    [3.500, 3.750) = 1 
    [3.750, 4.000) = 0 
    [4.000, 4.250) = 0 
    [4.250, 4.500) = 0 
    [4.500, 4.750) = 1 

  Percentiles, us/op:
      p(0.0000) =      1.078 us/op
     p(50.0000) =      1.150 us/op
     p(90.0000) =      4.415 us/op
     p(95.0000) =      4.511 us/op
     p(99.0000) =      4.511 us/op
     p(99.9000) =      4.511 us/op
     p(99.9900) =      4.511 us/op
     p(99.9990) =      4.511 us/op
     p(99.9999) =      4.511 us/op
    p(100.0000) =      4.511 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.875)

# Run progress: 2.27% complete, ETA 00:45:14
# Fork: 1 of 2
# Warmup Iteration   1: 2606.191 us/op
# Warmup Iteration   2: 1660.163 us/op
# Warmup Iteration   3: 1502.654 us/op
# Warmup Iteration   4: 1337.665 us/op
# Warmup Iteration   5: 1316.517 us/op
Iteration   1: 1.093 us/op
Iteration   2: 1.032 us/op
Iteration   3: 1.138 us/op
Iteration   4: 0.954 us/op
Iteration   5: 1.153 us/op

# Run progress: 2.46% complete, ETA 00:45:08
# Fork: 2 of 2
# Warmup Iteration   1: 2704.295 us/op
# Warmup Iteration   2: 1766.061 us/op
# Warmup Iteration   3: 1536.827 us/op
# Warmup Iteration   4: 1463.453 us/op
# Warmup Iteration   5: 1359.875 us/op
Iteration   1: 1.235 us/op
Iteration   2: 1.260 us/op
Iteration   3: 1.138 us/op
Iteration   4: 1.215 us/op
Iteration   5: 1.171 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =      1.139 ±(99.9%) 0.141 us/op

  Histogram, us/op:
    [0.900, 0.925) = 0 
    [0.925, 0.950) = 0 
    [0.950, 0.975) = 1 
    [0.975, 1.000) = 0 
    [1.000, 1.025) = 0 
    [1.025, 1.050) = 1 
    [1.050, 1.075) = 0 
    [1.075, 1.100) = 1 
    [1.100, 1.125) = 0 
    [1.125, 1.150) = 2 
    [1.150, 1.175) = 2 
    [1.175, 1.200) = 0 
    [1.200, 1.225) = 1 
    [1.225, 1.250) = 1 
    [1.250, 1.275) = 1 

  Percentiles, us/op:
      p(0.0000) =      0.954 us/op
     p(50.0000) =      1.146 us/op
     p(90.0000) =      1.258 us/op
     p(95.0000) =      1.260 us/op
     p(99.0000) =      1.260 us/op
     p(99.9000) =      1.260 us/op
     p(99.9900) =      1.260 us/op
     p(99.9990) =      1.260 us/op
     p(99.9999) =      1.260 us/op
    p(100.0000) =      1.260 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 1)

# Run progress: 2.65% complete, ETA 00:45:03
# Fork: 1 of 2
# Warmup Iteration   1: 2687.492 us/op
# Warmup Iteration   2: 1739.284 us/op
# Warmup Iteration   3: 1509.256 us/op
# Warmup Iteration   4: 1401.559 us/op
# Warmup Iteration   5: 1404.919 us/op
Iteration   1: 1.078 us/op
Iteration   2: 1.490 us/op
Iteration   3: 1.328 us/op
Iteration   4: 1.093 us/op
Iteration   5: 1.121 us/op

# Run progress: 2.84% complete, ETA 00:44:57
# Fork: 2 of 2
# Warmup Iteration   1: 2664.797 us/op
# Warmup Iteration   2: 2021.956 us/op
# Warmup Iteration   3: 1692.798 us/op
# Warmup Iteration   4: 1335.187 us/op
# Warmup Iteration   5: 1447.743 us/op
Iteration   1: 1.026 us/op
Iteration   2: 0.950 us/op
Iteration   3: 1.101 us/op
Iteration   4: 1.381 us/op
Iteration   5: 1.046 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =      1.161 ±(99.9%) 0.265 us/op

  Histogram, us/op:
    [0.900, 0.950) = 1 
    [0.950, 1.000) = 0 
    [1.000, 1.050) = 2 
    [1.050, 1.100) = 2 
    [1.100, 1.150) = 2 
    [1.150, 1.200) = 0 
    [1.200, 1.250) = 0 
    [1.250, 1.300) = 0 
    [1.300, 1.350) = 1 
    [1.350, 1.400) = 1 
    [1.400, 1.450) = 0 

  Percentiles, us/op:
      p(0.0000) =      0.950 us/op
     p(50.0000) =      1.097 us/op
     p(90.0000) =      1.479 us/op
     p(95.0000) =      1.490 us/op
     p(99.0000) =      1.490 us/op
     p(99.9000) =      1.490 us/op
     p(99.9900) =      1.490 us/op
     p(99.9990) =      1.490 us/op
     p(99.9999) =      1.490 us/op
    p(100.0000) =      1.490 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.125)

# Run progress: 3.03% complete, ETA 00:44:52
# Fork: 1 of 2
# Warmup Iteration   1: 3154.710 us/op
# Warmup Iteration   2: 2750.169 us/op
# Warmup Iteration   3: 2074.754 us/op
# Warmup Iteration   4: 2390.655 us/op
# Warmup Iteration   5: 2041.353 us/op
Iteration   1: 1.126 us/op
Iteration   2: 1.118 us/op
Iteration   3: 1.189 us/op
Iteration   4: 68.842 us/op
Iteration   5: 1.219 us/op

# Run progress: 3.22% complete, ETA 00:44:47
# Fork: 2 of 2
# Warmup Iteration   1: 3011.414 us/op
# Warmup Iteration   2: 2503.065 us/op
# Warmup Iteration   3: 2077.056 us/op
# Warmup Iteration   4: 2207.534 us/op
# Warmup Iteration   5: 1886.522 us/op
Iteration   1: 1.078 us/op
Iteration   2: 1.038 us/op
Iteration   3: 1.112 us/op
Iteration   4: 5.289 us/op
Iteration   5: 1.234 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =      8.324 ±(99.9%) 32.208 us/op

  Histogram, us/op:
    [ 0.000,  5.000) = 8 
    [ 5.000, 10.000) = 1 
    [10.000, 15.000) = 0 
    [15.000, 20.000) = 0 
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 0 
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 0 
    [55.000, 60.000) = 0 
    [60.000, 65.000) = 0 

  Percentiles, us/op:
      p(0.0000) =      1.038 us/op
     p(50.0000) =      1.158 us/op
     p(90.0000) =     62.487 us/op
     p(95.0000) =     68.842 us/op
     p(99.0000) =     68.842 us/op
     p(99.9000) =     68.842 us/op
     p(99.9900) =     68.842 us/op
     p(99.9990) =     68.842 us/op
     p(99.9999) =     68.842 us/op
    p(100.0000) =     68.842 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.250)

# Run progress: 3.41% complete, ETA 00:44:42
# Fork: 1 of 2
# Warmup Iteration   1: 2894.604 us/op
# Warmup Iteration   2: 1941.210 us/op
# Warmup Iteration   3: 1526.658 us/op
# Warmup Iteration   4: 1632.710 us/op
# Warmup Iteration   5: 1686.249 us/op
Iteration   1: 1.004 us/op
Iteration   2: 1.009 us/op
Iteration   3: 1.145 us/op
Iteration   4: 36.253 us/op
Iteration   5: 1.190 us/op

# Run progress: 3.60% complete, ETA 00:44:36
# Fork: 2 of 2
# Warmup Iteration   1: 4740.068 us/op
# Warmup Iteration   2: 3437.365 us/op
# Warmup Iteration   3: 2134.417 us/op
# Warmup Iteration   4: 2138.430 us/op
# Warmup Iteration   5: 2220.515 us/op
Iteration   1: 1.385 us/op
Iteration   2: 1.526 us/op
Iteration   3: 1.402 us/op
Iteration   4: 5.271 us/op
Iteration   5: 1.587 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =      5.177 ±(99.9%) 16.619 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 8 
    [ 2.500,  5.000) = 0 
    [ 5.000,  7.500) = 1 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 1 

  Percentiles, us/op:
      p(0.0000) =      1.004 us/op
     p(50.0000) =      1.394 us/op
     p(90.0000) =     33.155 us/op
     p(95.0000) =     36.253 us/op
     p(99.0000) =     36.253 us/op
     p(99.9000) =     36.253 us/op
     p(99.9900) =     36.253 us/op
     p(99.9990) =     36.253 us/op
     p(99.9999) =     36.253 us/op
    p(100.0000) =     36.253 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.375)

# Run progress: 3.79% complete, ETA 00:44:31
# Fork: 1 of 2
# Warmup Iteration   1: 2482.027 us/op
# Warmup Iteration   2: 1756.522 us/op
# Warmup Iteration   3: 1537.632 us/op
# Warmup Iteration   4: 1403.687 us/op
# Warmup Iteration   5: 1363.003 us/op
Iteration   1: 2.906 us/op
Iteration   2: 1.191 us/op
Iteration   3: 5.249 us/op
Iteration   4: 1.257 us/op
Iteration   5: 1.248 us/op

# Run progress: 3.98% complete, ETA 00:44:25
# Fork: 2 of 2
# Warmup Iteration   1: 2834.916 us/op
# Warmup Iteration   2: 1707.506 us/op
# Warmup Iteration   3: 1532.829 us/op
# Warmup Iteration   4: 1355.958 us/op
# Warmup Iteration   5: 1286.280 us/op
Iteration   1: 2.976 us/op
Iteration   2: 1.244 us/op
Iteration   3: 8.855 us/op
Iteration   4: 1.031 us/op
Iteration   5: 1.094 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =      2.705 ±(99.9%) 3.853 us/op

  Histogram, us/op:
    [1.000, 1.500) = 6 
    [1.500, 2.000) = 0 
    [2.000, 2.500) = 0 
    [2.500, 3.000) = 2 
    [3.000, 3.500) = 0 
    [3.500, 4.000) = 0 
    [4.000, 4.500) = 0 
    [4.500, 5.000) = 0 
    [5.000, 5.500) = 1 
    [5.500, 6.000) = 0 
    [6.000, 6.500) = 0 
    [6.500, 7.000) = 0 
    [7.000, 7.500) = 0 
    [7.500, 8.000) = 0 
    [8.000, 8.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      1.031 us/op
     p(50.0000) =      1.253 us/op
     p(90.0000) =      8.494 us/op
     p(95.0000) =      8.855 us/op
     p(99.0000) =      8.855 us/op
     p(99.9000) =      8.855 us/op
     p(99.9900) =      8.855 us/op
     p(99.9990) =      8.855 us/op
     p(99.9999) =      8.855 us/op
    p(100.0000) =      8.855 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.5)

# Run progress: 4.17% complete, ETA 00:44:20
# Fork: 1 of 2
# Warmup Iteration   1: 2680.915 us/op
# Warmup Iteration   2: 1748.747 us/op
# Warmup Iteration   3: 1468.677 us/op
# Warmup Iteration   4: 1461.755 us/op
# Warmup Iteration   5: 1468.553 us/op
Iteration   1: 1.073 us/op
Iteration   2: 1.132 us/op
Iteration   3: 3.933 us/op
Iteration   4: 1.088 us/op
Iteration   5: 3.994 us/op

# Run progress: 4.36% complete, ETA 00:44:15
# Fork: 2 of 2
# Warmup Iteration   1: 2799.871 us/op
# Warmup Iteration   2: 1719.446 us/op
# Warmup Iteration   3: 1486.022 us/op
# Warmup Iteration   4: 1469.566 us/op
# Warmup Iteration   5: 1566.406 us/op
Iteration   1: 1.603 us/op
Iteration   2: 1.205 us/op
Iteration   3: 5.387 us/op
Iteration   4: 1.104 us/op
Iteration   5: 12.770 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =      3.329 ±(99.9%) 5.556 us/op

  Histogram, us/op:
    [ 0.000,  1.250) = 5 
    [ 1.250,  2.500) = 1 
    [ 2.500,  3.750) = 0 
    [ 3.750,  5.000) = 2 
    [ 5.000,  6.250) = 1 
    [ 6.250,  7.500) = 0 
    [ 7.500,  8.750) = 0 
    [ 8.750, 10.000) = 0 
    [10.000, 11.250) = 0 
    [11.250, 12.500) = 0 
    [12.500, 13.750) = 1 
    [13.750, 15.000) = 0 
    [15.000, 16.250) = 0 
    [16.250, 17.500) = 0 
    [17.500, 18.750) = 0 

  Percentiles, us/op:
      p(0.0000) =      1.073 us/op
     p(50.0000) =      1.404 us/op
     p(90.0000) =     12.032 us/op
     p(95.0000) =     12.770 us/op
     p(99.0000) =     12.770 us/op
     p(99.9000) =     12.770 us/op
     p(99.9900) =     12.770 us/op
     p(99.9990) =     12.770 us/op
     p(99.9999) =     12.770 us/op
    p(100.0000) =     12.770 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.625)

# Run progress: 4.55% complete, ETA 00:44:10
# Fork: 1 of 2
# Warmup Iteration   1: 2531.752 us/op
# Warmup Iteration   2: 1796.009 us/op
# Warmup Iteration   3: 1448.808 us/op
# Warmup Iteration   4: 1203.213 us/op
# Warmup Iteration   5: 1458.528 us/op
Iteration   1: 1.260 us/op
Iteration   2: 1.401 us/op
Iteration   3: 1.230 us/op
Iteration   4: 14.997 us/op
Iteration   5: 1.364 us/op

# Run progress: 4.73% complete, ETA 00:44:05
# Fork: 2 of 2
# Warmup Iteration   1: 2661.100 us/op
# Warmup Iteration   2: 1541.636 us/op
# Warmup Iteration   3: 2110.000 us/op
# Warmup Iteration   4: 1994.905 us/op
# Warmup Iteration   5: 1400.199 us/op
Iteration   1: 1.140 us/op
Iteration   2: 1.087 us/op
Iteration   3: 1.101 us/op
Iteration   4: 24.277 us/op
Iteration   5: 1.124 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =      4.898 ±(99.9%) 12.202 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 8 
    [ 2.500,  5.000) = 0 
    [ 5.000,  7.500) = 0 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 1 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 1 
    [25.000, 27.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      1.087 us/op
     p(50.0000) =      1.245 us/op
     p(90.0000) =     23.349 us/op
     p(95.0000) =     24.277 us/op
     p(99.0000) =     24.277 us/op
     p(99.9000) =     24.277 us/op
     p(99.9900) =     24.277 us/op
     p(99.9990) =     24.277 us/op
     p(99.9999) =     24.277 us/op
    p(100.0000) =     24.277 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.75)

# Run progress: 4.92% complete, ETA 00:43:59
# Fork: 1 of 2
# Warmup Iteration   1: 2645.103 us/op
# Warmup Iteration   2: 1590.250 us/op
# Warmup Iteration   3: 1561.005 us/op
# Warmup Iteration   4: 1315.014 us/op
# Warmup Iteration   5: 1247.678 us/op
Iteration   1: 1.000 us/op
Iteration   2: 5.048 us/op
Iteration   3: 1.315 us/op
Iteration   4: 1.092 us/op
Iteration   5: 0.921 us/op

# Run progress: 5.11% complete, ETA 00:43:54
# Fork: 2 of 2
# Warmup Iteration   1: 2590.278 us/op
# Warmup Iteration   2: 1612.950 us/op
# Warmup Iteration   3: 1423.117 us/op
# Warmup Iteration   4: 1228.339 us/op
# Warmup Iteration   5: 1222.359 us/op
Iteration   1: 1.048 us/op
Iteration   2: 3.368 us/op
Iteration   3: 28.179 us/op
Iteration   4: 1.148 us/op
Iteration   5: 1.118 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =      4.424 ±(99.9%) 12.785 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 7 
    [ 2.500,  5.000) = 1 
    [ 5.000,  7.500) = 1 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      0.921 us/op
     p(50.0000) =      1.133 us/op
     p(90.0000) =     25.866 us/op
     p(95.0000) =     28.179 us/op
     p(99.0000) =     28.179 us/op
     p(99.9000) =     28.179 us/op
     p(99.9900) =     28.179 us/op
     p(99.9990) =     28.179 us/op
     p(99.9999) =     28.179 us/op
    p(100.0000) =     28.179 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.875)

# Run progress: 5.30% complete, ETA 00:43:49
# Fork: 1 of 2
# Warmup Iteration   1: 2882.659 us/op
# Warmup Iteration   2: 1612.056 us/op
# Warmup Iteration   3: 1651.900 us/op
# Warmup Iteration   4: 1301.182 us/op
# Warmup Iteration   5: 1331.397 us/op
Iteration   1: 1.329 us/op
Iteration   2: 3.521 us/op
Iteration   3: 1.096 us/op
Iteration   4: 3.230 us/op
Iteration   5: 1.116 us/op

# Run progress: 5.49% complete, ETA 00:43:43
# Fork: 2 of 2
# Warmup Iteration   1: 2727.603 us/op
# Warmup Iteration   2: 1646.621 us/op
# Warmup Iteration   3: 1710.521 us/op
# Warmup Iteration   4: 1322.894 us/op
# Warmup Iteration   5: 1215.641 us/op
Iteration   1: 1.061 us/op
Iteration   2: 5.389 us/op
Iteration   3: 1.126 us/op
Iteration   4: 3.035 us/op
Iteration   5: 0.937 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =      2.184 ±(99.9%) 2.302 us/op

  Histogram, us/op:
    [0.000, 0.500) = 0 
    [0.500, 1.000) = 1 
    [1.000, 1.500) = 5 
    [1.500, 2.000) = 0 
    [2.000, 2.500) = 0 
    [2.500, 3.000) = 0 
    [3.000, 3.500) = 2 
    [3.500, 4.000) = 1 
    [4.000, 4.500) = 0 
    [4.500, 5.000) = 0 
    [5.000, 5.500) = 1 

  Percentiles, us/op:
      p(0.0000) =      0.937 us/op
     p(50.0000) =      1.228 us/op
     p(90.0000) =      5.202 us/op
     p(95.0000) =      5.389 us/op
     p(99.0000) =      5.389 us/op
     p(99.9000) =      5.389 us/op
     p(99.9900) =      5.389 us/op
     p(99.9990) =      5.389 us/op
     p(99.9999) =      5.389 us/op
    p(100.0000) =      5.389 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 1)

# Run progress: 5.68% complete, ETA 00:43:38
# Fork: 1 of 2
# Warmup Iteration   1: 2725.772 us/op
# Warmup Iteration   2: 1768.407 us/op
# Warmup Iteration   3: 1732.144 us/op
# Warmup Iteration   4: 1416.188 us/op
# Warmup Iteration   5: 1349.013 us/op
Iteration   1: 1.156 us/op
Iteration   2: 4.024 us/op
Iteration   3: 1.039 us/op
Iteration   4: 23.631 us/op
Iteration   5: 1.067 us/op

# Run progress: 5.87% complete, ETA 00:43:33
# Fork: 2 of 2
# Warmup Iteration   1: 2484.065 us/op
# Warmup Iteration   2: 1733.149 us/op
# Warmup Iteration   3: 1745.444 us/op
# Warmup Iteration   4: 1463.688 us/op
# Warmup Iteration   5: 1276.425 us/op
Iteration   1: 1.023 us/op
Iteration   2: 5.025 us/op
Iteration   3: 1.090 us/op
Iteration   4: 8.144 us/op
Iteration   5: 1.067 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =      4.727 ±(99.9%) 10.687 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 6 
    [ 2.500,  5.000) = 1 
    [ 5.000,  7.500) = 1 
    [ 7.500, 10.000) = 1 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 1 
    [25.000, 27.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      1.023 us/op
     p(50.0000) =      1.123 us/op
     p(90.0000) =     22.082 us/op
     p(95.0000) =     23.631 us/op
     p(99.0000) =     23.631 us/op
     p(99.9000) =     23.631 us/op
     p(99.9900) =     23.631 us/op
     p(99.9990) =     23.631 us/op
     p(99.9999) =     23.631 us/op
    p(100.0000) =     23.631 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.125)

# Run progress: 6.06% complete, ETA 00:43:27
# Fork: 1 of 2
# Warmup Iteration   1: 3065.850 us/op
# Warmup Iteration   2: 2713.284 us/op
# Warmup Iteration   3: 1838.537 us/op
# Warmup Iteration   4: 1863.030 us/op
# Warmup Iteration   5: 1801.630 us/op
Iteration   1: 4.900 us/op
Iteration   2: 12.868 us/op
Iteration   3: 9.968 us/op
Iteration   4: 3.334 us/op
Iteration   5: 2.889 us/op

# Run progress: 6.25% complete, ETA 00:43:22
# Fork: 2 of 2
# Warmup Iteration   1: 2905.707 us/op
# Warmup Iteration   2: 2329.309 us/op
# Warmup Iteration   3: 1825.633 us/op
# Warmup Iteration   4: 1708.652 us/op
# Warmup Iteration   5: 1624.506 us/op
Iteration   1: 5.001 us/op
Iteration   2: 5.149 us/op
Iteration   3: 6.541 us/op
Iteration   4: 24.772 us/op
Iteration   5: 24.836 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     10.026 ±(99.9%) 12.629 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 3 
    [ 5.000,  7.500) = 3 
    [ 7.500, 10.000) = 1 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 1 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 2 
    [25.000, 27.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      2.889 us/op
     p(50.0000) =      5.845 us/op
     p(90.0000) =     24.830 us/op
     p(95.0000) =     24.836 us/op
     p(99.0000) =     24.836 us/op
     p(99.9000) =     24.836 us/op
     p(99.9900) =     24.836 us/op
     p(99.9990) =     24.836 us/op
     p(99.9999) =     24.836 us/op
    p(100.0000) =     24.836 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.250)

# Run progress: 6.44% complete, ETA 00:43:17
# Fork: 1 of 2
# Warmup Iteration   1: 4441.447 us/op
# Warmup Iteration   2: 2138.786 us/op
# Warmup Iteration   3: 1731.581 us/op
# Warmup Iteration   4: 1473.586 us/op
# Warmup Iteration   5: 1678.408 us/op
Iteration   1: 5.298 us/op
Iteration   2: 4.856 us/op
Iteration   3: 28.426 us/op
Iteration   4: 4.946 us/op
Iteration   5: 18.943 us/op

# Run progress: 6.63% complete, ETA 00:43:11
# Fork: 2 of 2
# Warmup Iteration   1: 2741.279 us/op
# Warmup Iteration   2: 2123.988 us/op
# Warmup Iteration   3: 1561.134 us/op
# Warmup Iteration   4: 1468.347 us/op
# Warmup Iteration   5: 1521.837 us/op
Iteration   1: 17.644 us/op
Iteration   2: 3.280 us/op
Iteration   3: 6.702 us/op
Iteration   4: 5.166 us/op
Iteration   5: 5.254 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     10.052 ±(99.9%) 12.887 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 3 
    [ 5.000,  7.500) = 4 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 2 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      3.280 us/op
     p(50.0000) =      5.276 us/op
     p(90.0000) =     27.478 us/op
     p(95.0000) =     28.426 us/op
     p(99.0000) =     28.426 us/op
     p(99.9000) =     28.426 us/op
     p(99.9900) =     28.426 us/op
     p(99.9990) =     28.426 us/op
     p(99.9999) =     28.426 us/op
    p(100.0000) =     28.426 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.375)

# Run progress: 6.82% complete, ETA 00:43:06
# Fork: 1 of 2
# Warmup Iteration   1: 2453.991 us/op
# Warmup Iteration   2: 1630.968 us/op
# Warmup Iteration   3: 1585.423 us/op
# Warmup Iteration   4: 1319.395 us/op
# Warmup Iteration   5: 1260.657 us/op
Iteration   1: 3.142 us/op
Iteration   2: 4.207 us/op
Iteration   3: 4.092 us/op
Iteration   4: 3.072 us/op
Iteration   5: 4.916 us/op

# Run progress: 7.01% complete, ETA 00:43:01
# Fork: 2 of 2
# Warmup Iteration   1: 2611.808 us/op
# Warmup Iteration   2: 1662.825 us/op
# Warmup Iteration   3: 1508.889 us/op
# Warmup Iteration   4: 1339.946 us/op
# Warmup Iteration   5: 1320.524 us/op
Iteration   1: 3.036 us/op
Iteration   2: 5.033 us/op
Iteration   3: 23.716 us/op
Iteration   4: 3.723 us/op
Iteration   5: 4.095 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =      5.903 ±(99.9%) 9.523 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 8 
    [ 5.000,  7.500) = 1 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 1 
    [25.000, 27.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      3.036 us/op
     p(50.0000) =      4.094 us/op
     p(90.0000) =     21.848 us/op
     p(95.0000) =     23.716 us/op
     p(99.0000) =     23.716 us/op
     p(99.9000) =     23.716 us/op
     p(99.9900) =     23.716 us/op
     p(99.9990) =     23.716 us/op
     p(99.9999) =     23.716 us/op
    p(100.0000) =     23.716 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.5)

# Run progress: 7.20% complete, ETA 00:42:55
# Fork: 1 of 2
# Warmup Iteration   1: 2746.820 us/op
# Warmup Iteration   2: 1743.219 us/op
# Warmup Iteration   3: 1515.135 us/op
# Warmup Iteration   4: 1414.407 us/op
# Warmup Iteration   5: 1409.362 us/op
Iteration   1: 4.929 us/op
Iteration   2: 4.697 us/op
Iteration   3: 5.304 us/op
Iteration   4: 27.808 us/op
Iteration   5: 21.416 us/op

# Run progress: 7.39% complete, ETA 00:42:50
# Fork: 2 of 2
# Warmup Iteration   1: 2898.090 us/op
# Warmup Iteration   2: 1750.939 us/op
# Warmup Iteration   3: 1547.342 us/op
# Warmup Iteration   4: 1374.538 us/op
# Warmup Iteration   5: 1370.672 us/op
Iteration   1: 5.209 us/op
Iteration   2: 4.139 us/op
Iteration   3: 5.040 us/op
Iteration   4: 5.269 us/op
Iteration   5: 4.759 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =      8.857 ±(99.9%) 12.769 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 4 
    [ 5.000,  7.500) = 4 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 1 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      4.139 us/op
     p(50.0000) =      5.124 us/op
     p(90.0000) =     27.169 us/op
     p(95.0000) =     27.808 us/op
     p(99.0000) =     27.808 us/op
     p(99.9000) =     27.808 us/op
     p(99.9900) =     27.808 us/op
     p(99.9990) =     27.808 us/op
     p(99.9999) =     27.808 us/op
    p(100.0000) =     27.808 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.625)

# Run progress: 7.58% complete, ETA 00:42:45
# Fork: 1 of 2
# Warmup Iteration   1: 2479.028 us/op
# Warmup Iteration   2: 1494.338 us/op
# Warmup Iteration   3: 1573.763 us/op
# Warmup Iteration   4: 1225.619 us/op
# Warmup Iteration   5: 1171.179 us/op
Iteration   1: 5.286 us/op
Iteration   2: 38.964 us/op
Iteration   3: 4.040 us/op
Iteration   4: 4.373 us/op
Iteration   5: 5.003 us/op

# Run progress: 7.77% complete, ETA 00:42:39
# Fork: 2 of 2
# Warmup Iteration   1: 2344.015 us/op
# Warmup Iteration   2: 1565.361 us/op
# Warmup Iteration   3: 1371.569 us/op
# Warmup Iteration   4: 1182.254 us/op
# Warmup Iteration   5: 1188.623 us/op
Iteration   1: 5.534 us/op
Iteration   2: 3.056 us/op
Iteration   3: 19.612 us/op
Iteration   4: 12.299 us/op
Iteration   5: 4.726 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     10.289 ±(99.9%) 17.061 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 4 
    [ 5.000,  7.500) = 3 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 1 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 1 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      3.056 us/op
     p(50.0000) =      5.145 us/op
     p(90.0000) =     37.029 us/op
     p(95.0000) =     38.964 us/op
     p(99.0000) =     38.964 us/op
     p(99.9000) =     38.964 us/op
     p(99.9900) =     38.964 us/op
     p(99.9990) =     38.964 us/op
     p(99.9999) =     38.964 us/op
    p(100.0000) =     38.964 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.75)

# Run progress: 7.95% complete, ETA 00:42:34
# Fork: 1 of 2
# Warmup Iteration   1: 2398.282 us/op
# Warmup Iteration   2: 1536.085 us/op
# Warmup Iteration   3: 1500.323 us/op
# Warmup Iteration   4: 1269.652 us/op
# Warmup Iteration   5: 1191.847 us/op
Iteration   1: 2.965 us/op
Iteration   2: 4.766 us/op
Iteration   3: 5.196 us/op
Iteration   4: 19.651 us/op
Iteration   5: 4.868 us/op

# Run progress: 8.14% complete, ETA 00:42:29
# Fork: 2 of 2
# Warmup Iteration   1: 2371.922 us/op
# Warmup Iteration   2: 1614.340 us/op
# Warmup Iteration   3: 1257.114 us/op
# Warmup Iteration   4: 1241.908 us/op
# Warmup Iteration   5: 1238.197 us/op
Iteration   1: 4.384 us/op
Iteration   2: 3.255 us/op
Iteration   3: 4.955 us/op
Iteration   4: 5.514 us/op
Iteration   5: 4.928 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =      6.048 ±(99.9%) 7.331 us/op

  Histogram, us/op:
    [ 0.000,  1.250) = 0 
    [ 1.250,  2.500) = 0 
    [ 2.500,  3.750) = 2 
    [ 3.750,  5.000) = 5 
    [ 5.000,  6.250) = 2 
    [ 6.250,  7.500) = 0 
    [ 7.500,  8.750) = 0 
    [ 8.750, 10.000) = 0 
    [10.000, 11.250) = 0 
    [11.250, 12.500) = 0 
    [12.500, 13.750) = 0 
    [13.750, 15.000) = 0 
    [15.000, 16.250) = 0 
    [16.250, 17.500) = 0 
    [17.500, 18.750) = 0 

  Percentiles, us/op:
      p(0.0000) =      2.965 us/op
     p(50.0000) =      4.898 us/op
     p(90.0000) =     18.237 us/op
     p(95.0000) =     19.651 us/op
     p(99.0000) =     19.651 us/op
     p(99.9000) =     19.651 us/op
     p(99.9900) =     19.651 us/op
     p(99.9990) =     19.651 us/op
     p(99.9999) =     19.651 us/op
    p(100.0000) =     19.651 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.875)

# Run progress: 8.33% complete, ETA 00:42:24
# Fork: 1 of 2
# Warmup Iteration   1: 2910.302 us/op
# Warmup Iteration   2: 1659.809 us/op
# Warmup Iteration   3: 1458.191 us/op
# Warmup Iteration   4: 1280.888 us/op
# Warmup Iteration   5: 1356.967 us/op
Iteration   1: 3.744 us/op
Iteration   2: 4.704 us/op
Iteration   3: 5.622 us/op
Iteration   4: 3.545 us/op
Iteration   5: 4.625 us/op

# Run progress: 8.52% complete, ETA 00:42:18
# Fork: 2 of 2
# Warmup Iteration   1: 2649.978 us/op
# Warmup Iteration   2: 1641.346 us/op
# Warmup Iteration   3: 1534.892 us/op
# Warmup Iteration   4: 1411.670 us/op
# Warmup Iteration   5: 1260.484 us/op
Iteration   1: 23.097 us/op
Iteration   2: 3.596 us/op
Iteration   3: 5.150 us/op
Iteration   4: 5.024 us/op
Iteration   5: 5.052 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =      6.416 ±(99.9%) 8.927 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 5 
    [ 5.000,  7.500) = 4 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 1 
    [25.000, 27.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      3.545 us/op
     p(50.0000) =      4.864 us/op
     p(90.0000) =     21.350 us/op
     p(95.0000) =     23.097 us/op
     p(99.0000) =     23.097 us/op
     p(99.9000) =     23.097 us/op
     p(99.9900) =     23.097 us/op
     p(99.9990) =     23.097 us/op
     p(99.9999) =     23.097 us/op
    p(100.0000) =     23.097 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 1)

# Run progress: 8.71% complete, ETA 00:42:13
# Fork: 1 of 2
# Warmup Iteration   1: 2736.774 us/op
# Warmup Iteration   2: 1763.936 us/op
# Warmup Iteration   3: 1531.279 us/op
# Warmup Iteration   4: 1294.779 us/op
# Warmup Iteration   5: 1281.933 us/op
Iteration   1: 4.051 us/op
Iteration   2: 5.299 us/op
Iteration   3: 3.536 us/op
Iteration   4: 2.775 us/op
Iteration   5: 4.918 us/op

# Run progress: 8.90% complete, ETA 00:42:08
# Fork: 2 of 2
# Warmup Iteration   1: 2781.296 us/op
# Warmup Iteration   2: 1732.638 us/op
# Warmup Iteration   3: 1626.037 us/op
# Warmup Iteration   4: 1412.353 us/op
# Warmup Iteration   5: 1363.525 us/op
Iteration   1: 3.606 us/op
Iteration   2: 3.395 us/op
Iteration   3: 4.066 us/op
Iteration   4: 4.273 us/op
Iteration   5: 4.036 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =      3.996 ±(99.9%) 1.110 us/op

  Histogram, us/op:
    [2.000, 2.250) = 0 
    [2.250, 2.500) = 0 
    [2.500, 2.750) = 0 
    [2.750, 3.000) = 1 
    [3.000, 3.250) = 0 
    [3.250, 3.500) = 1 
    [3.500, 3.750) = 2 
    [3.750, 4.000) = 0 
    [4.000, 4.250) = 3 
    [4.250, 4.500) = 1 
    [4.500, 4.750) = 0 
    [4.750, 5.000) = 1 
    [5.000, 5.250) = 0 
    [5.250, 5.500) = 1 
    [5.500, 5.750) = 0 

  Percentiles, us/op:
      p(0.0000) =      2.775 us/op
     p(50.0000) =      4.044 us/op
     p(90.0000) =      5.261 us/op
     p(95.0000) =      5.299 us/op
     p(99.0000) =      5.299 us/op
     p(99.9000) =      5.299 us/op
     p(99.9900) =      5.299 us/op
     p(99.9990) =      5.299 us/op
     p(99.9999) =      5.299 us/op
    p(100.0000) =      5.299 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.125)

# Run progress: 9.09% complete, ETA 00:42:03
# Fork: 1 of 2
# Warmup Iteration   1: 3020.087 us/op
# Warmup Iteration   2: 2221.634 us/op
# Warmup Iteration   3: 1776.881 us/op
# Warmup Iteration   4: 1792.478 us/op
# Warmup Iteration   5: 1694.777 us/op
Iteration   1: 3.535 us/op
Iteration   2: 3.914 us/op
Iteration   3: 28.400 us/op
Iteration   4: 10.203 us/op
Iteration   5: 4.882 us/op

# Run progress: 9.28% complete, ETA 00:41:57
# Fork: 2 of 2
# Warmup Iteration   1: 3089.310 us/op
# Warmup Iteration   2: 2306.167 us/op
# Warmup Iteration   3: 2072.483 us/op
# Warmup Iteration   4: 1822.020 us/op
# Warmup Iteration   5: 1718.216 us/op
Iteration   1: 3.827 us/op
Iteration   2: 4.474 us/op
Iteration   3: 5.684 us/op
Iteration   4: 10.262 us/op
Iteration   5: 8.436 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =      8.362 ±(99.9%) 11.343 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 5 
    [ 5.000,  7.500) = 1 
    [ 7.500, 10.000) = 1 
    [10.000, 12.500) = 2 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      3.535 us/op
     p(50.0000) =      5.283 us/op
     p(90.0000) =     26.586 us/op
     p(95.0000) =     28.400 us/op
     p(99.0000) =     28.400 us/op
     p(99.9000) =     28.400 us/op
     p(99.9900) =     28.400 us/op
     p(99.9990) =     28.400 us/op
     p(99.9999) =     28.400 us/op
    p(100.0000) =     28.400 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.250)

# Run progress: 9.47% complete, ETA 00:41:52
# Fork: 1 of 2
# Warmup Iteration   1: 2648.323 us/op
# Warmup Iteration   2: 1958.423 us/op
# Warmup Iteration   3: 1691.220 us/op
# Warmup Iteration   4: 1485.437 us/op
# Warmup Iteration   5: 1809.240 us/op
Iteration   1: 5.343 us/op
Iteration   2: 6.003 us/op
Iteration   3: 5.703 us/op
Iteration   4: 5.647 us/op
Iteration   5: 5.252 us/op

# Run progress: 9.66% complete, ETA 00:41:47
# Fork: 2 of 2
# Warmup Iteration   1: 2801.007 us/op
# Warmup Iteration   2: 2044.129 us/op
# Warmup Iteration   3: 1735.025 us/op
# Warmup Iteration   4: 1623.270 us/op
# Warmup Iteration   5: 1626.974 us/op
Iteration   1: 3.956 us/op
Iteration   2: 3.878 us/op
Iteration   3: 7.046 us/op
Iteration   4: 5.424 us/op
Iteration   5: 5.135 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =      5.339 ±(99.9%) 1.397 us/op

  Histogram, us/op:
    [3.000, 3.500) = 0 
    [3.500, 4.000) = 2 
    [4.000, 4.500) = 0 
    [4.500, 5.000) = 0 
    [5.000, 5.500) = 4 
    [5.500, 6.000) = 2 
    [6.000, 6.500) = 1 
    [6.500, 7.000) = 0 
    [7.000, 7.500) = 1 

  Percentiles, us/op:
      p(0.0000) =      3.878 us/op
     p(50.0000) =      5.384 us/op
     p(90.0000) =      6.942 us/op
     p(95.0000) =      7.046 us/op
     p(99.0000) =      7.046 us/op
     p(99.9000) =      7.046 us/op
     p(99.9900) =      7.046 us/op
     p(99.9990) =      7.046 us/op
     p(99.9999) =      7.046 us/op
    p(100.0000) =      7.046 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.375)

# Run progress: 9.85% complete, ETA 00:41:41
# Fork: 1 of 2
# Warmup Iteration   1: 2785.041 us/op
# Warmup Iteration   2: 1639.193 us/op
# Warmup Iteration   3: 1538.465 us/op
# Warmup Iteration   4: 1471.626 us/op
# Warmup Iteration   5: 1236.155 us/op
Iteration   1: 5.054 us/op
Iteration   2: 30.150 us/op
Iteration   3: 16.412 us/op
Iteration   4: 4.675 us/op
Iteration   5: 4.679 us/op

# Run progress: 10.04% complete, ETA 00:41:36
# Fork: 2 of 2
# Warmup Iteration   1: 2767.954 us/op
# Warmup Iteration   2: 1676.515 us/op
# Warmup Iteration   3: 1498.804 us/op
# Warmup Iteration   4: 1290.116 us/op
# Warmup Iteration   5: 1842.143 us/op
Iteration   1: 5.548 us/op
Iteration   2: 4.281 us/op
Iteration   3: 3.050 us/op
Iteration   4: 4.820 us/op
Iteration   5: 4.040 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =      8.271 ±(99.9%) 12.962 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 6 
    [ 5.000,  7.500) = 2 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 1 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 1 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      3.050 us/op
     p(50.0000) =      4.750 us/op
     p(90.0000) =     28.776 us/op
     p(95.0000) =     30.150 us/op
     p(99.0000) =     30.150 us/op
     p(99.9000) =     30.150 us/op
     p(99.9900) =     30.150 us/op
     p(99.9990) =     30.150 us/op
     p(99.9999) =     30.150 us/op
    p(100.0000) =     30.150 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.5)

# Run progress: 10.23% complete, ETA 00:41:31
# Fork: 1 of 2
# Warmup Iteration   1: 2900.950 us/op
# Warmup Iteration   2: 1756.855 us/op
# Warmup Iteration   3: 1673.951 us/op
# Warmup Iteration   4: 1412.224 us/op
# Warmup Iteration   5: 1528.266 us/op
Iteration   1: 4.938 us/op
Iteration   2: 6.105 us/op
Iteration   3: 4.433 us/op
Iteration   4: 5.126 us/op
Iteration   5: 15.436 us/op

# Run progress: 10.42% complete, ETA 00:41:25
# Fork: 2 of 2
# Warmup Iteration   1: 2695.257 us/op
# Warmup Iteration   2: 1706.113 us/op
# Warmup Iteration   3: 1507.164 us/op
# Warmup Iteration   4: 1394.080 us/op
# Warmup Iteration   5: 1377.942 us/op
Iteration   1: 4.992 us/op
Iteration   2: 6.143 us/op
Iteration   3: 5.187 us/op
Iteration   4: 5.211 us/op
Iteration   5: 20.276 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =      7.785 ±(99.9%) 8.245 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 3 
    [ 5.000,  7.500) = 5 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 1 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 1 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      4.433 us/op
     p(50.0000) =      5.199 us/op
     p(90.0000) =     19.792 us/op
     p(95.0000) =     20.276 us/op
     p(99.0000) =     20.276 us/op
     p(99.9000) =     20.276 us/op
     p(99.9900) =     20.276 us/op
     p(99.9990) =     20.276 us/op
     p(99.9999) =     20.276 us/op
    p(100.0000) =     20.276 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.625)

# Run progress: 10.61% complete, ETA 00:41:20
# Fork: 1 of 2
# Warmup Iteration   1: 2581.262 us/op
# Warmup Iteration   2: 1661.982 us/op
# Warmup Iteration   3: 1454.109 us/op
# Warmup Iteration   4: 1275.502 us/op
# Warmup Iteration   5: 1197.477 us/op
Iteration   1: 3.749 us/op
Iteration   2: 5.070 us/op
Iteration   3: 5.561 us/op
Iteration   4: 2.844 us/op
Iteration   5: 3.463 us/op

# Run progress: 10.80% complete, ETA 00:41:15
# Fork: 2 of 2
# Warmup Iteration   1: 2611.081 us/op
# Warmup Iteration   2: 1511.155 us/op
# Warmup Iteration   3: 1500.658 us/op
# Warmup Iteration   4: 1148.111 us/op
# Warmup Iteration   5: 1185.917 us/op
Iteration   1: 5.786 us/op
Iteration   2: 5.232 us/op
Iteration   3: 4.913 us/op
Iteration   4: 4.533 us/op
Iteration   5: 5.189 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =      4.634 ±(99.9%) 1.468 us/op

  Histogram, us/op:
    [2.000, 2.250) = 0 
    [2.250, 2.500) = 0 
    [2.500, 2.750) = 0 
    [2.750, 3.000) = 1 
    [3.000, 3.250) = 0 
    [3.250, 3.500) = 1 
    [3.500, 3.750) = 1 
    [3.750, 4.000) = 0 
    [4.000, 4.250) = 0 
    [4.250, 4.500) = 0 
    [4.500, 4.750) = 1 
    [4.750, 5.000) = 1 
    [5.000, 5.250) = 3 
    [5.250, 5.500) = 0 
    [5.500, 5.750) = 1 

  Percentiles, us/op:
      p(0.0000) =      2.844 us/op
     p(50.0000) =      4.992 us/op
     p(90.0000) =      5.764 us/op
     p(95.0000) =      5.786 us/op
     p(99.0000) =      5.786 us/op
     p(99.9000) =      5.786 us/op
     p(99.9900) =      5.786 us/op
     p(99.9990) =      5.786 us/op
     p(99.9999) =      5.786 us/op
    p(100.0000) =      5.786 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.75)

# Run progress: 10.98% complete, ETA 00:41:09
# Fork: 1 of 2
# Warmup Iteration   1: 2475.149 us/op
# Warmup Iteration   2: 1531.335 us/op
# Warmup Iteration   3: 1451.870 us/op
# Warmup Iteration   4: 1227.181 us/op
# Warmup Iteration   5: 1206.251 us/op
Iteration   1: 3.293 us/op
Iteration   2: 5.097 us/op
Iteration   3: 21.776 us/op
Iteration   4: 6.387 us/op
Iteration   5: 4.237 us/op

# Run progress: 11.17% complete, ETA 00:41:04
# Fork: 2 of 2
# Warmup Iteration   1: 2613.709 us/op
# Warmup Iteration   2: 1637.396 us/op
# Warmup Iteration   3: 1554.947 us/op
# Warmup Iteration   4: 1185.811 us/op
# Warmup Iteration   5: 1188.194 us/op
Iteration   1: 3.124 us/op
Iteration   2: 5.134 us/op
Iteration   3: 24.700 us/op
Iteration   4: 9.542 us/op
Iteration   5: 4.852 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =      8.814 ±(99.9%) 11.858 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 4 
    [ 5.000,  7.500) = 3 
    [ 7.500, 10.000) = 1 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 1 
    [22.500, 25.000) = 1 
    [25.000, 27.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      3.124 us/op
     p(50.0000) =      5.116 us/op
     p(90.0000) =     24.408 us/op
     p(95.0000) =     24.700 us/op
     p(99.0000) =     24.700 us/op
     p(99.9000) =     24.700 us/op
     p(99.9900) =     24.700 us/op
     p(99.9990) =     24.700 us/op
     p(99.9999) =     24.700 us/op
    p(100.0000) =     24.700 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.875)

# Run progress: 11.36% complete, ETA 00:40:59
# Fork: 1 of 2
# Warmup Iteration   1: 2754.032 us/op
# Warmup Iteration   2: 1790.661 us/op
# Warmup Iteration   3: 1455.546 us/op
# Warmup Iteration   4: 1284.063 us/op
# Warmup Iteration   5: 1267.586 us/op
Iteration   1: 3.144 us/op
Iteration   2: 27.367 us/op
Iteration   3: 4.817 us/op
Iteration   4: 5.677 us/op
Iteration   5: 4.426 us/op

# Run progress: 11.55% complete, ETA 00:40:53
# Fork: 2 of 2
# Warmup Iteration   1: 3070.319 us/op
# Warmup Iteration   2: 1678.626 us/op
# Warmup Iteration   3: 1380.425 us/op
# Warmup Iteration   4: 1248.209 us/op
# Warmup Iteration   5: 1235.009 us/op
Iteration   1: 3.138 us/op
Iteration   2: 28.146 us/op
Iteration   3: 5.440 us/op
Iteration   4: 5.051 us/op
Iteration   5: 5.190 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =      9.240 ±(99.9%) 14.815 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 4 
    [ 5.000,  7.500) = 4 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 1 

  Percentiles, us/op:
      p(0.0000) =      3.138 us/op
     p(50.0000) =      5.121 us/op
     p(90.0000) =     28.068 us/op
     p(95.0000) =     28.146 us/op
     p(99.0000) =     28.146 us/op
     p(99.9000) =     28.146 us/op
     p(99.9900) =     28.146 us/op
     p(99.9990) =     28.146 us/op
     p(99.9999) =     28.146 us/op
    p(100.0000) =     28.146 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 1)

# Run progress: 11.74% complete, ETA 00:40:48
# Fork: 1 of 2
# Warmup Iteration   1: 3010.831 us/op
# Warmup Iteration   2: 1915.607 us/op
# Warmup Iteration   3: 1598.462 us/op
# Warmup Iteration   4: 1462.804 us/op
# Warmup Iteration   5: 1353.732 us/op
Iteration   1: 3.270 us/op
Iteration   2: 3.298 us/op
Iteration   3: 5.177 us/op
Iteration   4: 6.113 us/op
Iteration   5: 4.216 us/op

# Run progress: 11.93% complete, ETA 00:40:43
# Fork: 2 of 2
# Warmup Iteration   1: 2708.423 us/op
# Warmup Iteration   2: 1657.768 us/op
# Warmup Iteration   3: 1536.518 us/op
# Warmup Iteration   4: 1414.802 us/op
# Warmup Iteration   5: 1251.069 us/op
Iteration   1: 16.666 us/op
Iteration   2: 3.595 us/op
Iteration   3: 24.466 us/op
Iteration   4: 4.505 us/op
Iteration   5: 5.047 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =      7.635 ±(99.9%) 10.756 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 5 
    [ 5.000,  7.500) = 3 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 1 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 1 
    [25.000, 27.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      3.270 us/op
     p(50.0000) =      4.776 us/op
     p(90.0000) =     23.686 us/op
     p(95.0000) =     24.466 us/op
     p(99.0000) =     24.466 us/op
     p(99.9000) =     24.466 us/op
     p(99.9900) =     24.466 us/op
     p(99.9990) =     24.466 us/op
     p(99.9999) =     24.466 us/op
    p(100.0000) =     24.466 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.125)

# Run progress: 12.12% complete, ETA 00:40:37
# Fork: 1 of 2
# Warmup Iteration   1: 3575.910 us/op
# Warmup Iteration   2: 2422.322 us/op
# Warmup Iteration   3: 1653.209 us/op
# Warmup Iteration   4: 1805.926 us/op
# Warmup Iteration   5: 1868.023 us/op
Iteration   1: 29.379 us/op
Iteration   2: 83.878 us/op
Iteration   3: 41.881 us/op
Iteration   4: 22.857 us/op
Iteration   5: 41.815 us/op

# Run progress: 12.31% complete, ETA 00:40:32
# Fork: 2 of 2
# Warmup Iteration   1: 3447.151 us/op
# Warmup Iteration   2: 2439.700 us/op
# Warmup Iteration   3: 1861.276 us/op
# Warmup Iteration   4: 1780.585 us/op
# Warmup Iteration   5: 1635.764 us/op
Iteration   1: 27.174 us/op
Iteration   2: 71.285 us/op
Iteration   3: 41.918 us/op
Iteration   4: 27.122 us/op
Iteration   5: 31.980 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     41.929 ±(99.9%) 30.566 us/op

  Histogram, us/op:
    [20.000, 25.000) = 1 
    [25.000, 30.000) = 3 
    [30.000, 35.000) = 1 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 3 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 0 
    [55.000, 60.000) = 0 
    [60.000, 65.000) = 0 
    [65.000, 70.000) = 0 
    [70.000, 75.000) = 1 
    [75.000, 80.000) = 0 
    [80.000, 85.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     22.857 us/op
     p(50.0000) =     36.898 us/op
     p(90.0000) =     82.619 us/op
     p(95.0000) =     83.878 us/op
     p(99.0000) =     83.878 us/op
     p(99.9000) =     83.878 us/op
     p(99.9900) =     83.878 us/op
     p(99.9990) =     83.878 us/op
     p(99.9999) =     83.878 us/op
    p(100.0000) =     83.878 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.250)

# Run progress: 12.50% complete, ETA 00:40:27
# Fork: 1 of 2
# Warmup Iteration   1: 2864.113 us/op
# Warmup Iteration   2: 1668.521 us/op
# Warmup Iteration   3: 1894.106 us/op
# Warmup Iteration   4: 2519.945 us/op
# Warmup Iteration   5: 1390.043 us/op
Iteration   1: 42.309 us/op
Iteration   2: 71.765 us/op
Iteration   3: 28.255 us/op
Iteration   4: 54.634 us/op
Iteration   5: 40.925 us/op

# Run progress: 12.69% complete, ETA 00:40:22
# Fork: 2 of 2
# Warmup Iteration   1: 2921.229 us/op
# Warmup Iteration   2: 1766.786 us/op
# Warmup Iteration   3: 1555.392 us/op
# Warmup Iteration   4: 1485.033 us/op
# Warmup Iteration   5: 1430.617 us/op
Iteration   1: 25.200 us/op
Iteration   2: 75.364 us/op
Iteration   3: 77.665 us/op
Iteration   4: 38.180 us/op
Iteration   5: 26.719 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     48.102 ±(99.9%) 30.980 us/op

  Histogram, us/op:
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 3 
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 1 
    [40.000, 45.000) = 2 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 1 
    [55.000, 60.000) = 0 
    [60.000, 65.000) = 0 
    [65.000, 70.000) = 0 
    [70.000, 75.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     25.200 us/op
     p(50.0000) =     41.617 us/op
     p(90.0000) =     77.435 us/op
     p(95.0000) =     77.665 us/op
     p(99.0000) =     77.665 us/op
     p(99.9000) =     77.665 us/op
     p(99.9900) =     77.665 us/op
     p(99.9990) =     77.665 us/op
     p(99.9999) =     77.665 us/op
    p(100.0000) =     77.665 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.375)

# Run progress: 12.88% complete, ETA 00:40:16
# Fork: 1 of 2
# Warmup Iteration   1: 2131.387 us/op
# Warmup Iteration   2: 1409.505 us/op
# Warmup Iteration   3: 1360.009 us/op
# Warmup Iteration   4: 1175.423 us/op
# Warmup Iteration   5: 1058.604 us/op
Iteration   1: 24.993 us/op
Iteration   2: 70.103 us/op
Iteration   3: 42.681 us/op
Iteration   4: 25.475 us/op
Iteration   5: 56.352 us/op

# Run progress: 13.07% complete, ETA 00:40:11
# Fork: 2 of 2
# Warmup Iteration   1: 2376.437 us/op
# Warmup Iteration   2: 1381.586 us/op
# Warmup Iteration   3: 1261.809 us/op
# Warmup Iteration   4: 1338.348 us/op
# Warmup Iteration   5: 1100.972 us/op
Iteration   1: 30.073 us/op
Iteration   2: 28.251 us/op
Iteration   3: 26.616 us/op
Iteration   4: 26.637 us/op
Iteration   5: 66.638 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     39.782 ±(99.9%) 27.234 us/op

  Histogram, us/op:
    [20.000, 25.000) = 1 
    [25.000, 30.000) = 4 
    [30.000, 35.000) = 1 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 1 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 0 
    [55.000, 60.000) = 1 
    [60.000, 65.000) = 0 
    [65.000, 70.000) = 1 
    [70.000, 75.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     24.993 us/op
     p(50.0000) =     29.162 us/op
     p(90.0000) =     69.757 us/op
     p(95.0000) =     70.103 us/op
     p(99.0000) =     70.103 us/op
     p(99.9000) =     70.103 us/op
     p(99.9900) =     70.103 us/op
     p(99.9990) =     70.103 us/op
     p(99.9999) =     70.103 us/op
    p(100.0000) =     70.103 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.5)

# Run progress: 13.26% complete, ETA 00:40:06
# Fork: 1 of 2
# Warmup Iteration   1: 2454.328 us/op
# Warmup Iteration   2: 1566.406 us/op
# Warmup Iteration   3: 1390.323 us/op
# Warmup Iteration   4: 1983.565 us/op
# Warmup Iteration   5: 1174.998 us/op
Iteration   1: 24.967 us/op
Iteration   2: 23.155 us/op
Iteration   3: 29.726 us/op
Iteration   4: 29.267 us/op
Iteration   5: 25.490 us/op

# Run progress: 13.45% complete, ETA 00:40:00
# Fork: 2 of 2
# Warmup Iteration   1: 2437.704 us/op
# Warmup Iteration   2: 1452.823 us/op
# Warmup Iteration   3: 1341.810 us/op
# Warmup Iteration   4: 1284.379 us/op
# Warmup Iteration   5: 1339.481 us/op
Iteration   1: 24.226 us/op
Iteration   2: 22.653 us/op
Iteration   3: 31.005 us/op
Iteration   4: 27.997 us/op
Iteration   5: 26.718 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     26.520 ±(99.9%) 4.369 us/op

  Histogram, us/op:
    [22.000, 23.000) = 1 
    [23.000, 24.000) = 1 
    [24.000, 25.000) = 2 
    [25.000, 26.000) = 1 
    [26.000, 27.000) = 1 
    [27.000, 28.000) = 1 
    [28.000, 29.000) = 0 
    [29.000, 30.000) = 2 
    [30.000, 31.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     22.653 us/op
     p(50.0000) =     26.104 us/op
     p(90.0000) =     30.877 us/op
     p(95.0000) =     31.005 us/op
     p(99.0000) =     31.005 us/op
     p(99.9000) =     31.005 us/op
     p(99.9900) =     31.005 us/op
     p(99.9990) =     31.005 us/op
     p(99.9999) =     31.005 us/op
    p(100.0000) =     31.005 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.625)

# Run progress: 13.64% complete, ETA 00:39:55
# Fork: 1 of 2
# Warmup Iteration   1: 1753.250 us/op
# Warmup Iteration   2: 1239.531 us/op
# Warmup Iteration   3: 964.428 us/op
# Warmup Iteration   4: 894.376 us/op
# Warmup Iteration   5: 890.310 us/op
Iteration   1: 27.084 us/op
Iteration   2: 53.754 us/op
Iteration   3: 41.116 us/op
Iteration   4: 58.760 us/op
Iteration   5: 25.523 us/op

# Run progress: 13.83% complete, ETA 00:39:50
# Fork: 2 of 2
# Warmup Iteration   1: 1774.383 us/op
# Warmup Iteration   2: 1190.215 us/op
# Warmup Iteration   3: 1151.803 us/op
# Warmup Iteration   4: 1040.518 us/op
# Warmup Iteration   5: 901.943 us/op
Iteration   1: 28.175 us/op
Iteration   2: 71.698 us/op
Iteration   3: 27.655 us/op
Iteration   4: 28.740 us/op
Iteration   5: 27.361 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     38.987 ±(99.9%) 25.157 us/op

  Histogram, us/op:
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 6 
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 1 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 1 
    [55.000, 60.000) = 1 
    [60.000, 65.000) = 0 
    [65.000, 70.000) = 0 
    [70.000, 75.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     25.523 us/op
     p(50.0000) =     28.458 us/op
     p(90.0000) =     70.404 us/op
     p(95.0000) =     71.698 us/op
     p(99.0000) =     71.698 us/op
     p(99.9000) =     71.698 us/op
     p(99.9900) =     71.698 us/op
     p(99.9990) =     71.698 us/op
     p(99.9999) =     71.698 us/op
    p(100.0000) =     71.698 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.75)

# Run progress: 14.02% complete, ETA 00:39:45
# Fork: 1 of 2
# Warmup Iteration   1: 1648.319 us/op
# Warmup Iteration   2: 1200.434 us/op
# Warmup Iteration   3: 1095.181 us/op
# Warmup Iteration   4: 931.860 us/op
# Warmup Iteration   5: 971.908 us/op
Iteration   1: 29.199 us/op
Iteration   2: 24.066 us/op
Iteration   3: 41.707 us/op
Iteration   4: 27.164 us/op
Iteration   5: 40.518 us/op

# Run progress: 14.20% complete, ETA 00:39:39
# Fork: 2 of 2
# Warmup Iteration   1: 1728.028 us/op
# Warmup Iteration   2: 1193.832 us/op
# Warmup Iteration   3: 1265.638 us/op
# Warmup Iteration   4: 975.969 us/op
# Warmup Iteration   5: 897.284 us/op
Iteration   1: 24.293 us/op
Iteration   2: 67.976 us/op
Iteration   3: 26.388 us/op
Iteration   4: 38.681 us/op
Iteration   5: 55.342 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     37.533 ±(99.9%) 22.136 us/op

  Histogram, us/op:
    [20.000, 25.000) = 2 
    [25.000, 30.000) = 3 
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 1 
    [40.000, 45.000) = 2 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 0 
    [55.000, 60.000) = 1 
    [60.000, 65.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     24.066 us/op
     p(50.0000) =     33.940 us/op
     p(90.0000) =     66.713 us/op
     p(95.0000) =     67.976 us/op
     p(99.0000) =     67.976 us/op
     p(99.9000) =     67.976 us/op
     p(99.9900) =     67.976 us/op
     p(99.9990) =     67.976 us/op
     p(99.9999) =     67.976 us/op
    p(100.0000) =     67.976 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.875)

# Run progress: 14.39% complete, ETA 00:39:34
# Fork: 1 of 2
# Warmup Iteration   1: 1865.793 us/op
# Warmup Iteration   2: 1367.511 us/op
# Warmup Iteration   3: 1112.277 us/op
# Warmup Iteration   4: 1042.960 us/op
# Warmup Iteration   5: 892.058 us/op
Iteration   1: 26.370 us/op
Iteration   2: 68.270 us/op
Iteration   3: 24.672 us/op
Iteration   4: 35.521 us/op
Iteration   5: 42.500 us/op

# Run progress: 14.58% complete, ETA 00:39:29
# Fork: 2 of 2
# Warmup Iteration   1: 1725.862 us/op
# Warmup Iteration   2: 1297.879 us/op
# Warmup Iteration   3: 1228.876 us/op
# Warmup Iteration   4: 1068.618 us/op
# Warmup Iteration   5: 859.272 us/op
Iteration   1: 37.478 us/op
Iteration   2: 52.837 us/op
Iteration   3: 43.333 us/op
Iteration   4: 66.666 us/op
Iteration   5: 54.034 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     45.168 ±(99.9%) 22.925 us/op

  Histogram, us/op:
    [20.000, 25.000) = 1 
    [25.000, 30.000) = 1 
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 2 
    [40.000, 45.000) = 2 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 2 
    [55.000, 60.000) = 0 
    [60.000, 65.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     24.672 us/op
     p(50.0000) =     42.917 us/op
     p(90.0000) =     68.110 us/op
     p(95.0000) =     68.270 us/op
     p(99.0000) =     68.270 us/op
     p(99.9000) =     68.270 us/op
     p(99.9900) =     68.270 us/op
     p(99.9990) =     68.270 us/op
     p(99.9999) =     68.270 us/op
    p(100.0000) =     68.270 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 1)

# Run progress: 14.77% complete, ETA 00:39:23
# Fork: 1 of 2
# Warmup Iteration   1: 1725.706 us/op
# Warmup Iteration   2: 1220.171 us/op
# Warmup Iteration   3: 1000.299 us/op
# Warmup Iteration   4: 908.967 us/op
# Warmup Iteration   5: 885.273 us/op
Iteration   1: 24.521 us/op
Iteration   2: 52.157 us/op
Iteration   3: 59.358 us/op
Iteration   4: 26.962 us/op
Iteration   5: 31.782 us/op

# Run progress: 14.96% complete, ETA 00:39:18
# Fork: 2 of 2
# Warmup Iteration   1: 1744.865 us/op
# Warmup Iteration   2: 1250.326 us/op
# Warmup Iteration   3: 1046.469 us/op
# Warmup Iteration   4: 1159.893 us/op
# Warmup Iteration   5: 907.037 us/op
Iteration   1: 45.396 us/op
Iteration   2: 62.593 us/op
Iteration   3: 25.747 us/op
Iteration   4: 76.332 us/op
Iteration   5: 42.221 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     44.707 ±(99.9%) 26.884 us/op

  Histogram, us/op:
    [20.000, 25.000) = 1 
    [25.000, 30.000) = 2 
    [30.000, 35.000) = 1 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 1 
    [45.000, 50.000) = 1 
    [50.000, 55.000) = 1 
    [55.000, 60.000) = 1 
    [60.000, 65.000) = 1 
    [65.000, 70.000) = 0 
    [70.000, 75.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     24.521 us/op
     p(50.0000) =     43.808 us/op
     p(90.0000) =     74.958 us/op
     p(95.0000) =     76.332 us/op
     p(99.0000) =     76.332 us/op
     p(99.9000) =     76.332 us/op
     p(99.9900) =     76.332 us/op
     p(99.9990) =     76.332 us/op
     p(99.9999) =     76.332 us/op
    p(100.0000) =     76.332 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.125)

# Run progress: 15.15% complete, ETA 00:39:13
# Fork: 1 of 2
# Warmup Iteration   1: 3247.963 us/op
# Warmup Iteration   2: 1686.642 us/op
# Warmup Iteration   3: 1579.729 us/op
# Warmup Iteration   4: 1311.899 us/op
# Warmup Iteration   5: 1315.080 us/op
Iteration   1: 105.712 us/op
Iteration   2: 126.222 us/op
Iteration   3: 92.084 us/op
Iteration   4: 119.995 us/op
Iteration   5: 113.176 us/op

# Run progress: 15.34% complete, ETA 00:39:08
# Fork: 2 of 2
# Warmup Iteration   1: 3225.357 us/op
# Warmup Iteration   2: 1731.718 us/op
# Warmup Iteration   3: 2483.520 us/op
# Warmup Iteration   4: 2049.401 us/op
# Warmup Iteration   5: 1372.208 us/op
Iteration   1: 96.559 us/op
Iteration   2: 126.170 us/op
Iteration   3: 97.992 us/op
Iteration   4: 100.305 us/op
Iteration   5: 97.421 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    107.564 ±(99.9%) 19.464 us/op

  Histogram, us/op:
    [ 90.000,  92.500) = 1 
    [ 92.500,  95.000) = 0 
    [ 95.000,  97.500) = 2 
    [ 97.500, 100.000) = 1 
    [100.000, 102.500) = 1 
    [102.500, 105.000) = 0 
    [105.000, 107.500) = 1 
    [107.500, 110.000) = 0 
    [110.000, 112.500) = 0 
    [112.500, 115.000) = 1 
    [115.000, 117.500) = 0 
    [117.500, 120.000) = 1 
    [120.000, 122.500) = 0 
    [122.500, 125.000) = 0 
    [125.000, 127.500) = 2 

  Percentiles, us/op:
      p(0.0000) =     92.084 us/op
     p(50.0000) =    103.009 us/op
     p(90.0000) =    126.217 us/op
     p(95.0000) =    126.222 us/op
     p(99.0000) =    126.222 us/op
     p(99.9000) =    126.222 us/op
     p(99.9900) =    126.222 us/op
     p(99.9990) =    126.222 us/op
     p(99.9999) =    126.222 us/op
    p(100.0000) =    126.222 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.250)

# Run progress: 15.53% complete, ETA 00:39:02
# Fork: 1 of 2
# Warmup Iteration   1: 1757.692 us/op
# Warmup Iteration   2: 1290.402 us/op
# Warmup Iteration   3: 1169.029 us/op
# Warmup Iteration   4: 1243.978 us/op
# Warmup Iteration   5: 921.918 us/op
Iteration   1: 92.746 us/op
Iteration   2: 132.869 us/op
Iteration   3: 143.333 us/op
Iteration   4: 133.990 us/op
Iteration   5: 116.965 us/op

# Run progress: 15.72% complete, ETA 00:38:57
# Fork: 2 of 2
# Warmup Iteration   1: 1959.535 us/op
# Warmup Iteration   2: 1336.849 us/op
# Warmup Iteration   3: 1136.918 us/op
# Warmup Iteration   4: 1148.107 us/op
# Warmup Iteration   5: 899.194 us/op
Iteration   1: 94.078 us/op
Iteration   2: 136.924 us/op
Iteration   3: 114.790 us/op
Iteration   4: 112.752 us/op
Iteration   5: 138.381 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    121.683 ±(99.9%) 27.627 us/op

  Histogram, us/op:
    [ 90.000,  95.000) = 2 
    [ 95.000, 100.000) = 0 
    [100.000, 105.000) = 0 
    [105.000, 110.000) = 0 
    [110.000, 115.000) = 2 
    [115.000, 120.000) = 1 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 2 
    [135.000, 140.000) = 2 
    [140.000, 145.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     92.746 us/op
     p(50.0000) =    124.917 us/op
     p(90.0000) =    142.838 us/op
     p(95.0000) =    143.333 us/op
     p(99.0000) =    143.333 us/op
     p(99.9000) =    143.333 us/op
     p(99.9900) =    143.333 us/op
     p(99.9990) =    143.333 us/op
     p(99.9999) =    143.333 us/op
    p(100.0000) =    143.333 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.375)

# Run progress: 15.91% complete, ETA 00:38:52
# Fork: 1 of 2
# Warmup Iteration   1: 1785.160 us/op
# Warmup Iteration   2: 1274.244 us/op
# Warmup Iteration   3: 1200.302 us/op
# Warmup Iteration   4: 1088.529 us/op
# Warmup Iteration   5: 935.403 us/op
Iteration   1: 94.337 us/op
Iteration   2: 156.702 us/op
Iteration   3: 95.525 us/op
Iteration   4: 97.974 us/op
Iteration   5: 125.772 us/op

# Run progress: 16.10% complete, ETA 00:38:47
# Fork: 2 of 2
# Warmup Iteration   1: 1789.028 us/op
# Warmup Iteration   2: 1262.064 us/op
# Warmup Iteration   3: 1190.991 us/op
# Warmup Iteration   4: 1113.987 us/op
# Warmup Iteration   5: 900.180 us/op
Iteration   1: 87.645 us/op
Iteration   2: 128.914 us/op
Iteration   3: 103.969 us/op
Iteration   4: 107.566 us/op
Iteration   5: 138.508 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    113.691 ±(99.9%) 34.200 us/op

  Histogram, us/op:
    [ 80.000,  85.000) = 0 
    [ 85.000,  90.000) = 1 
    [ 90.000,  95.000) = 1 
    [ 95.000, 100.000) = 2 
    [100.000, 105.000) = 1 
    [105.000, 110.000) = 1 
    [110.000, 115.000) = 0 
    [115.000, 120.000) = 0 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 2 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 1 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     87.645 us/op
     p(50.0000) =    105.768 us/op
     p(90.0000) =    154.883 us/op
     p(95.0000) =    156.702 us/op
     p(99.0000) =    156.702 us/op
     p(99.9000) =    156.702 us/op
     p(99.9900) =    156.702 us/op
     p(99.9990) =    156.702 us/op
     p(99.9999) =    156.702 us/op
    p(100.0000) =    156.702 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.5)

# Run progress: 16.29% complete, ETA 00:38:41
# Fork: 1 of 2
# Warmup Iteration   1: 1735.146 us/op
# Warmup Iteration   2: 1199.235 us/op
# Warmup Iteration   3: 1130.666 us/op
# Warmup Iteration   4: 1092.656 us/op
# Warmup Iteration   5: 952.140 us/op
Iteration   1: 133.631 us/op
Iteration   2: 92.950 us/op
Iteration   3: 95.998 us/op
Iteration   4: 98.664 us/op
Iteration   5: 89.133 us/op

# Run progress: 16.48% complete, ETA 00:38:36
# Fork: 2 of 2
# Warmup Iteration   1: 1906.915 us/op
# Warmup Iteration   2: 1275.696 us/op
# Warmup Iteration   3: 1034.662 us/op
# Warmup Iteration   4: 956.402 us/op
# Warmup Iteration   5: 933.051 us/op
Iteration   1: 90.275 us/op
Iteration   2: 158.645 us/op
Iteration   3: 110.247 us/op
Iteration   4: 95.732 us/op
Iteration   5: 126.525 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    109.180 ±(99.9%) 35.040 us/op

  Histogram, us/op:
    [ 80.000,  85.000) = 0 
    [ 85.000,  90.000) = 1 
    [ 90.000,  95.000) = 2 
    [ 95.000, 100.000) = 3 
    [100.000, 105.000) = 0 
    [105.000, 110.000) = 0 
    [110.000, 115.000) = 1 
    [115.000, 120.000) = 0 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 1 
    [130.000, 135.000) = 1 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     89.133 us/op
     p(50.0000) =     97.331 us/op
     p(90.0000) =    156.144 us/op
     p(95.0000) =    158.645 us/op
     p(99.0000) =    158.645 us/op
     p(99.9000) =    158.645 us/op
     p(99.9900) =    158.645 us/op
     p(99.9990) =    158.645 us/op
     p(99.9999) =    158.645 us/op
    p(100.0000) =    158.645 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.625)

# Run progress: 16.67% complete, ETA 00:38:31
# Fork: 1 of 2
# Warmup Iteration   1: 1756.353 us/op
# Warmup Iteration   2: 1267.302 us/op
# Warmup Iteration   3: 1138.274 us/op
# Warmup Iteration   4: 1068.074 us/op
# Warmup Iteration   5: 970.083 us/op
Iteration   1: 94.367 us/op
Iteration   2: 104.213 us/op
Iteration   3: 95.941 us/op
Iteration   4: 103.203 us/op
Iteration   5: 94.356 us/op

# Run progress: 16.86% complete, ETA 00:38:26
# Fork: 2 of 2
# Warmup Iteration   1: 1828.671 us/op
# Warmup Iteration   2: 1278.346 us/op
# Warmup Iteration   3: 946.951 us/op
# Warmup Iteration   4: 955.257 us/op
# Warmup Iteration   5: 961.145 us/op
Iteration   1: 102.133 us/op
Iteration   2: 136.701 us/op
Iteration   3: 94.739 us/op
Iteration   4: 106.531 us/op
Iteration   5: 111.428 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    104.361 ±(99.9%) 19.324 us/op

  Histogram, us/op:
    [ 90.000,  95.000) = 3 
    [ 95.000, 100.000) = 1 
    [100.000, 105.000) = 3 
    [105.000, 110.000) = 1 
    [110.000, 115.000) = 1 
    [115.000, 120.000) = 0 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     94.356 us/op
     p(50.0000) =    102.668 us/op
     p(90.0000) =    134.174 us/op
     p(95.0000) =    136.701 us/op
     p(99.0000) =    136.701 us/op
     p(99.9000) =    136.701 us/op
     p(99.9900) =    136.701 us/op
     p(99.9990) =    136.701 us/op
     p(99.9999) =    136.701 us/op
    p(100.0000) =    136.701 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.75)

# Run progress: 17.05% complete, ETA 00:38:20
# Fork: 1 of 2
# Warmup Iteration   1: 2029.886 us/op
# Warmup Iteration   2: 1371.878 us/op
# Warmup Iteration   3: 1221.096 us/op
# Warmup Iteration   4: 1096.067 us/op
# Warmup Iteration   5: 933.971 us/op
Iteration   1: 99.347 us/op
Iteration   2: 173.901 us/op
Iteration   3: 95.256 us/op
Iteration   4: 98.487 us/op
Iteration   5: 141.439 us/op

# Run progress: 17.23% complete, ETA 00:38:15
# Fork: 2 of 2
# Warmup Iteration   1: 1642.172 us/op
# Warmup Iteration   2: 1352.092 us/op
# Warmup Iteration   3: 1145.088 us/op
# Warmup Iteration   4: 1047.808 us/op
# Warmup Iteration   5: 938.954 us/op
Iteration   1: 93.767 us/op
Iteration   2: 141.907 us/op
Iteration   3: 143.569 us/op
Iteration   4: 98.212 us/op
Iteration   5: 92.905 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    117.879 ±(99.9%) 44.377 us/op

  Histogram, us/op:
    [ 90.000,  95.000) = 2 
    [ 95.000, 100.000) = 4 
    [100.000, 105.000) = 0 
    [105.000, 110.000) = 0 
    [110.000, 115.000) = 0 
    [115.000, 120.000) = 0 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 3 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 0 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     92.905 us/op
     p(50.0000) =     98.917 us/op
     p(90.0000) =    170.868 us/op
     p(95.0000) =    173.901 us/op
     p(99.0000) =    173.901 us/op
     p(99.9000) =    173.901 us/op
     p(99.9900) =    173.901 us/op
     p(99.9990) =    173.901 us/op
     p(99.9999) =    173.901 us/op
    p(100.0000) =    173.901 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.875)

# Run progress: 17.42% complete, ETA 00:38:10
# Fork: 1 of 2
# Warmup Iteration   1: 1688.558 us/op
# Warmup Iteration   2: 1199.333 us/op
# Warmup Iteration   3: 1193.381 us/op
# Warmup Iteration   4: 1045.224 us/op
# Warmup Iteration   5: 913.327 us/op
Iteration   1: 110.112 us/op
Iteration   2: 141.156 us/op
Iteration   3: 128.101 us/op
Iteration   4: 110.022 us/op
Iteration   5: 97.771 us/op

# Run progress: 17.61% complete, ETA 00:38:05
# Fork: 2 of 2
# Warmup Iteration   1: 1762.679 us/op
# Warmup Iteration   2: 1462.476 us/op
# Warmup Iteration   3: 1119.238 us/op
# Warmup Iteration   4: 1146.840 us/op
# Warmup Iteration   5: 924.990 us/op
Iteration   1: 88.107 us/op
Iteration   2: 129.883 us/op
Iteration   3: 87.729 us/op
Iteration   4: 128.541 us/op
Iteration   5: 120.843 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    114.227 ±(99.9%) 28.065 us/op

  Histogram, us/op:
    [ 80.000,  85.000) = 0 
    [ 85.000,  90.000) = 2 
    [ 90.000,  95.000) = 0 
    [ 95.000, 100.000) = 1 
    [100.000, 105.000) = 0 
    [105.000, 110.000) = 0 
    [110.000, 115.000) = 2 
    [115.000, 120.000) = 0 
    [120.000, 125.000) = 1 
    [125.000, 130.000) = 3 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     87.729 us/op
     p(50.0000) =    115.477 us/op
     p(90.0000) =    140.029 us/op
     p(95.0000) =    141.156 us/op
     p(99.0000) =    141.156 us/op
     p(99.9000) =    141.156 us/op
     p(99.9900) =    141.156 us/op
     p(99.9990) =    141.156 us/op
     p(99.9999) =    141.156 us/op
    p(100.0000) =    141.156 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 1)

# Run progress: 17.80% complete, ETA 00:37:59
# Fork: 1 of 2
# Warmup Iteration   1: 1958.267 us/op
# Warmup Iteration   2: 1373.594 us/op
# Warmup Iteration   3: 1056.706 us/op
# Warmup Iteration   4: 990.697 us/op
# Warmup Iteration   5: 928.967 us/op
Iteration   1: 99.864 us/op
Iteration   2: 157.863 us/op
Iteration   3: 111.792 us/op
Iteration   4: 122.375 us/op
Iteration   5: 95.013 us/op

# Run progress: 17.99% complete, ETA 00:37:54
# Fork: 2 of 2
# Warmup Iteration   1: 1764.038 us/op
# Warmup Iteration   2: 1342.451 us/op
# Warmup Iteration   3: 1159.203 us/op
# Warmup Iteration   4: 1188.297 us/op
# Warmup Iteration   5: 916.069 us/op
Iteration   1: 103.569 us/op
Iteration   2: 172.267 us/op
Iteration   3: 115.448 us/op
Iteration   4: 117.695 us/op
Iteration   5: 99.829 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    119.571 ±(99.9%) 38.936 us/op

  Histogram, us/op:
    [ 90.000,  95.000) = 0 
    [ 95.000, 100.000) = 3 
    [100.000, 105.000) = 1 
    [105.000, 110.000) = 0 
    [110.000, 115.000) = 1 
    [115.000, 120.000) = 2 
    [120.000, 125.000) = 1 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 1 
    [160.000, 165.000) = 0 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     95.013 us/op
     p(50.0000) =    113.620 us/op
     p(90.0000) =    170.827 us/op
     p(95.0000) =    172.267 us/op
     p(99.0000) =    172.267 us/op
     p(99.9000) =    172.267 us/op
     p(99.9900) =    172.267 us/op
     p(99.9990) =    172.267 us/op
     p(99.9999) =    172.267 us/op
    p(100.0000) =    172.267 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.125)

# Run progress: 18.18% complete, ETA 00:37:49
# Fork: 1 of 2
# Warmup Iteration   1: 1788.817 us/op
# Warmup Iteration   2: 1378.762 us/op
# Warmup Iteration   3: 1301.008 us/op
# Warmup Iteration   4: 1177.307 us/op
# Warmup Iteration   5: 1047.135 us/op
Iteration   1: 230.327 us/op
Iteration   2: 232.749 us/op
Iteration   3: 176.451 us/op
Iteration   4: 185.355 us/op
Iteration   5: 175.821 us/op

# Run progress: 18.37% complete, ETA 00:37:44
# Fork: 2 of 2
# Warmup Iteration   1: 1899.734 us/op
# Warmup Iteration   2: 1476.607 us/op
# Warmup Iteration   3: 1082.589 us/op
# Warmup Iteration   4: 1045.885 us/op
# Warmup Iteration   5: 1056.466 us/op
Iteration   1: 176.395 us/op
Iteration   2: 226.808 us/op
Iteration   3: 180.069 us/op
Iteration   4: 291.887 us/op
Iteration   5: 178.576 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    205.444 ±(99.9%) 58.824 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 0 
    [125.000, 137.500) = 0 
    [137.500, 150.000) = 0 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 0 
    [175.000, 187.500) = 6 
    [187.500, 200.000) = 0 
    [200.000, 212.500) = 0 
    [212.500, 225.000) = 0 
    [225.000, 237.500) = 3 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    175.821 us/op
     p(50.0000) =    182.712 us/op
     p(90.0000) =    285.973 us/op
     p(95.0000) =    291.887 us/op
     p(99.0000) =    291.887 us/op
     p(99.9000) =    291.887 us/op
     p(99.9900) =    291.887 us/op
     p(99.9990) =    291.887 us/op
     p(99.9999) =    291.887 us/op
    p(100.0000) =    291.887 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.250)

# Run progress: 18.56% complete, ETA 00:37:38
# Fork: 1 of 2
# Warmup Iteration   1: 1796.113 us/op
# Warmup Iteration   2: 1374.675 us/op
# Warmup Iteration   3: 1355.751 us/op
# Warmup Iteration   4: 1205.764 us/op
# Warmup Iteration   5: 999.590 us/op
Iteration   1: 172.490 us/op
Iteration   2: 211.763 us/op
Iteration   3: 205.862 us/op
Iteration   4: 225.956 us/op
Iteration   5: 177.163 us/op

# Run progress: 18.75% complete, ETA 00:37:33
# Fork: 2 of 2
# Warmup Iteration   1: 2099.899 us/op
# Warmup Iteration   2: 1366.721 us/op
# Warmup Iteration   3: 1202.677 us/op
# Warmup Iteration   4: 1182.480 us/op
# Warmup Iteration   5: 1031.691 us/op
Iteration   1: 179.643 us/op
Iteration   2: 184.523 us/op
Iteration   3: 179.428 us/op
Iteration   4: 182.870 us/op
Iteration   5: 184.253 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    190.395 ±(99.9%) 26.765 us/op

  Histogram, us/op:
    [170.000, 175.000) = 1 
    [175.000, 180.000) = 3 
    [180.000, 185.000) = 3 
    [185.000, 190.000) = 0 
    [190.000, 195.000) = 0 
    [195.000, 200.000) = 0 
    [200.000, 205.000) = 0 
    [205.000, 210.000) = 1 
    [210.000, 215.000) = 1 
    [215.000, 220.000) = 0 
    [220.000, 225.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    172.490 us/op
     p(50.0000) =    183.562 us/op
     p(90.0000) =    224.537 us/op
     p(95.0000) =    225.956 us/op
     p(99.0000) =    225.956 us/op
     p(99.9000) =    225.956 us/op
     p(99.9900) =    225.956 us/op
     p(99.9990) =    225.956 us/op
     p(99.9999) =    225.956 us/op
    p(100.0000) =    225.956 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.375)

# Run progress: 18.94% complete, ETA 00:37:28
# Fork: 1 of 2
# Warmup Iteration   1: 1877.884 us/op
# Warmup Iteration   2: 1400.232 us/op
# Warmup Iteration   3: 1338.939 us/op
# Warmup Iteration   4: 1113.342 us/op
# Warmup Iteration   5: 1067.775 us/op
Iteration   1: 186.735 us/op
Iteration   2: 233.041 us/op
Iteration   3: 182.460 us/op
Iteration   4: 192.425 us/op
Iteration   5: 190.505 us/op

# Run progress: 19.13% complete, ETA 00:37:23
# Fork: 2 of 2
# Warmup Iteration   1: 2016.464 us/op
# Warmup Iteration   2: 1405.104 us/op
# Warmup Iteration   3: 1248.356 us/op
# Warmup Iteration   4: 1142.394 us/op
# Warmup Iteration   5: 1042.892 us/op
Iteration   1: 190.166 us/op
Iteration   2: 275.610 us/op
Iteration   3: 176.507 us/op
Iteration   4: 193.634 us/op
Iteration   5: 189.623 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    201.071 ±(99.9%) 45.705 us/op

  Histogram, us/op:
    [170.000, 180.000) = 1 
    [180.000, 190.000) = 3 
    [190.000, 200.000) = 4 
    [200.000, 210.000) = 0 
    [210.000, 220.000) = 0 
    [220.000, 230.000) = 0 
    [230.000, 240.000) = 1 
    [240.000, 250.000) = 0 
    [250.000, 260.000) = 0 
    [260.000, 270.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    176.507 us/op
     p(50.0000) =    190.336 us/op
     p(90.0000) =    271.353 us/op
     p(95.0000) =    275.610 us/op
     p(99.0000) =    275.610 us/op
     p(99.9000) =    275.610 us/op
     p(99.9900) =    275.610 us/op
     p(99.9990) =    275.610 us/op
     p(99.9999) =    275.610 us/op
    p(100.0000) =    275.610 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.5)

# Run progress: 19.32% complete, ETA 00:37:17
# Fork: 1 of 2
# Warmup Iteration   1: 1739.101 us/op
# Warmup Iteration   2: 1452.690 us/op
# Warmup Iteration   3: 1259.533 us/op
# Warmup Iteration   4: 1120.265 us/op
# Warmup Iteration   5: 1040.111 us/op
Iteration   1: 251.714 us/op
Iteration   2: 230.614 us/op
Iteration   3: 179.877 us/op
Iteration   4: 189.177 us/op
Iteration   5: 183.485 us/op

# Run progress: 19.51% complete, ETA 00:37:12
# Fork: 2 of 2
# Warmup Iteration   1: 1836.365 us/op
# Warmup Iteration   2: 1388.531 us/op
# Warmup Iteration   3: 1266.601 us/op
# Warmup Iteration   4: 1135.182 us/op
# Warmup Iteration   5: 1009.926 us/op
Iteration   1: 180.190 us/op
Iteration   2: 243.977 us/op
Iteration   3: 197.636 us/op
Iteration   4: 192.959 us/op
Iteration   5: 182.276 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    203.191 ±(99.9%) 42.165 us/op

  Histogram, us/op:
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 1 
    [180.000, 185.000) = 3 
    [185.000, 190.000) = 1 
    [190.000, 195.000) = 1 
    [195.000, 200.000) = 1 
    [200.000, 205.000) = 0 
    [205.000, 210.000) = 0 
    [210.000, 215.000) = 0 
    [215.000, 220.000) = 0 
    [220.000, 225.000) = 0 
    [225.000, 230.000) = 0 
    [230.000, 235.000) = 1 
    [235.000, 240.000) = 0 
    [240.000, 245.000) = 1 
    [245.000, 250.000) = 0 
    [250.000, 255.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    179.877 us/op
     p(50.0000) =    191.068 us/op
     p(90.0000) =    250.940 us/op
     p(95.0000) =    251.714 us/op
     p(99.0000) =    251.714 us/op
     p(99.9000) =    251.714 us/op
     p(99.9900) =    251.714 us/op
     p(99.9990) =    251.714 us/op
     p(99.9999) =    251.714 us/op
    p(100.0000) =    251.714 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.625)

# Run progress: 19.70% complete, ETA 00:37:07
# Fork: 1 of 2
# Warmup Iteration   1: 1807.613 us/op
# Warmup Iteration   2: 1551.034 us/op
# Warmup Iteration   3: 1283.726 us/op
# Warmup Iteration   4: 1121.385 us/op
# Warmup Iteration   5: 1033.173 us/op
Iteration   1: 257.117 us/op
Iteration   2: 230.995 us/op
Iteration   3: 182.979 us/op
Iteration   4: 180.507 us/op
Iteration   5: 184.055 us/op

# Run progress: 19.89% complete, ETA 00:37:02
# Fork: 2 of 2
# Warmup Iteration   1: 1827.787 us/op
# Warmup Iteration   2: 1422.750 us/op
# Warmup Iteration   3: 1127.848 us/op
# Warmup Iteration   4: 1029.868 us/op
# Warmup Iteration   5: 1038.388 us/op
Iteration   1: 180.523 us/op
Iteration   2: 227.153 us/op
Iteration   3: 185.277 us/op
Iteration   4: 198.436 us/op
Iteration   5: 178.498 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    200.554 ±(99.9%) 41.989 us/op

  Histogram, us/op:
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 1 
    [180.000, 185.000) = 4 
    [185.000, 190.000) = 1 
    [190.000, 195.000) = 0 
    [195.000, 200.000) = 1 
    [200.000, 205.000) = 0 
    [205.000, 210.000) = 0 
    [210.000, 215.000) = 0 
    [215.000, 220.000) = 0 
    [220.000, 225.000) = 0 
    [225.000, 230.000) = 1 
    [230.000, 235.000) = 1 
    [235.000, 240.000) = 0 
    [240.000, 245.000) = 0 
    [245.000, 250.000) = 0 
    [250.000, 255.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    178.498 us/op
     p(50.0000) =    184.666 us/op
     p(90.0000) =    254.505 us/op
     p(95.0000) =    257.117 us/op
     p(99.0000) =    257.117 us/op
     p(99.9000) =    257.117 us/op
     p(99.9900) =    257.117 us/op
     p(99.9990) =    257.117 us/op
     p(99.9999) =    257.117 us/op
    p(100.0000) =    257.117 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.75)

# Run progress: 20.08% complete, ETA 00:36:56
# Fork: 1 of 2
# Warmup Iteration   1: 2207.633 us/op
# Warmup Iteration   2: 1355.755 us/op
# Warmup Iteration   3: 1198.373 us/op
# Warmup Iteration   4: 1049.200 us/op
# Warmup Iteration   5: 1063.389 us/op
Iteration   1: 188.060 us/op
Iteration   2: 184.923 us/op
Iteration   3: 184.420 us/op
Iteration   4: 190.273 us/op
Iteration   5: 236.039 us/op

# Run progress: 20.27% complete, ETA 00:36:51
# Fork: 2 of 2
# Warmup Iteration   1: 2001.462 us/op
# Warmup Iteration   2: 1409.222 us/op
# Warmup Iteration   3: 1262.475 us/op
# Warmup Iteration   4: 1362.145 us/op
# Warmup Iteration   5: 996.927 us/op
Iteration   1: 172.869 us/op
Iteration   2: 199.966 us/op
Iteration   3: 221.494 us/op
Iteration   4: 182.150 us/op
Iteration   5: 273.370 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    203.356 ±(99.9%) 47.257 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 0 
    [125.000, 137.500) = 0 
    [137.500, 150.000) = 0 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 1 
    [175.000, 187.500) = 3 
    [187.500, 200.000) = 3 
    [200.000, 212.500) = 0 
    [212.500, 225.000) = 1 
    [225.000, 237.500) = 1 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 1 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    172.869 us/op
     p(50.0000) =    189.166 us/op
     p(90.0000) =    269.637 us/op
     p(95.0000) =    273.370 us/op
     p(99.0000) =    273.370 us/op
     p(99.9000) =    273.370 us/op
     p(99.9900) =    273.370 us/op
     p(99.9990) =    273.370 us/op
     p(99.9999) =    273.370 us/op
    p(100.0000) =    273.370 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.875)

# Run progress: 20.45% complete, ETA 00:36:46
# Fork: 1 of 2
# Warmup Iteration   1: 1851.418 us/op
# Warmup Iteration   2: 1348.813 us/op
# Warmup Iteration   3: 1206.261 us/op
# Warmup Iteration   4: 1197.734 us/op
# Warmup Iteration   5: 1138.731 us/op
Iteration   1: 186.277 us/op
Iteration   2: 189.106 us/op
Iteration   3: 181.610 us/op
Iteration   4: 200.082 us/op
Iteration   5: 177.581 us/op

# Run progress: 20.64% complete, ETA 00:36:41
# Fork: 2 of 2
# Warmup Iteration   1: 1810.603 us/op
# Warmup Iteration   2: 1534.536 us/op
# Warmup Iteration   3: 1348.217 us/op
# Warmup Iteration   4: 1171.322 us/op
# Warmup Iteration   5: 1056.174 us/op
Iteration   1: 182.987 us/op
Iteration   2: 229.266 us/op
Iteration   3: 182.516 us/op
Iteration   4: 201.117 us/op
Iteration   5: 211.313 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    194.186 ±(99.9%) 24.640 us/op

  Histogram, us/op:
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 1 
    [180.000, 185.000) = 3 
    [185.000, 190.000) = 2 
    [190.000, 195.000) = 0 
    [195.000, 200.000) = 0 
    [200.000, 205.000) = 2 
    [205.000, 210.000) = 0 
    [210.000, 215.000) = 1 
    [215.000, 220.000) = 0 
    [220.000, 225.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    177.581 us/op
     p(50.0000) =    187.692 us/op
     p(90.0000) =    227.471 us/op
     p(95.0000) =    229.266 us/op
     p(99.0000) =    229.266 us/op
     p(99.9000) =    229.266 us/op
     p(99.9900) =    229.266 us/op
     p(99.9990) =    229.266 us/op
     p(99.9999) =    229.266 us/op
    p(100.0000) =    229.266 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 1)

# Run progress: 20.83% complete, ETA 00:36:35
# Fork: 1 of 2
# Warmup Iteration   1: 1847.669 us/op
# Warmup Iteration   2: 1466.409 us/op
# Warmup Iteration   3: 1262.618 us/op
# Warmup Iteration   4: 1348.372 us/op
# Warmup Iteration   5: 1050.689 us/op
Iteration   1: 186.848 us/op
Iteration   2: 179.474 us/op
Iteration   3: 180.541 us/op
Iteration   4: 192.465 us/op
Iteration   5: 185.398 us/op

# Run progress: 21.02% complete, ETA 00:36:30
# Fork: 2 of 2
# Warmup Iteration   1: 1908.422 us/op
# Warmup Iteration   2: 1440.237 us/op
# Warmup Iteration   3: 1109.529 us/op
# Warmup Iteration   4: 1011.087 us/op
# Warmup Iteration   5: 1009.740 us/op
Iteration   1: 235.282 us/op
Iteration   2: 243.349 us/op
Iteration   3: 208.359 us/op
Iteration   4: 222.359 us/op
Iteration   5: 208.007 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    204.208 ±(99.9%) 35.001 us/op

  Histogram, us/op:
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 1 
    [180.000, 185.000) = 1 
    [185.000, 190.000) = 2 
    [190.000, 195.000) = 1 
    [195.000, 200.000) = 0 
    [200.000, 205.000) = 0 
    [205.000, 210.000) = 2 
    [210.000, 215.000) = 0 
    [215.000, 220.000) = 0 
    [220.000, 225.000) = 1 
    [225.000, 230.000) = 0 
    [230.000, 235.000) = 0 
    [235.000, 240.000) = 1 
    [240.000, 245.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    179.474 us/op
     p(50.0000) =    200.236 us/op
     p(90.0000) =    242.542 us/op
     p(95.0000) =    243.349 us/op
     p(99.0000) =    243.349 us/op
     p(99.9000) =    243.349 us/op
     p(99.9900) =    243.349 us/op
     p(99.9990) =    243.349 us/op
     p(99.9999) =    243.349 us/op
    p(100.0000) =    243.349 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.125)

# Run progress: 21.21% complete, ETA 00:36:25
# Fork: 1 of 2
# Warmup Iteration   1: 2672.543 us/op
# Warmup Iteration   2: 2274.695 us/op
# Warmup Iteration   3: 2300.677 us/op
# Warmup Iteration   4: 1633.845 us/op
# Warmup Iteration   5: 1760.119 us/op
Iteration   1: 695.416 us/op
Iteration   2: 740.888 us/op
Iteration   3: 904.942 us/op
Iteration   4: 1100.943 us/op
Iteration   5: 1362.657 us/op

# Run progress: 21.40% complete, ETA 00:36:20
# Fork: 2 of 2
# Warmup Iteration   1: 2380.408 us/op
# Warmup Iteration   2: 2026.837 us/op
# Warmup Iteration   3: 2232.257 us/op
# Warmup Iteration   4: 1635.570 us/op
# Warmup Iteration   5: 1788.292 us/op
Iteration   1: 726.641 us/op
Iteration   2: 800.739 us/op
Iteration   3: 699.132 us/op
Iteration   4: 698.365 us/op
Iteration   5: 713.012 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    844.274 ±(99.9%) 336.724 us/op

  Histogram, us/op:
    [ 600.000,  650.000) = 0 
    [ 650.000,  700.000) = 3 
    [ 700.000,  750.000) = 3 
    [ 750.000,  800.000) = 0 
    [ 800.000,  850.000) = 1 
    [ 850.000,  900.000) = 0 
    [ 900.000,  950.000) = 1 
    [ 950.000, 1000.000) = 0 
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 0 
    [1100.000, 1150.000) = 1 
    [1150.000, 1200.000) = 0 
    [1200.000, 1250.000) = 0 
    [1250.000, 1300.000) = 0 
    [1300.000, 1350.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    695.416 us/op
     p(50.0000) =    733.765 us/op
     p(90.0000) =   1336.486 us/op
     p(95.0000) =   1362.657 us/op
     p(99.0000) =   1362.657 us/op
     p(99.9000) =   1362.657 us/op
     p(99.9900) =   1362.657 us/op
     p(99.9990) =   1362.657 us/op
     p(99.9999) =   1362.657 us/op
    p(100.0000) =   1362.657 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.250)

# Run progress: 21.59% complete, ETA 00:36:14
# Fork: 1 of 2
# Warmup Iteration   1: 2444.962 us/op
# Warmup Iteration   2: 2074.818 us/op
# Warmup Iteration   3: 2437.480 us/op
# Warmup Iteration   4: 1656.203 us/op
# Warmup Iteration   5: 1704.819 us/op
Iteration   1: 685.073 us/op
Iteration   2: 778.477 us/op
Iteration   3: 723.483 us/op
Iteration   4: 789.482 us/op
Iteration   5: 701.108 us/op

# Run progress: 21.78% complete, ETA 00:36:09
# Fork: 2 of 2
# Warmup Iteration   1: 2470.806 us/op
# Warmup Iteration   2: 2048.664 us/op
# Warmup Iteration   3: 2307.861 us/op
# Warmup Iteration   4: 1663.469 us/op
# Warmup Iteration   5: 1743.852 us/op
Iteration   1: 713.684 us/op
Iteration   2: 781.093 us/op
Iteration   3: 715.066 us/op
Iteration   4: 713.564 us/op
Iteration   5: 712.677 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    731.371 ±(99.9%) 56.197 us/op

  Histogram, us/op:
    [600.000, 612.500) = 0 
    [612.500, 625.000) = 0 
    [625.000, 637.500) = 0 
    [637.500, 650.000) = 0 
    [650.000, 662.500) = 0 
    [662.500, 675.000) = 0 
    [675.000, 687.500) = 1 
    [687.500, 700.000) = 0 
    [700.000, 712.500) = 1 
    [712.500, 725.000) = 5 
    [725.000, 737.500) = 0 
    [737.500, 750.000) = 0 
    [750.000, 762.500) = 0 
    [762.500, 775.000) = 0 
    [775.000, 787.500) = 2 

  Percentiles, us/op:
      p(0.0000) =    685.073 us/op
     p(50.0000) =    714.375 us/op
     p(90.0000) =    788.643 us/op
     p(95.0000) =    789.482 us/op
     p(99.0000) =    789.482 us/op
     p(99.9000) =    789.482 us/op
     p(99.9900) =    789.482 us/op
     p(99.9990) =    789.482 us/op
     p(99.9999) =    789.482 us/op
    p(100.0000) =    789.482 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.375)

# Run progress: 21.97% complete, ETA 00:36:04
# Fork: 1 of 2
# Warmup Iteration   1: 2384.324 us/op
# Warmup Iteration   2: 2169.333 us/op
# Warmup Iteration   3: 2147.888 us/op
# Warmup Iteration   4: 1601.997 us/op
# Warmup Iteration   5: 1804.379 us/op
Iteration   1: 699.880 us/op
Iteration   2: 739.694 us/op
Iteration   3: 705.609 us/op
Iteration   4: 863.226 us/op
Iteration   5: 705.368 us/op

# Run progress: 22.16% complete, ETA 00:35:59
# Fork: 2 of 2
# Warmup Iteration   1: 2597.741 us/op
# Warmup Iteration   2: 2011.395 us/op
# Warmup Iteration   3: 1868.391 us/op
# Warmup Iteration   4: 1780.113 us/op
# Warmup Iteration   5: 1778.603 us/op
Iteration   1: 737.424 us/op
Iteration   2: 734.901 us/op
Iteration   3: 754.941 us/op
Iteration   4: 726.774 us/op
Iteration   5: 744.667 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    741.248 ±(99.9%) 70.578 us/op

  Histogram, us/op:
    [600.000, 625.000) = 0 
    [625.000, 650.000) = 0 
    [650.000, 675.000) = 0 
    [675.000, 700.000) = 1 
    [700.000, 725.000) = 2 
    [725.000, 750.000) = 5 
    [750.000, 775.000) = 1 
    [775.000, 800.000) = 0 
    [800.000, 825.000) = 0 
    [825.000, 850.000) = 0 
    [850.000, 875.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    699.880 us/op
     p(50.0000) =    736.162 us/op
     p(90.0000) =    852.398 us/op
     p(95.0000) =    863.226 us/op
     p(99.0000) =    863.226 us/op
     p(99.9000) =    863.226 us/op
     p(99.9900) =    863.226 us/op
     p(99.9990) =    863.226 us/op
     p(99.9999) =    863.226 us/op
    p(100.0000) =    863.226 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.5)

# Run progress: 22.35% complete, ETA 00:35:53
# Fork: 1 of 2
# Warmup Iteration   1: 2574.997 us/op
# Warmup Iteration   2: 2056.817 us/op
# Warmup Iteration   3: 2089.778 us/op
# Warmup Iteration   4: 1654.643 us/op
# Warmup Iteration   5: 1728.898 us/op
Iteration   1: 681.004 us/op
Iteration   2: 740.798 us/op
Iteration   3: 689.406 us/op
Iteration   4: 693.856 us/op
Iteration   5: 712.138 us/op

# Run progress: 22.54% complete, ETA 00:35:48
# Fork: 2 of 2
# Warmup Iteration   1: 2713.907 us/op
# Warmup Iteration   2: 2204.999 us/op
# Warmup Iteration   3: 2342.198 us/op
# Warmup Iteration   4: 1651.586 us/op
# Warmup Iteration   5: 1765.512 us/op
Iteration   1: 703.104 us/op
Iteration   2: 741.739 us/op
Iteration   3: 782.930 us/op
Iteration   4: 706.162 us/op
Iteration   5: 771.220 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    722.236 ±(99.9%) 53.137 us/op

  Histogram, us/op:
    [600.000, 612.500) = 0 
    [612.500, 625.000) = 0 
    [625.000, 637.500) = 0 
    [637.500, 650.000) = 0 
    [650.000, 662.500) = 0 
    [662.500, 675.000) = 0 
    [675.000, 687.500) = 1 
    [687.500, 700.000) = 2 
    [700.000, 712.500) = 3 
    [712.500, 725.000) = 0 
    [725.000, 737.500) = 0 
    [737.500, 750.000) = 2 
    [750.000, 762.500) = 0 
    [762.500, 775.000) = 1 
    [775.000, 787.500) = 1 

  Percentiles, us/op:
      p(0.0000) =    681.004 us/op
     p(50.0000) =    709.150 us/op
     p(90.0000) =    781.759 us/op
     p(95.0000) =    782.930 us/op
     p(99.0000) =    782.930 us/op
     p(99.9000) =    782.930 us/op
     p(99.9900) =    782.930 us/op
     p(99.9990) =    782.930 us/op
     p(99.9999) =    782.930 us/op
    p(100.0000) =    782.930 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.625)

# Run progress: 22.73% complete, ETA 00:35:43
# Fork: 1 of 2
# Warmup Iteration   1: 2701.100 us/op
# Warmup Iteration   2: 2238.348 us/op
# Warmup Iteration   3: 2292.533 us/op
# Warmup Iteration   4: 1942.042 us/op
# Warmup Iteration   5: 1766.809 us/op
Iteration   1: 700.078 us/op
Iteration   2: 764.529 us/op
Iteration   3: 721.428 us/op
Iteration   4: 750.834 us/op
Iteration   5: 721.926 us/op

# Run progress: 22.92% complete, ETA 00:35:38
# Fork: 2 of 2
# Warmup Iteration   1: 2562.163 us/op
# Warmup Iteration   2: 2696.818 us/op
# Warmup Iteration   3: 2227.309 us/op
# Warmup Iteration   4: 1631.064 us/op
# Warmup Iteration   5: 1853.777 us/op
Iteration   1: 709.636 us/op
Iteration   2: 756.266 us/op
Iteration   3: 706.435 us/op
Iteration   4: 706.714 us/op
Iteration   5: 1062.160 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    760.001 ±(99.9%) 164.224 us/op

  Histogram, us/op:
    [ 700.000,  725.000) = 6 
    [ 725.000,  750.000) = 0 
    [ 750.000,  775.000) = 3 
    [ 775.000,  800.000) = 0 
    [ 800.000,  825.000) = 0 
    [ 825.000,  850.000) = 0 
    [ 850.000,  875.000) = 0 
    [ 875.000,  900.000) = 0 
    [ 900.000,  925.000) = 0 
    [ 925.000,  950.000) = 0 
    [ 950.000,  975.000) = 0 
    [ 975.000, 1000.000) = 0 
    [1000.000, 1025.000) = 0 
    [1025.000, 1050.000) = 0 
    [1050.000, 1075.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    700.078 us/op
     p(50.0000) =    721.677 us/op
     p(90.0000) =   1032.397 us/op
     p(95.0000) =   1062.160 us/op
     p(99.0000) =   1062.160 us/op
     p(99.9000) =   1062.160 us/op
     p(99.9900) =   1062.160 us/op
     p(99.9990) =   1062.160 us/op
     p(99.9999) =   1062.160 us/op
    p(100.0000) =   1062.160 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.75)

# Run progress: 23.11% complete, ETA 00:35:32
# Fork: 1 of 2
# Warmup Iteration   1: 2456.026 us/op
# Warmup Iteration   2: 2061.255 us/op
# Warmup Iteration   3: 2383.466 us/op
# Warmup Iteration   4: 1619.260 us/op
# Warmup Iteration   5: 1915.712 us/op
Iteration   1: 701.107 us/op
Iteration   2: 747.445 us/op
Iteration   3: 773.945 us/op
Iteration   4: 692.618 us/op
Iteration   5: 719.008 us/op

# Run progress: 23.30% complete, ETA 00:35:27
# Fork: 2 of 2
# Warmup Iteration   1: 4246.815 us/op
# Warmup Iteration   2: 2163.652 us/op
# Warmup Iteration   3: 2562.266 us/op
# Warmup Iteration   4: 1596.592 us/op
# Warmup Iteration   5: 2009.709 us/op
Iteration   1: 681.457 us/op
Iteration   2: 748.318 us/op
Iteration   3: 693.429 us/op
Iteration   4: 740.329 us/op
Iteration   5: 907.227 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    740.488 ±(99.9%) 99.566 us/op

  Histogram, us/op:
    [ 600.000,  625.000) = 0 
    [ 625.000,  650.000) = 0 
    [ 650.000,  675.000) = 0 
    [ 675.000,  700.000) = 3 
    [ 700.000,  725.000) = 2 
    [ 725.000,  750.000) = 3 
    [ 750.000,  775.000) = 1 
    [ 775.000,  800.000) = 0 
    [ 800.000,  825.000) = 0 
    [ 825.000,  850.000) = 0 
    [ 850.000,  875.000) = 0 
    [ 875.000,  900.000) = 0 
    [ 900.000,  925.000) = 1 
    [ 925.000,  950.000) = 0 
    [ 950.000,  975.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    681.457 us/op
     p(50.0000) =    729.669 us/op
     p(90.0000) =    893.899 us/op
     p(95.0000) =    907.227 us/op
     p(99.0000) =    907.227 us/op
     p(99.9000) =    907.227 us/op
     p(99.9900) =    907.227 us/op
     p(99.9990) =    907.227 us/op
     p(99.9999) =    907.227 us/op
    p(100.0000) =    907.227 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.875)

# Run progress: 23.48% complete, ETA 00:35:22
# Fork: 1 of 2
# Warmup Iteration   1: 2414.200 us/op
# Warmup Iteration   2: 2014.483 us/op
# Warmup Iteration   3: 2189.899 us/op
# Warmup Iteration   4: 1628.712 us/op
# Warmup Iteration   5: 1753.098 us/op
Iteration   1: 688.970 us/op
Iteration   2: 732.512 us/op
Iteration   3: 765.491 us/op
Iteration   4: 706.706 us/op
Iteration   5: 700.383 us/op

# Run progress: 23.67% complete, ETA 00:35:17
# Fork: 2 of 2
# Warmup Iteration   1: 2559.442 us/op
# Warmup Iteration   2: 2091.139 us/op
# Warmup Iteration   3: 2129.107 us/op
# Warmup Iteration   4: 1705.745 us/op
# Warmup Iteration   5: 1726.528 us/op
Iteration   1: 712.938 us/op
Iteration   2: 747.601 us/op
Iteration   3: 736.451 us/op
Iteration   4: 718.287 us/op
Iteration   5: 738.009 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    724.735 ±(99.9%) 35.405 us/op

  Histogram, us/op:
    [680.000, 685.000) = 0 
    [685.000, 690.000) = 1 
    [690.000, 695.000) = 0 
    [695.000, 700.000) = 0 
    [700.000, 705.000) = 1 
    [705.000, 710.000) = 1 
    [710.000, 715.000) = 1 
    [715.000, 720.000) = 1 
    [720.000, 725.000) = 0 
    [725.000, 730.000) = 0 
    [730.000, 735.000) = 1 
    [735.000, 740.000) = 2 
    [740.000, 745.000) = 0 
    [745.000, 750.000) = 1 
    [750.000, 755.000) = 0 
    [755.000, 760.000) = 0 
    [760.000, 765.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    688.970 us/op
     p(50.0000) =    725.400 us/op
     p(90.0000) =    763.702 us/op
     p(95.0000) =    765.491 us/op
     p(99.0000) =    765.491 us/op
     p(99.9000) =    765.491 us/op
     p(99.9900) =    765.491 us/op
     p(99.9990) =    765.491 us/op
     p(99.9999) =    765.491 us/op
    p(100.0000) =    765.491 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 1)

# Run progress: 23.86% complete, ETA 00:35:12
# Fork: 1 of 2
# Warmup Iteration   1: 2539.949 us/op
# Warmup Iteration   2: 2403.815 us/op
# Warmup Iteration   3: 1941.856 us/op
# Warmup Iteration   4: 1671.532 us/op
# Warmup Iteration   5: 1752.998 us/op
Iteration   1: 721.482 us/op
Iteration   2: 710.057 us/op
Iteration   3: 739.199 us/op
Iteration   4: 753.828 us/op
Iteration   5: 741.760 us/op

# Run progress: 24.05% complete, ETA 00:35:06
# Fork: 2 of 2
# Warmup Iteration   1: 2486.011 us/op
# Warmup Iteration   2: 2063.873 us/op
# Warmup Iteration   3: 2301.779 us/op
# Warmup Iteration   4: 1662.899 us/op
# Warmup Iteration   5: 1864.962 us/op
Iteration   1: 694.683 us/op
Iteration   2: 727.891 us/op
Iteration   3: 714.678 us/op
Iteration   4: 878.372 us/op
Iteration   5: 693.056 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    737.501 ±(99.9%) 80.576 us/op

  Histogram, us/op:
    [600.000, 625.000) = 0 
    [625.000, 650.000) = 0 
    [650.000, 675.000) = 0 
    [675.000, 700.000) = 2 
    [700.000, 725.000) = 3 
    [725.000, 750.000) = 3 
    [750.000, 775.000) = 1 
    [775.000, 800.000) = 0 
    [800.000, 825.000) = 0 
    [825.000, 850.000) = 0 
    [850.000, 875.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    693.056 us/op
     p(50.0000) =    724.687 us/op
     p(90.0000) =    865.918 us/op
     p(95.0000) =    878.372 us/op
     p(99.0000) =    878.372 us/op
     p(99.9000) =    878.372 us/op
     p(99.9900) =    878.372 us/op
     p(99.9990) =    878.372 us/op
     p(99.9999) =    878.372 us/op
    p(100.0000) =    878.372 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.125)

# Run progress: 24.24% complete, ETA 00:35:01
# Fork: 1 of 2
# Warmup Iteration   1: 3355.061 us/op
# Warmup Iteration   2: 3106.521 us/op
# Warmup Iteration   3: 2891.696 us/op
# Warmup Iteration   4: 2458.690 us/op
# Warmup Iteration   5: 2415.711 us/op
Iteration   1: 1458.174 us/op
Iteration   2: 1495.336 us/op
Iteration   3: 1410.083 us/op
Iteration   4: 1445.355 us/op
Iteration   5: 1504.046 us/op

# Run progress: 24.43% complete, ETA 00:34:56
# Fork: 2 of 2
# Warmup Iteration   1: 3172.745 us/op
# Warmup Iteration   2: 3298.168 us/op
# Warmup Iteration   3: 2414.555 us/op
# Warmup Iteration   4: 2489.244 us/op
# Warmup Iteration   5: 2404.440 us/op
Iteration   1: 1370.267 us/op
Iteration   2: 1422.273 us/op
Iteration   3: 1423.371 us/op
Iteration   4: 1372.462 us/op
Iteration   5: 1389.500 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1429.087 ±(99.9%) 70.898 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 2 
    [1375.000, 1400.000) = 1 
    [1400.000, 1425.000) = 3 
    [1425.000, 1450.000) = 1 
    [1450.000, 1475.000) = 1 
    [1475.000, 1500.000) = 1 
    [1500.000, 1525.000) = 1 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1370.267 us/op
     p(50.0000) =   1422.822 us/op
     p(90.0000) =   1503.175 us/op
     p(95.0000) =   1504.046 us/op
     p(99.0000) =   1504.046 us/op
     p(99.9000) =   1504.046 us/op
     p(99.9900) =   1504.046 us/op
     p(99.9990) =   1504.046 us/op
     p(99.9999) =   1504.046 us/op
    p(100.0000) =   1504.046 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.250)

# Run progress: 24.62% complete, ETA 00:34:51
# Fork: 1 of 2
# Warmup Iteration   1: 3312.182 us/op
# Warmup Iteration   2: 3129.161 us/op
# Warmup Iteration   3: 4029.540 us/op
# Warmup Iteration   4: 2394.652 us/op
# Warmup Iteration   5: 2416.146 us/op
Iteration   1: 1404.327 us/op
Iteration   2: 1411.464 us/op
Iteration   3: 1466.935 us/op
Iteration   4: 1421.935 us/op
Iteration   5: 1430.692 us/op

# Run progress: 24.81% complete, ETA 00:34:45
# Fork: 2 of 2
# Warmup Iteration   1: 3327.399 us/op
# Warmup Iteration   2: 3065.377 us/op
# Warmup Iteration   3: 2957.928 us/op
# Warmup Iteration   4: 2376.028 us/op
# Warmup Iteration   5: 2300.848 us/op
Iteration   1: 1393.798 us/op
Iteration   2: 1718.544 us/op
Iteration   3: 1441.645 us/op
Iteration   4: 1405.245 us/op
Iteration   5: 1396.799 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1449.138 ±(99.9%) 147.089 us/op

  Histogram, us/op:
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 2 
    [1400.000, 1450.000) = 6 
    [1450.000, 1500.000) = 1 
    [1500.000, 1550.000) = 0 
    [1550.000, 1600.000) = 0 
    [1600.000, 1650.000) = 0 
    [1650.000, 1700.000) = 0 
    [1700.000, 1750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1393.798 us/op
     p(50.0000) =   1416.700 us/op
     p(90.0000) =   1693.383 us/op
     p(95.0000) =   1718.544 us/op
     p(99.0000) =   1718.544 us/op
     p(99.9000) =   1718.544 us/op
     p(99.9900) =   1718.544 us/op
     p(99.9990) =   1718.544 us/op
     p(99.9999) =   1718.544 us/op
    p(100.0000) =   1718.544 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.375)

# Run progress: 25.00% complete, ETA 00:34:40
# Fork: 1 of 2
# Warmup Iteration   1: 3552.413 us/op
# Warmup Iteration   2: 3167.913 us/op
# Warmup Iteration   3: 2705.109 us/op
# Warmup Iteration   4: 2574.977 us/op
# Warmup Iteration   5: 2612.278 us/op
Iteration   1: 1426.444 us/op
Iteration   2: 1407.261 us/op
Iteration   3: 1429.183 us/op
Iteration   4: 1470.036 us/op
Iteration   5: 1412.291 us/op

# Run progress: 25.19% complete, ETA 00:34:35
# Fork: 2 of 2
# Warmup Iteration   1: 3158.754 us/op
# Warmup Iteration   2: 3303.931 us/op
# Warmup Iteration   3: 2620.059 us/op
# Warmup Iteration   4: 2540.292 us/op
# Warmup Iteration   5: 2418.047 us/op
Iteration   1: 1394.781 us/op
Iteration   2: 1480.199 us/op
Iteration   3: 1425.388 us/op
Iteration   4: 1409.875 us/op
Iteration   5: 1378.036 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1423.349 ±(99.9%) 47.520 us/op

  Histogram, us/op:
    [1300.000, 1312.500) = 0 
    [1312.500, 1325.000) = 0 
    [1325.000, 1337.500) = 0 
    [1337.500, 1350.000) = 0 
    [1350.000, 1362.500) = 0 
    [1362.500, 1375.000) = 0 
    [1375.000, 1387.500) = 1 
    [1387.500, 1400.000) = 1 
    [1400.000, 1412.500) = 3 
    [1412.500, 1425.000) = 0 
    [1425.000, 1437.500) = 3 
    [1437.500, 1450.000) = 0 
    [1450.000, 1462.500) = 0 
    [1462.500, 1475.000) = 1 
    [1475.000, 1487.500) = 1 

  Percentiles, us/op:
      p(0.0000) =   1378.036 us/op
     p(50.0000) =   1418.840 us/op
     p(90.0000) =   1479.183 us/op
     p(95.0000) =   1480.199 us/op
     p(99.0000) =   1480.199 us/op
     p(99.9000) =   1480.199 us/op
     p(99.9900) =   1480.199 us/op
     p(99.9990) =   1480.199 us/op
     p(99.9999) =   1480.199 us/op
    p(100.0000) =   1480.199 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.5)

# Run progress: 25.38% complete, ETA 00:34:30
# Fork: 1 of 2
# Warmup Iteration   1: 3568.575 us/op
# Warmup Iteration   2: 3565.274 us/op
# Warmup Iteration   3: 2715.105 us/op
# Warmup Iteration   4: 2518.301 us/op
# Warmup Iteration   5: 2745.921 us/op
Iteration   1: 1455.118 us/op
Iteration   2: 1456.174 us/op
Iteration   3: 1627.522 us/op
Iteration   4: 1568.586 us/op
Iteration   5: 1543.748 us/op

# Run progress: 25.57% complete, ETA 00:34:25
# Fork: 2 of 2
# Warmup Iteration   1: 3051.308 us/op
# Warmup Iteration   2: 3138.977 us/op
# Warmup Iteration   3: 2694.722 us/op
# Warmup Iteration   4: 2387.218 us/op
# Warmup Iteration   5: 2685.557 us/op
Iteration   1: 1430.437 us/op
Iteration   2: 1509.460 us/op
Iteration   3: 1468.256 us/op
Iteration   4: 1473.482 us/op
Iteration   5: 1487.063 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1501.985 ±(99.9%) 92.352 us/op

  Histogram, us/op:
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 1 
    [1450.000, 1475.000) = 4 
    [1475.000, 1500.000) = 1 
    [1500.000, 1525.000) = 1 
    [1525.000, 1550.000) = 1 
    [1550.000, 1575.000) = 1 
    [1575.000, 1600.000) = 0 
    [1600.000, 1625.000) = 0 
    [1625.000, 1650.000) = 1 
    [1650.000, 1675.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1430.437 us/op
     p(50.0000) =   1480.273 us/op
     p(90.0000) =   1621.628 us/op
     p(95.0000) =   1627.522 us/op
     p(99.0000) =   1627.522 us/op
     p(99.9000) =   1627.522 us/op
     p(99.9900) =   1627.522 us/op
     p(99.9990) =   1627.522 us/op
     p(99.9999) =   1627.522 us/op
    p(100.0000) =   1627.522 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.625)

# Run progress: 25.76% complete, ETA 00:34:19
# Fork: 1 of 2
# Warmup Iteration   1: 3187.606 us/op
# Warmup Iteration   2: 3181.347 us/op
# Warmup Iteration   3: 2829.466 us/op
# Warmup Iteration   4: 2361.808 us/op
# Warmup Iteration   5: 2763.039 us/op
Iteration   1: 1395.665 us/op
Iteration   2: 1464.356 us/op
Iteration   3: 1694.060 us/op
Iteration   4: 1530.666 us/op
Iteration   5: 1414.059 us/op

# Run progress: 25.95% complete, ETA 00:34:14
# Fork: 2 of 2
# Warmup Iteration   1: 3199.469 us/op
# Warmup Iteration   2: 3074.022 us/op
# Warmup Iteration   3: 2658.427 us/op
# Warmup Iteration   4: 2391.543 us/op
# Warmup Iteration   5: 2369.864 us/op
Iteration   1: 1390.026 us/op
Iteration   2: 1533.569 us/op
Iteration   3: 1424.205 us/op
Iteration   4: 1400.195 us/op
Iteration   5: 1404.268 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1465.107 ±(99.9%) 146.110 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 0 
    [1375.000, 1400.000) = 2 
    [1400.000, 1425.000) = 4 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 1 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 0 
    [1525.000, 1550.000) = 2 
    [1550.000, 1575.000) = 0 
    [1575.000, 1600.000) = 0 
    [1600.000, 1625.000) = 0 
    [1625.000, 1650.000) = 0 
    [1650.000, 1675.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1390.026 us/op
     p(50.0000) =   1419.132 us/op
     p(90.0000) =   1678.011 us/op
     p(95.0000) =   1694.060 us/op
     p(99.0000) =   1694.060 us/op
     p(99.9000) =   1694.060 us/op
     p(99.9900) =   1694.060 us/op
     p(99.9990) =   1694.060 us/op
     p(99.9999) =   1694.060 us/op
    p(100.0000) =   1694.060 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.75)

# Run progress: 26.14% complete, ETA 00:34:09
# Fork: 1 of 2
# Warmup Iteration   1: 3565.999 us/op
# Warmup Iteration   2: 3444.744 us/op
# Warmup Iteration   3: 3643.004 us/op
# Warmup Iteration   4: 2362.853 us/op
# Warmup Iteration   5: 2344.467 us/op
Iteration   1: 1420.079 us/op
Iteration   2: 1393.670 us/op
Iteration   3: 1415.249 us/op
Iteration   4: 1394.327 us/op
Iteration   5: 1406.876 us/op

# Run progress: 26.33% complete, ETA 00:34:04
# Fork: 2 of 2
# Warmup Iteration   1: 3298.828 us/op
# Warmup Iteration   2: 3248.683 us/op
# Warmup Iteration   3: 2576.877 us/op
# Warmup Iteration   4: 2381.770 us/op
# Warmup Iteration   5: 2379.714 us/op
Iteration   1: 1388.190 us/op
Iteration   2: 1445.512 us/op
Iteration   3: 1395.626 us/op
Iteration   4: 1420.671 us/op
Iteration   5: 1595.214 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1427.541 ±(99.9%) 92.836 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 0 
    [1375.000, 1400.000) = 4 
    [1400.000, 1425.000) = 4 
    [1425.000, 1450.000) = 1 
    [1450.000, 1475.000) = 0 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 0 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1388.190 us/op
     p(50.0000) =   1411.063 us/op
     p(90.0000) =   1580.244 us/op
     p(95.0000) =   1595.214 us/op
     p(99.0000) =   1595.214 us/op
     p(99.9000) =   1595.214 us/op
     p(99.9900) =   1595.214 us/op
     p(99.9990) =   1595.214 us/op
     p(99.9999) =   1595.214 us/op
    p(100.0000) =   1595.214 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.875)

# Run progress: 26.52% complete, ETA 00:33:59
# Fork: 1 of 2
# Warmup Iteration   1: 3373.759 us/op
# Warmup Iteration   2: 3123.511 us/op
# Warmup Iteration   3: 2653.413 us/op
# Warmup Iteration   4: 2447.272 us/op
# Warmup Iteration   5: 2472.037 us/op
Iteration   1: 1408.176 us/op
Iteration   2: 1523.869 us/op
Iteration   3: 1428.423 us/op
Iteration   4: 1452.505 us/op
Iteration   5: 1438.723 us/op

# Run progress: 26.70% complete, ETA 00:33:53
# Fork: 2 of 2
# Warmup Iteration   1: 3281.600 us/op
# Warmup Iteration   2: 3391.260 us/op
# Warmup Iteration   3: 2638.647 us/op
# Warmup Iteration   4: 2419.742 us/op
# Warmup Iteration   5: 2446.793 us/op
Iteration   1: 1422.416 us/op
Iteration   2: 1412.553 us/op
Iteration   3: 1428.150 us/op
Iteration   4: 1413.736 us/op
Iteration   5: 1462.281 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1439.083 ±(99.9%) 52.177 us/op

  Histogram, us/op:
    [1400.000, 1412.500) = 1 
    [1412.500, 1425.000) = 3 
    [1425.000, 1437.500) = 2 
    [1437.500, 1450.000) = 1 
    [1450.000, 1462.500) = 2 
    [1462.500, 1475.000) = 0 
    [1475.000, 1487.500) = 0 
    [1487.500, 1500.000) = 0 
    [1500.000, 1512.500) = 0 
    [1512.500, 1525.000) = 1 
    [1525.000, 1537.500) = 0 
    [1537.500, 1550.000) = 0 
    [1550.000, 1562.500) = 0 
    [1562.500, 1575.000) = 0 
    [1575.000, 1587.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1408.176 us/op
     p(50.0000) =   1428.287 us/op
     p(90.0000) =   1517.710 us/op
     p(95.0000) =   1523.869 us/op
     p(99.0000) =   1523.869 us/op
     p(99.9000) =   1523.869 us/op
     p(99.9900) =   1523.869 us/op
     p(99.9990) =   1523.869 us/op
     p(99.9999) =   1523.869 us/op
    p(100.0000) =   1523.869 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 1)

# Run progress: 26.89% complete, ETA 00:33:48
# Fork: 1 of 2
# Warmup Iteration   1: 3271.156 us/op
# Warmup Iteration   2: 3153.849 us/op
# Warmup Iteration   3: 2936.207 us/op
# Warmup Iteration   4: 2426.396 us/op
# Warmup Iteration   5: 2478.491 us/op
Iteration   1: 1415.757 us/op
Iteration   2: 1552.076 us/op
Iteration   3: 1418.830 us/op
Iteration   4: 1391.066 us/op
Iteration   5: 1371.359 us/op

# Run progress: 27.08% complete, ETA 00:33:43
# Fork: 2 of 2
# Warmup Iteration   1: 3309.622 us/op
# Warmup Iteration   2: 3044.453 us/op
# Warmup Iteration   3: 2668.542 us/op
# Warmup Iteration   4: 2403.857 us/op
# Warmup Iteration   5: 2413.514 us/op
Iteration   1: 1424.738 us/op
Iteration   2: 1455.956 us/op
Iteration   3: 1386.828 us/op
Iteration   4: 1394.883 us/op
Iteration   5: 1412.443 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1422.394 ±(99.9%) 77.604 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 1 
    [1375.000, 1400.000) = 3 
    [1400.000, 1425.000) = 4 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 1 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 0 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1371.359 us/op
     p(50.0000) =   1414.100 us/op
     p(90.0000) =   1542.464 us/op
     p(95.0000) =   1552.076 us/op
     p(99.0000) =   1552.076 us/op
     p(99.9000) =   1552.076 us/op
     p(99.9900) =   1552.076 us/op
     p(99.9990) =   1552.076 us/op
     p(99.9999) =   1552.076 us/op
    p(100.0000) =   1552.076 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.125)

# Run progress: 27.27% complete, ETA 00:33:38
# Fork: 1 of 2
# Warmup Iteration   1: 3259.816 us/op
# Warmup Iteration   2: 3256.168 us/op
# Warmup Iteration   3: 2755.584 us/op
# Warmup Iteration   4: 2388.796 us/op
# Warmup Iteration   5: 2505.423 us/op
Iteration   1: 1375.916 us/op
Iteration   2: 1434.284 us/op
Iteration   3: 1404.435 us/op
Iteration   4: 1380.755 us/op
Iteration   5: 1387.003 us/op

# Run progress: 27.46% complete, ETA 00:33:33
# Fork: 2 of 2
# Warmup Iteration   1: 3225.836 us/op
# Warmup Iteration   2: 3328.954 us/op
# Warmup Iteration   3: 2635.193 us/op
# Warmup Iteration   4: 2426.118 us/op
# Warmup Iteration   5: 2426.269 us/op
Iteration   1: 1389.930 us/op
Iteration   2: 1392.941 us/op
Iteration   3: 1388.915 us/op
Iteration   4: 1484.730 us/op
Iteration   5: 1423.316 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1406.223 ±(99.9%) 50.204 us/op

  Histogram, us/op:
    [1300.000, 1312.500) = 0 
    [1312.500, 1325.000) = 0 
    [1325.000, 1337.500) = 0 
    [1337.500, 1350.000) = 0 
    [1350.000, 1362.500) = 0 
    [1362.500, 1375.000) = 0 
    [1375.000, 1387.500) = 3 
    [1387.500, 1400.000) = 3 
    [1400.000, 1412.500) = 1 
    [1412.500, 1425.000) = 1 
    [1425.000, 1437.500) = 1 
    [1437.500, 1450.000) = 0 
    [1450.000, 1462.500) = 0 
    [1462.500, 1475.000) = 0 
    [1475.000, 1487.500) = 1 

  Percentiles, us/op:
      p(0.0000) =   1375.916 us/op
     p(50.0000) =   1391.436 us/op
     p(90.0000) =   1479.685 us/op
     p(95.0000) =   1484.730 us/op
     p(99.0000) =   1484.730 us/op
     p(99.9000) =   1484.730 us/op
     p(99.9900) =   1484.730 us/op
     p(99.9990) =   1484.730 us/op
     p(99.9999) =   1484.730 us/op
    p(100.0000) =   1484.730 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.250)

# Run progress: 27.65% complete, ETA 00:33:27
# Fork: 1 of 2
# Warmup Iteration   1: 3331.155 us/op
# Warmup Iteration   2: 3212.413 us/op
# Warmup Iteration   3: 2782.523 us/op
# Warmup Iteration   4: 2437.520 us/op
# Warmup Iteration   5: 2364.313 us/op
Iteration   1: 1507.911 us/op
Iteration   2: 1448.337 us/op
Iteration   3: 1408.573 us/op
Iteration   4: 1407.102 us/op
Iteration   5: 1414.864 us/op

# Run progress: 27.84% complete, ETA 00:33:22
# Fork: 2 of 2
# Warmup Iteration   1: 3310.913 us/op
# Warmup Iteration   2: 3279.473 us/op
# Warmup Iteration   3: 2731.712 us/op
# Warmup Iteration   4: 2472.982 us/op
# Warmup Iteration   5: 2486.956 us/op
Iteration   1: 1461.501 us/op
Iteration   2: 1478.846 us/op
Iteration   3: 1464.155 us/op
Iteration   4: 1480.289 us/op
Iteration   5: 1541.795 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1461.337 ±(99.9%) 66.420 us/op

  Histogram, us/op:
    [1400.000, 1412.500) = 2 
    [1412.500, 1425.000) = 1 
    [1425.000, 1437.500) = 0 
    [1437.500, 1450.000) = 1 
    [1450.000, 1462.500) = 1 
    [1462.500, 1475.000) = 1 
    [1475.000, 1487.500) = 2 
    [1487.500, 1500.000) = 0 
    [1500.000, 1512.500) = 1 
    [1512.500, 1525.000) = 0 
    [1525.000, 1537.500) = 0 
    [1537.500, 1550.000) = 1 
    [1550.000, 1562.500) = 0 
    [1562.500, 1575.000) = 0 
    [1575.000, 1587.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1407.102 us/op
     p(50.0000) =   1462.828 us/op
     p(90.0000) =   1538.407 us/op
     p(95.0000) =   1541.795 us/op
     p(99.0000) =   1541.795 us/op
     p(99.9000) =   1541.795 us/op
     p(99.9900) =   1541.795 us/op
     p(99.9990) =   1541.795 us/op
     p(99.9999) =   1541.795 us/op
    p(100.0000) =   1541.795 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.375)

# Run progress: 28.03% complete, ETA 00:33:17
# Fork: 1 of 2
# Warmup Iteration   1: 3303.986 us/op
# Warmup Iteration   2: 3106.553 us/op
# Warmup Iteration   3: 2498.665 us/op
# Warmup Iteration   4: 2376.956 us/op
# Warmup Iteration   5: 2368.254 us/op
Iteration   1: 1395.565 us/op
Iteration   2: 1399.854 us/op
Iteration   3: 1403.601 us/op
Iteration   4: 1386.967 us/op
Iteration   5: 1397.430 us/op

# Run progress: 28.22% complete, ETA 00:33:12
# Fork: 2 of 2
# Warmup Iteration   1: 3398.197 us/op
# Warmup Iteration   2: 3097.091 us/op
# Warmup Iteration   3: 2691.054 us/op
# Warmup Iteration   4: 2464.905 us/op
# Warmup Iteration   5: 2410.394 us/op
Iteration   1: 1403.384 us/op
Iteration   2: 1458.271 us/op
Iteration   3: 1406.429 us/op
Iteration   4: 1394.935 us/op
Iteration   5: 1407.738 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1405.417 ±(99.9%) 29.598 us/op

  Histogram, us/op:
    [1380.000, 1385.000) = 0 
    [1385.000, 1390.000) = 1 
    [1390.000, 1395.000) = 1 
    [1395.000, 1400.000) = 3 
    [1400.000, 1405.000) = 2 
    [1405.000, 1410.000) = 2 
    [1410.000, 1415.000) = 0 
    [1415.000, 1420.000) = 0 
    [1420.000, 1425.000) = 0 
    [1425.000, 1430.000) = 0 
    [1430.000, 1435.000) = 0 
    [1435.000, 1440.000) = 0 
    [1440.000, 1445.000) = 0 
    [1445.000, 1450.000) = 0 
    [1450.000, 1455.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1386.967 us/op
     p(50.0000) =   1401.619 us/op
     p(90.0000) =   1453.218 us/op
     p(95.0000) =   1458.271 us/op
     p(99.0000) =   1458.271 us/op
     p(99.9000) =   1458.271 us/op
     p(99.9900) =   1458.271 us/op
     p(99.9990) =   1458.271 us/op
     p(99.9999) =   1458.271 us/op
    p(100.0000) =   1458.271 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.5)

# Run progress: 28.41% complete, ETA 00:33:06
# Fork: 1 of 2
# Warmup Iteration   1: 3239.502 us/op
# Warmup Iteration   2: 3103.832 us/op
# Warmup Iteration   3: 2544.419 us/op
# Warmup Iteration   4: 2439.900 us/op
# Warmup Iteration   5: 2485.175 us/op
Iteration   1: 1380.653 us/op
Iteration   2: 1427.956 us/op
Iteration   3: 1411.572 us/op
Iteration   4: 1374.228 us/op
Iteration   5: 1412.888 us/op

# Run progress: 28.60% complete, ETA 00:33:01
# Fork: 2 of 2
# Warmup Iteration   1: 3514.925 us/op
# Warmup Iteration   2: 3166.227 us/op
# Warmup Iteration   3: 2555.882 us/op
# Warmup Iteration   4: 2440.048 us/op
# Warmup Iteration   5: 2433.816 us/op
Iteration   1: 1562.966 us/op
Iteration   2: 1480.559 us/op
Iteration   3: 1415.499 us/op
Iteration   4: 1429.873 us/op
Iteration   5: 1410.830 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1430.702 ±(99.9%) 82.794 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 1 
    [1375.000, 1400.000) = 1 
    [1400.000, 1425.000) = 4 
    [1425.000, 1450.000) = 2 
    [1450.000, 1475.000) = 0 
    [1475.000, 1500.000) = 1 
    [1500.000, 1525.000) = 0 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1374.228 us/op
     p(50.0000) =   1414.193 us/op
     p(90.0000) =   1554.725 us/op
     p(95.0000) =   1562.966 us/op
     p(99.0000) =   1562.966 us/op
     p(99.9000) =   1562.966 us/op
     p(99.9900) =   1562.966 us/op
     p(99.9990) =   1562.966 us/op
     p(99.9999) =   1562.966 us/op
    p(100.0000) =   1562.966 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.625)

# Run progress: 28.79% complete, ETA 00:32:56
# Fork: 1 of 2
# Warmup Iteration   1: 3259.538 us/op
# Warmup Iteration   2: 3223.189 us/op
# Warmup Iteration   3: 2662.275 us/op
# Warmup Iteration   4: 2397.374 us/op
# Warmup Iteration   5: 2393.170 us/op
Iteration   1: 1429.492 us/op
Iteration   2: 1505.040 us/op
Iteration   3: 1424.393 us/op
Iteration   4: 1625.863 us/op
Iteration   5: 1440.153 us/op

# Run progress: 28.98% complete, ETA 00:32:51
# Fork: 2 of 2
# Warmup Iteration   1: 3292.766 us/op
# Warmup Iteration   2: 3210.880 us/op
# Warmup Iteration   3: 2573.567 us/op
# Warmup Iteration   4: 2415.522 us/op
# Warmup Iteration   5: 2588.041 us/op
Iteration   1: 1392.498 us/op
Iteration   2: 1430.551 us/op
Iteration   3: 1649.277 us/op
Iteration   4: 1484.456 us/op
Iteration   5: 1416.604 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1479.833 ±(99.9%) 135.158 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 0 
    [1375.000, 1400.000) = 1 
    [1400.000, 1425.000) = 2 
    [1425.000, 1450.000) = 3 
    [1450.000, 1475.000) = 0 
    [1475.000, 1500.000) = 1 
    [1500.000, 1525.000) = 1 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 0 
    [1575.000, 1600.000) = 0 
    [1600.000, 1625.000) = 0 
    [1625.000, 1650.000) = 2 
    [1650.000, 1675.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1392.498 us/op
     p(50.0000) =   1435.352 us/op
     p(90.0000) =   1646.936 us/op
     p(95.0000) =   1649.277 us/op
     p(99.0000) =   1649.277 us/op
     p(99.9000) =   1649.277 us/op
     p(99.9900) =   1649.277 us/op
     p(99.9990) =   1649.277 us/op
     p(99.9999) =   1649.277 us/op
    p(100.0000) =   1649.277 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.75)

# Run progress: 29.17% complete, ETA 00:32:46
# Fork: 1 of 2
# Warmup Iteration   1: 3158.851 us/op
# Warmup Iteration   2: 3030.335 us/op
# Warmup Iteration   3: 2658.638 us/op
# Warmup Iteration   4: 2454.432 us/op
# Warmup Iteration   5: 2426.342 us/op
Iteration   1: 1408.565 us/op
Iteration   2: 1405.036 us/op
Iteration   3: 1423.531 us/op
Iteration   4: 1465.454 us/op
Iteration   5: 1443.117 us/op

# Run progress: 29.36% complete, ETA 00:32:40
# Fork: 2 of 2
# Warmup Iteration   1: 3351.660 us/op
# Warmup Iteration   2: 3155.676 us/op
# Warmup Iteration   3: 3002.623 us/op
# Warmup Iteration   4: 2449.029 us/op
# Warmup Iteration   5: 2909.055 us/op
Iteration   1: 1409.193 us/op
Iteration   2: 1511.793 us/op
Iteration   3: 1534.664 us/op
Iteration   4: 1496.541 us/op
Iteration   5: 1467.687 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1456.558 ±(99.9%) 70.239 us/op

  Histogram, us/op:
    [1400.000, 1412.500) = 3 
    [1412.500, 1425.000) = 1 
    [1425.000, 1437.500) = 0 
    [1437.500, 1450.000) = 1 
    [1450.000, 1462.500) = 0 
    [1462.500, 1475.000) = 2 
    [1475.000, 1487.500) = 0 
    [1487.500, 1500.000) = 1 
    [1500.000, 1512.500) = 1 
    [1512.500, 1525.000) = 0 
    [1525.000, 1537.500) = 1 
    [1537.500, 1550.000) = 0 
    [1550.000, 1562.500) = 0 
    [1562.500, 1575.000) = 0 
    [1575.000, 1587.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1405.036 us/op
     p(50.0000) =   1454.286 us/op
     p(90.0000) =   1532.377 us/op
     p(95.0000) =   1534.664 us/op
     p(99.0000) =   1534.664 us/op
     p(99.9000) =   1534.664 us/op
     p(99.9900) =   1534.664 us/op
     p(99.9990) =   1534.664 us/op
     p(99.9999) =   1534.664 us/op
    p(100.0000) =   1534.664 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.875)

# Run progress: 29.55% complete, ETA 00:32:35
# Fork: 1 of 2
# Warmup Iteration   1: 3206.433 us/op
# Warmup Iteration   2: 3131.655 us/op
# Warmup Iteration   3: 2547.609 us/op
# Warmup Iteration   4: 2403.617 us/op
# Warmup Iteration   5: 2494.441 us/op
Iteration   1: 1453.670 us/op
Iteration   2: 1469.204 us/op
Iteration   3: 1468.521 us/op
Iteration   4: 1466.871 us/op
Iteration   5: 1512.229 us/op

# Run progress: 29.73% complete, ETA 00:32:30
# Fork: 2 of 2
# Warmup Iteration   1: 3576.033 us/op
# Warmup Iteration   2: 3166.545 us/op
# Warmup Iteration   3: 2701.806 us/op
# Warmup Iteration   4: 2756.422 us/op
# Warmup Iteration   5: 2530.339 us/op
Iteration   1: 1731.303 us/op
Iteration   2: 1459.775 us/op
Iteration   3: 1491.263 us/op
Iteration   4: 1476.617 us/op
Iteration   5: 1504.755 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1503.421 ±(99.9%) 124.447 us/op

  Histogram, us/op:
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 5 
    [1475.000, 1500.000) = 2 
    [1500.000, 1525.000) = 2 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 0 
    [1575.000, 1600.000) = 0 
    [1600.000, 1625.000) = 0 
    [1625.000, 1650.000) = 0 
    [1650.000, 1675.000) = 0 
    [1675.000, 1700.000) = 0 
    [1700.000, 1725.000) = 0 
    [1725.000, 1750.000) = 1 
    [1750.000, 1775.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1453.670 us/op
     p(50.0000) =   1472.911 us/op
     p(90.0000) =   1709.396 us/op
     p(95.0000) =   1731.303 us/op
     p(99.0000) =   1731.303 us/op
     p(99.9000) =   1731.303 us/op
     p(99.9900) =   1731.303 us/op
     p(99.9990) =   1731.303 us/op
     p(99.9999) =   1731.303 us/op
    p(100.0000) =   1731.303 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 1)

# Run progress: 29.92% complete, ETA 00:32:25
# Fork: 1 of 2
# Warmup Iteration   1: 3353.877 us/op
# Warmup Iteration   2: 3126.537 us/op
# Warmup Iteration   3: 2884.240 us/op
# Warmup Iteration   4: 2400.244 us/op
# Warmup Iteration   5: 2406.595 us/op
Iteration   1: 1415.285 us/op
Iteration   2: 1443.573 us/op
Iteration   3: 1440.192 us/op
Iteration   4: 1429.300 us/op
Iteration   5: 1438.221 us/op

# Run progress: 30.11% complete, ETA 00:32:19
# Fork: 2 of 2
# Warmup Iteration   1: 3424.984 us/op
# Warmup Iteration   2: 3307.648 us/op
# Warmup Iteration   3: 2762.793 us/op
# Warmup Iteration   4: 2886.512 us/op
# Warmup Iteration   5: 2500.101 us/op
Iteration   1: 1401.138 us/op
Iteration   2: 1446.166 us/op
Iteration   3: 1556.967 us/op
Iteration   4: 1597.239 us/op
Iteration   5: 1403.650 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1457.173 ±(99.9%) 99.608 us/op

  Histogram, us/op:
    [1400.000, 1412.500) = 2 
    [1412.500, 1425.000) = 1 
    [1425.000, 1437.500) = 1 
    [1437.500, 1450.000) = 4 
    [1450.000, 1462.500) = 0 
    [1462.500, 1475.000) = 0 
    [1475.000, 1487.500) = 0 
    [1487.500, 1500.000) = 0 
    [1500.000, 1512.500) = 0 
    [1512.500, 1525.000) = 0 
    [1525.000, 1537.500) = 0 
    [1537.500, 1550.000) = 0 
    [1550.000, 1562.500) = 1 
    [1562.500, 1575.000) = 0 
    [1575.000, 1587.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1401.138 us/op
     p(50.0000) =   1439.207 us/op
     p(90.0000) =   1593.212 us/op
     p(95.0000) =   1597.239 us/op
     p(99.0000) =   1597.239 us/op
     p(99.9000) =   1597.239 us/op
     p(99.9900) =   1597.239 us/op
     p(99.9990) =   1597.239 us/op
     p(99.9999) =   1597.239 us/op
    p(100.0000) =   1597.239 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.125)

# Run progress: 30.30% complete, ETA 00:32:14
# Fork: 1 of 2
# Warmup Iteration   1: 4728.920 us/op
# Warmup Iteration   2: 4655.433 us/op
# Warmup Iteration   3: 4493.049 us/op
# Warmup Iteration   4: 3889.292 us/op
# Warmup Iteration   5: 3822.118 us/op
Iteration   1: 2740.565 us/op
Iteration   2: 2756.930 us/op
Iteration   3: 2808.568 us/op
Iteration   4: 2789.370 us/op
Iteration   5: 2789.694 us/op

# Run progress: 30.49% complete, ETA 00:32:09
# Fork: 2 of 2
# Warmup Iteration   1: 4768.468 us/op
# Warmup Iteration   2: 6279.335 us/op
# Warmup Iteration   3: 4073.665 us/op
# Warmup Iteration   4: 4067.102 us/op
# Warmup Iteration   5: 4204.857 us/op
Iteration   1: 2877.370 us/op
Iteration   2: 3104.717 us/op
Iteration   3: 3156.307 us/op
Iteration   4: 3582.116 us/op
Iteration   5: 3646.440 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   3025.208 ±(99.9%) 517.001 us/op

  Histogram, us/op:
    [2700.000, 2800.000) = 4 
    [2800.000, 2900.000) = 2 
    [2900.000, 3000.000) = 0 
    [3000.000, 3100.000) = 0 
    [3100.000, 3200.000) = 2 
    [3200.000, 3300.000) = 0 
    [3300.000, 3400.000) = 0 
    [3400.000, 3500.000) = 0 
    [3500.000, 3600.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2740.565 us/op
     p(50.0000) =   2842.969 us/op
     p(90.0000) =   3640.008 us/op
     p(95.0000) =   3646.440 us/op
     p(99.0000) =   3646.440 us/op
     p(99.9000) =   3646.440 us/op
     p(99.9900) =   3646.440 us/op
     p(99.9990) =   3646.440 us/op
     p(99.9999) =   3646.440 us/op
    p(100.0000) =   3646.440 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.250)

# Run progress: 30.68% complete, ETA 00:32:04
# Fork: 1 of 2
# Warmup Iteration   1: 4712.772 us/op
# Warmup Iteration   2: 4628.209 us/op
# Warmup Iteration   3: 3992.125 us/op
# Warmup Iteration   4: 4057.216 us/op
# Warmup Iteration   5: 3996.645 us/op
Iteration   1: 2865.147 us/op
Iteration   2: 2796.214 us/op
Iteration   3: 2806.418 us/op
Iteration   4: 2781.627 us/op
Iteration   5: 2830.211 us/op

# Run progress: 30.87% complete, ETA 00:31:59
# Fork: 2 of 2
# Warmup Iteration   1: 4779.219 us/op
# Warmup Iteration   2: 5013.240 us/op
# Warmup Iteration   3: 4034.532 us/op
# Warmup Iteration   4: 3950.983 us/op
# Warmup Iteration   5: 5617.057 us/op
Iteration   1: 3257.524 us/op
Iteration   2: 3569.709 us/op
Iteration   3: 3603.168 us/op
Iteration   4: 3596.234 us/op
Iteration   5: 3590.025 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   3169.628 ±(99.9%) 584.300 us/op

  Histogram, us/op:
    [2700.000, 2800.000) = 2 
    [2800.000, 2900.000) = 3 
    [2900.000, 3000.000) = 0 
    [3000.000, 3100.000) = 0 
    [3100.000, 3200.000) = 0 
    [3200.000, 3300.000) = 1 
    [3300.000, 3400.000) = 0 
    [3400.000, 3500.000) = 0 
    [3500.000, 3600.000) = 3 

  Percentiles, us/op:
      p(0.0000) =   2781.627 us/op
     p(50.0000) =   3061.336 us/op
     p(90.0000) =   3602.475 us/op
     p(95.0000) =   3603.168 us/op
     p(99.0000) =   3603.168 us/op
     p(99.9000) =   3603.168 us/op
     p(99.9900) =   3603.168 us/op
     p(99.9990) =   3603.168 us/op
     p(99.9999) =   3603.168 us/op
    p(100.0000) =   3603.168 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.375)

# Run progress: 31.06% complete, ETA 00:31:53
# Fork: 1 of 2
# Warmup Iteration   1: 4756.466 us/op
# Warmup Iteration   2: 4943.503 us/op
# Warmup Iteration   3: 4460.123 us/op
# Warmup Iteration   4: 4100.511 us/op
# Warmup Iteration   5: 4258.660 us/op
Iteration   1: 3074.897 us/op
Iteration   2: 3254.239 us/op
Iteration   3: 3622.041 us/op
Iteration   4: 3673.636 us/op
Iteration   5: 3698.928 us/op

# Run progress: 31.25% complete, ETA 00:31:48
# Fork: 2 of 2
# Warmup Iteration   1: 4818.263 us/op
# Warmup Iteration   2: 4879.831 us/op
# Warmup Iteration   3: 3960.611 us/op
# Warmup Iteration   4: 4050.006 us/op
# Warmup Iteration   5: 4056.999 us/op
Iteration   1: 3002.110 us/op
Iteration   2: 2906.082 us/op
Iteration   3: 3121.766 us/op
Iteration   4: 3237.616 us/op
Iteration   5: 3109.466 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   3270.078 ±(99.9%) 439.954 us/op

  Histogram, us/op:
    [2900.000, 2950.000) = 1 
    [2950.000, 3000.000) = 0 
    [3000.000, 3050.000) = 1 
    [3050.000, 3100.000) = 1 
    [3100.000, 3150.000) = 2 
    [3150.000, 3200.000) = 0 
    [3200.000, 3250.000) = 1 
    [3250.000, 3300.000) = 1 
    [3300.000, 3350.000) = 0 
    [3350.000, 3400.000) = 0 
    [3400.000, 3450.000) = 0 
    [3450.000, 3500.000) = 0 
    [3500.000, 3550.000) = 0 
    [3550.000, 3600.000) = 0 
    [3600.000, 3650.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2906.082 us/op
     p(50.0000) =   3179.691 us/op
     p(90.0000) =   3696.399 us/op
     p(95.0000) =   3698.928 us/op
     p(99.0000) =   3698.928 us/op
     p(99.9000) =   3698.928 us/op
     p(99.9900) =   3698.928 us/op
     p(99.9990) =   3698.928 us/op
     p(99.9999) =   3698.928 us/op
    p(100.0000) =   3698.928 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.5)

# Run progress: 31.44% complete, ETA 00:31:43
# Fork: 1 of 2
# Warmup Iteration   1: 4685.161 us/op
# Warmup Iteration   2: 4673.838 us/op
# Warmup Iteration   3: 4006.658 us/op
# Warmup Iteration   4: 4045.251 us/op
# Warmup Iteration   5: 4034.617 us/op
Iteration   1: 2749.224 us/op
Iteration   2: 2832.763 us/op
Iteration   3: 2783.313 us/op
Iteration   4: 2746.374 us/op
Iteration   5: 2794.356 us/op

# Run progress: 31.63% complete, ETA 00:31:38
# Fork: 2 of 2
# Warmup Iteration   1: 5164.975 us/op
# Warmup Iteration   2: 4713.688 us/op
# Warmup Iteration   3: 4119.927 us/op
# Warmup Iteration   4: 4090.190 us/op
# Warmup Iteration   5: 4281.176 us/op
Iteration   1: 3209.746 us/op
Iteration   2: 3647.096 us/op
Iteration   3: 3728.116 us/op
Iteration   4: 3850.158 us/op
Iteration   5: 3645.797 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   3198.694 ±(99.9%) 709.542 us/op

  Histogram, us/op:
    [2000.000, 2125.000) = 0 
    [2125.000, 2250.000) = 0 
    [2250.000, 2375.000) = 0 
    [2375.000, 2500.000) = 0 
    [2500.000, 2625.000) = 0 
    [2625.000, 2750.000) = 2 
    [2750.000, 2875.000) = 3 
    [2875.000, 3000.000) = 0 
    [3000.000, 3125.000) = 0 
    [3125.000, 3250.000) = 1 
    [3250.000, 3375.000) = 0 
    [3375.000, 3500.000) = 0 
    [3500.000, 3625.000) = 0 
    [3625.000, 3750.000) = 3 
    [3750.000, 3875.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2746.374 us/op
     p(50.0000) =   3021.255 us/op
     p(90.0000) =   3837.954 us/op
     p(95.0000) =   3850.158 us/op
     p(99.0000) =   3850.158 us/op
     p(99.9000) =   3850.158 us/op
     p(99.9900) =   3850.158 us/op
     p(99.9990) =   3850.158 us/op
     p(99.9999) =   3850.158 us/op
    p(100.0000) =   3850.158 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.625)

# Run progress: 31.82% complete, ETA 00:31:33
# Fork: 1 of 2
# Warmup Iteration   1: 4961.494 us/op
# Warmup Iteration   2: 4690.343 us/op
# Warmup Iteration   3: 4161.696 us/op
# Warmup Iteration   4: 4003.459 us/op
# Warmup Iteration   5: 3968.292 us/op
Iteration   1: 2884.496 us/op
Iteration   2: 2797.949 us/op
Iteration   3: 2769.647 us/op
Iteration   4: 2798.873 us/op
Iteration   5: 2783.134 us/op

# Run progress: 32.01% complete, ETA 00:31:27
# Fork: 2 of 2
# Warmup Iteration   1: 5167.678 us/op
# Warmup Iteration   2: 5116.928 us/op
# Warmup Iteration   3: 4184.467 us/op
# Warmup Iteration   4: 4085.513 us/op
# Warmup Iteration   5: 4092.240 us/op
Iteration   1: 2956.035 us/op
Iteration   2: 2956.026 us/op
Iteration   3: 3207.857 us/op
Iteration   4: 3528.069 us/op
Iteration   5: 3666.421 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   3034.851 ±(99.9%) 491.866 us/op

  Histogram, us/op:
    [2700.000, 2800.000) = 4 
    [2800.000, 2900.000) = 1 
    [2900.000, 3000.000) = 2 
    [3000.000, 3100.000) = 0 
    [3100.000, 3200.000) = 0 
    [3200.000, 3300.000) = 1 
    [3300.000, 3400.000) = 0 
    [3400.000, 3500.000) = 0 
    [3500.000, 3600.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2769.647 us/op
     p(50.0000) =   2920.261 us/op
     p(90.0000) =   3652.586 us/op
     p(95.0000) =   3666.421 us/op
     p(99.0000) =   3666.421 us/op
     p(99.9000) =   3666.421 us/op
     p(99.9900) =   3666.421 us/op
     p(99.9990) =   3666.421 us/op
     p(99.9999) =   3666.421 us/op
    p(100.0000) =   3666.421 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.75)

# Run progress: 32.20% complete, ETA 00:31:22
# Fork: 1 of 2
# Warmup Iteration   1: 4745.337 us/op
# Warmup Iteration   2: 4769.964 us/op
# Warmup Iteration   3: 4018.181 us/op
# Warmup Iteration   4: 4066.975 us/op
# Warmup Iteration   5: 3901.229 us/op
Iteration   1: 2761.258 us/op
Iteration   2: 2817.779 us/op
Iteration   3: 2810.268 us/op
Iteration   4: 2860.756 us/op
Iteration   5: 2882.129 us/op

# Run progress: 32.39% complete, ETA 00:31:17
# Fork: 2 of 2
# Warmup Iteration   1: 5232.873 us/op
# Warmup Iteration   2: 4747.857 us/op
# Warmup Iteration   3: 4179.778 us/op
# Warmup Iteration   4: 4310.913 us/op
# Warmup Iteration   5: 4188.888 us/op
Iteration   1: 3517.122 us/op
Iteration   2: 3723.238 us/op
Iteration   3: 3760.012 us/op
Iteration   4: 3642.716 us/op
Iteration   5: 3596.827 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   3237.211 ±(99.9%) 663.648 us/op

  Histogram, us/op:
    [2700.000, 2800.000) = 1 
    [2800.000, 2900.000) = 4 
    [2900.000, 3000.000) = 0 
    [3000.000, 3100.000) = 0 
    [3100.000, 3200.000) = 0 
    [3200.000, 3300.000) = 0 
    [3300.000, 3400.000) = 0 
    [3400.000, 3500.000) = 0 
    [3500.000, 3600.000) = 2 
    [3600.000, 3700.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2761.258 us/op
     p(50.0000) =   3199.626 us/op
     p(90.0000) =   3756.335 us/op
     p(95.0000) =   3760.012 us/op
     p(99.0000) =   3760.012 us/op
     p(99.9000) =   3760.012 us/op
     p(99.9900) =   3760.012 us/op
     p(99.9990) =   3760.012 us/op
     p(99.9999) =   3760.012 us/op
    p(100.0000) =   3760.012 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.875)

# Run progress: 32.58% complete, ETA 00:31:12
# Fork: 1 of 2
# Warmup Iteration   1: 4867.827 us/op
# Warmup Iteration   2: 4916.372 us/op
# Warmup Iteration   3: 4253.911 us/op
# Warmup Iteration   4: 4173.498 us/op
# Warmup Iteration   5: 4059.158 us/op
Iteration   1: 2942.984 us/op
Iteration   2: 3198.270 us/op
Iteration   3: 3487.837 us/op
Iteration   4: 3577.137 us/op
Iteration   5: 3687.686 us/op

# Run progress: 32.77% complete, ETA 00:31:07
# Fork: 2 of 2
# Warmup Iteration   1: 5002.910 us/op
# Warmup Iteration   2: 5121.161 us/op
# Warmup Iteration   3: 3949.557 us/op
# Warmup Iteration   4: 3774.553 us/op
# Warmup Iteration   5: 3988.414 us/op
Iteration   1: 2782.607 us/op
Iteration   2: 2789.957 us/op
Iteration   3: 2984.039 us/op
Iteration   4: 2798.233 us/op
Iteration   5: 2800.468 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   3104.922 ±(99.9%) 540.103 us/op

  Histogram, us/op:
    [2700.000, 2800.000) = 3 
    [2800.000, 2900.000) = 1 
    [2900.000, 3000.000) = 2 
    [3000.000, 3100.000) = 0 
    [3100.000, 3200.000) = 1 
    [3200.000, 3300.000) = 0 
    [3300.000, 3400.000) = 0 
    [3400.000, 3500.000) = 1 
    [3500.000, 3600.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2782.607 us/op
     p(50.0000) =   2963.512 us/op
     p(90.0000) =   3676.631 us/op
     p(95.0000) =   3687.686 us/op
     p(99.0000) =   3687.686 us/op
     p(99.9000) =   3687.686 us/op
     p(99.9900) =   3687.686 us/op
     p(99.9990) =   3687.686 us/op
     p(99.9999) =   3687.686 us/op
    p(100.0000) =   3687.686 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 1)

# Run progress: 32.95% complete, ETA 00:31:01
# Fork: 1 of 2
# Warmup Iteration   1: 4781.939 us/op
# Warmup Iteration   2: 4747.522 us/op
# Warmup Iteration   3: 4004.409 us/op
# Warmup Iteration   4: 3892.573 us/op
# Warmup Iteration   5: 3890.490 us/op
Iteration   1: 2733.811 us/op
Iteration   2: 2799.949 us/op
Iteration   3: 2820.859 us/op
Iteration   4: 2769.510 us/op
Iteration   5: 2783.879 us/op

# Run progress: 33.14% complete, ETA 00:30:56
# Fork: 2 of 2
# Warmup Iteration   1: 5351.646 us/op
# Warmup Iteration   2: 4549.170 us/op
# Warmup Iteration   3: 3921.674 us/op
# Warmup Iteration   4: 4098.557 us/op
# Warmup Iteration   5: 3854.109 us/op
Iteration   1: 2807.671 us/op
Iteration   2: 2865.681 us/op
Iteration   3: 3091.001 us/op
Iteration   4: 2881.749 us/op
Iteration   5: 2851.755 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2840.587 ±(99.9%) 149.453 us/op

  Histogram, us/op:
    [2700.000, 2725.000) = 0 
    [2725.000, 2750.000) = 1 
    [2750.000, 2775.000) = 1 
    [2775.000, 2800.000) = 2 
    [2800.000, 2825.000) = 2 
    [2825.000, 2850.000) = 0 
    [2850.000, 2875.000) = 2 
    [2875.000, 2900.000) = 1 
    [2900.000, 2925.000) = 0 
    [2925.000, 2950.000) = 0 
    [2950.000, 2975.000) = 0 
    [2975.000, 3000.000) = 0 
    [3000.000, 3025.000) = 0 
    [3025.000, 3050.000) = 0 
    [3050.000, 3075.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2733.811 us/op
     p(50.0000) =   2814.265 us/op
     p(90.0000) =   3070.076 us/op
     p(95.0000) =   3091.001 us/op
     p(99.0000) =   3091.001 us/op
     p(99.9000) =   3091.001 us/op
     p(99.9900) =   3091.001 us/op
     p(99.9990) =   3091.001 us/op
     p(99.9999) =   3091.001 us/op
    p(100.0000) =   3091.001 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.125)

# Run progress: 33.33% complete, ETA 00:30:51
# Fork: 1 of 2
# Warmup Iteration   1: 3466.257 us/op
# Warmup Iteration   2: 2567.769 us/op
# Warmup Iteration   3: 2270.082 us/op
# Warmup Iteration   4: 1850.728 us/op
# Warmup Iteration   5: 1774.303 us/op
Iteration   1: 16.015 us/op
Iteration   2: 39.736 us/op
Iteration   3: 1.772 us/op
Iteration   4: 1.621 us/op
Iteration   5: 5.653 us/op

# Run progress: 33.52% complete, ETA 00:30:46
# Fork: 2 of 2
# Warmup Iteration   1: 3484.813 us/op
# Warmup Iteration   2: 2338.229 us/op
# Warmup Iteration   3: 1849.553 us/op
# Warmup Iteration   4: 1891.821 us/op
# Warmup Iteration   5: 1827.974 us/op
Iteration   1: 2.359 us/op
Iteration   2: 15.619 us/op
Iteration   3: 6.880 us/op
Iteration   4: 1.494 us/op
Iteration   5: 3.483 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =      9.463 ±(99.9%) 18.092 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 4 
    [ 2.500,  5.000) = 1 
    [ 5.000,  7.500) = 2 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 2 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      1.494 us/op
     p(50.0000) =      4.568 us/op
     p(90.0000) =     37.364 us/op
     p(95.0000) =     39.736 us/op
     p(99.0000) =     39.736 us/op
     p(99.9000) =     39.736 us/op
     p(99.9900) =     39.736 us/op
     p(99.9990) =     39.736 us/op
     p(99.9999) =     39.736 us/op
    p(100.0000) =     39.736 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.250)

# Run progress: 33.71% complete, ETA 00:30:41
# Fork: 1 of 2
# Warmup Iteration   1: 3144.802 us/op
# Warmup Iteration   2: 1924.399 us/op
# Warmup Iteration   3: 1872.843 us/op
# Warmup Iteration   4: 1537.860 us/op
# Warmup Iteration   5: 1634.985 us/op
Iteration   1: 1.938 us/op
Iteration   2: 28.721 us/op
Iteration   3: 1.848 us/op
Iteration   4: 1.922 us/op
Iteration   5: 1.895 us/op

# Run progress: 33.90% complete, ETA 00:30:35
# Fork: 2 of 2
# Warmup Iteration   1: 3561.885 us/op
# Warmup Iteration   2: 2336.247 us/op
# Warmup Iteration   3: 1598.707 us/op
# Warmup Iteration   4: 1619.494 us/op
# Warmup Iteration   5: 1697.840 us/op
Iteration   1: 2.118 us/op
Iteration   2: 5.877 us/op
Iteration   3: 1.995 us/op
Iteration   4: 2.099 us/op
Iteration   5: 2.179 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =      5.059 ±(99.9%) 12.705 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 8 
    [ 2.500,  5.000) = 0 
    [ 5.000,  7.500) = 1 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      1.848 us/op
     p(50.0000) =      2.047 us/op
     p(90.0000) =     26.437 us/op
     p(95.0000) =     28.721 us/op
     p(99.0000) =     28.721 us/op
     p(99.9000) =     28.721 us/op
     p(99.9900) =     28.721 us/op
     p(99.9990) =     28.721 us/op
     p(99.9999) =     28.721 us/op
    p(100.0000) =     28.721 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.375)

# Run progress: 34.09% complete, ETA 00:30:30
# Fork: 1 of 2
# Warmup Iteration   1: 2740.481 us/op
# Warmup Iteration   2: 1823.901 us/op
# Warmup Iteration   3: 1783.335 us/op
# Warmup Iteration   4: 1342.628 us/op
# Warmup Iteration   5: 1292.725 us/op
Iteration   1: 1.366 us/op
Iteration   2: 4.264 us/op
Iteration   3: 1.640 us/op
Iteration   4: 1.624 us/op
Iteration   5: 1.562 us/op

# Run progress: 34.28% complete, ETA 00:30:25
# Fork: 2 of 2
# Warmup Iteration   1: 2940.381 us/op
# Warmup Iteration   2: 2024.745 us/op
# Warmup Iteration   3: 1847.101 us/op
# Warmup Iteration   4: 1350.593 us/op
# Warmup Iteration   5: 1468.184 us/op
Iteration   1: 1.473 us/op
Iteration   2: 3.423 us/op
Iteration   3: 1.611 us/op
Iteration   4: 1.730 us/op
Iteration   5: 1.791 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =      2.048 ±(99.9%) 1.473 us/op

  Histogram, us/op:
    [1.000, 1.250) = 0 
    [1.250, 1.500) = 2 
    [1.500, 1.750) = 5 
    [1.750, 2.000) = 1 
    [2.000, 2.250) = 0 
    [2.250, 2.500) = 0 
    [2.500, 2.750) = 0 
    [2.750, 3.000) = 0 
    [3.000, 3.250) = 0 
    [3.250, 3.500) = 1 
    [3.500, 3.750) = 0 
    [3.750, 4.000) = 0 
    [4.000, 4.250) = 0 
    [4.250, 4.500) = 1 
    [4.500, 4.750) = 0 

  Percentiles, us/op:
      p(0.0000) =      1.366 us/op
     p(50.0000) =      1.632 us/op
     p(90.0000) =      4.180 us/op
     p(95.0000) =      4.264 us/op
     p(99.0000) =      4.264 us/op
     p(99.9000) =      4.264 us/op
     p(99.9900) =      4.264 us/op
     p(99.9990) =      4.264 us/op
     p(99.9999) =      4.264 us/op
    p(100.0000) =      4.264 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.5)

# Run progress: 34.47% complete, ETA 00:30:20
# Fork: 1 of 2
# Warmup Iteration   1: 2794.690 us/op
# Warmup Iteration   2: 1885.474 us/op
# Warmup Iteration   3: 1597.085 us/op
# Warmup Iteration   4: 1898.975 us/op
# Warmup Iteration   5: 1652.841 us/op
Iteration   1: 1.534 us/op
Iteration   2: 1.778 us/op
Iteration   3: 5.458 us/op
Iteration   4: 1.752 us/op
Iteration   5: 1.808 us/op

# Run progress: 34.66% complete, ETA 00:30:14
# Fork: 2 of 2
# Warmup Iteration   1: 3115.582 us/op
# Warmup Iteration   2: 2093.559 us/op
# Warmup Iteration   3: 1831.351 us/op
# Warmup Iteration   4: 1495.437 us/op
# Warmup Iteration   5: 1735.483 us/op
Iteration   1: 1.774 us/op
Iteration   2: 1.794 us/op
Iteration   3: 5.815 us/op
Iteration   4: 1.889 us/op
Iteration   5: 1.888 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =      2.549 ±(99.9%) 2.468 us/op

  Histogram, us/op:
    [1.000, 1.500) = 0 
    [1.500, 2.000) = 8 
    [2.000, 2.500) = 0 
    [2.500, 3.000) = 0 
    [3.000, 3.500) = 0 
    [3.500, 4.000) = 0 
    [4.000, 4.500) = 0 
    [4.500, 5.000) = 0 
    [5.000, 5.500) = 1 

  Percentiles, us/op:
      p(0.0000) =      1.534 us/op
     p(50.0000) =      1.801 us/op
     p(90.0000) =      5.779 us/op
     p(95.0000) =      5.815 us/op
     p(99.0000) =      5.815 us/op
     p(99.9000) =      5.815 us/op
     p(99.9900) =      5.815 us/op
     p(99.9990) =      5.815 us/op
     p(99.9999) =      5.815 us/op
    p(100.0000) =      5.815 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.625)

# Run progress: 34.85% complete, ETA 00:30:09
# Fork: 1 of 2
# Warmup Iteration   1: 2678.604 us/op
# Warmup Iteration   2: 1551.221 us/op
# Warmup Iteration   3: 1487.593 us/op
# Warmup Iteration   4: 1506.241 us/op
# Warmup Iteration   5: 1220.173 us/op
Iteration   1: 1.081 us/op
Iteration   2: 1.063 us/op
Iteration   3: 4.884 us/op
Iteration   4: 1.052 us/op
Iteration   5: 1.200 us/op

# Run progress: 35.04% complete, ETA 00:30:04
# Fork: 2 of 2
# Warmup Iteration   1: 3144.198 us/op
# Warmup Iteration   2: 1802.978 us/op
# Warmup Iteration   3: 1323.817 us/op
# Warmup Iteration   4: 1226.120 us/op
# Warmup Iteration   5: 1212.296 us/op
Iteration   1: 1.149 us/op
Iteration   2: 1.066 us/op
Iteration   3: 4.903 us/op
Iteration   4: 1.104 us/op
Iteration   5: 1.409 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =      1.891 ±(99.9%) 2.398 us/op

  Histogram, us/op:
    [1.000, 1.250) = 7 
    [1.250, 1.500) = 1 
    [1.500, 1.750) = 0 
    [1.750, 2.000) = 0 
    [2.000, 2.250) = 0 
    [2.250, 2.500) = 0 
    [2.500, 2.750) = 0 
    [2.750, 3.000) = 0 
    [3.000, 3.250) = 0 
    [3.250, 3.500) = 0 
    [3.500, 3.750) = 0 
    [3.750, 4.000) = 0 
    [4.000, 4.250) = 0 
    [4.250, 4.500) = 0 
    [4.500, 4.750) = 0 

  Percentiles, us/op:
      p(0.0000) =      1.052 us/op
     p(50.0000) =      1.127 us/op
     p(90.0000) =      4.901 us/op
     p(95.0000) =      4.903 us/op
     p(99.0000) =      4.903 us/op
     p(99.9000) =      4.903 us/op
     p(99.9900) =      4.903 us/op
     p(99.9990) =      4.903 us/op
     p(99.9999) =      4.903 us/op
    p(100.0000) =      4.903 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.75)

# Run progress: 35.23% complete, ETA 00:29:58
# Fork: 1 of 2
# Warmup Iteration   1: 2901.819 us/op
# Warmup Iteration   2: 1755.879 us/op
# Warmup Iteration   3: 1503.945 us/op
# Warmup Iteration   4: 1694.495 us/op
# Warmup Iteration   5: 1304.143 us/op
Iteration   1: 1.129 us/op
Iteration   2: 1.065 us/op
Iteration   3: 5.082 us/op
Iteration   4: 1.197 us/op
Iteration   5: 1.165 us/op

# Run progress: 35.42% complete, ETA 00:29:53
# Fork: 2 of 2
# Warmup Iteration   1: 3896.082 us/op
# Warmup Iteration   2: 2029.200 us/op
# Warmup Iteration   3: 1959.385 us/op
# Warmup Iteration   4: 1397.605 us/op
# Warmup Iteration   5: 1338.396 us/op
Iteration   1: 1.173 us/op
Iteration   2: 1.433 us/op
Iteration   3: 6.005 us/op
Iteration   4: 1.278 us/op
Iteration   5: 1.240 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =      2.077 ±(99.9%) 2.786 us/op

  Histogram, us/op:
    [1.000, 1.500) = 8 
    [1.500, 2.000) = 0 
    [2.000, 2.500) = 0 
    [2.500, 3.000) = 0 
    [3.000, 3.500) = 0 
    [3.500, 4.000) = 0 
    [4.000, 4.500) = 0 
    [4.500, 5.000) = 0 
    [5.000, 5.500) = 1 
    [5.500, 6.000) = 0 
    [6.000, 6.500) = 1 

  Percentiles, us/op:
      p(0.0000) =      1.065 us/op
     p(50.0000) =      1.219 us/op
     p(90.0000) =      5.913 us/op
     p(95.0000) =      6.005 us/op
     p(99.0000) =      6.005 us/op
     p(99.9000) =      6.005 us/op
     p(99.9900) =      6.005 us/op
     p(99.9990) =      6.005 us/op
     p(99.9999) =      6.005 us/op
    p(100.0000) =      6.005 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.875)

# Run progress: 35.61% complete, ETA 00:29:48
# Fork: 1 of 2
# Warmup Iteration   1: 3048.812 us/op
# Warmup Iteration   2: 1677.636 us/op
# Warmup Iteration   3: 1587.180 us/op
# Warmup Iteration   4: 1631.590 us/op
# Warmup Iteration   5: 1372.973 us/op
Iteration   1: 1.146 us/op
Iteration   2: 1.008 us/op
Iteration   3: 27.188 us/op
Iteration   4: 1.168 us/op
Iteration   5: 1.135 us/op

# Run progress: 35.80% complete, ETA 00:29:43
# Fork: 2 of 2
# Warmup Iteration   1: 3017.533 us/op
# Warmup Iteration   2: 1696.768 us/op
# Warmup Iteration   3: 1607.235 us/op
# Warmup Iteration   4: 1592.830 us/op
# Warmup Iteration   5: 1326.167 us/op
Iteration   1: 1.114 us/op
Iteration   2: 1.106 us/op
Iteration   3: 4.620 us/op
Iteration   4: 1.147 us/op
Iteration   5: 1.136 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =      4.077 ±(99.9%) 12.389 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 8 
    [ 2.500,  5.000) = 1 
    [ 5.000,  7.500) = 0 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 1 

  Percentiles, us/op:
      p(0.0000) =      1.008 us/op
     p(50.0000) =      1.141 us/op
     p(90.0000) =     24.931 us/op
     p(95.0000) =     27.188 us/op
     p(99.0000) =     27.188 us/op
     p(99.9000) =     27.188 us/op
     p(99.9900) =     27.188 us/op
     p(99.9990) =     27.188 us/op
     p(99.9999) =     27.188 us/op
    p(100.0000) =     27.188 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 1)

# Run progress: 35.98% complete, ETA 00:29:37
# Fork: 1 of 2
# Warmup Iteration   1: 2987.501 us/op
# Warmup Iteration   2: 1885.476 us/op
# Warmup Iteration   3: 1730.647 us/op
# Warmup Iteration   4: 1463.082 us/op
# Warmup Iteration   5: 1474.240 us/op
Iteration   1: 1.241 us/op
Iteration   2: 1.316 us/op
Iteration   3: 4.339 us/op
Iteration   4: 1.254 us/op
Iteration   5: 1.125 us/op

# Run progress: 36.17% complete, ETA 00:29:32
# Fork: 2 of 2
# Warmup Iteration   1: 2770.630 us/op
# Warmup Iteration   2: 2192.006 us/op
# Warmup Iteration   3: 1505.148 us/op
# Warmup Iteration   4: 1379.109 us/op
# Warmup Iteration   5: 1376.912 us/op
Iteration   1: 1.029 us/op
Iteration   2: 1.070 us/op
Iteration   3: 5.201 us/op
Iteration   4: 1.018 us/op
Iteration   5: 1.037 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =      1.863 ±(99.9%) 2.342 us/op

  Histogram, us/op:
    [1.000, 1.500) = 8 
    [1.500, 2.000) = 0 
    [2.000, 2.500) = 0 
    [2.500, 3.000) = 0 
    [3.000, 3.500) = 0 
    [3.500, 4.000) = 0 
    [4.000, 4.500) = 1 
    [4.500, 5.000) = 0 
    [5.000, 5.500) = 1 

  Percentiles, us/op:
      p(0.0000) =      1.018 us/op
     p(50.0000) =      1.183 us/op
     p(90.0000) =      5.115 us/op
     p(95.0000) =      5.201 us/op
     p(99.0000) =      5.201 us/op
     p(99.9000) =      5.201 us/op
     p(99.9900) =      5.201 us/op
     p(99.9990) =      5.201 us/op
     p(99.9999) =      5.201 us/op
    p(100.0000) =      5.201 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.125)

# Run progress: 36.36% complete, ETA 00:29:27
# Fork: 1 of 2
# Warmup Iteration   1: 4011.324 us/op
# Warmup Iteration   2: 2690.509 us/op
# Warmup Iteration   3: 3122.012 us/op
# Warmup Iteration   4: 2179.918 us/op
# Warmup Iteration   5: 2002.080 us/op
Iteration   1: 5.088 us/op
Iteration   2: 1.187 us/op
Iteration   3: 1.244 us/op
Iteration   4: 1.180 us/op
Iteration   5: 1.141 us/op

# Run progress: 36.55% complete, ETA 00:29:22
# Fork: 2 of 2
# Warmup Iteration   1: 3413.928 us/op
# Warmup Iteration   2: 2545.775 us/op
# Warmup Iteration   3: 2308.301 us/op
# Warmup Iteration   4: 2031.821 us/op
# Warmup Iteration   5: 1951.178 us/op
Iteration   1: 3.429 us/op
Iteration   2: 1.252 us/op
Iteration   3: 1.237 us/op
Iteration   4: 1.161 us/op
Iteration   5: 1.250 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =      1.817 ±(99.9%) 2.034 us/op

  Histogram, us/op:
    [1.000, 1.500) = 8 
    [1.500, 2.000) = 0 
    [2.000, 2.500) = 0 
    [2.500, 3.000) = 0 
    [3.000, 3.500) = 1 
    [3.500, 4.000) = 0 
    [4.000, 4.500) = 0 
    [4.500, 5.000) = 0 
    [5.000, 5.500) = 1 

  Percentiles, us/op:
      p(0.0000) =      1.141 us/op
     p(50.0000) =      1.241 us/op
     p(90.0000) =      4.922 us/op
     p(95.0000) =      5.088 us/op
     p(99.0000) =      5.088 us/op
     p(99.9000) =      5.088 us/op
     p(99.9900) =      5.088 us/op
     p(99.9990) =      5.088 us/op
     p(99.9999) =      5.088 us/op
    p(100.0000) =      5.088 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.250)

# Run progress: 36.74% complete, ETA 00:29:16
# Fork: 1 of 2
# Warmup Iteration   1: 3262.216 us/op
# Warmup Iteration   2: 2135.519 us/op
# Warmup Iteration   3: 1623.449 us/op
# Warmup Iteration   4: 1578.899 us/op
# Warmup Iteration   5: 1854.286 us/op
Iteration   1: 3.323 us/op
Iteration   2: 1.209 us/op
Iteration   3: 5.446 us/op
Iteration   4: 1.397 us/op
Iteration   5: 5.039 us/op

# Run progress: 36.93% complete, ETA 00:29:11
# Fork: 2 of 2
# Warmup Iteration   1: 3100.486 us/op
# Warmup Iteration   2: 2109.334 us/op
# Warmup Iteration   3: 1695.381 us/op
# Warmup Iteration   4: 1542.323 us/op
# Warmup Iteration   5: 1607.993 us/op
Iteration   1: 16.604 us/op
Iteration   2: 1.096 us/op
Iteration   3: 25.567 us/op
Iteration   4: 1.175 us/op
Iteration   5: 4.995 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =      6.585 ±(99.9%) 12.270 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 4 
    [ 2.500,  5.000) = 2 
    [ 5.000,  7.500) = 2 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 1 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 1 

  Percentiles, us/op:
      p(0.0000) =      1.096 us/op
     p(50.0000) =      4.159 us/op
     p(90.0000) =     24.671 us/op
     p(95.0000) =     25.567 us/op
     p(99.0000) =     25.567 us/op
     p(99.9000) =     25.567 us/op
     p(99.9900) =     25.567 us/op
     p(99.9990) =     25.567 us/op
     p(99.9999) =     25.567 us/op
    p(100.0000) =     25.567 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.375)

# Run progress: 37.12% complete, ETA 00:29:06
# Fork: 1 of 2
# Warmup Iteration   1: 2970.699 us/op
# Warmup Iteration   2: 1886.211 us/op
# Warmup Iteration   3: 1352.992 us/op
# Warmup Iteration   4: 1359.193 us/op
# Warmup Iteration   5: 1339.559 us/op
Iteration   1: 5.447 us/op
Iteration   2: 1.185 us/op
Iteration   3: 5.141 us/op
Iteration   4: 1.101 us/op
Iteration   5: 3.220 us/op

# Run progress: 37.31% complete, ETA 00:29:01
# Fork: 2 of 2
# Warmup Iteration   1: 2728.794 us/op
# Warmup Iteration   2: 1850.930 us/op
# Warmup Iteration   3: 1676.740 us/op
# Warmup Iteration   4: 1598.282 us/op
# Warmup Iteration   5: 1334.161 us/op
Iteration   1: 5.187 us/op
Iteration   2: 1.073 us/op
Iteration   3: 4.978 us/op
Iteration   4: 1.201 us/op
Iteration   5: 5.050 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =      3.358 ±(99.9%) 3.027 us/op

  Histogram, us/op:
    [1.000, 1.500) = 4 
    [1.500, 2.000) = 0 
    [2.000, 2.500) = 0 
    [2.500, 3.000) = 0 
    [3.000, 3.500) = 1 
    [3.500, 4.000) = 0 
    [4.000, 4.500) = 0 
    [4.500, 5.000) = 1 
    [5.000, 5.500) = 4 

  Percentiles, us/op:
      p(0.0000) =      1.073 us/op
     p(50.0000) =      4.099 us/op
     p(90.0000) =      5.421 us/op
     p(95.0000) =      5.447 us/op
     p(99.0000) =      5.447 us/op
     p(99.9000) =      5.447 us/op
     p(99.9900) =      5.447 us/op
     p(99.9990) =      5.447 us/op
     p(99.9999) =      5.447 us/op
    p(100.0000) =      5.447 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.5)

# Run progress: 37.50% complete, ETA 00:28:55
# Fork: 1 of 2
# Warmup Iteration   1: 3171.789 us/op
# Warmup Iteration   2: 1964.655 us/op
# Warmup Iteration   3: 2056.986 us/op
# Warmup Iteration   4: 1494.234 us/op
# Warmup Iteration   5: 1454.182 us/op
Iteration   1: 1.087 us/op
Iteration   2: 29.794 us/op
Iteration   3: 1.117 us/op
Iteration   4: 4.853 us/op
Iteration   5: 1.078 us/op

# Run progress: 37.69% complete, ETA 00:28:50
# Fork: 2 of 2
# Warmup Iteration   1: 2888.392 us/op
# Warmup Iteration   2: 1787.125 us/op
# Warmup Iteration   3: 1948.364 us/op
# Warmup Iteration   4: 1663.632 us/op
# Warmup Iteration   5: 1451.012 us/op
Iteration   1: 1.200 us/op
Iteration   2: 4.088 us/op
Iteration   3: 1.136 us/op
Iteration   4: 4.249 us/op
Iteration   5: 1.120 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =      4.972 ±(99.9%) 13.394 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 6 
    [ 2.500,  5.000) = 3 
    [ 5.000,  7.500) = 0 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      1.078 us/op
     p(50.0000) =      1.168 us/op
     p(90.0000) =     27.300 us/op
     p(95.0000) =     29.794 us/op
     p(99.0000) =     29.794 us/op
     p(99.9000) =     29.794 us/op
     p(99.9900) =     29.794 us/op
     p(99.9990) =     29.794 us/op
     p(99.9999) =     29.794 us/op
    p(100.0000) =     29.794 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.625)

# Run progress: 37.88% complete, ETA 00:28:45
# Fork: 1 of 2
# Warmup Iteration   1: 2844.482 us/op
# Warmup Iteration   2: 1537.511 us/op
# Warmup Iteration   3: 1638.852 us/op
# Warmup Iteration   4: 1282.545 us/op
# Warmup Iteration   5: 1228.253 us/op
Iteration   1: 1.035 us/op
Iteration   2: 1.100 us/op
Iteration   3: 1.113 us/op
Iteration   4: 1.129 us/op
Iteration   5: 1.110 us/op

# Run progress: 38.07% complete, ETA 00:28:39
# Fork: 2 of 2
# Warmup Iteration   1: 3205.344 us/op
# Warmup Iteration   2: 1695.359 us/op
# Warmup Iteration   3: 1632.080 us/op
# Warmup Iteration   4: 1548.590 us/op
# Warmup Iteration   5: 1335.375 us/op
Iteration   1: 15.039 us/op
Iteration   2: 1.074 us/op
Iteration   3: 1.043 us/op
Iteration   4: 1.176 us/op
Iteration   5: 1.076 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =      2.490 ±(99.9%) 6.667 us/op

  Histogram, us/op:
    [ 0.000,  1.250) = 9 
    [ 1.250,  2.500) = 0 
    [ 2.500,  3.750) = 0 
    [ 3.750,  5.000) = 0 
    [ 5.000,  6.250) = 0 
    [ 6.250,  7.500) = 0 
    [ 7.500,  8.750) = 0 
    [ 8.750, 10.000) = 0 
    [10.000, 11.250) = 0 
    [11.250, 12.500) = 0 
    [12.500, 13.750) = 0 
    [13.750, 15.000) = 0 
    [15.000, 16.250) = 1 
    [16.250, 17.500) = 0 
    [17.500, 18.750) = 0 

  Percentiles, us/op:
      p(0.0000) =      1.035 us/op
     p(50.0000) =      1.105 us/op
     p(90.0000) =     13.653 us/op
     p(95.0000) =     15.039 us/op
     p(99.0000) =     15.039 us/op
     p(99.9000) =     15.039 us/op
     p(99.9900) =     15.039 us/op
     p(99.9990) =     15.039 us/op
     p(99.9999) =     15.039 us/op
    p(100.0000) =     15.039 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.75)

# Run progress: 38.26% complete, ETA 00:28:34
# Fork: 1 of 2
# Warmup Iteration   1: 2880.450 us/op
# Warmup Iteration   2: 1613.986 us/op
# Warmup Iteration   3: 1550.867 us/op
# Warmup Iteration   4: 1610.308 us/op
# Warmup Iteration   5: 1291.702 us/op
Iteration   1: 1.016 us/op
Iteration   2: 1.088 us/op
Iteration   3: 1.139 us/op
Iteration   4: 1.072 us/op
Iteration   5: 1.036 us/op

# Run progress: 38.45% complete, ETA 00:28:29
# Fork: 2 of 2
# Warmup Iteration   1: 3259.529 us/op
# Warmup Iteration   2: 1735.733 us/op
# Warmup Iteration   3: 1300.588 us/op
# Warmup Iteration   4: 1273.617 us/op
# Warmup Iteration   5: 1248.395 us/op
Iteration   1: 1.149 us/op
Iteration   2: 1.328 us/op
Iteration   3: 1.111 us/op
Iteration   4: 1.181 us/op
Iteration   5: 1.235 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =      1.136 ±(99.9%) 0.143 us/op

  Histogram, us/op:
    [1.000, 1.025) = 1 
    [1.025, 1.050) = 1 
    [1.050, 1.075) = 1 
    [1.075, 1.100) = 1 
    [1.100, 1.125) = 1 
    [1.125, 1.150) = 2 
    [1.150, 1.175) = 0 
    [1.175, 1.200) = 1 
    [1.200, 1.225) = 0 
    [1.225, 1.250) = 1 
    [1.250, 1.275) = 0 
    [1.275, 1.300) = 0 
    [1.300, 1.325) = 0 
    [1.325, 1.350) = 1 
    [1.350, 1.375) = 0 
    [1.375, 1.400) = 0 

  Percentiles, us/op:
      p(0.0000) =      1.016 us/op
     p(50.0000) =      1.125 us/op
     p(90.0000) =      1.319 us/op
     p(95.0000) =      1.328 us/op
     p(99.0000) =      1.328 us/op
     p(99.9000) =      1.328 us/op
     p(99.9900) =      1.328 us/op
     p(99.9990) =      1.328 us/op
     p(99.9999) =      1.328 us/op
    p(100.0000) =      1.328 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.875)

# Run progress: 38.64% complete, ETA 00:28:24
# Fork: 1 of 2
# Warmup Iteration   1: 2718.713 us/op
# Warmup Iteration   2: 1684.274 us/op
# Warmup Iteration   3: 1566.576 us/op
# Warmup Iteration   4: 1655.001 us/op
# Warmup Iteration   5: 1359.664 us/op
Iteration   1: 1.100 us/op
Iteration   2: 1.182 us/op
Iteration   3: 1.066 us/op
Iteration   4: 1.154 us/op
Iteration   5: 4.101 us/op

# Run progress: 38.83% complete, ETA 00:28:18
# Fork: 2 of 2
# Warmup Iteration   1: 2848.926 us/op
# Warmup Iteration   2: 1786.967 us/op
# Warmup Iteration   3: 1587.343 us/op
# Warmup Iteration   4: 1646.464 us/op
# Warmup Iteration   5: 1285.956 us/op
Iteration   1: 1.019 us/op
Iteration   2: 1.172 us/op
Iteration   3: 1.040 us/op
Iteration   4: 0.988 us/op
Iteration   5: 56.911 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =      6.973 ±(99.9%) 26.566 us/op

  Histogram, us/op:
    [ 0.000,  5.000) = 9 
    [ 5.000, 10.000) = 0 
    [10.000, 15.000) = 0 
    [15.000, 20.000) = 0 
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 0 
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 0 

  Percentiles, us/op:
      p(0.0000) =      0.988 us/op
     p(50.0000) =      1.127 us/op
     p(90.0000) =     51.630 us/op
     p(95.0000) =     56.911 us/op
     p(99.0000) =     56.911 us/op
     p(99.9000) =     56.911 us/op
     p(99.9900) =     56.911 us/op
     p(99.9990) =     56.911 us/op
     p(99.9999) =     56.911 us/op
    p(100.0000) =     56.911 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 1)

# Run progress: 39.02% complete, ETA 00:28:13
# Fork: 1 of 2
# Warmup Iteration   1: 2881.834 us/op
# Warmup Iteration   2: 1838.607 us/op
# Warmup Iteration   3: 1627.566 us/op
# Warmup Iteration   4: 1681.265 us/op
# Warmup Iteration   5: 1405.391 us/op
Iteration   1: 15.086 us/op
Iteration   2: 3.730 us/op
Iteration   3: 1.035 us/op
Iteration   4: 4.899 us/op
Iteration   5: 0.990 us/op

# Run progress: 39.20% complete, ETA 00:28:08
# Fork: 2 of 2
# Warmup Iteration   1: 2637.806 us/op
# Warmup Iteration   2: 1742.543 us/op
# Warmup Iteration   3: 1622.027 us/op
# Warmup Iteration   4: 1679.064 us/op
# Warmup Iteration   5: 1529.630 us/op
Iteration   1: 1.142 us/op
Iteration   2: 3.776 us/op
Iteration   3: 1.348 us/op
Iteration   4: 18.805 us/op
Iteration   5: 1.100 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =      5.191 ±(99.9%) 9.698 us/op

  Histogram, us/op:
    [ 0.000,  1.250) = 4 
    [ 1.250,  2.500) = 1 
    [ 2.500,  3.750) = 1 
    [ 3.750,  5.000) = 2 
    [ 5.000,  6.250) = 0 
    [ 6.250,  7.500) = 0 
    [ 7.500,  8.750) = 0 
    [ 8.750, 10.000) = 0 
    [10.000, 11.250) = 0 
    [11.250, 12.500) = 0 
    [12.500, 13.750) = 0 
    [13.750, 15.000) = 0 
    [15.000, 16.250) = 1 
    [16.250, 17.500) = 0 
    [17.500, 18.750) = 0 

  Percentiles, us/op:
      p(0.0000) =      0.990 us/op
     p(50.0000) =      2.539 us/op
     p(90.0000) =     18.433 us/op
     p(95.0000) =     18.805 us/op
     p(99.0000) =     18.805 us/op
     p(99.9000) =     18.805 us/op
     p(99.9900) =     18.805 us/op
     p(99.9990) =     18.805 us/op
     p(99.9999) =     18.805 us/op
    p(100.0000) =     18.805 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.125)

# Run progress: 39.39% complete, ETA 00:28:03
# Fork: 1 of 2
# Warmup Iteration   1: 3548.026 us/op
# Warmup Iteration   2: 2669.100 us/op
# Warmup Iteration   3: 2161.807 us/op
# Warmup Iteration   4: 1872.729 us/op
# Warmup Iteration   5: 1876.949 us/op
Iteration   1: 5.937 us/op
Iteration   2: 3.442 us/op
Iteration   3: 8.599 us/op
Iteration   4: 7.764 us/op
Iteration   5: 4.576 us/op

# Run progress: 39.58% complete, ETA 00:27:57
# Fork: 2 of 2
# Warmup Iteration   1: 3245.384 us/op
# Warmup Iteration   2: 2554.087 us/op
# Warmup Iteration   3: 2075.834 us/op
# Warmup Iteration   4: 1853.723 us/op
# Warmup Iteration   5: 1712.690 us/op
Iteration   1: 3.696 us/op
Iteration   2: 8.153 us/op
Iteration   3: 9.970 us/op
Iteration   4: 20.919 us/op
Iteration   5: 4.318 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =      7.737 ±(99.9%) 7.797 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 4 
    [ 5.000,  7.500) = 1 
    [ 7.500, 10.000) = 4 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 1 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      3.442 us/op
     p(50.0000) =      6.851 us/op
     p(90.0000) =     19.824 us/op
     p(95.0000) =     20.919 us/op
     p(99.0000) =     20.919 us/op
     p(99.9000) =     20.919 us/op
     p(99.9900) =     20.919 us/op
     p(99.9990) =     20.919 us/op
     p(99.9999) =     20.919 us/op
    p(100.0000) =     20.919 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.250)

# Run progress: 39.77% complete, ETA 00:27:52
# Fork: 1 of 2
# Warmup Iteration   1: 3156.627 us/op
# Warmup Iteration   2: 2279.453 us/op
# Warmup Iteration   3: 1685.609 us/op
# Warmup Iteration   4: 1576.084 us/op
# Warmup Iteration   5: 1750.083 us/op
Iteration   1: 3.703 us/op
Iteration   2: 2.618 us/op
Iteration   3: 5.134 us/op
Iteration   4: 3.235 us/op
Iteration   5: 2.632 us/op

# Run progress: 39.96% complete, ETA 00:27:47
# Fork: 2 of 2
# Warmup Iteration   1: 3243.790 us/op
# Warmup Iteration   2: 1893.360 us/op
# Warmup Iteration   3: 1989.764 us/op
# Warmup Iteration   4: 1610.843 us/op
# Warmup Iteration   5: 1568.555 us/op
Iteration   1: 3.016 us/op
Iteration   2: 2.801 us/op
Iteration   3: 5.048 us/op
Iteration   4: 5.101 us/op
Iteration   5: 2.611 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =      3.590 ±(99.9%) 1.649 us/op

  Histogram, us/op:
    [2.000, 2.250) = 0 
    [2.250, 2.500) = 0 
    [2.500, 2.750) = 3 
    [2.750, 3.000) = 1 
    [3.000, 3.250) = 2 
    [3.250, 3.500) = 0 
    [3.500, 3.750) = 1 
    [3.750, 4.000) = 0 
    [4.000, 4.250) = 0 
    [4.250, 4.500) = 0 
    [4.500, 4.750) = 0 
    [4.750, 5.000) = 0 
    [5.000, 5.250) = 3 
    [5.250, 5.500) = 0 
    [5.500, 5.750) = 0 

  Percentiles, us/op:
      p(0.0000) =      2.611 us/op
     p(50.0000) =      3.125 us/op
     p(90.0000) =      5.131 us/op
     p(95.0000) =      5.134 us/op
     p(99.0000) =      5.134 us/op
     p(99.9000) =      5.134 us/op
     p(99.9900) =      5.134 us/op
     p(99.9990) =      5.134 us/op
     p(99.9999) =      5.134 us/op
    p(100.0000) =      5.134 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.375)

# Run progress: 40.15% complete, ETA 00:27:41
# Fork: 1 of 2
# Warmup Iteration   1: 3029.489 us/op
# Warmup Iteration   2: 1784.701 us/op
# Warmup Iteration   3: 1557.551 us/op
# Warmup Iteration   4: 1542.396 us/op
# Warmup Iteration   5: 1340.113 us/op
Iteration   1: 3.310 us/op
Iteration   2: 31.277 us/op
Iteration   3: 4.939 us/op
Iteration   4: 5.192 us/op
Iteration   5: 4.738 us/op

# Run progress: 40.34% complete, ETA 00:27:36
# Fork: 2 of 2
# Warmup Iteration   1: 2850.618 us/op
# Warmup Iteration   2: 1753.349 us/op
# Warmup Iteration   3: 1940.938 us/op
# Warmup Iteration   4: 1360.389 us/op
# Warmup Iteration   5: 1281.716 us/op
Iteration   1: 4.736 us/op
Iteration   2: 6.359 us/op
Iteration   3: 4.818 us/op
Iteration   4: 3.735 us/op
Iteration   5: 18.887 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =      8.799 ±(99.9%) 13.760 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 6 
    [ 5.000,  7.500) = 2 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 1 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 1 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      3.310 us/op
     p(50.0000) =      4.879 us/op
     p(90.0000) =     30.038 us/op
     p(95.0000) =     31.277 us/op
     p(99.0000) =     31.277 us/op
     p(99.9000) =     31.277 us/op
     p(99.9900) =     31.277 us/op
     p(99.9990) =     31.277 us/op
     p(99.9999) =     31.277 us/op
    p(100.0000) =     31.277 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.5)

# Run progress: 40.53% complete, ETA 00:27:31
# Fork: 1 of 2
# Warmup Iteration   1: 3179.240 us/op
# Warmup Iteration   2: 1823.182 us/op
# Warmup Iteration   3: 1927.757 us/op
# Warmup Iteration   4: 1629.291 us/op
# Warmup Iteration   5: 1401.955 us/op
Iteration   1: 2.725 us/op
Iteration   2: 5.331 us/op
Iteration   3: 27.010 us/op
Iteration   4: 2.418 us/op
Iteration   5: 4.030 us/op

# Run progress: 40.72% complete, ETA 00:27:26
# Fork: 2 of 2
# Warmup Iteration   1: 2807.837 us/op
# Warmup Iteration   2: 1796.102 us/op
# Warmup Iteration   3: 1898.601 us/op
# Warmup Iteration   4: 1464.410 us/op
# Warmup Iteration   5: 1436.763 us/op
Iteration   1: 2.619 us/op
Iteration   2: 3.077 us/op
Iteration   3: 4.782 us/op
Iteration   4: 2.319 us/op
Iteration   5: 4.996 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =      5.931 ±(99.9%) 11.328 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 2 
    [ 2.500,  5.000) = 6 
    [ 5.000,  7.500) = 1 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 1 

  Percentiles, us/op:
      p(0.0000) =      2.319 us/op
     p(50.0000) =      3.554 us/op
     p(90.0000) =     24.842 us/op
     p(95.0000) =     27.010 us/op
     p(99.0000) =     27.010 us/op
     p(99.9000) =     27.010 us/op
     p(99.9900) =     27.010 us/op
     p(99.9990) =     27.010 us/op
     p(99.9999) =     27.010 us/op
    p(100.0000) =     27.010 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.625)

# Run progress: 40.91% complete, ETA 00:27:20
# Fork: 1 of 2
# Warmup Iteration   1: 2801.314 us/op
# Warmup Iteration   2: 1593.004 us/op
# Warmup Iteration   3: 1621.387 us/op
# Warmup Iteration   4: 1240.870 us/op
# Warmup Iteration   5: 1214.191 us/op
Iteration   1: 3.061 us/op
Iteration   2: 3.430 us/op
Iteration   3: 50.987 us/op
Iteration   4: 21.560 us/op
Iteration   5: 3.926 us/op

# Run progress: 41.10% complete, ETA 00:27:15
# Fork: 2 of 2
# Warmup Iteration   1: 3202.631 us/op
# Warmup Iteration   2: 1612.153 us/op
# Warmup Iteration   3: 1470.999 us/op
# Warmup Iteration   4: 1471.166 us/op
# Warmup Iteration   5: 1377.766 us/op
Iteration   1: 3.075 us/op
Iteration   2: 4.862 us/op
Iteration   3: 6.299 us/op
Iteration   4: 21.016 us/op
Iteration   5: 4.286 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     12.250 ±(99.9%) 23.276 us/op

  Histogram, us/op:
    [ 0.000,  5.000) = 6 
    [ 5.000, 10.000) = 1 
    [10.000, 15.000) = 0 
    [15.000, 20.000) = 0 
    [20.000, 25.000) = 2 
    [25.000, 30.000) = 0 
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 1 

  Percentiles, us/op:
      p(0.0000) =      3.061 us/op
     p(50.0000) =      4.574 us/op
     p(90.0000) =     48.044 us/op
     p(95.0000) =     50.987 us/op
     p(99.0000) =     50.987 us/op
     p(99.9000) =     50.987 us/op
     p(99.9900) =     50.987 us/op
     p(99.9990) =     50.987 us/op
     p(99.9999) =     50.987 us/op
    p(100.0000) =     50.987 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.75)

# Run progress: 41.29% complete, ETA 00:27:10
# Fork: 1 of 2
# Warmup Iteration   1: 2978.770 us/op
# Warmup Iteration   2: 1558.357 us/op
# Warmup Iteration   3: 1605.061 us/op
# Warmup Iteration   4: 1487.812 us/op
# Warmup Iteration   5: 1238.944 us/op
Iteration   1: 3.287 us/op
Iteration   2: 5.224 us/op
Iteration   3: 19.640 us/op
Iteration   4: 4.803 us/op
Iteration   5: 4.613 us/op

# Run progress: 41.48% complete, ETA 00:27:05
# Fork: 2 of 2
# Warmup Iteration   1: 2839.042 us/op
# Warmup Iteration   2: 1776.403 us/op
# Warmup Iteration   3: 1526.071 us/op
# Warmup Iteration   4: 1604.807 us/op
# Warmup Iteration   5: 1255.686 us/op
Iteration   1: 5.321 us/op
Iteration   2: 4.833 us/op
Iteration   3: 6.124 us/op
Iteration   4: 3.151 us/op
Iteration   5: 4.425 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =      6.142 ±(99.9%) 7.296 us/op

  Histogram, us/op:
    [ 0.000,  1.250) = 0 
    [ 1.250,  2.500) = 0 
    [ 2.500,  3.750) = 2 
    [ 3.750,  5.000) = 4 
    [ 5.000,  6.250) = 3 
    [ 6.250,  7.500) = 0 
    [ 7.500,  8.750) = 0 
    [ 8.750, 10.000) = 0 
    [10.000, 11.250) = 0 
    [11.250, 12.500) = 0 
    [12.500, 13.750) = 0 
    [13.750, 15.000) = 0 
    [15.000, 16.250) = 0 
    [16.250, 17.500) = 0 
    [17.500, 18.750) = 0 

  Percentiles, us/op:
      p(0.0000) =      3.151 us/op
     p(50.0000) =      4.818 us/op
     p(90.0000) =     18.288 us/op
     p(95.0000) =     19.640 us/op
     p(99.0000) =     19.640 us/op
     p(99.9000) =     19.640 us/op
     p(99.9900) =     19.640 us/op
     p(99.9990) =     19.640 us/op
     p(99.9999) =     19.640 us/op
    p(100.0000) =     19.640 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.875)

# Run progress: 41.67% complete, ETA 00:26:59
# Fork: 1 of 2
# Warmup Iteration   1: 2962.139 us/op
# Warmup Iteration   2: 1667.960 us/op
# Warmup Iteration   3: 1538.189 us/op
# Warmup Iteration   4: 1682.231 us/op
# Warmup Iteration   5: 1342.605 us/op
Iteration   1: 5.057 us/op
Iteration   2: 3.188 us/op
Iteration   3: 10.161 us/op
Iteration   4: 4.556 us/op
Iteration   5: 4.662 us/op

# Run progress: 41.86% complete, ETA 00:26:54
# Fork: 2 of 2
# Warmup Iteration   1: 2774.508 us/op
# Warmup Iteration   2: 1653.614 us/op
# Warmup Iteration   3: 1766.026 us/op
# Warmup Iteration   4: 1326.621 us/op
# Warmup Iteration   5: 1295.858 us/op
Iteration   1: 23.700 us/op
Iteration   2: 4.857 us/op
Iteration   3: 6.002 us/op
Iteration   4: 16.902 us/op
Iteration   5: 24.534 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     10.362 ±(99.9%) 12.515 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 4 
    [ 5.000,  7.500) = 2 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 1 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 1 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 2 
    [25.000, 27.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      3.188 us/op
     p(50.0000) =      5.530 us/op
     p(90.0000) =     24.451 us/op
     p(95.0000) =     24.534 us/op
     p(99.0000) =     24.534 us/op
     p(99.9000) =     24.534 us/op
     p(99.9900) =     24.534 us/op
     p(99.9990) =     24.534 us/op
     p(99.9999) =     24.534 us/op
    p(100.0000) =     24.534 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 1)

# Run progress: 42.05% complete, ETA 00:26:49
# Fork: 1 of 2
# Warmup Iteration   1: 2809.297 us/op
# Warmup Iteration   2: 1801.334 us/op
# Warmup Iteration   3: 1584.003 us/op
# Warmup Iteration   4: 1680.613 us/op
# Warmup Iteration   5: 1402.651 us/op
Iteration   1: 5.193 us/op
Iteration   2: 3.950 us/op
Iteration   3: 6.719 us/op
Iteration   4: 31.706 us/op
Iteration   5: 4.991 us/op

# Run progress: 42.23% complete, ETA 00:26:44
# Fork: 2 of 2
# Warmup Iteration   1: 2866.568 us/op
# Warmup Iteration   2: 1772.682 us/op
# Warmup Iteration   3: 1793.116 us/op
# Warmup Iteration   4: 1360.830 us/op
# Warmup Iteration   5: 1350.044 us/op
Iteration   1: 5.088 us/op
Iteration   2: 4.951 us/op
Iteration   3: 5.369 us/op
Iteration   4: 5.247 us/op
Iteration   5: 4.801 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =      7.802 ±(99.9%) 12.740 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 4 
    [ 5.000,  7.500) = 5 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 1 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      3.950 us/op
     p(50.0000) =      5.140 us/op
     p(90.0000) =     29.207 us/op
     p(95.0000) =     31.706 us/op
     p(99.0000) =     31.706 us/op
     p(99.9000) =     31.706 us/op
     p(99.9900) =     31.706 us/op
     p(99.9990) =     31.706 us/op
     p(99.9999) =     31.706 us/op
    p(100.0000) =     31.706 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.125)

# Run progress: 42.42% complete, ETA 00:26:38
# Fork: 1 of 2
# Warmup Iteration   1: 3377.086 us/op
# Warmup Iteration   2: 2263.588 us/op
# Warmup Iteration   3: 2016.490 us/op
# Warmup Iteration   4: 1869.932 us/op
# Warmup Iteration   5: 1925.641 us/op
Iteration   1: 6.164 us/op
Iteration   2: 8.897 us/op
Iteration   3: 12.714 us/op
Iteration   4: 5.450 us/op
Iteration   5: 5.259 us/op

# Run progress: 42.61% complete, ETA 00:26:33
# Fork: 2 of 2
# Warmup Iteration   1: 3275.710 us/op
# Warmup Iteration   2: 2358.978 us/op
# Warmup Iteration   3: 2029.491 us/op
# Warmup Iteration   4: 1737.203 us/op
# Warmup Iteration   5: 1670.296 us/op
Iteration   1: 5.175 us/op
Iteration   2: 31.533 us/op
Iteration   3: 21.382 us/op
Iteration   4: 28.625 us/op
Iteration   5: 5.049 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     13.025 ±(99.9%) 15.638 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 0 
    [ 5.000,  7.500) = 5 
    [ 7.500, 10.000) = 1 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 1 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 1 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 1 
    [30.000, 32.500) = 1 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      5.049 us/op
     p(50.0000) =      7.531 us/op
     p(90.0000) =     31.242 us/op
     p(95.0000) =     31.533 us/op
     p(99.0000) =     31.533 us/op
     p(99.9000) =     31.533 us/op
     p(99.9900) =     31.533 us/op
     p(99.9990) =     31.533 us/op
     p(99.9999) =     31.533 us/op
    p(100.0000) =     31.533 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.250)

# Run progress: 42.80% complete, ETA 00:26:28
# Fork: 1 of 2
# Warmup Iteration   1: 2994.379 us/op
# Warmup Iteration   2: 2177.198 us/op
# Warmup Iteration   3: 1917.626 us/op
# Warmup Iteration   4: 1572.560 us/op
# Warmup Iteration   5: 1589.185 us/op
Iteration   1: 2.997 us/op
Iteration   2: 2.949 us/op
Iteration   3: 3.990 us/op
Iteration   4: 3.748 us/op
Iteration   5: 2.468 us/op

# Run progress: 42.99% complete, ETA 00:26:22
# Fork: 2 of 2
# Warmup Iteration   1: 3163.483 us/op
# Warmup Iteration   2: 1905.442 us/op
# Warmup Iteration   3: 1876.105 us/op
# Warmup Iteration   4: 1530.312 us/op
# Warmup Iteration   5: 1589.408 us/op
Iteration   1: 3.517 us/op
Iteration   2: 3.026 us/op
Iteration   3: 5.002 us/op
Iteration   4: 4.698 us/op
Iteration   5: 2.785 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =      3.518 ±(99.9%) 1.270 us/op

  Histogram, us/op:
    [2.000, 2.250) = 0 
    [2.250, 2.500) = 1 
    [2.500, 2.750) = 0 
    [2.750, 3.000) = 3 
    [3.000, 3.250) = 1 
    [3.250, 3.500) = 0 
    [3.500, 3.750) = 2 
    [3.750, 4.000) = 1 
    [4.000, 4.250) = 0 
    [4.250, 4.500) = 0 
    [4.500, 4.750) = 1 
    [4.750, 5.000) = 0 
    [5.000, 5.250) = 1 
    [5.250, 5.500) = 0 
    [5.500, 5.750) = 0 

  Percentiles, us/op:
      p(0.0000) =      2.468 us/op
     p(50.0000) =      3.271 us/op
     p(90.0000) =      4.972 us/op
     p(95.0000) =      5.002 us/op
     p(99.0000) =      5.002 us/op
     p(99.9000) =      5.002 us/op
     p(99.9900) =      5.002 us/op
     p(99.9990) =      5.002 us/op
     p(99.9999) =      5.002 us/op
    p(100.0000) =      5.002 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.375)

# Run progress: 43.18% complete, ETA 00:26:17
# Fork: 1 of 2
# Warmup Iteration   1: 2950.912 us/op
# Warmup Iteration   2: 1678.357 us/op
# Warmup Iteration   3: 2396.799 us/op
# Warmup Iteration   4: 1441.383 us/op
# Warmup Iteration   5: 1291.378 us/op
Iteration   1: 2.923 us/op
Iteration   2: 4.855 us/op
Iteration   3: 4.924 us/op
Iteration   4: 7.588 us/op
Iteration   5: 6.225 us/op

# Run progress: 43.37% complete, ETA 00:26:12
# Fork: 2 of 2
# Warmup Iteration   1: 2836.363 us/op
# Warmup Iteration   2: 1828.791 us/op
# Warmup Iteration   3: 1510.364 us/op
# Warmup Iteration   4: 1320.826 us/op
# Warmup Iteration   5: 1308.146 us/op
Iteration   1: 5.003 us/op
Iteration   2: 4.961 us/op
Iteration   3: 4.261 us/op
Iteration   4: 4.849 us/op
Iteration   5: 4.360 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =      4.995 ±(99.9%) 1.853 us/op

  Histogram, us/op:
    [2.000, 2.500) = 0 
    [2.500, 3.000) = 1 
    [3.000, 3.500) = 0 
    [3.500, 4.000) = 0 
    [4.000, 4.500) = 2 
    [4.500, 5.000) = 4 
    [5.000, 5.500) = 1 
    [5.500, 6.000) = 0 
    [6.000, 6.500) = 1 
    [6.500, 7.000) = 0 
    [7.000, 7.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      2.923 us/op
     p(50.0000) =      4.890 us/op
     p(90.0000) =      7.452 us/op
     p(95.0000) =      7.588 us/op
     p(99.0000) =      7.588 us/op
     p(99.9000) =      7.588 us/op
     p(99.9900) =      7.588 us/op
     p(99.9990) =      7.588 us/op
     p(99.9999) =      7.588 us/op
    p(100.0000) =      7.588 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.5)

# Run progress: 43.56% complete, ETA 00:26:07
# Fork: 1 of 2
# Warmup Iteration   1: 2730.374 us/op
# Warmup Iteration   2: 1812.265 us/op
# Warmup Iteration   3: 1757.230 us/op
# Warmup Iteration   4: 1668.437 us/op
# Warmup Iteration   5: 1397.061 us/op
Iteration   1: 4.787 us/op
Iteration   2: 31.582 us/op
Iteration   3: 3.946 us/op
Iteration   4: 4.704 us/op
Iteration   5: 4.841 us/op

# Run progress: 43.75% complete, ETA 00:26:01
# Fork: 2 of 2
# Warmup Iteration   1: 2994.802 us/op
# Warmup Iteration   2: 1856.510 us/op
# Warmup Iteration   3: 1829.208 us/op
# Warmup Iteration   4: 1469.398 us/op
# Warmup Iteration   5: 1424.491 us/op
Iteration   1: 2.924 us/op
Iteration   2: 4.160 us/op
Iteration   3: 4.950 us/op
Iteration   4: 2.631 us/op
Iteration   5: 3.680 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =      6.821 ±(99.9%) 13.210 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 9 
    [ 5.000,  7.500) = 0 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 1 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      2.631 us/op
     p(50.0000) =      4.432 us/op
     p(90.0000) =     28.919 us/op
     p(95.0000) =     31.582 us/op
     p(99.0000) =     31.582 us/op
     p(99.9000) =     31.582 us/op
     p(99.9900) =     31.582 us/op
     p(99.9990) =     31.582 us/op
     p(99.9999) =     31.582 us/op
    p(100.0000) =     31.582 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.625)

# Run progress: 43.94% complete, ETA 00:25:56
# Fork: 1 of 2
# Warmup Iteration   1: 2662.166 us/op
# Warmup Iteration   2: 1554.732 us/op
# Warmup Iteration   3: 1535.251 us/op
# Warmup Iteration   4: 1511.413 us/op
# Warmup Iteration   5: 1205.206 us/op
Iteration   1: 3.044 us/op
Iteration   2: 5.275 us/op
Iteration   3: 6.060 us/op
Iteration   4: 3.113 us/op
Iteration   5: 4.938 us/op

# Run progress: 44.13% complete, ETA 00:25:51
# Fork: 2 of 2
# Warmup Iteration   1: 2826.347 us/op
# Warmup Iteration   2: 1612.190 us/op
# Warmup Iteration   3: 1566.493 us/op
# Warmup Iteration   4: 1246.026 us/op
# Warmup Iteration   5: 1235.982 us/op
Iteration   1: 3.262 us/op
Iteration   2: 3.112 us/op
Iteration   3: 6.314 us/op
Iteration   4: 3.622 us/op
Iteration   5: 5.239 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =      4.398 ±(99.9%) 1.967 us/op

  Histogram, us/op:
    [3.000, 3.250) = 3 
    [3.250, 3.500) = 1 
    [3.500, 3.750) = 1 
    [3.750, 4.000) = 0 
    [4.000, 4.250) = 0 
    [4.250, 4.500) = 0 
    [4.500, 4.750) = 0 
    [4.750, 5.000) = 1 
    [5.000, 5.250) = 1 
    [5.250, 5.500) = 1 
    [5.500, 5.750) = 0 
    [5.750, 6.000) = 0 
    [6.000, 6.250) = 1 
    [6.250, 6.500) = 1 
    [6.500, 6.750) = 0 

  Percentiles, us/op:
      p(0.0000) =      3.044 us/op
     p(50.0000) =      4.280 us/op
     p(90.0000) =      6.289 us/op
     p(95.0000) =      6.314 us/op
     p(99.0000) =      6.314 us/op
     p(99.9000) =      6.314 us/op
     p(99.9900) =      6.314 us/op
     p(99.9990) =      6.314 us/op
     p(99.9999) =      6.314 us/op
    p(100.0000) =      6.314 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.75)

# Run progress: 44.32% complete, ETA 00:25:46
# Fork: 1 of 2
# Warmup Iteration   1: 2984.745 us/op
# Warmup Iteration   2: 1632.310 us/op
# Warmup Iteration   3: 1851.979 us/op
# Warmup Iteration   4: 1270.677 us/op
# Warmup Iteration   5: 1264.053 us/op
Iteration   1: 3.303 us/op
Iteration   2: 3.348 us/op
Iteration   3: 5.806 us/op
Iteration   4: 5.010 us/op
Iteration   5: 5.188 us/op

# Run progress: 44.51% complete, ETA 00:25:40
# Fork: 2 of 2
# Warmup Iteration   1: 2940.625 us/op
# Warmup Iteration   2: 1750.762 us/op
# Warmup Iteration   3: 1775.426 us/op
# Warmup Iteration   4: 1319.395 us/op
# Warmup Iteration   5: 1288.883 us/op
Iteration   1: 3.379 us/op
Iteration   2: 5.034 us/op
Iteration   3: 5.485 us/op
Iteration   4: 5.147 us/op
Iteration   5: 4.823 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =      4.652 ±(99.9%) 1.426 us/op

  Histogram, us/op:
    [3.000, 3.250) = 0 
    [3.250, 3.500) = 3 
    [3.500, 3.750) = 0 
    [3.750, 4.000) = 0 
    [4.000, 4.250) = 0 
    [4.250, 4.500) = 0 
    [4.500, 4.750) = 0 
    [4.750, 5.000) = 1 
    [5.000, 5.250) = 4 
    [5.250, 5.500) = 1 
    [5.500, 5.750) = 0 

  Percentiles, us/op:
      p(0.0000) =      3.303 us/op
     p(50.0000) =      5.022 us/op
     p(90.0000) =      5.774 us/op
     p(95.0000) =      5.806 us/op
     p(99.0000) =      5.806 us/op
     p(99.9000) =      5.806 us/op
     p(99.9900) =      5.806 us/op
     p(99.9990) =      5.806 us/op
     p(99.9999) =      5.806 us/op
    p(100.0000) =      5.806 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.875)

# Run progress: 44.70% complete, ETA 00:25:35
# Fork: 1 of 2
# Warmup Iteration   1: 2770.347 us/op
# Warmup Iteration   2: 1885.132 us/op
# Warmup Iteration   3: 1446.911 us/op
# Warmup Iteration   4: 1327.185 us/op
# Warmup Iteration   5: 1322.663 us/op
Iteration   1: 5.212 us/op
Iteration   2: 3.421 us/op
Iteration   3: 4.549 us/op
Iteration   4: 3.251 us/op
Iteration   5: 5.555 us/op

# Run progress: 44.89% complete, ETA 00:25:30
# Fork: 2 of 2
# Warmup Iteration   1: 2921.053 us/op
# Warmup Iteration   2: 2082.936 us/op
# Warmup Iteration   3: 1649.711 us/op
# Warmup Iteration   4: 1598.131 us/op
# Warmup Iteration   5: 1348.788 us/op
Iteration   1: 4.236 us/op
Iteration   2: 3.541 us/op
Iteration   3: 6.304 us/op
Iteration   4: 5.620 us/op
Iteration   5: 5.115 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =      4.680 ±(99.9%) 1.585 us/op

  Histogram, us/op:
    [3.000, 3.250) = 0 
    [3.250, 3.500) = 2 
    [3.500, 3.750) = 1 
    [3.750, 4.000) = 0 
    [4.000, 4.250) = 1 
    [4.250, 4.500) = 0 
    [4.500, 4.750) = 1 
    [4.750, 5.000) = 0 
    [5.000, 5.250) = 2 
    [5.250, 5.500) = 0 
    [5.500, 5.750) = 2 
    [5.750, 6.000) = 0 
    [6.000, 6.250) = 0 
    [6.250, 6.500) = 1 
    [6.500, 6.750) = 0 

  Percentiles, us/op:
      p(0.0000) =      3.251 us/op
     p(50.0000) =      4.832 us/op
     p(90.0000) =      6.236 us/op
     p(95.0000) =      6.304 us/op
     p(99.0000) =      6.304 us/op
     p(99.9000) =      6.304 us/op
     p(99.9900) =      6.304 us/op
     p(99.9990) =      6.304 us/op
     p(99.9999) =      6.304 us/op
    p(100.0000) =      6.304 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 1)

# Run progress: 45.08% complete, ETA 00:25:25
# Fork: 1 of 2
# Warmup Iteration   1: 3213.674 us/op
# Warmup Iteration   2: 1791.218 us/op
# Warmup Iteration   3: 1598.499 us/op
# Warmup Iteration   4: 1712.504 us/op
# Warmup Iteration   5: 1426.780 us/op
Iteration   1: 16.861 us/op
Iteration   2: 5.225 us/op
Iteration   3: 20.742 us/op
Iteration   4: 19.522 us/op
Iteration   5: 18.871 us/op

# Run progress: 45.27% complete, ETA 00:25:19
# Fork: 2 of 2
# Warmup Iteration   1: 2874.505 us/op
# Warmup Iteration   2: 1737.281 us/op
# Warmup Iteration   3: 1683.230 us/op
# Warmup Iteration   4: 1710.479 us/op
# Warmup Iteration   5: 1355.240 us/op
Iteration   1: 5.039 us/op
Iteration   2: 3.468 us/op
Iteration   3: 6.640 us/op
Iteration   4: 5.180 us/op
Iteration   5: 32.332 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     13.388 ±(99.9%) 14.609 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 1 
    [ 5.000,  7.500) = 4 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 1 
    [17.500, 20.000) = 2 
    [20.000, 22.500) = 1 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 1 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      3.468 us/op
     p(50.0000) =     11.750 us/op
     p(90.0000) =     31.173 us/op
     p(95.0000) =     32.332 us/op
     p(99.0000) =     32.332 us/op
     p(99.9000) =     32.332 us/op
     p(99.9900) =     32.332 us/op
     p(99.9990) =     32.332 us/op
     p(99.9999) =     32.332 us/op
    p(100.0000) =     32.332 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.125)

# Run progress: 45.45% complete, ETA 00:25:14
# Fork: 1 of 2
# Warmup Iteration   1: 3570.366 us/op
# Warmup Iteration   2: 2378.441 us/op
# Warmup Iteration   3: 1968.923 us/op
# Warmup Iteration   4: 1836.798 us/op
# Warmup Iteration   5: 1638.620 us/op
Iteration   1: 25.123 us/op
Iteration   2: 24.160 us/op
Iteration   3: 24.949 us/op
Iteration   4: 28.911 us/op
Iteration   5: 32.089 us/op

# Run progress: 45.64% complete, ETA 00:25:09
# Fork: 2 of 2
# Warmup Iteration   1: 3643.414 us/op
# Warmup Iteration   2: 2352.621 us/op
# Warmup Iteration   3: 1978.489 us/op
# Warmup Iteration   4: 1679.075 us/op
# Warmup Iteration   5: 1778.328 us/op
Iteration   1: 24.868 us/op
Iteration   2: 58.994 us/op
Iteration   3: 24.941 us/op
Iteration   4: 30.550 us/op
Iteration   5: 63.980 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     33.857 ±(99.9%) 22.468 us/op

  Histogram, us/op:
    [20.000, 25.000) = 4 
    [25.000, 30.000) = 2 
    [30.000, 35.000) = 2 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 0 
    [55.000, 60.000) = 1 
    [60.000, 65.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     24.160 us/op
     p(50.0000) =     27.017 us/op
     p(90.0000) =     63.481 us/op
     p(95.0000) =     63.980 us/op
     p(99.0000) =     63.980 us/op
     p(99.9000) =     63.980 us/op
     p(99.9900) =     63.980 us/op
     p(99.9990) =     63.980 us/op
     p(99.9999) =     63.980 us/op
    p(100.0000) =     63.980 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.250)

# Run progress: 45.83% complete, ETA 00:25:04
# Fork: 1 of 2
# Warmup Iteration   1: 3204.675 us/op
# Warmup Iteration   2: 1860.024 us/op
# Warmup Iteration   3: 1832.404 us/op
# Warmup Iteration   4: 1496.828 us/op
# Warmup Iteration   5: 1533.122 us/op
Iteration   1: 23.828 us/op
Iteration   2: 26.899 us/op
Iteration   3: 28.248 us/op
Iteration   4: 25.944 us/op
Iteration   5: 27.923 us/op

# Run progress: 46.02% complete, ETA 00:24:58
# Fork: 2 of 2
# Warmup Iteration   1: 3344.024 us/op
# Warmup Iteration   2: 1823.897 us/op
# Warmup Iteration   3: 1787.926 us/op
# Warmup Iteration   4: 1469.988 us/op
# Warmup Iteration   5: 1513.877 us/op
Iteration   1: 36.692 us/op
Iteration   2: 72.310 us/op
Iteration   3: 25.122 us/op
Iteration   4: 28.140 us/op
Iteration   5: 55.159 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     35.027 ±(99.9%) 24.242 us/op

  Histogram, us/op:
    [20.000, 25.000) = 1 
    [25.000, 30.000) = 6 
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 1 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 0 
    [55.000, 60.000) = 1 
    [60.000, 65.000) = 0 
    [65.000, 70.000) = 0 
    [70.000, 75.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     23.828 us/op
     p(50.0000) =     28.032 us/op
     p(90.0000) =     70.595 us/op
     p(95.0000) =     72.310 us/op
     p(99.0000) =     72.310 us/op
     p(99.9000) =     72.310 us/op
     p(99.9900) =     72.310 us/op
     p(99.9990) =     72.310 us/op
     p(99.9999) =     72.310 us/op
    p(100.0000) =     72.310 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.375)

# Run progress: 46.21% complete, ETA 00:24:53
# Fork: 1 of 2
# Warmup Iteration   1: 2564.335 us/op
# Warmup Iteration   2: 1498.575 us/op
# Warmup Iteration   3: 1375.078 us/op
# Warmup Iteration   4: 1408.367 us/op
# Warmup Iteration   5: 1154.179 us/op
Iteration   1: 22.372 us/op
Iteration   2: 52.116 us/op
Iteration   3: 35.873 us/op
Iteration   4: 40.553 us/op
Iteration   5: 45.380 us/op

# Run progress: 46.40% complete, ETA 00:24:48
# Fork: 2 of 2
# Warmup Iteration   1: 2629.380 us/op
# Warmup Iteration   2: 1550.764 us/op
# Warmup Iteration   3: 1829.372 us/op
# Warmup Iteration   4: 1144.620 us/op
# Warmup Iteration   5: 1136.262 us/op
Iteration   1: 35.523 us/op
Iteration   2: 25.395 us/op
Iteration   3: 40.087 us/op
Iteration   4: 67.451 us/op
Iteration   5: 24.857 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     38.961 ±(99.9%) 20.835 us/op

  Histogram, us/op:
    [20.000, 25.000) = 2 
    [25.000, 30.000) = 1 
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 2 
    [40.000, 45.000) = 2 
    [45.000, 50.000) = 1 
    [50.000, 55.000) = 1 
    [55.000, 60.000) = 0 
    [60.000, 65.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     22.372 us/op
     p(50.0000) =     37.980 us/op
     p(90.0000) =     65.918 us/op
     p(95.0000) =     67.451 us/op
     p(99.0000) =     67.451 us/op
     p(99.9000) =     67.451 us/op
     p(99.9900) =     67.451 us/op
     p(99.9990) =     67.451 us/op
     p(99.9999) =     67.451 us/op
    p(100.0000) =     67.451 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.5)

# Run progress: 46.59% complete, ETA 00:24:42
# Fork: 1 of 2
# Warmup Iteration   1: 2843.401 us/op
# Warmup Iteration   2: 1689.858 us/op
# Warmup Iteration   3: 1283.830 us/op
# Warmup Iteration   4: 1348.841 us/op
# Warmup Iteration   5: 1227.894 us/op
Iteration   1: 22.230 us/op
Iteration   2: 22.603 us/op
Iteration   3: 30.383 us/op
Iteration   4: 23.183 us/op
Iteration   5: 28.376 us/op

# Run progress: 46.78% complete, ETA 00:24:37
# Fork: 2 of 2
# Warmup Iteration   1: 2583.902 us/op
# Warmup Iteration   2: 1492.987 us/op
# Warmup Iteration   3: 1466.836 us/op
# Warmup Iteration   4: 1466.467 us/op
# Warmup Iteration   5: 1207.905 us/op
Iteration   1: 24.082 us/op
Iteration   2: 25.760 us/op
Iteration   3: 29.905 us/op
Iteration   4: 52.202 us/op
Iteration   5: 25.969 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     28.469 ±(99.9%) 13.363 us/op

  Histogram, us/op:
    [20.000, 22.500) = 1 
    [22.500, 25.000) = 3 
    [25.000, 27.500) = 2 
    [27.500, 30.000) = 2 
    [30.000, 32.500) = 1 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 0 
    [37.500, 40.000) = 0 
    [40.000, 42.500) = 0 
    [42.500, 45.000) = 0 
    [45.000, 47.500) = 0 
    [47.500, 50.000) = 0 
    [50.000, 52.500) = 1 
    [52.500, 55.000) = 0 
    [55.000, 57.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     22.230 us/op
     p(50.0000) =     25.865 us/op
     p(90.0000) =     50.020 us/op
     p(95.0000) =     52.202 us/op
     p(99.0000) =     52.202 us/op
     p(99.9000) =     52.202 us/op
     p(99.9900) =     52.202 us/op
     p(99.9990) =     52.202 us/op
     p(99.9999) =     52.202 us/op
    p(100.0000) =     52.202 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.625)

# Run progress: 46.97% complete, ETA 00:24:32
# Fork: 1 of 2
# Warmup Iteration   1: 2368.869 us/op
# Warmup Iteration   2: 1415.219 us/op
# Warmup Iteration   3: 1533.851 us/op
# Warmup Iteration   4: 976.925 us/op
# Warmup Iteration   5: 979.662 us/op
Iteration   1: 25.069 us/op
Iteration   2: 32.479 us/op
Iteration   3: 26.064 us/op
Iteration   4: 39.835 us/op
Iteration   5: 27.151 us/op

# Run progress: 47.16% complete, ETA 00:24:27
# Fork: 2 of 2
# Warmup Iteration   1: 1969.495 us/op
# Warmup Iteration   2: 1246.080 us/op
# Warmup Iteration   3: 1128.716 us/op
# Warmup Iteration   4: 1275.028 us/op
# Warmup Iteration   5: 949.986 us/op
Iteration   1: 24.517 us/op
Iteration   2: 25.004 us/op
Iteration   3: 26.857 us/op
Iteration   4: 26.927 us/op
Iteration   5: 26.983 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     28.089 ±(99.9%) 7.086 us/op

  Histogram, us/op:
    [20.000, 21.250) = 0 
    [21.250, 22.500) = 0 
    [22.500, 23.750) = 0 
    [23.750, 25.000) = 1 
    [25.000, 26.250) = 3 
    [26.250, 27.500) = 4 
    [27.500, 28.750) = 0 
    [28.750, 30.000) = 0 
    [30.000, 31.250) = 0 
    [31.250, 32.500) = 1 
    [32.500, 33.750) = 0 
    [33.750, 35.000) = 0 
    [35.000, 36.250) = 0 
    [36.250, 37.500) = 0 
    [37.500, 38.750) = 0 

  Percentiles, us/op:
      p(0.0000) =     24.517 us/op
     p(50.0000) =     26.892 us/op
     p(90.0000) =     39.099 us/op
     p(95.0000) =     39.835 us/op
     p(99.0000) =     39.835 us/op
     p(99.9000) =     39.835 us/op
     p(99.9900) =     39.835 us/op
     p(99.9990) =     39.835 us/op
     p(99.9999) =     39.835 us/op
    p(100.0000) =     39.835 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.75)

# Run progress: 47.35% complete, ETA 00:24:21
# Fork: 1 of 2
# Warmup Iteration   1: 2101.407 us/op
# Warmup Iteration   2: 1245.011 us/op
# Warmup Iteration   3: 1141.134 us/op
# Warmup Iteration   4: 1147.991 us/op
# Warmup Iteration   5: 938.076 us/op
Iteration   1: 27.264 us/op
Iteration   2: 76.044 us/op
Iteration   3: 26.810 us/op
Iteration   4: 42.201 us/op
Iteration   5: 39.483 us/op

# Run progress: 47.54% complete, ETA 00:24:16
# Fork: 2 of 2
# Warmup Iteration   1: 2030.435 us/op
# Warmup Iteration   2: 1262.443 us/op
# Warmup Iteration   3: 1402.660 us/op
# Warmup Iteration   4: 962.820 us/op
# Warmup Iteration   5: 956.199 us/op
Iteration   1: 27.697 us/op
Iteration   2: 25.265 us/op
Iteration   3: 27.155 us/op
Iteration   4: 26.742 us/op
Iteration   5: 25.814 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     34.448 ±(99.9%) 23.866 us/op

  Histogram, us/op:
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 7 
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 1 
    [40.000, 45.000) = 1 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 0 
    [55.000, 60.000) = 0 
    [60.000, 65.000) = 0 
    [65.000, 70.000) = 0 
    [70.000, 75.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     25.265 us/op
     p(50.0000) =     27.210 us/op
     p(90.0000) =     72.660 us/op
     p(95.0000) =     76.044 us/op
     p(99.0000) =     76.044 us/op
     p(99.9000) =     76.044 us/op
     p(99.9900) =     76.044 us/op
     p(99.9990) =     76.044 us/op
     p(99.9999) =     76.044 us/op
    p(100.0000) =     76.044 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.875)

# Run progress: 47.73% complete, ETA 00:24:11
# Fork: 1 of 2
# Warmup Iteration   1: 1969.152 us/op
# Warmup Iteration   2: 1349.249 us/op
# Warmup Iteration   3: 1320.615 us/op
# Warmup Iteration   4: 1253.620 us/op
# Warmup Iteration   5: 928.205 us/op
Iteration   1: 25.515 us/op
Iteration   2: 72.523 us/op
Iteration   3: 26.026 us/op
Iteration   4: 40.982 us/op
Iteration   5: 56.623 us/op

# Run progress: 47.92% complete, ETA 00:24:06
# Fork: 2 of 2
# Warmup Iteration   1: 2124.729 us/op
# Warmup Iteration   2: 1288.394 us/op
# Warmup Iteration   3: 1150.141 us/op
# Warmup Iteration   4: 1214.825 us/op
# Warmup Iteration   5: 964.377 us/op
Iteration   1: 25.905 us/op
Iteration   2: 25.614 us/op
Iteration   3: 26.895 us/op
Iteration   4: 27.128 us/op
Iteration   5: 25.360 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     35.257 ±(99.9%) 25.059 us/op

  Histogram, us/op:
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 7 
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 1 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 0 
    [55.000, 60.000) = 1 
    [60.000, 65.000) = 0 
    [65.000, 70.000) = 0 
    [70.000, 75.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     25.360 us/op
     p(50.0000) =     26.461 us/op
     p(90.0000) =     70.933 us/op
     p(95.0000) =     72.523 us/op
     p(99.0000) =     72.523 us/op
     p(99.9000) =     72.523 us/op
     p(99.9900) =     72.523 us/op
     p(99.9990) =     72.523 us/op
     p(99.9999) =     72.523 us/op
    p(100.0000) =     72.523 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 1)

# Run progress: 48.11% complete, ETA 00:24:00
# Fork: 1 of 2
# Warmup Iteration   1: 2206.333 us/op
# Warmup Iteration   2: 1232.228 us/op
# Warmup Iteration   3: 1133.627 us/op
# Warmup Iteration   4: 1232.407 us/op
# Warmup Iteration   5: 921.695 us/op
Iteration   1: 24.554 us/op
Iteration   2: 71.754 us/op
Iteration   3: 26.545 us/op
Iteration   4: 23.967 us/op
Iteration   5: 25.439 us/op

# Run progress: 48.30% complete, ETA 00:23:55
# Fork: 2 of 2
# Warmup Iteration   1: 2244.139 us/op
# Warmup Iteration   2: 1312.046 us/op
# Warmup Iteration   3: 1359.160 us/op
# Warmup Iteration   4: 973.559 us/op
# Warmup Iteration   5: 997.537 us/op
Iteration   1: 26.956 us/op
Iteration   2: 26.600 us/op
Iteration   3: 26.921 us/op
Iteration   4: 26.897 us/op
Iteration   5: 26.441 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     30.607 ±(99.9%) 21.915 us/op

  Histogram, us/op:
    [20.000, 25.000) = 2 
    [25.000, 30.000) = 7 
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 0 
    [55.000, 60.000) = 0 
    [60.000, 65.000) = 0 
    [65.000, 70.000) = 0 
    [70.000, 75.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     23.967 us/op
     p(50.0000) =     26.573 us/op
     p(90.0000) =     67.274 us/op
     p(95.0000) =     71.754 us/op
     p(99.0000) =     71.754 us/op
     p(99.9000) =     71.754 us/op
     p(99.9900) =     71.754 us/op
     p(99.9990) =     71.754 us/op
     p(99.9999) =     71.754 us/op
    p(100.0000) =     71.754 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.125)

# Run progress: 48.48% complete, ETA 00:23:50
# Fork: 1 of 2
# Warmup Iteration   1: 4439.460 us/op
# Warmup Iteration   2: 1861.045 us/op
# Warmup Iteration   3: 1824.914 us/op
# Warmup Iteration   4: 1426.659 us/op
# Warmup Iteration   5: 1415.088 us/op
Iteration   1: 97.233 us/op
Iteration   2: 166.575 us/op
Iteration   3: 231.658 us/op
Iteration   4: 97.117 us/op
Iteration   5: 89.948 us/op

# Run progress: 48.67% complete, ETA 00:23:45
# Fork: 2 of 2
# Warmup Iteration   1: 3459.750 us/op
# Warmup Iteration   2: 1914.224 us/op
# Warmup Iteration   3: 1544.974 us/op
# Warmup Iteration   4: 1346.136 us/op
# Warmup Iteration   5: 1324.482 us/op
Iteration   1: 84.194 us/op
Iteration   2: 164.631 us/op
Iteration   3: 94.071 us/op
Iteration   4: 135.577 us/op
Iteration   5: 144.318 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    130.532 ±(99.9%) 71.719 us/op

  Histogram, us/op:
    [  0.000,  25.000) = 0 
    [ 25.000,  50.000) = 0 
    [ 50.000,  75.000) = 0 
    [ 75.000, 100.000) = 5 
    [100.000, 125.000) = 0 
    [125.000, 150.000) = 2 
    [150.000, 175.000) = 2 
    [175.000, 200.000) = 0 
    [200.000, 225.000) = 0 
    [225.000, 250.000) = 1 
    [250.000, 275.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     84.194 us/op
     p(50.0000) =    116.405 us/op
     p(90.0000) =    225.150 us/op
     p(95.0000) =    231.658 us/op
     p(99.0000) =    231.658 us/op
     p(99.9000) =    231.658 us/op
     p(99.9900) =    231.658 us/op
     p(99.9990) =    231.658 us/op
     p(99.9999) =    231.658 us/op
    p(100.0000) =    231.658 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.250)

# Run progress: 48.86% complete, ETA 00:23:39
# Fork: 1 of 2
# Warmup Iteration   1: 2138.374 us/op
# Warmup Iteration   2: 1464.057 us/op
# Warmup Iteration   3: 1290.278 us/op
# Warmup Iteration   4: 987.607 us/op
# Warmup Iteration   5: 971.157 us/op
Iteration   1: 86.178 us/op
Iteration   2: 138.621 us/op
Iteration   3: 125.126 us/op
Iteration   4: 109.828 us/op
Iteration   5: 89.888 us/op

# Run progress: 49.05% complete, ETA 00:23:34
# Fork: 2 of 2
# Warmup Iteration   1: 2483.458 us/op
# Warmup Iteration   2: 1276.915 us/op
# Warmup Iteration   3: 1301.236 us/op
# Warmup Iteration   4: 1017.702 us/op
# Warmup Iteration   5: 1009.596 us/op
Iteration   1: 90.874 us/op
Iteration   2: 144.707 us/op
Iteration   3: 104.773 us/op
Iteration   4: 90.387 us/op
Iteration   5: 103.219 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    108.360 ±(99.9%) 31.958 us/op

  Histogram, us/op:
    [ 80.000,  85.000) = 0 
    [ 85.000,  90.000) = 2 
    [ 90.000,  95.000) = 2 
    [ 95.000, 100.000) = 0 
    [100.000, 105.000) = 2 
    [105.000, 110.000) = 1 
    [110.000, 115.000) = 0 
    [115.000, 120.000) = 0 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 1 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 1 
    [140.000, 145.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     86.178 us/op
     p(50.0000) =    103.996 us/op
     p(90.0000) =    144.098 us/op
     p(95.0000) =    144.707 us/op
     p(99.0000) =    144.707 us/op
     p(99.9000) =    144.707 us/op
     p(99.9900) =    144.707 us/op
     p(99.9990) =    144.707 us/op
     p(99.9999) =    144.707 us/op
    p(100.0000) =    144.707 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.375)

# Run progress: 49.24% complete, ETA 00:23:29
# Fork: 1 of 2
# Warmup Iteration   1: 2157.669 us/op
# Warmup Iteration   2: 1418.381 us/op
# Warmup Iteration   3: 1182.450 us/op
# Warmup Iteration   4: 1235.117 us/op
# Warmup Iteration   5: 1095.960 us/op
Iteration   1: 93.966 us/op
Iteration   2: 143.273 us/op
Iteration   3: 91.558 us/op
Iteration   4: 91.813 us/op
Iteration   5: 98.072 us/op

# Run progress: 49.43% complete, ETA 00:23:23
# Fork: 2 of 2
# Warmup Iteration   1: 1970.754 us/op
# Warmup Iteration   2: 1336.608 us/op
# Warmup Iteration   3: 1190.449 us/op
# Warmup Iteration   4: 1268.628 us/op
# Warmup Iteration   5: 968.337 us/op
Iteration   1: 169.299 us/op
Iteration   2: 178.008 us/op
Iteration   3: 92.984 us/op
Iteration   4: 106.197 us/op
Iteration   5: 110.914 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    117.608 ±(99.9%) 50.508 us/op

  Histogram, us/op:
    [ 90.000,  95.000) = 4 
    [ 95.000, 100.000) = 1 
    [100.000, 105.000) = 0 
    [105.000, 110.000) = 1 
    [110.000, 115.000) = 1 
    [115.000, 120.000) = 0 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 1 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 0 
    [165.000, 170.000) = 1 
    [170.000, 175.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     91.558 us/op
     p(50.0000) =    102.135 us/op
     p(90.0000) =    177.137 us/op
     p(95.0000) =    178.008 us/op
     p(99.0000) =    178.008 us/op
     p(99.9000) =    178.008 us/op
     p(99.9900) =    178.008 us/op
     p(99.9990) =    178.008 us/op
     p(99.9999) =    178.008 us/op
    p(100.0000) =    178.008 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.5)

# Run progress: 49.62% complete, ETA 00:23:18
# Fork: 1 of 2
# Warmup Iteration   1: 1933.156 us/op
# Warmup Iteration   2: 1357.068 us/op
# Warmup Iteration   3: 1216.080 us/op
# Warmup Iteration   4: 1223.535 us/op
# Warmup Iteration   5: 1056.944 us/op
Iteration   1: 99.535 us/op
Iteration   2: 204.950 us/op
Iteration   3: 144.991 us/op
Iteration   4: 88.916 us/op
Iteration   5: 92.287 us/op

# Run progress: 49.81% complete, ETA 00:23:13
# Fork: 2 of 2
# Warmup Iteration   1: 2472.059 us/op
# Warmup Iteration   2: 1479.310 us/op
# Warmup Iteration   3: 1248.300 us/op
# Warmup Iteration   4: 992.556 us/op
# Warmup Iteration   5: 989.581 us/op
Iteration   1: 94.080 us/op
Iteration   2: 190.662 us/op
Iteration   3: 120.936 us/op
Iteration   4: 91.213 us/op
Iteration   5: 98.133 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    122.570 ±(99.9%) 65.515 us/op

  Histogram, us/op:
    [  0.000,  25.000) = 0 
    [ 25.000,  50.000) = 0 
    [ 50.000,  75.000) = 0 
    [ 75.000, 100.000) = 6 
    [100.000, 125.000) = 1 
    [125.000, 150.000) = 1 
    [150.000, 175.000) = 0 
    [175.000, 200.000) = 1 
    [200.000, 225.000) = 1 
    [225.000, 250.000) = 0 
    [250.000, 275.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     88.916 us/op
     p(50.0000) =     98.834 us/op
     p(90.0000) =    203.521 us/op
     p(95.0000) =    204.950 us/op
     p(99.0000) =    204.950 us/op
     p(99.9000) =    204.950 us/op
     p(99.9900) =    204.950 us/op
     p(99.9990) =    204.950 us/op
     p(99.9999) =    204.950 us/op
    p(100.0000) =    204.950 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.625)

# Run progress: 50.00% complete, ETA 00:23:08
# Fork: 1 of 2
# Warmup Iteration   1: 2149.336 us/op
# Warmup Iteration   2: 1722.257 us/op
# Warmup Iteration   3: 999.147 us/op
# Warmup Iteration   4: 996.983 us/op
# Warmup Iteration   5: 981.658 us/op
Iteration   1: 90.855 us/op
Iteration   2: 175.973 us/op
Iteration   3: 90.104 us/op
Iteration   4: 110.074 us/op
Iteration   5: 88.917 us/op

# Run progress: 50.19% complete, ETA 00:23:02
# Fork: 2 of 2
# Warmup Iteration   1: 2064.226 us/op
# Warmup Iteration   2: 1366.342 us/op
# Warmup Iteration   3: 1347.423 us/op
# Warmup Iteration   4: 1021.475 us/op
# Warmup Iteration   5: 956.511 us/op
Iteration   1: 88.188 us/op
Iteration   2: 148.848 us/op
Iteration   3: 88.754 us/op
Iteration   4: 121.565 us/op
Iteration   5: 123.205 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    112.648 ±(99.9%) 45.728 us/op

  Histogram, us/op:
    [ 80.000,  90.000) = 3 
    [ 90.000, 100.000) = 2 
    [100.000, 110.000) = 0 
    [110.000, 120.000) = 1 
    [120.000, 130.000) = 2 
    [130.000, 140.000) = 0 
    [140.000, 150.000) = 1 
    [150.000, 160.000) = 0 
    [160.000, 170.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     88.188 us/op
     p(50.0000) =    100.465 us/op
     p(90.0000) =    173.261 us/op
     p(95.0000) =    175.973 us/op
     p(99.0000) =    175.973 us/op
     p(99.9000) =    175.973 us/op
     p(99.9900) =    175.973 us/op
     p(99.9990) =    175.973 us/op
     p(99.9999) =    175.973 us/op
    p(100.0000) =    175.973 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.75)

# Run progress: 50.38% complete, ETA 00:22:57
# Fork: 1 of 2
# Warmup Iteration   1: 2261.327 us/op
# Warmup Iteration   2: 1341.907 us/op
# Warmup Iteration   3: 1283.298 us/op
# Warmup Iteration   4: 959.404 us/op
# Warmup Iteration   5: 955.267 us/op
Iteration   1: 87.498 us/op
Iteration   2: 176.333 us/op
Iteration   3: 122.935 us/op
Iteration   4: 91.043 us/op
Iteration   5: 107.701 us/op

# Run progress: 50.57% complete, ETA 00:22:52
# Fork: 2 of 2
# Warmup Iteration   1: 2105.176 us/op
# Warmup Iteration   2: 1331.596 us/op
# Warmup Iteration   3: 1300.839 us/op
# Warmup Iteration   4: 1261.791 us/op
# Warmup Iteration   5: 978.122 us/op
Iteration   1: 94.488 us/op
Iteration   2: 157.152 us/op
Iteration   3: 112.117 us/op
Iteration   4: 92.834 us/op
Iteration   5: 90.385 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    113.249 ±(99.9%) 46.409 us/op

  Histogram, us/op:
    [ 80.000,  90.000) = 1 
    [ 90.000, 100.000) = 4 
    [100.000, 110.000) = 1 
    [110.000, 120.000) = 1 
    [120.000, 130.000) = 1 
    [130.000, 140.000) = 0 
    [140.000, 150.000) = 0 
    [150.000, 160.000) = 1 
    [160.000, 170.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     87.498 us/op
     p(50.0000) =    101.095 us/op
     p(90.0000) =    174.415 us/op
     p(95.0000) =    176.333 us/op
     p(99.0000) =    176.333 us/op
     p(99.9000) =    176.333 us/op
     p(99.9900) =    176.333 us/op
     p(99.9990) =    176.333 us/op
     p(99.9999) =    176.333 us/op
    p(100.0000) =    176.333 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.875)

# Run progress: 50.76% complete, ETA 00:22:47
# Fork: 1 of 2
# Warmup Iteration   1: 2217.405 us/op
# Warmup Iteration   2: 1352.739 us/op
# Warmup Iteration   3: 1342.252 us/op
# Warmup Iteration   4: 975.582 us/op
# Warmup Iteration   5: 981.774 us/op
Iteration   1: 95.438 us/op
Iteration   2: 181.489 us/op
Iteration   3: 103.699 us/op
Iteration   4: 104.503 us/op
Iteration   5: 113.029 us/op

# Run progress: 50.95% complete, ETA 00:22:41
# Fork: 2 of 2
# Warmup Iteration   1: 2115.973 us/op
# Warmup Iteration   2: 1727.257 us/op
# Warmup Iteration   3: 982.703 us/op
# Warmup Iteration   4: 950.582 us/op
# Warmup Iteration   5: 955.996 us/op
Iteration   1: 91.587 us/op
Iteration   2: 201.461 us/op
Iteration   3: 96.024 us/op
Iteration   4: 92.358 us/op
Iteration   5: 103.419 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    118.301 ±(99.9%) 59.558 us/op

  Histogram, us/op:
    [  0.000,  25.000) = 0 
    [ 25.000,  50.000) = 0 
    [ 50.000,  75.000) = 0 
    [ 75.000, 100.000) = 4 
    [100.000, 125.000) = 4 
    [125.000, 150.000) = 0 
    [150.000, 175.000) = 0 
    [175.000, 200.000) = 1 
    [200.000, 225.000) = 1 
    [225.000, 250.000) = 0 
    [250.000, 275.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     91.587 us/op
     p(50.0000) =    103.559 us/op
     p(90.0000) =    199.464 us/op
     p(95.0000) =    201.461 us/op
     p(99.0000) =    201.461 us/op
     p(99.9000) =    201.461 us/op
     p(99.9900) =    201.461 us/op
     p(99.9990) =    201.461 us/op
     p(99.9999) =    201.461 us/op
    p(100.0000) =    201.461 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 1)

# Run progress: 51.14% complete, ETA 00:22:36
# Fork: 1 of 2
# Warmup Iteration   1: 2131.205 us/op
# Warmup Iteration   2: 1443.974 us/op
# Warmup Iteration   3: 1390.536 us/op
# Warmup Iteration   4: 978.620 us/op
# Warmup Iteration   5: 976.859 us/op
Iteration   1: 99.801 us/op
Iteration   2: 139.336 us/op
Iteration   3: 108.761 us/op
Iteration   4: 91.665 us/op
Iteration   5: 107.015 us/op

# Run progress: 51.33% complete, ETA 00:22:31
# Fork: 2 of 2
# Warmup Iteration   1: 2051.160 us/op
# Warmup Iteration   2: 1437.548 us/op
# Warmup Iteration   3: 1256.159 us/op
# Warmup Iteration   4: 1301.325 us/op
# Warmup Iteration   5: 946.760 us/op
Iteration   1: 89.553 us/op
Iteration   2: 167.427 us/op
Iteration   3: 118.691 us/op
Iteration   4: 128.449 us/op
Iteration   5: 114.167 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    116.487 ±(99.9%) 35.776 us/op

  Histogram, us/op:
    [ 80.000,  85.000) = 0 
    [ 85.000,  90.000) = 1 
    [ 90.000,  95.000) = 1 
    [ 95.000, 100.000) = 1 
    [100.000, 105.000) = 0 
    [105.000, 110.000) = 2 
    [110.000, 115.000) = 1 
    [115.000, 120.000) = 1 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 1 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 1 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     89.553 us/op
     p(50.0000) =    111.464 us/op
     p(90.0000) =    164.618 us/op
     p(95.0000) =    167.427 us/op
     p(99.0000) =    167.427 us/op
     p(99.9000) =    167.427 us/op
     p(99.9900) =    167.427 us/op
     p(99.9990) =    167.427 us/op
     p(99.9999) =    167.427 us/op
    p(100.0000) =    167.427 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.125)

# Run progress: 51.52% complete, ETA 00:22:26
# Fork: 1 of 2
# Warmup Iteration   1: 2194.631 us/op
# Warmup Iteration   2: 1416.059 us/op
# Warmup Iteration   3: 1354.677 us/op
# Warmup Iteration   4: 1410.461 us/op
# Warmup Iteration   5: 1073.860 us/op
Iteration   1: 190.000 us/op
Iteration   2: 217.888 us/op
Iteration   3: 178.047 us/op
Iteration   4: 177.240 us/op
Iteration   5: 187.796 us/op

# Run progress: 51.70% complete, ETA 00:22:20
# Fork: 2 of 2
# Warmup Iteration   1: 2175.095 us/op
# Warmup Iteration   2: 1436.368 us/op
# Warmup Iteration   3: 1257.218 us/op
# Warmup Iteration   4: 1349.421 us/op
# Warmup Iteration   5: 1052.104 us/op
Iteration   1: 175.081 us/op
Iteration   2: 254.961 us/op
Iteration   3: 191.269 us/op
Iteration   4: 187.605 us/op
Iteration   5: 179.881 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    193.977 ±(99.9%) 37.314 us/op

  Histogram, us/op:
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 4 
    [180.000, 185.000) = 0 
    [185.000, 190.000) = 2 
    [190.000, 195.000) = 2 
    [195.000, 200.000) = 0 
    [200.000, 205.000) = 0 
    [205.000, 210.000) = 0 
    [210.000, 215.000) = 0 
    [215.000, 220.000) = 1 
    [220.000, 225.000) = 0 
    [225.000, 230.000) = 0 
    [230.000, 235.000) = 0 
    [235.000, 240.000) = 0 
    [240.000, 245.000) = 0 
    [245.000, 250.000) = 0 
    [250.000, 255.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    175.081 us/op
     p(50.0000) =    187.700 us/op
     p(90.0000) =    251.254 us/op
     p(95.0000) =    254.961 us/op
     p(99.0000) =    254.961 us/op
     p(99.9000) =    254.961 us/op
     p(99.9900) =    254.961 us/op
     p(99.9990) =    254.961 us/op
     p(99.9999) =    254.961 us/op
    p(100.0000) =    254.961 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.250)

# Run progress: 51.89% complete, ETA 00:22:15
# Fork: 1 of 2
# Warmup Iteration   1: 2226.384 us/op
# Warmup Iteration   2: 1478.695 us/op
# Warmup Iteration   3: 1472.891 us/op
# Warmup Iteration   4: 1350.893 us/op
# Warmup Iteration   5: 1081.780 us/op
Iteration   1: 197.646 us/op
Iteration   2: 227.734 us/op
Iteration   3: 178.684 us/op
Iteration   4: 183.489 us/op
Iteration   5: 190.862 us/op

# Run progress: 52.08% complete, ETA 00:22:10
# Fork: 2 of 2
# Warmup Iteration   1: 2215.629 us/op
# Warmup Iteration   2: 1430.131 us/op
# Warmup Iteration   3: 1347.392 us/op
# Warmup Iteration   4: 1074.951 us/op
# Warmup Iteration   5: 1062.117 us/op
Iteration   1: 208.131 us/op
Iteration   2: 311.593 us/op
Iteration   3: 168.733 us/op
Iteration   4: 210.853 us/op
Iteration   5: 174.929 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    205.265 ±(99.9%) 62.845 us/op

  Histogram, us/op:
    [100.000, 125.000) = 0 
    [125.000, 150.000) = 0 
    [150.000, 175.000) = 2 
    [175.000, 200.000) = 4 
    [200.000, 225.000) = 2 
    [225.000, 250.000) = 1 
    [250.000, 275.000) = 0 
    [275.000, 300.000) = 0 
    [300.000, 325.000) = 1 
    [325.000, 350.000) = 0 
    [350.000, 375.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    168.733 us/op
     p(50.0000) =    194.254 us/op
     p(90.0000) =    303.207 us/op
     p(95.0000) =    311.593 us/op
     p(99.0000) =    311.593 us/op
     p(99.9000) =    311.593 us/op
     p(99.9900) =    311.593 us/op
     p(99.9990) =    311.593 us/op
     p(99.9999) =    311.593 us/op
    p(100.0000) =    311.593 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.375)

# Run progress: 52.27% complete, ETA 00:22:04
# Fork: 1 of 2
# Warmup Iteration   1: 2195.551 us/op
# Warmup Iteration   2: 1596.205 us/op
# Warmup Iteration   3: 1491.052 us/op
# Warmup Iteration   4: 1134.008 us/op
# Warmup Iteration   5: 1076.178 us/op
Iteration   1: 185.864 us/op
Iteration   2: 222.610 us/op
Iteration   3: 178.564 us/op
Iteration   4: 182.321 us/op
Iteration   5: 186.378 us/op

# Run progress: 52.46% complete, ETA 00:21:59
# Fork: 2 of 2
# Warmup Iteration   1: 2284.870 us/op
# Warmup Iteration   2: 1505.907 us/op
# Warmup Iteration   3: 1328.480 us/op
# Warmup Iteration   4: 1302.871 us/op
# Warmup Iteration   5: 1152.964 us/op
Iteration   1: 175.906 us/op
Iteration   2: 203.944 us/op
Iteration   3: 217.411 us/op
Iteration   4: 171.395 us/op
Iteration   5: 196.655 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    192.105 ±(99.9%) 26.542 us/op

  Histogram, us/op:
    [170.000, 175.000) = 1 
    [175.000, 180.000) = 2 
    [180.000, 185.000) = 1 
    [185.000, 190.000) = 2 
    [190.000, 195.000) = 0 
    [195.000, 200.000) = 1 
    [200.000, 205.000) = 1 
    [205.000, 210.000) = 0 
    [210.000, 215.000) = 0 
    [215.000, 220.000) = 1 
    [220.000, 225.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    171.395 us/op
     p(50.0000) =    186.121 us/op
     p(90.0000) =    222.090 us/op
     p(95.0000) =    222.610 us/op
     p(99.0000) =    222.610 us/op
     p(99.9000) =    222.610 us/op
     p(99.9900) =    222.610 us/op
     p(99.9990) =    222.610 us/op
     p(99.9999) =    222.610 us/op
    p(100.0000) =    222.610 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.5)

# Run progress: 52.65% complete, ETA 00:21:54
# Fork: 1 of 2
# Warmup Iteration   1: 2113.248 us/op
# Warmup Iteration   2: 1421.799 us/op
# Warmup Iteration   3: 1336.888 us/op
# Warmup Iteration   4: 1098.809 us/op
# Warmup Iteration   5: 1112.018 us/op
Iteration   1: 187.542 us/op
Iteration   2: 183.576 us/op
Iteration   3: 191.180 us/op
Iteration   4: 182.093 us/op
Iteration   5: 187.871 us/op

# Run progress: 52.84% complete, ETA 00:21:49
# Fork: 2 of 2
# Warmup Iteration   1: 2192.076 us/op
# Warmup Iteration   2: 1448.853 us/op
# Warmup Iteration   3: 1260.637 us/op
# Warmup Iteration   4: 1333.784 us/op
# Warmup Iteration   5: 1056.263 us/op
Iteration   1: 216.306 us/op
Iteration   2: 280.693 us/op
Iteration   3: 190.745 us/op
Iteration   4: 190.912 us/op
Iteration   5: 180.263 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    199.118 ±(99.9%) 45.906 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 0 
    [125.000, 137.500) = 0 
    [137.500, 150.000) = 0 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 0 
    [175.000, 187.500) = 3 
    [187.500, 200.000) = 5 
    [200.000, 212.500) = 0 
    [212.500, 225.000) = 1 
    [225.000, 237.500) = 0 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 1 

  Percentiles, us/op:
      p(0.0000) =    180.263 us/op
     p(50.0000) =    189.308 us/op
     p(90.0000) =    274.254 us/op
     p(95.0000) =    280.693 us/op
     p(99.0000) =    280.693 us/op
     p(99.9000) =    280.693 us/op
     p(99.9900) =    280.693 us/op
     p(99.9990) =    280.693 us/op
     p(99.9999) =    280.693 us/op
    p(100.0000) =    280.693 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.625)

# Run progress: 53.03% complete, ETA 00:21:43
# Fork: 1 of 2
# Warmup Iteration   1: 2156.085 us/op
# Warmup Iteration   2: 1472.373 us/op
# Warmup Iteration   3: 1297.129 us/op
# Warmup Iteration   4: 1334.556 us/op
# Warmup Iteration   5: 1053.832 us/op
Iteration   1: 182.278 us/op
Iteration   2: 238.213 us/op
Iteration   3: 333.019 us/op
Iteration   4: 188.037 us/op
Iteration   5: 172.666 us/op

# Run progress: 53.22% complete, ETA 00:21:38
# Fork: 2 of 2
# Warmup Iteration   1: 2371.987 us/op
# Warmup Iteration   2: 1518.087 us/op
# Warmup Iteration   3: 1380.367 us/op
# Warmup Iteration   4: 1336.923 us/op
# Warmup Iteration   5: 1054.986 us/op
Iteration   1: 192.213 us/op
Iteration   2: 314.668 us/op
Iteration   3: 196.898 us/op
Iteration   4: 214.020 us/op
Iteration   5: 218.282 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    225.029 ±(99.9%) 84.092 us/op

  Histogram, us/op:
    [100.000, 125.000) = 0 
    [125.000, 150.000) = 0 
    [150.000, 175.000) = 1 
    [175.000, 200.000) = 4 
    [200.000, 225.000) = 2 
    [225.000, 250.000) = 1 
    [250.000, 275.000) = 0 
    [275.000, 300.000) = 0 
    [300.000, 325.000) = 1 
    [325.000, 350.000) = 1 
    [350.000, 375.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    172.666 us/op
     p(50.0000) =    205.459 us/op
     p(90.0000) =    331.184 us/op
     p(95.0000) =    333.019 us/op
     p(99.0000) =    333.019 us/op
     p(99.9000) =    333.019 us/op
     p(99.9900) =    333.019 us/op
     p(99.9990) =    333.019 us/op
     p(99.9999) =    333.019 us/op
    p(100.0000) =    333.019 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.75)

# Run progress: 53.41% complete, ETA 00:21:33
# Fork: 1 of 2
# Warmup Iteration   1: 2312.499 us/op
# Warmup Iteration   2: 1455.874 us/op
# Warmup Iteration   3: 1272.308 us/op
# Warmup Iteration   4: 1324.830 us/op
# Warmup Iteration   5: 1059.460 us/op
Iteration   1: 201.298 us/op
Iteration   2: 243.094 us/op
Iteration   3: 178.945 us/op
Iteration   4: 170.846 us/op
Iteration   5: 194.774 us/op

# Run progress: 53.60% complete, ETA 00:21:28
# Fork: 2 of 2
# Warmup Iteration   1: 2202.311 us/op
# Warmup Iteration   2: 1574.250 us/op
# Warmup Iteration   3: 1363.075 us/op
# Warmup Iteration   4: 1364.758 us/op
# Warmup Iteration   5: 1072.525 us/op
Iteration   1: 190.326 us/op
Iteration   2: 269.767 us/op
Iteration   3: 196.268 us/op
Iteration   4: 176.198 us/op
Iteration   5: 178.272 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    199.979 ±(99.9%) 48.319 us/op

  Histogram, us/op:
    [170.000, 180.000) = 4 
    [180.000, 190.000) = 0 
    [190.000, 200.000) = 3 
    [200.000, 210.000) = 1 
    [210.000, 220.000) = 0 
    [220.000, 230.000) = 0 
    [230.000, 240.000) = 0 
    [240.000, 250.000) = 1 
    [250.000, 260.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    170.846 us/op
     p(50.0000) =    192.550 us/op
     p(90.0000) =    267.100 us/op
     p(95.0000) =    269.767 us/op
     p(99.0000) =    269.767 us/op
     p(99.9000) =    269.767 us/op
     p(99.9900) =    269.767 us/op
     p(99.9990) =    269.767 us/op
     p(99.9999) =    269.767 us/op
    p(100.0000) =    269.767 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.875)

# Run progress: 53.79% complete, ETA 00:21:22
# Fork: 1 of 2
# Warmup Iteration   1: 2154.652 us/op
# Warmup Iteration   2: 1435.053 us/op
# Warmup Iteration   3: 1388.978 us/op
# Warmup Iteration   4: 1064.233 us/op
# Warmup Iteration   5: 1068.913 us/op
Iteration   1: 181.668 us/op
Iteration   2: 226.023 us/op
Iteration   3: 212.977 us/op
Iteration   4: 186.692 us/op
Iteration   5: 221.469 us/op

# Run progress: 53.98% complete, ETA 00:21:17
# Fork: 2 of 2
# Warmup Iteration   1: 2092.914 us/op
# Warmup Iteration   2: 1413.205 us/op
# Warmup Iteration   3: 1402.574 us/op
# Warmup Iteration   4: 1076.265 us/op
# Warmup Iteration   5: 1071.866 us/op
Iteration   1: 178.945 us/op
Iteration   2: 241.099 us/op
Iteration   3: 191.868 us/op
Iteration   4: 209.091 us/op
Iteration   5: 214.951 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    206.478 ±(99.9%) 31.491 us/op

  Histogram, us/op:
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 1 
    [180.000, 185.000) = 1 
    [185.000, 190.000) = 1 
    [190.000, 195.000) = 1 
    [195.000, 200.000) = 0 
    [200.000, 205.000) = 0 
    [205.000, 210.000) = 1 
    [210.000, 215.000) = 2 
    [215.000, 220.000) = 0 
    [220.000, 225.000) = 1 
    [225.000, 230.000) = 1 
    [230.000, 235.000) = 0 
    [235.000, 240.000) = 0 
    [240.000, 245.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    178.945 us/op
     p(50.0000) =    211.034 us/op
     p(90.0000) =    239.591 us/op
     p(95.0000) =    241.099 us/op
     p(99.0000) =    241.099 us/op
     p(99.9000) =    241.099 us/op
     p(99.9900) =    241.099 us/op
     p(99.9990) =    241.099 us/op
     p(99.9999) =    241.099 us/op
    p(100.0000) =    241.099 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 1)

# Run progress: 54.17% complete, ETA 00:21:12
# Fork: 1 of 2
# Warmup Iteration   1: 2304.314 us/op
# Warmup Iteration   2: 1524.553 us/op
# Warmup Iteration   3: 1489.006 us/op
# Warmup Iteration   4: 1255.238 us/op
# Warmup Iteration   5: 1073.140 us/op
Iteration   1: 193.278 us/op
Iteration   2: 259.204 us/op
Iteration   3: 200.389 us/op
Iteration   4: 193.948 us/op
Iteration   5: 182.287 us/op

# Run progress: 54.36% complete, ETA 00:21:07
# Fork: 2 of 2
# Warmup Iteration   1: 2223.002 us/op
# Warmup Iteration   2: 1414.504 us/op
# Warmup Iteration   3: 1413.317 us/op
# Warmup Iteration   4: 1086.707 us/op
# Warmup Iteration   5: 1082.679 us/op
Iteration   1: 185.941 us/op
Iteration   2: 229.960 us/op
Iteration   3: 200.224 us/op
Iteration   4: 307.514 us/op
Iteration   5: 219.983 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    217.273 ±(99.9%) 59.567 us/op

  Histogram, us/op:
    [100.000, 125.000) = 0 
    [125.000, 150.000) = 0 
    [150.000, 175.000) = 0 
    [175.000, 200.000) = 4 
    [200.000, 225.000) = 3 
    [225.000, 250.000) = 1 
    [250.000, 275.000) = 1 
    [275.000, 300.000) = 0 
    [300.000, 325.000) = 1 
    [325.000, 350.000) = 0 
    [350.000, 375.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    182.287 us/op
     p(50.0000) =    200.307 us/op
     p(90.0000) =    302.683 us/op
     p(95.0000) =    307.514 us/op
     p(99.0000) =    307.514 us/op
     p(99.9000) =    307.514 us/op
     p(99.9900) =    307.514 us/op
     p(99.9990) =    307.514 us/op
     p(99.9999) =    307.514 us/op
    p(100.0000) =    307.514 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.125)

# Run progress: 54.55% complete, ETA 00:21:01
# Fork: 1 of 2
# Warmup Iteration   1: 2975.607 us/op
# Warmup Iteration   2: 2056.270 us/op
# Warmup Iteration   3: 2668.114 us/op
# Warmup Iteration   4: 1631.683 us/op
# Warmup Iteration   5: 1751.686 us/op
Iteration   1: 735.492 us/op
Iteration   2: 796.135 us/op
Iteration   3: 681.098 us/op
Iteration   4: 697.291 us/op
Iteration   5: 684.904 us/op

# Run progress: 54.73% complete, ETA 00:20:56
# Fork: 2 of 2
# Warmup Iteration   1: 2827.261 us/op
# Warmup Iteration   2: 2106.895 us/op
# Warmup Iteration   3: 2500.413 us/op
# Warmup Iteration   4: 1701.155 us/op
# Warmup Iteration   5: 1805.422 us/op
Iteration   1: 695.795 us/op
Iteration   2: 752.536 us/op
Iteration   3: 701.855 us/op
Iteration   4: 694.116 us/op
Iteration   5: 708.212 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    714.743 ±(99.9%) 54.752 us/op

  Histogram, us/op:
    [600.000, 612.500) = 0 
    [612.500, 625.000) = 0 
    [625.000, 637.500) = 0 
    [637.500, 650.000) = 0 
    [650.000, 662.500) = 0 
    [662.500, 675.000) = 0 
    [675.000, 687.500) = 2 
    [687.500, 700.000) = 3 
    [700.000, 712.500) = 2 
    [712.500, 725.000) = 0 
    [725.000, 737.500) = 1 
    [737.500, 750.000) = 0 
    [750.000, 762.500) = 1 
    [762.500, 775.000) = 0 
    [775.000, 787.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    681.098 us/op
     p(50.0000) =    699.573 us/op
     p(90.0000) =    791.775 us/op
     p(95.0000) =    796.135 us/op
     p(99.0000) =    796.135 us/op
     p(99.9000) =    796.135 us/op
     p(99.9900) =    796.135 us/op
     p(99.9990) =    796.135 us/op
     p(99.9999) =    796.135 us/op
    p(100.0000) =    796.135 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.250)

# Run progress: 54.92% complete, ETA 00:20:51
# Fork: 1 of 2
# Warmup Iteration   1: 2876.996 us/op
# Warmup Iteration   2: 2064.502 us/op
# Warmup Iteration   3: 2506.293 us/op
# Warmup Iteration   4: 1638.696 us/op
# Warmup Iteration   5: 1785.224 us/op
Iteration   1: 677.788 us/op
Iteration   2: 750.159 us/op
Iteration   3: 678.618 us/op
Iteration   4: 692.982 us/op
Iteration   5: 713.314 us/op

# Run progress: 55.11% complete, ETA 00:20:46
# Fork: 2 of 2
# Warmup Iteration   1: 2767.920 us/op
# Warmup Iteration   2: 2247.356 us/op
# Warmup Iteration   3: 2324.580 us/op
# Warmup Iteration   4: 1657.343 us/op
# Warmup Iteration   5: 1745.735 us/op
Iteration   1: 711.123 us/op
Iteration   2: 743.621 us/op
Iteration   3: 709.249 us/op
Iteration   4: 724.140 us/op
Iteration   5: 780.498 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    718.149 ±(99.9%) 49.310 us/op

  Histogram, us/op:
    [600.000, 612.500) = 0 
    [612.500, 625.000) = 0 
    [625.000, 637.500) = 0 
    [637.500, 650.000) = 0 
    [650.000, 662.500) = 0 
    [662.500, 675.000) = 0 
    [675.000, 687.500) = 2 
    [687.500, 700.000) = 1 
    [700.000, 712.500) = 2 
    [712.500, 725.000) = 2 
    [725.000, 737.500) = 0 
    [737.500, 750.000) = 1 
    [750.000, 762.500) = 1 
    [762.500, 775.000) = 0 
    [775.000, 787.500) = 1 

  Percentiles, us/op:
      p(0.0000) =    677.788 us/op
     p(50.0000) =    712.219 us/op
     p(90.0000) =    777.464 us/op
     p(95.0000) =    780.498 us/op
     p(99.0000) =    780.498 us/op
     p(99.9000) =    780.498 us/op
     p(99.9900) =    780.498 us/op
     p(99.9990) =    780.498 us/op
     p(99.9999) =    780.498 us/op
    p(100.0000) =    780.498 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.375)

# Run progress: 55.30% complete, ETA 00:20:40
# Fork: 1 of 2
# Warmup Iteration   1: 2716.820 us/op
# Warmup Iteration   2: 2185.201 us/op
# Warmup Iteration   3: 2455.389 us/op
# Warmup Iteration   4: 1670.330 us/op
# Warmup Iteration   5: 1875.236 us/op
Iteration   1: 710.182 us/op
Iteration   2: 761.423 us/op
Iteration   3: 727.238 us/op
Iteration   4: 882.084 us/op
Iteration   5: 710.023 us/op

# Run progress: 55.49% complete, ETA 00:20:35
# Fork: 2 of 2
# Warmup Iteration   1: 2816.579 us/op
# Warmup Iteration   2: 2065.803 us/op
# Warmup Iteration   3: 2442.901 us/op
# Warmup Iteration   4: 1658.063 us/op
# Warmup Iteration   5: 1787.693 us/op
Iteration   1: 778.351 us/op
Iteration   2: 745.237 us/op
Iteration   3: 691.793 us/op
Iteration   4: 717.063 us/op
Iteration   5: 721.190 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    744.458 ±(99.9%) 82.962 us/op

  Histogram, us/op:
    [600.000, 625.000) = 0 
    [625.000, 650.000) = 0 
    [650.000, 675.000) = 0 
    [675.000, 700.000) = 1 
    [700.000, 725.000) = 4 
    [725.000, 750.000) = 2 
    [750.000, 775.000) = 1 
    [775.000, 800.000) = 1 
    [800.000, 825.000) = 0 
    [825.000, 850.000) = 0 
    [850.000, 875.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    691.793 us/op
     p(50.0000) =    724.214 us/op
     p(90.0000) =    871.711 us/op
     p(95.0000) =    882.084 us/op
     p(99.0000) =    882.084 us/op
     p(99.9000) =    882.084 us/op
     p(99.9900) =    882.084 us/op
     p(99.9990) =    882.084 us/op
     p(99.9999) =    882.084 us/op
    p(100.0000) =    882.084 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.5)

# Run progress: 55.68% complete, ETA 00:20:30
# Fork: 1 of 2
# Warmup Iteration   1: 2840.917 us/op
# Warmup Iteration   2: 2186.813 us/op
# Warmup Iteration   3: 2606.918 us/op
# Warmup Iteration   4: 1716.571 us/op
# Warmup Iteration   5: 1782.154 us/op
Iteration   1: 751.096 us/op
Iteration   2: 764.423 us/op
Iteration   3: 720.505 us/op
Iteration   4: 707.457 us/op
Iteration   5: 745.435 us/op

# Run progress: 55.87% complete, ETA 00:20:25
# Fork: 2 of 2
# Warmup Iteration   1: 2863.288 us/op
# Warmup Iteration   2: 2107.502 us/op
# Warmup Iteration   3: 2373.687 us/op
# Warmup Iteration   4: 1632.694 us/op
# Warmup Iteration   5: 1872.615 us/op
Iteration   1: 677.746 us/op
Iteration   2: 768.852 us/op
Iteration   3: 720.939 us/op
Iteration   4: 784.546 us/op
Iteration   5: 713.454 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    735.445 ±(99.9%) 49.739 us/op

  Histogram, us/op:
    [600.000, 612.500) = 0 
    [612.500, 625.000) = 0 
    [625.000, 637.500) = 0 
    [637.500, 650.000) = 0 
    [650.000, 662.500) = 0 
    [662.500, 675.000) = 0 
    [675.000, 687.500) = 1 
    [687.500, 700.000) = 0 
    [700.000, 712.500) = 1 
    [712.500, 725.000) = 3 
    [725.000, 737.500) = 0 
    [737.500, 750.000) = 1 
    [750.000, 762.500) = 1 
    [762.500, 775.000) = 2 
    [775.000, 787.500) = 1 

  Percentiles, us/op:
      p(0.0000) =    677.746 us/op
     p(50.0000) =    733.187 us/op
     p(90.0000) =    782.977 us/op
     p(95.0000) =    784.546 us/op
     p(99.0000) =    784.546 us/op
     p(99.9000) =    784.546 us/op
     p(99.9900) =    784.546 us/op
     p(99.9990) =    784.546 us/op
     p(99.9999) =    784.546 us/op
    p(100.0000) =    784.546 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.625)

# Run progress: 56.06% complete, ETA 00:20:19
# Fork: 1 of 2
# Warmup Iteration   1: 2848.563 us/op
# Warmup Iteration   2: 2038.013 us/op
# Warmup Iteration   3: 2564.489 us/op
# Warmup Iteration   4: 1673.423 us/op
# Warmup Iteration   5: 1848.496 us/op
Iteration   1: 716.720 us/op
Iteration   2: 725.060 us/op
Iteration   3: 691.151 us/op
Iteration   4: 701.383 us/op
Iteration   5: 731.578 us/op

# Run progress: 56.25% complete, ETA 00:20:14
# Fork: 2 of 2
# Warmup Iteration   1: 2765.148 us/op
# Warmup Iteration   2: 2239.356 us/op
# Warmup Iteration   3: 2573.226 us/op
# Warmup Iteration   4: 1658.010 us/op
# Warmup Iteration   5: 1797.379 us/op
Iteration   1: 695.864 us/op
Iteration   2: 769.064 us/op
Iteration   3: 708.247 us/op
Iteration   4: 702.898 us/op
Iteration   5: 731.631 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    717.360 ±(99.9%) 35.043 us/op

  Histogram, us/op:
    [690.000, 695.000) = 1 
    [695.000, 700.000) = 1 
    [700.000, 705.000) = 2 
    [705.000, 710.000) = 1 
    [710.000, 715.000) = 0 
    [715.000, 720.000) = 1 
    [720.000, 725.000) = 0 
    [725.000, 730.000) = 1 
    [730.000, 735.000) = 2 
    [735.000, 740.000) = 0 
    [740.000, 745.000) = 0 
    [745.000, 750.000) = 0 
    [750.000, 755.000) = 0 
    [755.000, 760.000) = 0 
    [760.000, 765.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    691.151 us/op
     p(50.0000) =    712.484 us/op
     p(90.0000) =    765.321 us/op
     p(95.0000) =    769.064 us/op
     p(99.0000) =    769.064 us/op
     p(99.9000) =    769.064 us/op
     p(99.9900) =    769.064 us/op
     p(99.9990) =    769.064 us/op
     p(99.9999) =    769.064 us/op
    p(100.0000) =    769.064 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.75)

# Run progress: 56.44% complete, ETA 00:20:09
# Fork: 1 of 2
# Warmup Iteration   1: 2916.087 us/op
# Warmup Iteration   2: 2123.775 us/op
# Warmup Iteration   3: 2491.963 us/op
# Warmup Iteration   4: 1627.310 us/op
# Warmup Iteration   5: 1797.838 us/op
Iteration   1: 759.218 us/op
Iteration   2: 773.754 us/op
Iteration   3: 680.635 us/op
Iteration   4: 691.074 us/op
Iteration   5: 727.582 us/op

# Run progress: 56.63% complete, ETA 00:20:03
# Fork: 2 of 2
# Warmup Iteration   1: 2948.723 us/op
# Warmup Iteration   2: 2094.881 us/op
# Warmup Iteration   3: 2613.758 us/op
# Warmup Iteration   4: 1693.217 us/op
# Warmup Iteration   5: 1802.365 us/op
Iteration   1: 715.299 us/op
Iteration   2: 751.581 us/op
Iteration   3: 713.284 us/op
Iteration   4: 721.584 us/op
Iteration   5: 727.438 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    726.145 ±(99.9%) 43.980 us/op

  Histogram, us/op:
    [680.000, 690.000) = 1 
    [690.000, 700.000) = 1 
    [700.000, 710.000) = 0 
    [710.000, 720.000) = 2 
    [720.000, 730.000) = 3 
    [730.000, 740.000) = 0 
    [740.000, 750.000) = 0 
    [750.000, 760.000) = 2 
    [760.000, 770.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    680.635 us/op
     p(50.0000) =    724.511 us/op
     p(90.0000) =    772.300 us/op
     p(95.0000) =    773.754 us/op
     p(99.0000) =    773.754 us/op
     p(99.9000) =    773.754 us/op
     p(99.9900) =    773.754 us/op
     p(99.9990) =    773.754 us/op
     p(99.9999) =    773.754 us/op
    p(100.0000) =    773.754 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.875)

# Run progress: 56.82% complete, ETA 00:19:58
# Fork: 1 of 2
# Warmup Iteration   1: 2904.648 us/op
# Warmup Iteration   2: 2227.709 us/op
# Warmup Iteration   3: 2456.955 us/op
# Warmup Iteration   4: 1690.200 us/op
# Warmup Iteration   5: 1767.345 us/op
Iteration   1: 721.313 us/op
Iteration   2: 782.167 us/op
Iteration   3: 700.013 us/op
Iteration   4: 711.733 us/op
Iteration   5: 944.188 us/op

# Run progress: 57.01% complete, ETA 00:19:53
# Fork: 2 of 2
# Warmup Iteration   1: 2847.945 us/op
# Warmup Iteration   2: 2007.392 us/op
# Warmup Iteration   3: 2264.946 us/op
# Warmup Iteration   4: 1693.944 us/op
# Warmup Iteration   5: 1764.618 us/op
Iteration   1: 724.090 us/op
Iteration   2: 709.094 us/op
Iteration   3: 699.129 us/op
Iteration   4: 695.056 us/op
Iteration   5: 708.734 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    739.552 ±(99.9%) 115.021 us/op

  Histogram, us/op:
    [ 600.000,  625.000) = 0 
    [ 625.000,  650.000) = 0 
    [ 650.000,  675.000) = 0 
    [ 675.000,  700.000) = 2 
    [ 700.000,  725.000) = 6 
    [ 725.000,  750.000) = 0 
    [ 750.000,  775.000) = 0 
    [ 775.000,  800.000) = 1 
    [ 800.000,  825.000) = 0 
    [ 825.000,  850.000) = 0 
    [ 850.000,  875.000) = 0 
    [ 875.000,  900.000) = 0 
    [ 900.000,  925.000) = 0 
    [ 925.000,  950.000) = 1 
    [ 950.000,  975.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    695.056 us/op
     p(50.0000) =    710.414 us/op
     p(90.0000) =    927.986 us/op
     p(95.0000) =    944.188 us/op
     p(99.0000) =    944.188 us/op
     p(99.9000) =    944.188 us/op
     p(99.9900) =    944.188 us/op
     p(99.9990) =    944.188 us/op
     p(99.9999) =    944.188 us/op
    p(100.0000) =    944.188 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 1)

# Run progress: 57.20% complete, ETA 00:19:48
# Fork: 1 of 2
# Warmup Iteration   1: 2724.115 us/op
# Warmup Iteration   2: 2115.111 us/op
# Warmup Iteration   3: 2471.264 us/op
# Warmup Iteration   4: 1646.193 us/op
# Warmup Iteration   5: 1775.121 us/op
Iteration   1: 718.036 us/op
Iteration   2: 798.303 us/op
Iteration   3: 701.176 us/op
Iteration   4: 679.837 us/op
Iteration   5: 721.044 us/op

# Run progress: 57.39% complete, ETA 00:19:42
# Fork: 2 of 2
# Warmup Iteration   1: 2819.174 us/op
# Warmup Iteration   2: 2141.101 us/op
# Warmup Iteration   3: 2512.147 us/op
# Warmup Iteration   4: 1620.211 us/op
# Warmup Iteration   5: 1759.772 us/op
Iteration   1: 692.946 us/op
Iteration   2: 760.620 us/op
Iteration   3: 693.784 us/op
Iteration   4: 673.817 us/op
Iteration   5: 752.465 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    719.203 ±(99.9%) 60.376 us/op

  Histogram, us/op:
    [600.000, 612.500) = 0 
    [612.500, 625.000) = 0 
    [625.000, 637.500) = 0 
    [637.500, 650.000) = 0 
    [650.000, 662.500) = 0 
    [662.500, 675.000) = 1 
    [675.000, 687.500) = 1 
    [687.500, 700.000) = 2 
    [700.000, 712.500) = 1 
    [712.500, 725.000) = 2 
    [725.000, 737.500) = 0 
    [737.500, 750.000) = 0 
    [750.000, 762.500) = 2 
    [762.500, 775.000) = 0 
    [775.000, 787.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    673.817 us/op
     p(50.0000) =    709.606 us/op
     p(90.0000) =    794.535 us/op
     p(95.0000) =    798.303 us/op
     p(99.0000) =    798.303 us/op
     p(99.9000) =    798.303 us/op
     p(99.9900) =    798.303 us/op
     p(99.9990) =    798.303 us/op
     p(99.9999) =    798.303 us/op
    p(100.0000) =    798.303 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.125)

# Run progress: 57.58% complete, ETA 00:19:37
# Fork: 1 of 2
# Warmup Iteration   1: 4033.413 us/op
# Warmup Iteration   2: 3259.753 us/op
# Warmup Iteration   3: 2560.837 us/op
# Warmup Iteration   4: 2541.584 us/op
# Warmup Iteration   5: 2513.900 us/op
Iteration   1: 1410.913 us/op
Iteration   2: 1392.032 us/op
Iteration   3: 1389.622 us/op
Iteration   4: 1446.172 us/op
Iteration   5: 1403.667 us/op

# Run progress: 57.77% complete, ETA 00:19:32
# Fork: 2 of 2
# Warmup Iteration   1: 3552.139 us/op
# Warmup Iteration   2: 3203.099 us/op
# Warmup Iteration   3: 3013.670 us/op
# Warmup Iteration   4: 2389.573 us/op
# Warmup Iteration   5: 2366.108 us/op
Iteration   1: 1416.729 us/op
Iteration   2: 1417.634 us/op
Iteration   3: 1358.914 us/op
Iteration   4: 1407.594 us/op
Iteration   5: 1401.189 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1404.447 ±(99.9%) 34.090 us/op

  Histogram, us/op:
    [1350.000, 1360.000) = 1 
    [1360.000, 1370.000) = 0 
    [1370.000, 1380.000) = 0 
    [1380.000, 1390.000) = 1 
    [1390.000, 1400.000) = 1 
    [1400.000, 1410.000) = 3 
    [1410.000, 1420.000) = 3 
    [1420.000, 1430.000) = 0 
    [1430.000, 1440.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1358.914 us/op
     p(50.0000) =   1405.631 us/op
     p(90.0000) =   1443.318 us/op
     p(95.0000) =   1446.172 us/op
     p(99.0000) =   1446.172 us/op
     p(99.9000) =   1446.172 us/op
     p(99.9900) =   1446.172 us/op
     p(99.9990) =   1446.172 us/op
     p(99.9999) =   1446.172 us/op
    p(100.0000) =   1446.172 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.250)

# Run progress: 57.95% complete, ETA 00:19:27
# Fork: 1 of 2
# Warmup Iteration   1: 3595.133 us/op
# Warmup Iteration   2: 3276.403 us/op
# Warmup Iteration   3: 2848.006 us/op
# Warmup Iteration   4: 2518.494 us/op
# Warmup Iteration   5: 2398.196 us/op
Iteration   1: 1343.842 us/op
Iteration   2: 1397.865 us/op
Iteration   3: 1359.391 us/op
Iteration   4: 1352.679 us/op
Iteration   5: 1371.423 us/op

# Run progress: 58.14% complete, ETA 00:19:21
# Fork: 2 of 2
# Warmup Iteration   1: 3483.032 us/op
# Warmup Iteration   2: 3229.070 us/op
# Warmup Iteration   3: 3062.073 us/op
# Warmup Iteration   4: 2449.917 us/op
# Warmup Iteration   5: 2378.515 us/op
Iteration   1: 1367.495 us/op
Iteration   2: 1419.780 us/op
Iteration   3: 1474.591 us/op
Iteration   4: 1449.674 us/op
Iteration   5: 1416.597 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1395.334 ±(99.9%) 66.476 us/op

  Histogram, us/op:
    [1300.000, 1312.500) = 0 
    [1312.500, 1325.000) = 0 
    [1325.000, 1337.500) = 0 
    [1337.500, 1350.000) = 1 
    [1350.000, 1362.500) = 2 
    [1362.500, 1375.000) = 2 
    [1375.000, 1387.500) = 0 
    [1387.500, 1400.000) = 1 
    [1400.000, 1412.500) = 0 
    [1412.500, 1425.000) = 2 
    [1425.000, 1437.500) = 0 
    [1437.500, 1450.000) = 1 
    [1450.000, 1462.500) = 0 
    [1462.500, 1475.000) = 1 
    [1475.000, 1487.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1343.842 us/op
     p(50.0000) =   1384.644 us/op
     p(90.0000) =   1472.099 us/op
     p(95.0000) =   1474.591 us/op
     p(99.0000) =   1474.591 us/op
     p(99.9000) =   1474.591 us/op
     p(99.9900) =   1474.591 us/op
     p(99.9990) =   1474.591 us/op
     p(99.9999) =   1474.591 us/op
    p(100.0000) =   1474.591 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.375)

# Run progress: 58.33% complete, ETA 00:19:16
# Fork: 1 of 2
# Warmup Iteration   1: 3574.568 us/op
# Warmup Iteration   2: 3374.096 us/op
# Warmup Iteration   3: 2740.784 us/op
# Warmup Iteration   4: 2443.481 us/op
# Warmup Iteration   5: 2411.212 us/op
Iteration   1: 1397.508 us/op
Iteration   2: 1430.109 us/op
Iteration   3: 1434.058 us/op
Iteration   4: 1394.098 us/op
Iteration   5: 1405.373 us/op

# Run progress: 58.52% complete, ETA 00:19:11
# Fork: 2 of 2
# Warmup Iteration   1: 3750.070 us/op
# Warmup Iteration   2: 3182.873 us/op
# Warmup Iteration   3: 2961.801 us/op
# Warmup Iteration   4: 2452.115 us/op
# Warmup Iteration   5: 2458.435 us/op
Iteration   1: 1407.709 us/op
Iteration   2: 1415.613 us/op
Iteration   3: 1368.650 us/op
Iteration   4: 1378.851 us/op
Iteration   5: 1408.258 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1404.023 ±(99.9%) 30.968 us/op

  Histogram, us/op:
    [1360.000, 1365.000) = 0 
    [1365.000, 1370.000) = 1 
    [1370.000, 1375.000) = 0 
    [1375.000, 1380.000) = 1 
    [1380.000, 1385.000) = 0 
    [1385.000, 1390.000) = 0 
    [1390.000, 1395.000) = 1 
    [1395.000, 1400.000) = 1 
    [1400.000, 1405.000) = 0 
    [1405.000, 1410.000) = 3 
    [1410.000, 1415.000) = 0 
    [1415.000, 1420.000) = 1 
    [1420.000, 1425.000) = 0 
    [1425.000, 1430.000) = 0 
    [1430.000, 1435.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   1368.650 us/op
     p(50.0000) =   1406.541 us/op
     p(90.0000) =   1433.663 us/op
     p(95.0000) =   1434.058 us/op
     p(99.0000) =   1434.058 us/op
     p(99.9000) =   1434.058 us/op
     p(99.9900) =   1434.058 us/op
     p(99.9990) =   1434.058 us/op
     p(99.9999) =   1434.058 us/op
    p(100.0000) =   1434.058 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.5)

# Run progress: 58.71% complete, ETA 00:19:06
# Fork: 1 of 2
# Warmup Iteration   1: 3641.661 us/op
# Warmup Iteration   2: 3283.834 us/op
# Warmup Iteration   3: 2890.920 us/op
# Warmup Iteration   4: 2511.552 us/op
# Warmup Iteration   5: 2435.639 us/op
Iteration   1: 1459.427 us/op
Iteration   2: 1468.922 us/op
Iteration   3: 1446.081 us/op
Iteration   4: 1425.277 us/op
Iteration   5: 1432.310 us/op

# Run progress: 58.90% complete, ETA 00:19:00
# Fork: 2 of 2
# Warmup Iteration   1: 3846.689 us/op
# Warmup Iteration   2: 3109.905 us/op
# Warmup Iteration   3: 2796.001 us/op
# Warmup Iteration   4: 2421.494 us/op
# Warmup Iteration   5: 2396.373 us/op
Iteration   1: 1448.120 us/op
Iteration   2: 1465.123 us/op
Iteration   3: 1395.665 us/op
Iteration   4: 1494.291 us/op
Iteration   5: 1391.529 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1442.674 ±(99.9%) 48.899 us/op

  Histogram, us/op:
    [1300.000, 1312.500) = 0 
    [1312.500, 1325.000) = 0 
    [1325.000, 1337.500) = 0 
    [1337.500, 1350.000) = 0 
    [1350.000, 1362.500) = 0 
    [1362.500, 1375.000) = 0 
    [1375.000, 1387.500) = 0 
    [1387.500, 1400.000) = 2 
    [1400.000, 1412.500) = 0 
    [1412.500, 1425.000) = 0 
    [1425.000, 1437.500) = 2 
    [1437.500, 1450.000) = 2 
    [1450.000, 1462.500) = 1 
    [1462.500, 1475.000) = 2 
    [1475.000, 1487.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1391.529 us/op
     p(50.0000) =   1447.101 us/op
     p(90.0000) =   1491.754 us/op
     p(95.0000) =   1494.291 us/op
     p(99.0000) =   1494.291 us/op
     p(99.9000) =   1494.291 us/op
     p(99.9900) =   1494.291 us/op
     p(99.9990) =   1494.291 us/op
     p(99.9999) =   1494.291 us/op
    p(100.0000) =   1494.291 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.625)

# Run progress: 59.09% complete, ETA 00:18:55
# Fork: 1 of 2
# Warmup Iteration   1: 3444.389 us/op
# Warmup Iteration   2: 3148.807 us/op
# Warmup Iteration   3: 3114.546 us/op
# Warmup Iteration   4: 2420.588 us/op
# Warmup Iteration   5: 2422.763 us/op
Iteration   1: 1402.724 us/op
Iteration   2: 1465.325 us/op
Iteration   3: 1381.492 us/op
Iteration   4: 1421.448 us/op
Iteration   5: 1411.775 us/op

# Run progress: 59.28% complete, ETA 00:18:50
# Fork: 2 of 2
# Warmup Iteration   1: 3789.574 us/op
# Warmup Iteration   2: 3290.260 us/op
# Warmup Iteration   3: 2873.479 us/op
# Warmup Iteration   4: 2430.179 us/op
# Warmup Iteration   5: 2474.700 us/op
Iteration   1: 1440.155 us/op
Iteration   2: 1400.466 us/op
Iteration   3: 1344.877 us/op
Iteration   4: 1410.249 us/op
Iteration   5: 1378.737 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1405.725 ±(99.9%) 50.638 us/op

  Histogram, us/op:
    [1300.000, 1312.500) = 0 
    [1312.500, 1325.000) = 0 
    [1325.000, 1337.500) = 0 
    [1337.500, 1350.000) = 1 
    [1350.000, 1362.500) = 0 
    [1362.500, 1375.000) = 0 
    [1375.000, 1387.500) = 2 
    [1387.500, 1400.000) = 0 
    [1400.000, 1412.500) = 4 
    [1412.500, 1425.000) = 1 
    [1425.000, 1437.500) = 0 
    [1437.500, 1450.000) = 1 
    [1450.000, 1462.500) = 0 
    [1462.500, 1475.000) = 1 
    [1475.000, 1487.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1344.877 us/op
     p(50.0000) =   1406.487 us/op
     p(90.0000) =   1462.808 us/op
     p(95.0000) =   1465.325 us/op
     p(99.0000) =   1465.325 us/op
     p(99.9000) =   1465.325 us/op
     p(99.9900) =   1465.325 us/op
     p(99.9990) =   1465.325 us/op
     p(99.9999) =   1465.325 us/op
    p(100.0000) =   1465.325 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.75)

# Run progress: 59.47% complete, ETA 00:18:45
# Fork: 1 of 2
# Warmup Iteration   1: 3623.315 us/op
# Warmup Iteration   2: 3489.340 us/op
# Warmup Iteration   3: 2667.134 us/op
# Warmup Iteration   4: 2392.024 us/op
# Warmup Iteration   5: 2365.579 us/op
Iteration   1: 1410.772 us/op
Iteration   2: 1430.638 us/op
Iteration   3: 1364.423 us/op
Iteration   4: 1489.762 us/op
Iteration   5: 1362.073 us/op

# Run progress: 59.66% complete, ETA 00:18:39
# Fork: 2 of 2
# Warmup Iteration   1: 3607.594 us/op
# Warmup Iteration   2: 3175.222 us/op
# Warmup Iteration   3: 2981.684 us/op
# Warmup Iteration   4: 2537.251 us/op
# Warmup Iteration   5: 2484.023 us/op
Iteration   1: 1439.888 us/op
Iteration   2: 1474.470 us/op
Iteration   3: 1419.644 us/op
Iteration   4: 1411.852 us/op
Iteration   5: 1456.427 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1425.995 ±(99.9%) 63.558 us/op

  Histogram, us/op:
    [1300.000, 1312.500) = 0 
    [1312.500, 1325.000) = 0 
    [1325.000, 1337.500) = 0 
    [1337.500, 1350.000) = 0 
    [1350.000, 1362.500) = 1 
    [1362.500, 1375.000) = 1 
    [1375.000, 1387.500) = 0 
    [1387.500, 1400.000) = 0 
    [1400.000, 1412.500) = 2 
    [1412.500, 1425.000) = 1 
    [1425.000, 1437.500) = 1 
    [1437.500, 1450.000) = 1 
    [1450.000, 1462.500) = 1 
    [1462.500, 1475.000) = 1 
    [1475.000, 1487.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1362.073 us/op
     p(50.0000) =   1425.141 us/op
     p(90.0000) =   1488.233 us/op
     p(95.0000) =   1489.762 us/op
     p(99.0000) =   1489.762 us/op
     p(99.9000) =   1489.762 us/op
     p(99.9900) =   1489.762 us/op
     p(99.9990) =   1489.762 us/op
     p(99.9999) =   1489.762 us/op
    p(100.0000) =   1489.762 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.875)

# Run progress: 59.85% complete, ETA 00:18:34
# Fork: 1 of 2
# Warmup Iteration   1: 3555.767 us/op
# Warmup Iteration   2: 3374.174 us/op
# Warmup Iteration   3: 3037.242 us/op
# Warmup Iteration   4: 2503.000 us/op
# Warmup Iteration   5: 2461.987 us/op
Iteration   1: 1395.577 us/op
Iteration   2: 1432.673 us/op
Iteration   3: 1472.123 us/op
Iteration   4: 1421.534 us/op
Iteration   5: 1413.553 us/op

# Run progress: 60.04% complete, ETA 00:18:29
# Fork: 2 of 2
# Warmup Iteration   1: 3470.018 us/op
# Warmup Iteration   2: 3302.502 us/op
# Warmup Iteration   3: 3216.048 us/op
# Warmup Iteration   4: 2523.408 us/op
# Warmup Iteration   5: 2418.421 us/op
Iteration   1: 1373.267 us/op
Iteration   2: 1441.124 us/op
Iteration   3: 1361.819 us/op
Iteration   4: 1353.626 us/op
Iteration   5: 1357.905 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1402.320 ±(99.9%) 61.036 us/op

  Histogram, us/op:
    [1300.000, 1312.500) = 0 
    [1312.500, 1325.000) = 0 
    [1325.000, 1337.500) = 0 
    [1337.500, 1350.000) = 0 
    [1350.000, 1362.500) = 3 
    [1362.500, 1375.000) = 1 
    [1375.000, 1387.500) = 0 
    [1387.500, 1400.000) = 1 
    [1400.000, 1412.500) = 0 
    [1412.500, 1425.000) = 2 
    [1425.000, 1437.500) = 1 
    [1437.500, 1450.000) = 1 
    [1450.000, 1462.500) = 0 
    [1462.500, 1475.000) = 1 
    [1475.000, 1487.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1353.626 us/op
     p(50.0000) =   1404.565 us/op
     p(90.0000) =   1469.023 us/op
     p(95.0000) =   1472.123 us/op
     p(99.0000) =   1472.123 us/op
     p(99.9000) =   1472.123 us/op
     p(99.9900) =   1472.123 us/op
     p(99.9990) =   1472.123 us/op
     p(99.9999) =   1472.123 us/op
    p(100.0000) =   1472.123 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 1)

# Run progress: 60.23% complete, ETA 00:18:24
# Fork: 1 of 2
# Warmup Iteration   1: 3593.770 us/op
# Warmup Iteration   2: 3234.210 us/op
# Warmup Iteration   3: 3069.306 us/op
# Warmup Iteration   4: 2425.757 us/op
# Warmup Iteration   5: 2538.631 us/op
Iteration   1: 1387.115 us/op
Iteration   2: 1424.670 us/op
Iteration   3: 1366.135 us/op
Iteration   4: 1395.451 us/op
Iteration   5: 1433.286 us/op

# Run progress: 60.42% complete, ETA 00:18:18
# Fork: 2 of 2
# Warmup Iteration   1: 3587.698 us/op
# Warmup Iteration   2: 3241.233 us/op
# Warmup Iteration   3: 2942.436 us/op
# Warmup Iteration   4: 2371.087 us/op
# Warmup Iteration   5: 2477.924 us/op
Iteration   1: 1456.091 us/op
Iteration   2: 1478.357 us/op
Iteration   3: 1406.720 us/op
Iteration   4: 1415.120 us/op
Iteration   5: 1421.053 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1418.400 ±(99.9%) 49.551 us/op

  Histogram, us/op:
    [1300.000, 1312.500) = 0 
    [1312.500, 1325.000) = 0 
    [1325.000, 1337.500) = 0 
    [1337.500, 1350.000) = 0 
    [1350.000, 1362.500) = 0 
    [1362.500, 1375.000) = 1 
    [1375.000, 1387.500) = 1 
    [1387.500, 1400.000) = 1 
    [1400.000, 1412.500) = 1 
    [1412.500, 1425.000) = 3 
    [1425.000, 1437.500) = 1 
    [1437.500, 1450.000) = 0 
    [1450.000, 1462.500) = 1 
    [1462.500, 1475.000) = 0 
    [1475.000, 1487.500) = 1 

  Percentiles, us/op:
      p(0.0000) =   1366.135 us/op
     p(50.0000) =   1418.087 us/op
     p(90.0000) =   1476.130 us/op
     p(95.0000) =   1478.357 us/op
     p(99.0000) =   1478.357 us/op
     p(99.9000) =   1478.357 us/op
     p(99.9900) =   1478.357 us/op
     p(99.9990) =   1478.357 us/op
     p(99.9999) =   1478.357 us/op
    p(100.0000) =   1478.357 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.125)

# Run progress: 60.61% complete, ETA 00:18:13
# Fork: 1 of 2
# Warmup Iteration   1: 3899.672 us/op
# Warmup Iteration   2: 3535.253 us/op
# Warmup Iteration   3: 2813.131 us/op
# Warmup Iteration   4: 2466.405 us/op
# Warmup Iteration   5: 2459.031 us/op
Iteration   1: 1379.047 us/op
Iteration   2: 1487.025 us/op
Iteration   3: 1392.398 us/op
Iteration   4: 1431.135 us/op
Iteration   5: 1464.276 us/op

# Run progress: 60.80% complete, ETA 00:18:08
# Fork: 2 of 2
# Warmup Iteration   1: 3702.540 us/op
# Warmup Iteration   2: 3414.338 us/op
# Warmup Iteration   3: 2663.069 us/op
# Warmup Iteration   4: 2535.003 us/op
# Warmup Iteration   5: 2501.249 us/op
Iteration   1: 1398.957 us/op
Iteration   2: 1428.237 us/op
Iteration   3: 1403.800 us/op
Iteration   4: 1418.145 us/op
Iteration   5: 1389.581 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1419.260 ±(99.9%) 52.159 us/op

  Histogram, us/op:
    [1300.000, 1312.500) = 0 
    [1312.500, 1325.000) = 0 
    [1325.000, 1337.500) = 0 
    [1337.500, 1350.000) = 0 
    [1350.000, 1362.500) = 0 
    [1362.500, 1375.000) = 0 
    [1375.000, 1387.500) = 1 
    [1387.500, 1400.000) = 3 
    [1400.000, 1412.500) = 1 
    [1412.500, 1425.000) = 1 
    [1425.000, 1437.500) = 2 
    [1437.500, 1450.000) = 0 
    [1450.000, 1462.500) = 0 
    [1462.500, 1475.000) = 1 
    [1475.000, 1487.500) = 1 

  Percentiles, us/op:
      p(0.0000) =   1379.047 us/op
     p(50.0000) =   1410.972 us/op
     p(90.0000) =   1484.750 us/op
     p(95.0000) =   1487.025 us/op
     p(99.0000) =   1487.025 us/op
     p(99.9000) =   1487.025 us/op
     p(99.9900) =   1487.025 us/op
     p(99.9990) =   1487.025 us/op
     p(99.9999) =   1487.025 us/op
    p(100.0000) =   1487.025 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.250)

# Run progress: 60.98% complete, ETA 00:18:03
# Fork: 1 of 2
# Warmup Iteration   1: 4067.700 us/op
# Warmup Iteration   2: 3125.623 us/op
# Warmup Iteration   3: 2978.170 us/op
# Warmup Iteration   4: 2440.467 us/op
# Warmup Iteration   5: 2487.210 us/op
Iteration   1: 1382.522 us/op
Iteration   2: 1449.545 us/op
Iteration   3: 1370.618 us/op
Iteration   4: 1367.250 us/op
Iteration   5: 1421.118 us/op

# Run progress: 61.17% complete, ETA 00:17:57
# Fork: 2 of 2
# Warmup Iteration   1: 3351.527 us/op
# Warmup Iteration   2: 3217.248 us/op
# Warmup Iteration   3: 3022.233 us/op
# Warmup Iteration   4: 2438.649 us/op
# Warmup Iteration   5: 2392.237 us/op
Iteration   1: 1365.290 us/op
Iteration   2: 1432.435 us/op
Iteration   3: 1326.316 us/op
Iteration   4: 1341.154 us/op
Iteration   5: 1343.586 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1379.983 ±(99.9%) 62.675 us/op

  Histogram, us/op:
    [1300.000, 1312.500) = 0 
    [1312.500, 1325.000) = 0 
    [1325.000, 1337.500) = 1 
    [1337.500, 1350.000) = 2 
    [1350.000, 1362.500) = 0 
    [1362.500, 1375.000) = 3 
    [1375.000, 1387.500) = 1 
    [1387.500, 1400.000) = 0 
    [1400.000, 1412.500) = 0 
    [1412.500, 1425.000) = 1 
    [1425.000, 1437.500) = 1 
    [1437.500, 1450.000) = 1 
    [1450.000, 1462.500) = 0 
    [1462.500, 1475.000) = 0 
    [1475.000, 1487.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1326.316 us/op
     p(50.0000) =   1368.934 us/op
     p(90.0000) =   1447.834 us/op
     p(95.0000) =   1449.545 us/op
     p(99.0000) =   1449.545 us/op
     p(99.9000) =   1449.545 us/op
     p(99.9900) =   1449.545 us/op
     p(99.9990) =   1449.545 us/op
     p(99.9999) =   1449.545 us/op
    p(100.0000) =   1449.545 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.375)

# Run progress: 61.36% complete, ETA 00:17:52
# Fork: 1 of 2
# Warmup Iteration   1: 3651.940 us/op
# Warmup Iteration   2: 3214.449 us/op
# Warmup Iteration   3: 3342.778 us/op
# Warmup Iteration   4: 2632.300 us/op
# Warmup Iteration   5: 2431.684 us/op
Iteration   1: 1377.702 us/op
Iteration   2: 1493.537 us/op
Iteration   3: 1410.749 us/op
Iteration   4: 1448.278 us/op
Iteration   5: 1425.329 us/op

# Run progress: 61.55% complete, ETA 00:17:47
# Fork: 2 of 2
# Warmup Iteration   1: 3760.424 us/op
# Warmup Iteration   2: 3441.803 us/op
# Warmup Iteration   3: 3236.043 us/op
# Warmup Iteration   4: 2467.708 us/op
# Warmup Iteration   5: 2483.007 us/op
Iteration   1: 1397.044 us/op
Iteration   2: 1439.983 us/op
Iteration   3: 1393.138 us/op
Iteration   4: 1391.044 us/op
Iteration   5: 1407.261 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1418.407 ±(99.9%) 52.211 us/op

  Histogram, us/op:
    [1300.000, 1312.500) = 0 
    [1312.500, 1325.000) = 0 
    [1325.000, 1337.500) = 0 
    [1337.500, 1350.000) = 0 
    [1350.000, 1362.500) = 0 
    [1362.500, 1375.000) = 0 
    [1375.000, 1387.500) = 1 
    [1387.500, 1400.000) = 3 
    [1400.000, 1412.500) = 2 
    [1412.500, 1425.000) = 0 
    [1425.000, 1437.500) = 1 
    [1437.500, 1450.000) = 2 
    [1450.000, 1462.500) = 0 
    [1462.500, 1475.000) = 0 
    [1475.000, 1487.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1377.702 us/op
     p(50.0000) =   1409.005 us/op
     p(90.0000) =   1489.011 us/op
     p(95.0000) =   1493.537 us/op
     p(99.0000) =   1493.537 us/op
     p(99.9000) =   1493.537 us/op
     p(99.9900) =   1493.537 us/op
     p(99.9990) =   1493.537 us/op
     p(99.9999) =   1493.537 us/op
    p(100.0000) =   1493.537 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.5)

# Run progress: 61.74% complete, ETA 00:17:42
# Fork: 1 of 2
# Warmup Iteration   1: 3403.632 us/op
# Warmup Iteration   2: 3326.811 us/op
# Warmup Iteration   3: 2923.034 us/op
# Warmup Iteration   4: 2455.332 us/op
# Warmup Iteration   5: 2398.148 us/op
Iteration   1: 1358.246 us/op
Iteration   2: 1432.509 us/op
Iteration   3: 1437.234 us/op
Iteration   4: 1421.328 us/op
Iteration   5: 1656.740 us/op

# Run progress: 61.93% complete, ETA 00:17:36
# Fork: 2 of 2
# Warmup Iteration   1: 3525.169 us/op
# Warmup Iteration   2: 3640.887 us/op
# Warmup Iteration   3: 2706.118 us/op
# Warmup Iteration   4: 2638.992 us/op
# Warmup Iteration   5: 2525.437 us/op
Iteration   1: 1415.211 us/op
Iteration   2: 1410.440 us/op
Iteration   3: 1406.199 us/op
Iteration   4: 1370.224 us/op
Iteration   5: 1356.585 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1426.472 ±(99.9%) 130.152 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 3 
    [1375.000, 1400.000) = 0 
    [1400.000, 1425.000) = 4 
    [1425.000, 1450.000) = 2 
    [1450.000, 1475.000) = 0 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 0 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 0 
    [1575.000, 1600.000) = 0 
    [1600.000, 1625.000) = 0 
    [1625.000, 1650.000) = 0 
    [1650.000, 1675.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1356.585 us/op
     p(50.0000) =   1412.826 us/op
     p(90.0000) =   1634.789 us/op
     p(95.0000) =   1656.740 us/op
     p(99.0000) =   1656.740 us/op
     p(99.9000) =   1656.740 us/op
     p(99.9900) =   1656.740 us/op
     p(99.9990) =   1656.740 us/op
     p(99.9999) =   1656.740 us/op
    p(100.0000) =   1656.740 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.625)

# Run progress: 62.12% complete, ETA 00:17:31
# Fork: 1 of 2
# Warmup Iteration   1: 3701.919 us/op
# Warmup Iteration   2: 3419.128 us/op
# Warmup Iteration   3: 2671.105 us/op
# Warmup Iteration   4: 2471.819 us/op
# Warmup Iteration   5: 2513.124 us/op
Iteration   1: 1416.957 us/op
Iteration   2: 1388.057 us/op
Iteration   3: 1398.875 us/op
Iteration   4: 1379.335 us/op
Iteration   5: 1394.302 us/op

# Run progress: 62.31% complete, ETA 00:17:26
# Fork: 2 of 2
# Warmup Iteration   1: 3801.762 us/op
# Warmup Iteration   2: 3167.302 us/op
# Warmup Iteration   3: 2876.846 us/op
# Warmup Iteration   4: 2392.843 us/op
# Warmup Iteration   5: 2407.499 us/op
Iteration   1: 1390.472 us/op
Iteration   2: 1511.616 us/op
Iteration   3: 1385.462 us/op
Iteration   4: 1421.927 us/op
Iteration   5: 1446.693 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1413.370 ±(99.9%) 60.736 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 0 
    [1375.000, 1400.000) = 6 
    [1400.000, 1425.000) = 2 
    [1425.000, 1450.000) = 1 
    [1450.000, 1475.000) = 0 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 1 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1379.335 us/op
     p(50.0000) =   1396.588 us/op
     p(90.0000) =   1505.124 us/op
     p(95.0000) =   1511.616 us/op
     p(99.0000) =   1511.616 us/op
     p(99.9000) =   1511.616 us/op
     p(99.9900) =   1511.616 us/op
     p(99.9990) =   1511.616 us/op
     p(99.9999) =   1511.616 us/op
    p(100.0000) =   1511.616 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.75)

# Run progress: 62.50% complete, ETA 00:17:21
# Fork: 1 of 2
# Warmup Iteration   1: 3503.783 us/op
# Warmup Iteration   2: 3265.067 us/op
# Warmup Iteration   3: 3092.676 us/op
# Warmup Iteration   4: 2483.110 us/op
# Warmup Iteration   5: 2382.691 us/op
Iteration   1: 1382.062 us/op
Iteration   2: 1431.510 us/op
Iteration   3: 1390.950 us/op
Iteration   4: 1378.202 us/op
Iteration   5: 1407.707 us/op

# Run progress: 62.69% complete, ETA 00:17:15
# Fork: 2 of 2
# Warmup Iteration   1: 3568.879 us/op
# Warmup Iteration   2: 3112.171 us/op
# Warmup Iteration   3: 2810.087 us/op
# Warmup Iteration   4: 2408.798 us/op
# Warmup Iteration   5: 2404.608 us/op
Iteration   1: 1361.787 us/op
Iteration   2: 1390.450 us/op
Iteration   3: 1346.754 us/op
Iteration   4: 1381.333 us/op
Iteration   5: 1380.889 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1385.164 ±(99.9%) 35.025 us/op

  Histogram, us/op:
    [1340.000, 1350.000) = 1 
    [1350.000, 1360.000) = 0 
    [1360.000, 1370.000) = 1 
    [1370.000, 1380.000) = 1 
    [1380.000, 1390.000) = 3 
    [1390.000, 1400.000) = 2 
    [1400.000, 1410.000) = 1 
    [1410.000, 1420.000) = 0 
    [1420.000, 1430.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1346.754 us/op
     p(50.0000) =   1381.698 us/op
     p(90.0000) =   1429.130 us/op
     p(95.0000) =   1431.510 us/op
     p(99.0000) =   1431.510 us/op
     p(99.9000) =   1431.510 us/op
     p(99.9900) =   1431.510 us/op
     p(99.9990) =   1431.510 us/op
     p(99.9999) =   1431.510 us/op
    p(100.0000) =   1431.510 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.875)

# Run progress: 62.88% complete, ETA 00:17:10
# Fork: 1 of 2
# Warmup Iteration   1: 3414.674 us/op
# Warmup Iteration   2: 3302.194 us/op
# Warmup Iteration   3: 2998.377 us/op
# Warmup Iteration   4: 2406.673 us/op
# Warmup Iteration   5: 2483.324 us/op
Iteration   1: 1437.826 us/op
Iteration   2: 1425.702 us/op
Iteration   3: 1360.433 us/op
Iteration   4: 1371.113 us/op
Iteration   5: 1412.392 us/op

# Run progress: 63.07% complete, ETA 00:17:05
# Fork: 2 of 2
# Warmup Iteration   1: 3641.011 us/op
# Warmup Iteration   2: 3247.049 us/op
# Warmup Iteration   3: 2936.708 us/op
# Warmup Iteration   4: 2519.803 us/op
# Warmup Iteration   5: 2404.565 us/op
Iteration   1: 1381.901 us/op
Iteration   2: 1410.849 us/op
Iteration   3: 1337.433 us/op
Iteration   4: 1337.268 us/op
Iteration   5: 1392.111 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1386.703 ±(99.9%) 53.415 us/op

  Histogram, us/op:
    [1300.000, 1312.500) = 0 
    [1312.500, 1325.000) = 0 
    [1325.000, 1337.500) = 2 
    [1337.500, 1350.000) = 0 
    [1350.000, 1362.500) = 1 
    [1362.500, 1375.000) = 1 
    [1375.000, 1387.500) = 1 
    [1387.500, 1400.000) = 1 
    [1400.000, 1412.500) = 2 
    [1412.500, 1425.000) = 0 
    [1425.000, 1437.500) = 1 
    [1437.500, 1450.000) = 1 
    [1450.000, 1462.500) = 0 
    [1462.500, 1475.000) = 0 
    [1475.000, 1487.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1337.268 us/op
     p(50.0000) =   1387.006 us/op
     p(90.0000) =   1436.614 us/op
     p(95.0000) =   1437.826 us/op
     p(99.0000) =   1437.826 us/op
     p(99.9000) =   1437.826 us/op
     p(99.9900) =   1437.826 us/op
     p(99.9990) =   1437.826 us/op
     p(99.9999) =   1437.826 us/op
    p(100.0000) =   1437.826 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 1)

# Run progress: 63.26% complete, ETA 00:17:00
# Fork: 1 of 2
# Warmup Iteration   1: 3775.854 us/op
# Warmup Iteration   2: 3145.084 us/op
# Warmup Iteration   3: 3236.795 us/op
# Warmup Iteration   4: 2500.302 us/op
# Warmup Iteration   5: 2436.851 us/op
Iteration   1: 1457.688 us/op
Iteration   2: 1396.349 us/op
Iteration   3: 1334.704 us/op
Iteration   4: 1336.180 us/op
Iteration   5: 1389.696 us/op

# Run progress: 63.45% complete, ETA 00:16:54
# Fork: 2 of 2
# Warmup Iteration   1: 3569.769 us/op
# Warmup Iteration   2: 3248.652 us/op
# Warmup Iteration   3: 3064.710 us/op
# Warmup Iteration   4: 2468.691 us/op
# Warmup Iteration   5: 2475.282 us/op
Iteration   1: 1443.348 us/op
Iteration   2: 1438.827 us/op
Iteration   3: 1377.248 us/op
Iteration   4: 1413.501 us/op
Iteration   5: 1412.997 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1400.054 ±(99.9%) 63.824 us/op

  Histogram, us/op:
    [1300.000, 1312.500) = 0 
    [1312.500, 1325.000) = 0 
    [1325.000, 1337.500) = 2 
    [1337.500, 1350.000) = 0 
    [1350.000, 1362.500) = 0 
    [1362.500, 1375.000) = 0 
    [1375.000, 1387.500) = 1 
    [1387.500, 1400.000) = 2 
    [1400.000, 1412.500) = 0 
    [1412.500, 1425.000) = 2 
    [1425.000, 1437.500) = 0 
    [1437.500, 1450.000) = 2 
    [1450.000, 1462.500) = 1 
    [1462.500, 1475.000) = 0 
    [1475.000, 1487.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1334.704 us/op
     p(50.0000) =   1404.673 us/op
     p(90.0000) =   1456.254 us/op
     p(95.0000) =   1457.688 us/op
     p(99.0000) =   1457.688 us/op
     p(99.9000) =   1457.688 us/op
     p(99.9900) =   1457.688 us/op
     p(99.9990) =   1457.688 us/op
     p(99.9999) =   1457.688 us/op
    p(100.0000) =   1457.688 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.125)

# Run progress: 63.64% complete, ETA 00:16:49
# Fork: 1 of 2
# Warmup Iteration   1: 4999.410 us/op
# Warmup Iteration   2: 4899.797 us/op
# Warmup Iteration   3: 4402.038 us/op
# Warmup Iteration   4: 3997.368 us/op
# Warmup Iteration   5: 4035.285 us/op
Iteration   1: 2814.806 us/op
Iteration   2: 2884.045 us/op
Iteration   3: 2798.990 us/op
Iteration   4: 2777.919 us/op
Iteration   5: 2806.682 us/op

# Run progress: 63.83% complete, ETA 00:16:44
# Fork: 2 of 2
# Warmup Iteration   1: 4739.859 us/op
# Warmup Iteration   2: 4804.174 us/op
# Warmup Iteration   3: 4444.852 us/op
# Warmup Iteration   4: 3877.099 us/op
# Warmup Iteration   5: 3939.431 us/op
Iteration   1: 2700.318 us/op
Iteration   2: 2780.970 us/op
Iteration   3: 2774.285 us/op
Iteration   4: 2811.672 us/op
Iteration   5: 2778.272 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2792.796 ±(99.9%) 69.218 us/op

  Histogram, us/op:
    [2700.000, 2712.500) = 1 
    [2712.500, 2725.000) = 0 
    [2725.000, 2737.500) = 0 
    [2737.500, 2750.000) = 0 
    [2750.000, 2762.500) = 0 
    [2762.500, 2775.000) = 1 
    [2775.000, 2787.500) = 3 
    [2787.500, 2800.000) = 1 
    [2800.000, 2812.500) = 2 
    [2812.500, 2825.000) = 1 
    [2825.000, 2837.500) = 0 
    [2837.500, 2850.000) = 0 
    [2850.000, 2862.500) = 0 
    [2862.500, 2875.000) = 0 
    [2875.000, 2887.500) = 1 

  Percentiles, us/op:
      p(0.0000) =   2700.318 us/op
     p(50.0000) =   2789.980 us/op
     p(90.0000) =   2877.121 us/op
     p(95.0000) =   2884.045 us/op
     p(99.0000) =   2884.045 us/op
     p(99.9000) =   2884.045 us/op
     p(99.9900) =   2884.045 us/op
     p(99.9990) =   2884.045 us/op
     p(99.9999) =   2884.045 us/op
    p(100.0000) =   2884.045 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.250)

# Run progress: 64.02% complete, ETA 00:16:39
# Fork: 1 of 2
# Warmup Iteration   1: 5285.794 us/op
# Warmup Iteration   2: 5065.593 us/op
# Warmup Iteration   3: 4431.925 us/op
# Warmup Iteration   4: 4072.219 us/op
# Warmup Iteration   5: 4011.068 us/op
Iteration   1: 2784.947 us/op
Iteration   2: 3034.192 us/op
Iteration   3: 3147.245 us/op
Iteration   4: 3473.154 us/op
Iteration   5: 3604.740 us/op

# Run progress: 64.20% complete, ETA 00:16:33
# Fork: 2 of 2
# Warmup Iteration   1: 5036.022 us/op
# Warmup Iteration   2: 4818.844 us/op
# Warmup Iteration   3: 4503.002 us/op
# Warmup Iteration   4: 4039.576 us/op
# Warmup Iteration   5: 4018.219 us/op
Iteration   1: 2944.103 us/op
Iteration   2: 2787.579 us/op
Iteration   3: 2787.426 us/op
Iteration   4: 2885.602 us/op
Iteration   5: 2806.222 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   3025.521 ±(99.9%) 449.689 us/op

  Histogram, us/op:
    [2700.000, 2800.000) = 3 
    [2800.000, 2900.000) = 2 
    [2900.000, 3000.000) = 1 
    [3000.000, 3100.000) = 1 
    [3100.000, 3200.000) = 1 
    [3200.000, 3300.000) = 0 
    [3300.000, 3400.000) = 0 
    [3400.000, 3500.000) = 1 
    [3500.000, 3600.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2784.947 us/op
     p(50.0000) =   2914.853 us/op
     p(90.0000) =   3591.581 us/op
     p(95.0000) =   3604.740 us/op
     p(99.0000) =   3604.740 us/op
     p(99.9000) =   3604.740 us/op
     p(99.9900) =   3604.740 us/op
     p(99.9990) =   3604.740 us/op
     p(99.9999) =   3604.740 us/op
    p(100.0000) =   3604.740 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.375)

# Run progress: 64.39% complete, ETA 00:16:28
# Fork: 1 of 2
# Warmup Iteration   1: 5314.424 us/op
# Warmup Iteration   2: 4869.953 us/op
# Warmup Iteration   3: 4052.347 us/op
# Warmup Iteration   4: 4044.982 us/op
# Warmup Iteration   5: 3880.476 us/op
Iteration   1: 2739.076 us/op
Iteration   2: 2804.478 us/op
Iteration   3: 2751.723 us/op
Iteration   4: 2753.351 us/op
Iteration   5: 3004.097 us/op

# Run progress: 64.58% complete, ETA 00:16:23
# Fork: 2 of 2
# Warmup Iteration   1: 5046.832 us/op
# Warmup Iteration   2: 5173.569 us/op
# Warmup Iteration   3: 4122.532 us/op
# Warmup Iteration   4: 4082.250 us/op
# Warmup Iteration   5: 3915.755 us/op
Iteration   1: 2735.188 us/op
Iteration   2: 2846.914 us/op
Iteration   3: 2731.092 us/op
Iteration   4: 2768.826 us/op
Iteration   5: 2866.228 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2800.097 ±(99.9%) 129.861 us/op

  Histogram, us/op:
    [2700.000, 2725.000) = 0 
    [2725.000, 2750.000) = 3 
    [2750.000, 2775.000) = 3 
    [2775.000, 2800.000) = 0 
    [2800.000, 2825.000) = 1 
    [2825.000, 2850.000) = 1 
    [2850.000, 2875.000) = 1 
    [2875.000, 2900.000) = 0 
    [2900.000, 2925.000) = 0 
    [2925.000, 2950.000) = 0 
    [2950.000, 2975.000) = 0 
    [2975.000, 3000.000) = 0 
    [3000.000, 3025.000) = 1 
    [3025.000, 3050.000) = 0 
    [3050.000, 3075.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2731.092 us/op
     p(50.0000) =   2761.089 us/op
     p(90.0000) =   2990.310 us/op
     p(95.0000) =   3004.097 us/op
     p(99.0000) =   3004.097 us/op
     p(99.9000) =   3004.097 us/op
     p(99.9900) =   3004.097 us/op
     p(99.9990) =   3004.097 us/op
     p(99.9999) =   3004.097 us/op
    p(100.0000) =   3004.097 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.5)

# Run progress: 64.77% complete, ETA 00:16:18
# Fork: 1 of 2
# Warmup Iteration   1: 5170.936 us/op
# Warmup Iteration   2: 5310.268 us/op
# Warmup Iteration   3: 4061.181 us/op
# Warmup Iteration   4: 4048.635 us/op
# Warmup Iteration   5: 4085.779 us/op
Iteration   1: 2863.778 us/op
Iteration   2: 2984.612 us/op
Iteration   3: 2783.701 us/op
Iteration   4: 2840.100 us/op
Iteration   5: 2986.432 us/op

# Run progress: 64.96% complete, ETA 00:16:12
# Fork: 2 of 2
# Warmup Iteration   1: 5050.660 us/op
# Warmup Iteration   2: 5020.635 us/op
# Warmup Iteration   3: 4009.219 us/op
# Warmup Iteration   4: 4018.122 us/op
# Warmup Iteration   5: 4105.089 us/op
Iteration   1: 2788.208 us/op
Iteration   2: 2770.298 us/op
Iteration   3: 2785.142 us/op
Iteration   4: 2767.228 us/op
Iteration   5: 2827.405 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2839.690 ±(99.9%) 125.578 us/op

  Histogram, us/op:
    [2700.000, 2725.000) = 0 
    [2725.000, 2750.000) = 0 
    [2750.000, 2775.000) = 2 
    [2775.000, 2800.000) = 3 
    [2800.000, 2825.000) = 0 
    [2825.000, 2850.000) = 2 
    [2850.000, 2875.000) = 1 
    [2875.000, 2900.000) = 0 
    [2900.000, 2925.000) = 0 
    [2925.000, 2950.000) = 0 
    [2950.000, 2975.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2767.228 us/op
     p(50.0000) =   2807.807 us/op
     p(90.0000) =   2986.250 us/op
     p(95.0000) =   2986.432 us/op
     p(99.0000) =   2986.432 us/op
     p(99.9000) =   2986.432 us/op
     p(99.9900) =   2986.432 us/op
     p(99.9990) =   2986.432 us/op
     p(99.9999) =   2986.432 us/op
    p(100.0000) =   2986.432 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.625)

# Run progress: 65.15% complete, ETA 00:16:07
# Fork: 1 of 2
# Warmup Iteration   1: 5115.617 us/op
# Warmup Iteration   2: 4723.778 us/op
# Warmup Iteration   3: 4596.605 us/op
# Warmup Iteration   4: 3948.148 us/op
# Warmup Iteration   5: 4034.178 us/op
Iteration   1: 2790.607 us/op
Iteration   2: 2838.809 us/op
Iteration   3: 2727.016 us/op
Iteration   4: 2734.004 us/op
Iteration   5: 2768.155 us/op

# Run progress: 65.34% complete, ETA 00:16:02
# Fork: 2 of 2
# Warmup Iteration   1: 5284.875 us/op
# Warmup Iteration   2: 4995.883 us/op
# Warmup Iteration   3: 4082.509 us/op
# Warmup Iteration   4: 4060.894 us/op
# Warmup Iteration   5: 3976.399 us/op
Iteration   1: 2687.426 us/op
Iteration   2: 2887.684 us/op
Iteration   3: 2743.789 us/op
Iteration   4: 2715.332 us/op
Iteration   5: 2721.329 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2761.415 ±(99.9%) 93.308 us/op

  Histogram, us/op:
    [2600.000, 2625.000) = 0 
    [2625.000, 2650.000) = 0 
    [2650.000, 2675.000) = 0 
    [2675.000, 2700.000) = 1 
    [2700.000, 2725.000) = 2 
    [2725.000, 2750.000) = 3 
    [2750.000, 2775.000) = 1 
    [2775.000, 2800.000) = 1 
    [2800.000, 2825.000) = 0 
    [2825.000, 2850.000) = 1 
    [2850.000, 2875.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2687.426 us/op
     p(50.0000) =   2738.897 us/op
     p(90.0000) =   2882.797 us/op
     p(95.0000) =   2887.684 us/op
     p(99.0000) =   2887.684 us/op
     p(99.9000) =   2887.684 us/op
     p(99.9900) =   2887.684 us/op
     p(99.9990) =   2887.684 us/op
     p(99.9999) =   2887.684 us/op
    p(100.0000) =   2887.684 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.75)

# Run progress: 65.53% complete, ETA 00:15:57
# Fork: 1 of 2
# Warmup Iteration   1: 5063.409 us/op
# Warmup Iteration   2: 4805.852 us/op
# Warmup Iteration   3: 4456.768 us/op
# Warmup Iteration   4: 3915.134 us/op
# Warmup Iteration   5: 3924.517 us/op
Iteration   1: 2691.890 us/op
Iteration   2: 2774.514 us/op
Iteration   3: 2741.716 us/op
Iteration   4: 2756.267 us/op
Iteration   5: 2758.193 us/op

# Run progress: 65.72% complete, ETA 00:15:51
# Fork: 2 of 2
# Warmup Iteration   1: 5180.806 us/op
# Warmup Iteration   2: 4691.365 us/op
# Warmup Iteration   3: 4342.901 us/op
# Warmup Iteration   4: 4028.145 us/op
# Warmup Iteration   5: 3967.204 us/op
Iteration   1: 2780.483 us/op
Iteration   2: 2841.966 us/op
Iteration   3: 2695.641 us/op
Iteration   4: 2779.406 us/op
Iteration   5: 2773.621 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2759.370 ±(99.9%) 65.783 us/op

  Histogram, us/op:
    [2600.000, 2625.000) = 0 
    [2625.000, 2650.000) = 0 
    [2650.000, 2675.000) = 0 
    [2675.000, 2700.000) = 2 
    [2700.000, 2725.000) = 0 
    [2725.000, 2750.000) = 1 
    [2750.000, 2775.000) = 4 
    [2775.000, 2800.000) = 2 
    [2800.000, 2825.000) = 0 
    [2825.000, 2850.000) = 1 
    [2850.000, 2875.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2691.890 us/op
     p(50.0000) =   2765.907 us/op
     p(90.0000) =   2835.818 us/op
     p(95.0000) =   2841.966 us/op
     p(99.0000) =   2841.966 us/op
     p(99.9000) =   2841.966 us/op
     p(99.9900) =   2841.966 us/op
     p(99.9990) =   2841.966 us/op
     p(99.9999) =   2841.966 us/op
    p(100.0000) =   2841.966 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.875)

# Run progress: 65.91% complete, ETA 00:15:46
# Fork: 1 of 2
# Warmup Iteration   1: 5106.873 us/op
# Warmup Iteration   2: 5029.595 us/op
# Warmup Iteration   3: 4199.094 us/op
# Warmup Iteration   4: 4074.521 us/op
# Warmup Iteration   5: 4087.738 us/op
Iteration   1: 2834.415 us/op
Iteration   2: 3013.449 us/op
Iteration   3: 2804.098 us/op
Iteration   4: 2814.750 us/op
Iteration   5: 2778.389 us/op

# Run progress: 66.10% complete, ETA 00:15:41
# Fork: 2 of 2
# Warmup Iteration   1: 4910.820 us/op
# Warmup Iteration   2: 4668.408 us/op
# Warmup Iteration   3: 4374.968 us/op
# Warmup Iteration   4: 3961.218 us/op
# Warmup Iteration   5: 3987.053 us/op
Iteration   1: 2750.097 us/op
Iteration   2: 2762.707 us/op
Iteration   3: 2790.387 us/op
Iteration   4: 2959.993 us/op
Iteration   5: 2798.289 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2830.657 ±(99.9%) 131.049 us/op

  Histogram, us/op:
    [2700.000, 2725.000) = 0 
    [2725.000, 2750.000) = 0 
    [2750.000, 2775.000) = 2 
    [2775.000, 2800.000) = 3 
    [2800.000, 2825.000) = 2 
    [2825.000, 2850.000) = 1 
    [2850.000, 2875.000) = 0 
    [2875.000, 2900.000) = 0 
    [2900.000, 2925.000) = 0 
    [2925.000, 2950.000) = 0 
    [2950.000, 2975.000) = 1 
    [2975.000, 3000.000) = 0 
    [3000.000, 3025.000) = 1 
    [3025.000, 3050.000) = 0 
    [3050.000, 3075.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2750.097 us/op
     p(50.0000) =   2801.194 us/op
     p(90.0000) =   3008.103 us/op
     p(95.0000) =   3013.449 us/op
     p(99.0000) =   3013.449 us/op
     p(99.9000) =   3013.449 us/op
     p(99.9900) =   3013.449 us/op
     p(99.9990) =   3013.449 us/op
     p(99.9999) =   3013.449 us/op
    p(100.0000) =   3013.449 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 1)

# Run progress: 66.29% complete, ETA 00:15:36
# Fork: 1 of 2
# Warmup Iteration   1: 5265.233 us/op
# Warmup Iteration   2: 5079.409 us/op
# Warmup Iteration   3: 4059.852 us/op
# Warmup Iteration   4: 3928.761 us/op
# Warmup Iteration   5: 4092.193 us/op
Iteration   1: 2818.543 us/op
Iteration   2: 2975.930 us/op
Iteration   3: 3006.864 us/op
Iteration   4: 2800.029 us/op
Iteration   5: 2703.489 us/op

# Run progress: 66.48% complete, ETA 00:15:30
# Fork: 2 of 2
# Warmup Iteration   1: 5258.460 us/op
# Warmup Iteration   2: 4989.864 us/op
# Warmup Iteration   3: 4085.967 us/op
# Warmup Iteration   4: 3962.376 us/op
# Warmup Iteration   5: 3978.161 us/op
Iteration   1: 2808.162 us/op
Iteration   2: 3020.364 us/op
Iteration   3: 3224.583 us/op
Iteration   4: 3533.675 us/op
Iteration   5: 3683.364 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   3057.500 ±(99.9%) 495.784 us/op

  Histogram, us/op:
    [2700.000, 2800.000) = 1 
    [2800.000, 2900.000) = 3 
    [2900.000, 3000.000) = 1 
    [3000.000, 3100.000) = 2 
    [3100.000, 3200.000) = 0 
    [3200.000, 3300.000) = 1 
    [3300.000, 3400.000) = 0 
    [3400.000, 3500.000) = 0 
    [3500.000, 3600.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2703.489 us/op
     p(50.0000) =   2991.397 us/op
     p(90.0000) =   3668.395 us/op
     p(95.0000) =   3683.364 us/op
     p(99.0000) =   3683.364 us/op
     p(99.9000) =   3683.364 us/op
     p(99.9900) =   3683.364 us/op
     p(99.9990) =   3683.364 us/op
     p(99.9999) =   3683.364 us/op
    p(100.0000) =   3683.364 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.125)

# Run progress: 66.67% complete, ETA 00:15:25
# Fork: 1 of 2
# Warmup Iteration   1: 3454.391 us/op
# Warmup Iteration   2: 2347.796 us/op
# Warmup Iteration   3: 2055.912 us/op
# Warmup Iteration   4: 1738.853 us/op
# Warmup Iteration   5: 1702.554 us/op
Iteration   1: 2.076 us/op
Iteration   2: 12.213 us/op
Iteration   3: 6.706 us/op
Iteration   4: 1.705 us/op
Iteration   5: 5.296 us/op

# Run progress: 66.86% complete, ETA 00:15:20
# Fork: 2 of 2
# Warmup Iteration   1: 3238.517 us/op
# Warmup Iteration   2: 2336.185 us/op
# Warmup Iteration   3: 1923.593 us/op
# Warmup Iteration   4: 2028.810 us/op
# Warmup Iteration   5: 1972.567 us/op
Iteration   1: 7.103 us/op
Iteration   2: 11.102 us/op
Iteration   3: 23.101 us/op
Iteration   4: 1.407 us/op
Iteration   5: 18.910 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =      8.962 ±(99.9%) 11.191 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 3 
    [ 2.500,  5.000) = 0 
    [ 5.000,  7.500) = 3 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 2 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 1 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 1 
    [25.000, 27.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      1.407 us/op
     p(50.0000) =      6.905 us/op
     p(90.0000) =     22.682 us/op
     p(95.0000) =     23.101 us/op
     p(99.0000) =     23.101 us/op
     p(99.9000) =     23.101 us/op
     p(99.9900) =     23.101 us/op
     p(99.9990) =     23.101 us/op
     p(99.9999) =     23.101 us/op
    p(100.0000) =     23.101 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.250)

# Run progress: 67.05% complete, ETA 00:15:15
# Fork: 1 of 2
# Warmup Iteration   1: 3215.168 us/op
# Warmup Iteration   2: 1984.486 us/op
# Warmup Iteration   3: 2119.692 us/op
# Warmup Iteration   4: 1609.439 us/op
# Warmup Iteration   5: 1684.909 us/op
Iteration   1: 5.878 us/op
Iteration   2: 2.020 us/op
Iteration   3: 19.857 us/op
Iteration   4: 2.186 us/op
Iteration   5: 2.330 us/op

# Run progress: 67.23% complete, ETA 00:15:09
# Fork: 2 of 2
# Warmup Iteration   1: 3208.586 us/op
# Warmup Iteration   2: 2161.864 us/op
# Warmup Iteration   3: 1665.897 us/op
# Warmup Iteration   4: 1507.709 us/op
# Warmup Iteration   5: 1544.624 us/op
Iteration   1: 4.243 us/op
Iteration   2: 1.840 us/op
Iteration   3: 5.375 us/op
Iteration   4: 2.048 us/op
Iteration   5: 2.021 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =      4.780 ±(99.9%) 8.330 us/op

  Histogram, us/op:
    [ 0.000,  1.250) = 0 
    [ 1.250,  2.500) = 6 
    [ 2.500,  3.750) = 0 
    [ 3.750,  5.000) = 1 
    [ 5.000,  6.250) = 2 
    [ 6.250,  7.500) = 0 
    [ 7.500,  8.750) = 0 
    [ 8.750, 10.000) = 0 
    [10.000, 11.250) = 0 
    [11.250, 12.500) = 0 
    [12.500, 13.750) = 0 
    [13.750, 15.000) = 0 
    [15.000, 16.250) = 0 
    [16.250, 17.500) = 0 
    [17.500, 18.750) = 0 

  Percentiles, us/op:
      p(0.0000) =      1.840 us/op
     p(50.0000) =      2.258 us/op
     p(90.0000) =     18.459 us/op
     p(95.0000) =     19.857 us/op
     p(99.0000) =     19.857 us/op
     p(99.9000) =     19.857 us/op
     p(99.9900) =     19.857 us/op
     p(99.9990) =     19.857 us/op
     p(99.9999) =     19.857 us/op
    p(100.0000) =     19.857 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.375)

# Run progress: 67.42% complete, ETA 00:15:04
# Fork: 1 of 2
# Warmup Iteration   1: 2590.217 us/op
# Warmup Iteration   2: 1646.072 us/op
# Warmup Iteration   3: 1646.191 us/op
# Warmup Iteration   4: 1334.689 us/op
# Warmup Iteration   5: 1243.697 us/op
Iteration   1: 15.231 us/op
Iteration   2: 1.391 us/op
Iteration   3: 1.613 us/op
Iteration   4: 1.582 us/op
Iteration   5: 5.201 us/op

# Run progress: 67.61% complete, ETA 00:14:59
# Fork: 2 of 2
# Warmup Iteration   1: 2526.809 us/op
# Warmup Iteration   2: 1732.777 us/op
# Warmup Iteration   3: 1638.489 us/op
# Warmup Iteration   4: 1305.535 us/op
# Warmup Iteration   5: 1278.063 us/op
Iteration   1: 1.448 us/op
Iteration   2: 1.492 us/op
Iteration   3: 1.644 us/op
Iteration   4: 1.689 us/op
Iteration   5: 5.520 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =      3.681 ±(99.9%) 6.588 us/op

  Histogram, us/op:
    [ 0.000,  1.250) = 0 
    [ 1.250,  2.500) = 7 
    [ 2.500,  3.750) = 0 
    [ 3.750,  5.000) = 0 
    [ 5.000,  6.250) = 2 
    [ 6.250,  7.500) = 0 
    [ 7.500,  8.750) = 0 
    [ 8.750, 10.000) = 0 
    [10.000, 11.250) = 0 
    [11.250, 12.500) = 0 
    [12.500, 13.750) = 0 
    [13.750, 15.000) = 0 
    [15.000, 16.250) = 1 
    [16.250, 17.500) = 0 
    [17.500, 18.750) = 0 

  Percentiles, us/op:
      p(0.0000) =      1.391 us/op
     p(50.0000) =      1.628 us/op
     p(90.0000) =     14.260 us/op
     p(95.0000) =     15.231 us/op
     p(99.0000) =     15.231 us/op
     p(99.9000) =     15.231 us/op
     p(99.9900) =     15.231 us/op
     p(99.9990) =     15.231 us/op
     p(99.9999) =     15.231 us/op
    p(100.0000) =     15.231 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.5)

# Run progress: 67.80% complete, ETA 00:14:54
# Fork: 1 of 2
# Warmup Iteration   1: 3108.179 us/op
# Warmup Iteration   2: 1887.017 us/op
# Warmup Iteration   3: 1702.581 us/op
# Warmup Iteration   4: 1355.319 us/op
# Warmup Iteration   5: 1479.990 us/op
Iteration   1: 1.543 us/op
Iteration   2: 2.012 us/op
Iteration   3: 1.680 us/op
Iteration   4: 1.782 us/op
Iteration   5: 1.814 us/op

# Run progress: 67.99% complete, ETA 00:14:48
# Fork: 2 of 2
# Warmup Iteration   1: 2826.421 us/op
# Warmup Iteration   2: 2039.072 us/op
# Warmup Iteration   3: 1556.763 us/op
# Warmup Iteration   4: 1408.409 us/op
# Warmup Iteration   5: 1374.411 us/op
Iteration   1: 1.431 us/op
Iteration   2: 1.535 us/op
Iteration   3: 17.879 us/op
Iteration   4: 1.736 us/op
Iteration   5: 1.647 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =      3.306 ±(99.9%) 7.745 us/op

  Histogram, us/op:
    [ 0.000,  1.250) = 0 
    [ 1.250,  2.500) = 9 
    [ 2.500,  3.750) = 0 
    [ 3.750,  5.000) = 0 
    [ 5.000,  6.250) = 0 
    [ 6.250,  7.500) = 0 
    [ 7.500,  8.750) = 0 
    [ 8.750, 10.000) = 0 
    [10.000, 11.250) = 0 
    [11.250, 12.500) = 0 
    [12.500, 13.750) = 0 
    [13.750, 15.000) = 0 
    [15.000, 16.250) = 0 
    [16.250, 17.500) = 0 
    [17.500, 18.750) = 1 

  Percentiles, us/op:
      p(0.0000) =      1.431 us/op
     p(50.0000) =      1.708 us/op
     p(90.0000) =     16.292 us/op
     p(95.0000) =     17.879 us/op
     p(99.0000) =     17.879 us/op
     p(99.9000) =     17.879 us/op
     p(99.9900) =     17.879 us/op
     p(99.9990) =     17.879 us/op
     p(99.9999) =     17.879 us/op
    p(100.0000) =     17.879 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.625)

# Run progress: 68.18% complete, ETA 00:14:43
# Fork: 1 of 2
# Warmup Iteration   1: 2638.394 us/op
# Warmup Iteration   2: 1630.793 us/op
# Warmup Iteration   3: 1546.220 us/op
# Warmup Iteration   4: 1206.108 us/op
# Warmup Iteration   5: 1207.061 us/op
Iteration   1: 1.098 us/op
Iteration   2: 1.189 us/op
Iteration   3: 25.860 us/op
Iteration   4: 1.195 us/op
Iteration   5: 1.215 us/op

# Run progress: 68.37% complete, ETA 00:14:38
# Fork: 2 of 2
# Warmup Iteration   1: 2911.111 us/op
# Warmup Iteration   2: 1680.945 us/op
# Warmup Iteration   3: 1282.612 us/op
# Warmup Iteration   4: 1172.413 us/op
# Warmup Iteration   5: 1189.582 us/op
Iteration   1: 1.185 us/op
Iteration   2: 1.150 us/op
Iteration   3: 1.132 us/op
Iteration   4: 1.216 us/op
Iteration   5: 1.061 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =      3.630 ±(99.9%) 11.809 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 9 
    [ 2.500,  5.000) = 0 
    [ 5.000,  7.500) = 0 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 1 

  Percentiles, us/op:
      p(0.0000) =      1.061 us/op
     p(50.0000) =      1.187 us/op
     p(90.0000) =     23.396 us/op
     p(95.0000) =     25.860 us/op
     p(99.0000) =     25.860 us/op
     p(99.9000) =     25.860 us/op
     p(99.9900) =     25.860 us/op
     p(99.9990) =     25.860 us/op
     p(99.9999) =     25.860 us/op
    p(100.0000) =     25.860 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.75)

# Run progress: 68.56% complete, ETA 00:14:33
# Fork: 1 of 2
# Warmup Iteration   1: 2959.053 us/op
# Warmup Iteration   2: 1710.192 us/op
# Warmup Iteration   3: 1552.479 us/op
# Warmup Iteration   4: 1250.699 us/op
# Warmup Iteration   5: 1286.135 us/op
Iteration   1: 1.109 us/op
Iteration   2: 1.152 us/op
Iteration   3: 4.782 us/op
Iteration   4: 1.157 us/op
Iteration   5: 1.154 us/op

# Run progress: 68.75% complete, ETA 00:14:27
# Fork: 2 of 2
# Warmup Iteration   1: 2743.395 us/op
# Warmup Iteration   2: 1610.295 us/op
# Warmup Iteration   3: 1673.168 us/op
# Warmup Iteration   4: 1452.867 us/op
# Warmup Iteration   5: 1218.373 us/op
Iteration   1: 1.053 us/op
Iteration   2: 1.070 us/op
Iteration   3: 20.850 us/op
Iteration   4: 1.086 us/op
Iteration   5: 1.152 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =      3.456 ±(99.9%) 9.403 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 8 
    [ 2.500,  5.000) = 1 
    [ 5.000,  7.500) = 0 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 1 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      1.053 us/op
     p(50.0000) =      1.152 us/op
     p(90.0000) =     19.243 us/op
     p(95.0000) =     20.850 us/op
     p(99.0000) =     20.850 us/op
     p(99.9000) =     20.850 us/op
     p(99.9900) =     20.850 us/op
     p(99.9990) =     20.850 us/op
     p(99.9999) =     20.850 us/op
    p(100.0000) =     20.850 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.875)

# Run progress: 68.94% complete, ETA 00:14:22
# Fork: 1 of 2
# Warmup Iteration   1: 2653.738 us/op
# Warmup Iteration   2: 1864.219 us/op
# Warmup Iteration   3: 1409.240 us/op
# Warmup Iteration   4: 1270.327 us/op
# Warmup Iteration   5: 1254.869 us/op
Iteration   1: 1.095 us/op
Iteration   2: 1.123 us/op
Iteration   3: 1.203 us/op
Iteration   4: 1.140 us/op
Iteration   5: 1.158 us/op

# Run progress: 69.13% complete, ETA 00:14:17
# Fork: 2 of 2
# Warmup Iteration   1: 2842.019 us/op
# Warmup Iteration   2: 1763.239 us/op
# Warmup Iteration   3: 1527.060 us/op
# Warmup Iteration   4: 1566.605 us/op
# Warmup Iteration   5: 1268.754 us/op
Iteration   1: 1.039 us/op
Iteration   2: 1.008 us/op
Iteration   3: 1.090 us/op
Iteration   4: 1.144 us/op
Iteration   5: 1.219 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =      1.122 ±(99.9%) 0.100 us/op

  Histogram, us/op:
    [1.000, 1.025) = 1 
    [1.025, 1.050) = 1 
    [1.050, 1.075) = 0 
    [1.075, 1.100) = 2 
    [1.100, 1.125) = 1 
    [1.125, 1.150) = 2 
    [1.150, 1.175) = 1 
    [1.175, 1.200) = 0 
    [1.200, 1.225) = 2 
    [1.225, 1.250) = 0 
    [1.250, 1.275) = 0 
    [1.275, 1.300) = 0 

  Percentiles, us/op:
      p(0.0000) =      1.008 us/op
     p(50.0000) =      1.132 us/op
     p(90.0000) =      1.217 us/op
     p(95.0000) =      1.219 us/op
     p(99.0000) =      1.219 us/op
     p(99.9000) =      1.219 us/op
     p(99.9900) =      1.219 us/op
     p(99.9990) =      1.219 us/op
     p(99.9999) =      1.219 us/op
    p(100.0000) =      1.219 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 1)

# Run progress: 69.32% complete, ETA 00:14:12
# Fork: 1 of 2
# Warmup Iteration   1: 2709.933 us/op
# Warmup Iteration   2: 2020.260 us/op
# Warmup Iteration   3: 1360.746 us/op
# Warmup Iteration   4: 1358.951 us/op
# Warmup Iteration   5: 1345.803 us/op
Iteration   1: 1.276 us/op
Iteration   2: 1.163 us/op
Iteration   3: 4.931 us/op
Iteration   4: 1.138 us/op
Iteration   5: 1.213 us/op

# Run progress: 69.51% complete, ETA 00:14:06
# Fork: 2 of 2
# Warmup Iteration   1: 2740.706 us/op
# Warmup Iteration   2: 1682.009 us/op
# Warmup Iteration   3: 1839.975 us/op
# Warmup Iteration   4: 1346.694 us/op
# Warmup Iteration   5: 1331.038 us/op
Iteration   1: 0.992 us/op
Iteration   2: 1.290 us/op
Iteration   3: 1.082 us/op
Iteration   4: 1.082 us/op
Iteration   5: 1.000 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =      1.517 ±(99.9%) 1.820 us/op

  Histogram, us/op:
    [0.000, 0.500) = 0 
    [0.500, 1.000) = 1 
    [1.000, 1.500) = 8 
    [1.500, 2.000) = 0 
    [2.000, 2.500) = 0 
    [2.500, 3.000) = 0 
    [3.000, 3.500) = 0 
    [3.500, 4.000) = 0 
    [4.000, 4.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      0.992 us/op
     p(50.0000) =      1.151 us/op
     p(90.0000) =      4.567 us/op
     p(95.0000) =      4.931 us/op
     p(99.0000) =      4.931 us/op
     p(99.9000) =      4.931 us/op
     p(99.9900) =      4.931 us/op
     p(99.9990) =      4.931 us/op
     p(99.9999) =      4.931 us/op
    p(100.0000) =      4.931 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.125)

# Run progress: 69.70% complete, ETA 00:14:01
# Fork: 1 of 2
# Warmup Iteration   1: 3413.737 us/op
# Warmup Iteration   2: 2505.189 us/op
# Warmup Iteration   3: 2445.829 us/op
# Warmup Iteration   4: 1933.581 us/op
# Warmup Iteration   5: 1858.287 us/op
Iteration   1: 1.130 us/op
Iteration   2: 3.335 us/op
Iteration   3: 1.134 us/op
Iteration   4: 1.125 us/op
Iteration   5: 1.186 us/op

# Run progress: 69.89% complete, ETA 00:13:56
# Fork: 2 of 2
# Warmup Iteration   1: 3297.626 us/op
# Warmup Iteration   2: 2399.765 us/op
# Warmup Iteration   3: 2367.894 us/op
# Warmup Iteration   4: 2033.194 us/op
# Warmup Iteration   5: 1933.951 us/op
Iteration   1: 1.061 us/op
Iteration   2: 5.360 us/op
Iteration   3: 1.216 us/op
Iteration   4: 1.249 us/op
Iteration   5: 1.095 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =      1.789 ±(99.9%) 2.164 us/op

  Histogram, us/op:
    [1.000, 1.500) = 8 
    [1.500, 2.000) = 0 
    [2.000, 2.500) = 0 
    [2.500, 3.000) = 0 
    [3.000, 3.500) = 1 
    [3.500, 4.000) = 0 
    [4.000, 4.500) = 0 
    [4.500, 5.000) = 0 
    [5.000, 5.500) = 1 

  Percentiles, us/op:
      p(0.0000) =      1.061 us/op
     p(50.0000) =      1.160 us/op
     p(90.0000) =      5.158 us/op
     p(95.0000) =      5.360 us/op
     p(99.0000) =      5.360 us/op
     p(99.9000) =      5.360 us/op
     p(99.9900) =      5.360 us/op
     p(99.9990) =      5.360 us/op
     p(99.9999) =      5.360 us/op
    p(100.0000) =      5.360 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.250)

# Run progress: 70.08% complete, ETA 00:13:51
# Fork: 1 of 2
# Warmup Iteration   1: 2988.433 us/op
# Warmup Iteration   2: 1914.420 us/op
# Warmup Iteration   3: 2053.531 us/op
# Warmup Iteration   4: 1456.213 us/op
# Warmup Iteration   5: 1522.371 us/op
Iteration   1: 4.785 us/op
Iteration   2: 1.128 us/op
Iteration   3: 1.056 us/op
Iteration   4: 1.092 us/op
Iteration   5: 1.186 us/op

# Run progress: 70.27% complete, ETA 00:13:45
# Fork: 2 of 2
# Warmup Iteration   1: 3088.382 us/op
# Warmup Iteration   2: 2012.748 us/op
# Warmup Iteration   3: 1803.802 us/op
# Warmup Iteration   4: 1515.554 us/op
# Warmup Iteration   5: 1557.167 us/op
Iteration   1: 3.925 us/op
Iteration   2: 1.107 us/op
Iteration   3: 1.173 us/op
Iteration   4: 1.091 us/op
Iteration   5: 1.157 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =      1.770 ±(99.9%) 2.083 us/op

  Histogram, us/op:
    [1.000, 1.250) = 8 
    [1.250, 1.500) = 0 
    [1.500, 1.750) = 0 
    [1.750, 2.000) = 0 
    [2.000, 2.250) = 0 
    [2.250, 2.500) = 0 
    [2.500, 2.750) = 0 
    [2.750, 3.000) = 0 
    [3.000, 3.250) = 0 
    [3.250, 3.500) = 0 
    [3.500, 3.750) = 0 
    [3.750, 4.000) = 1 
    [4.000, 4.250) = 0 
    [4.250, 4.500) = 0 
    [4.500, 4.750) = 0 

  Percentiles, us/op:
      p(0.0000) =      1.056 us/op
     p(50.0000) =      1.143 us/op
     p(90.0000) =      4.699 us/op
     p(95.0000) =      4.785 us/op
     p(99.0000) =      4.785 us/op
     p(99.9000) =      4.785 us/op
     p(99.9900) =      4.785 us/op
     p(99.9990) =      4.785 us/op
     p(99.9999) =      4.785 us/op
    p(100.0000) =      4.785 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.375)

# Run progress: 70.45% complete, ETA 00:13:40
# Fork: 1 of 2
# Warmup Iteration   1: 2740.605 us/op
# Warmup Iteration   2: 1754.144 us/op
# Warmup Iteration   3: 1703.390 us/op
# Warmup Iteration   4: 1292.128 us/op
# Warmup Iteration   5: 1263.905 us/op
Iteration   1: 0.935 us/op
Iteration   2: 0.992 us/op
Iteration   3: 4.048 us/op
Iteration   4: 14.376 us/op
Iteration   5: 5.044 us/op

# Run progress: 70.64% complete, ETA 00:13:35
# Fork: 2 of 2
# Warmup Iteration   1: 2976.826 us/op
# Warmup Iteration   2: 1877.130 us/op
# Warmup Iteration   3: 1714.018 us/op
# Warmup Iteration   4: 1328.258 us/op
# Warmup Iteration   5: 1313.970 us/op
Iteration   1: 1.180 us/op
Iteration   2: 1.364 us/op
Iteration   3: 4.358 us/op
Iteration   4: 1.332 us/op
Iteration   5: 5.359 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =      3.899 ±(99.9%) 6.194 us/op

  Histogram, us/op:
    [ 0.000,  1.250) = 3 
    [ 1.250,  2.500) = 2 
    [ 2.500,  3.750) = 0 
    [ 3.750,  5.000) = 2 
    [ 5.000,  6.250) = 2 
    [ 6.250,  7.500) = 0 
    [ 7.500,  8.750) = 0 
    [ 8.750, 10.000) = 0 
    [10.000, 11.250) = 0 
    [11.250, 12.500) = 0 
    [12.500, 13.750) = 0 
    [13.750, 15.000) = 1 
    [15.000, 16.250) = 0 
    [16.250, 17.500) = 0 
    [17.500, 18.750) = 0 

  Percentiles, us/op:
      p(0.0000) =      0.935 us/op
     p(50.0000) =      2.706 us/op
     p(90.0000) =     13.474 us/op
     p(95.0000) =     14.376 us/op
     p(99.0000) =     14.376 us/op
     p(99.9000) =     14.376 us/op
     p(99.9900) =     14.376 us/op
     p(99.9990) =     14.376 us/op
     p(99.9999) =     14.376 us/op
    p(100.0000) =     14.376 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.5)

# Run progress: 70.83% complete, ETA 00:13:29
# Fork: 1 of 2
# Warmup Iteration   1: 3492.199 us/op
# Warmup Iteration   2: 1812.018 us/op
# Warmup Iteration   3: 1739.708 us/op
# Warmup Iteration   4: 1426.585 us/op
# Warmup Iteration   5: 1406.085 us/op
Iteration   1: 1.134 us/op
Iteration   2: 14.751 us/op
Iteration   3: 4.666 us/op
Iteration   4: 1.160 us/op
Iteration   5: 24.149 us/op

# Run progress: 71.02% complete, ETA 00:13:24
# Fork: 2 of 2
# Warmup Iteration   1: 2836.922 us/op
# Warmup Iteration   2: 1806.401 us/op
# Warmup Iteration   3: 1830.019 us/op
# Warmup Iteration   4: 1420.366 us/op
# Warmup Iteration   5: 1375.645 us/op
Iteration   1: 1.000 us/op
Iteration   2: 1.088 us/op
Iteration   3: 5.427 us/op
Iteration   4: 0.967 us/op
Iteration   5: 11.280 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =      6.562 ±(99.9%) 11.865 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 5 
    [ 2.500,  5.000) = 1 
    [ 5.000,  7.500) = 1 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 1 
    [12.500, 15.000) = 1 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 1 
    [25.000, 27.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      0.967 us/op
     p(50.0000) =      2.913 us/op
     p(90.0000) =     23.209 us/op
     p(95.0000) =     24.149 us/op
     p(99.0000) =     24.149 us/op
     p(99.9000) =     24.149 us/op
     p(99.9900) =     24.149 us/op
     p(99.9990) =     24.149 us/op
     p(99.9999) =     24.149 us/op
    p(100.0000) =     24.149 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.625)

# Run progress: 71.21% complete, ETA 00:13:19
# Fork: 1 of 2
# Warmup Iteration   1: 2649.144 us/op
# Warmup Iteration   2: 1528.936 us/op
# Warmup Iteration   3: 1512.618 us/op
# Warmup Iteration   4: 1171.869 us/op
# Warmup Iteration   5: 1183.354 us/op
Iteration   1: 4.529 us/op
Iteration   2: 1.128 us/op
Iteration   3: 1.196 us/op
Iteration   4: 1.158 us/op
Iteration   5: 1.200 us/op

# Run progress: 71.40% complete, ETA 00:13:14
# Fork: 2 of 2
# Warmup Iteration   1: 2813.156 us/op
# Warmup Iteration   2: 1667.010 us/op
# Warmup Iteration   3: 1643.173 us/op
# Warmup Iteration   4: 1239.682 us/op
# Warmup Iteration   5: 1179.894 us/op
Iteration   1: 17.062 us/op
Iteration   2: 1.038 us/op
Iteration   3: 1.058 us/op
Iteration   4: 1.254 us/op
Iteration   5: 1.122 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =      3.075 ±(99.9%) 7.603 us/op

  Histogram, us/op:
    [ 0.000,  1.250) = 7 
    [ 1.250,  2.500) = 1 
    [ 2.500,  3.750) = 0 
    [ 3.750,  5.000) = 1 
    [ 5.000,  6.250) = 0 
    [ 6.250,  7.500) = 0 
    [ 7.500,  8.750) = 0 
    [ 8.750, 10.000) = 0 
    [10.000, 11.250) = 0 
    [11.250, 12.500) = 0 
    [12.500, 13.750) = 0 
    [13.750, 15.000) = 0 
    [15.000, 16.250) = 0 
    [16.250, 17.500) = 1 
    [17.500, 18.750) = 0 

  Percentiles, us/op:
      p(0.0000) =      1.038 us/op
     p(50.0000) =      1.177 us/op
     p(90.0000) =     15.809 us/op
     p(95.0000) =     17.062 us/op
     p(99.0000) =     17.062 us/op
     p(99.9000) =     17.062 us/op
     p(99.9900) =     17.062 us/op
     p(99.9990) =     17.062 us/op
     p(99.9999) =     17.062 us/op
    p(100.0000) =     17.062 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.75)

# Run progress: 71.59% complete, ETA 00:13:08
# Fork: 1 of 2
# Warmup Iteration   1: 2566.718 us/op
# Warmup Iteration   2: 1715.033 us/op
# Warmup Iteration   3: 1634.042 us/op
# Warmup Iteration   4: 1267.380 us/op
# Warmup Iteration   5: 1196.364 us/op
Iteration   1: 3.413 us/op
Iteration   2: 1.133 us/op
Iteration   3: 18.850 us/op
Iteration   4: 1.046 us/op
Iteration   5: 1.086 us/op

# Run progress: 71.78% complete, ETA 00:13:03
# Fork: 2 of 2
# Warmup Iteration   1: 2661.028 us/op
# Warmup Iteration   2: 1605.031 us/op
# Warmup Iteration   3: 1588.710 us/op
# Warmup Iteration   4: 1205.270 us/op
# Warmup Iteration   5: 1210.488 us/op
Iteration   1: 3.507 us/op
Iteration   2: 1.273 us/op
Iteration   3: 4.780 us/op
Iteration   4: 1.153 us/op
Iteration   5: 1.170 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =      3.741 ±(99.9%) 8.281 us/op

  Histogram, us/op:
    [ 0.000,  1.250) = 5 
    [ 1.250,  2.500) = 1 
    [ 2.500,  3.750) = 2 
    [ 3.750,  5.000) = 1 
    [ 5.000,  6.250) = 0 
    [ 6.250,  7.500) = 0 
    [ 7.500,  8.750) = 0 
    [ 8.750, 10.000) = 0 
    [10.000, 11.250) = 0 
    [11.250, 12.500) = 0 
    [12.500, 13.750) = 0 
    [13.750, 15.000) = 0 
    [15.000, 16.250) = 0 
    [16.250, 17.500) = 0 
    [17.500, 18.750) = 0 

  Percentiles, us/op:
      p(0.0000) =      1.046 us/op
     p(50.0000) =      1.221 us/op
     p(90.0000) =     17.443 us/op
     p(95.0000) =     18.850 us/op
     p(99.0000) =     18.850 us/op
     p(99.9000) =     18.850 us/op
     p(99.9900) =     18.850 us/op
     p(99.9990) =     18.850 us/op
     p(99.9999) =     18.850 us/op
    p(100.0000) =     18.850 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.875)

# Run progress: 71.97% complete, ETA 00:12:58
# Fork: 1 of 2
# Warmup Iteration   1: 2714.093 us/op
# Warmup Iteration   2: 1691.982 us/op
# Warmup Iteration   3: 1494.049 us/op
# Warmup Iteration   4: 1589.466 us/op
# Warmup Iteration   5: 1260.332 us/op
Iteration   1: 7.298 us/op
Iteration   2: 1.095 us/op
Iteration   3: 1.259 us/op
Iteration   4: 1.174 us/op
Iteration   5: 1.136 us/op

# Run progress: 72.16% complete, ETA 00:12:53
# Fork: 2 of 2
# Warmup Iteration   1: 2897.311 us/op
# Warmup Iteration   2: 1847.492 us/op
# Warmup Iteration   3: 1558.000 us/op
# Warmup Iteration   4: 1644.595 us/op
# Warmup Iteration   5: 1257.963 us/op
Iteration   1: 4.600 us/op
Iteration   2: 1.032 us/op
Iteration   3: 1.083 us/op
Iteration   4: 1.063 us/op
Iteration   5: 1.089 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =      2.083 ±(99.9%) 3.229 us/op

  Histogram, us/op:
    [1.000, 1.500) = 8 
    [1.500, 2.000) = 0 
    [2.000, 2.500) = 0 
    [2.500, 3.000) = 0 
    [3.000, 3.500) = 0 
    [3.500, 4.000) = 0 
    [4.000, 4.500) = 0 
    [4.500, 5.000) = 1 
    [5.000, 5.500) = 0 
    [5.500, 6.000) = 0 
    [6.000, 6.500) = 0 
    [6.500, 7.000) = 0 
    [7.000, 7.500) = 1 

  Percentiles, us/op:
      p(0.0000) =      1.032 us/op
     p(50.0000) =      1.116 us/op
     p(90.0000) =      7.028 us/op
     p(95.0000) =      7.298 us/op
     p(99.0000) =      7.298 us/op
     p(99.9000) =      7.298 us/op
     p(99.9900) =      7.298 us/op
     p(99.9990) =      7.298 us/op
     p(99.9999) =      7.298 us/op
    p(100.0000) =      7.298 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 1)

# Run progress: 72.35% complete, ETA 00:12:47
# Fork: 1 of 2
# Warmup Iteration   1: 2790.716 us/op
# Warmup Iteration   2: 1749.717 us/op
# Warmup Iteration   3: 1706.136 us/op
# Warmup Iteration   4: 1575.751 us/op
# Warmup Iteration   5: 1333.308 us/op
Iteration   1: 1.062 us/op
Iteration   2: 1.072 us/op
Iteration   3: 3.946 us/op
Iteration   4: 1.030 us/op
Iteration   5: 18.324 us/op

# Run progress: 72.54% complete, ETA 00:12:42
# Fork: 2 of 2
# Warmup Iteration   1: 2794.227 us/op
# Warmup Iteration   2: 1863.368 us/op
# Warmup Iteration   3: 1883.682 us/op
# Warmup Iteration   4: 1346.075 us/op
# Warmup Iteration   5: 1323.790 us/op
Iteration   1: 1.045 us/op
Iteration   2: 15.801 us/op
Iteration   3: 4.809 us/op
Iteration   4: 14.967 us/op
Iteration   5: 3.907 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =      6.596 ±(99.9%) 10.483 us/op

  Histogram, us/op:
    [ 0.000,  1.250) = 4 
    [ 1.250,  2.500) = 0 
    [ 2.500,  3.750) = 0 
    [ 3.750,  5.000) = 3 
    [ 5.000,  6.250) = 0 
    [ 6.250,  7.500) = 0 
    [ 7.500,  8.750) = 0 
    [ 8.750, 10.000) = 0 
    [10.000, 11.250) = 0 
    [11.250, 12.500) = 0 
    [12.500, 13.750) = 0 
    [13.750, 15.000) = 1 
    [15.000, 16.250) = 1 
    [16.250, 17.500) = 0 
    [17.500, 18.750) = 1 

  Percentiles, us/op:
      p(0.0000) =      1.030 us/op
     p(50.0000) =      3.927 us/op
     p(90.0000) =     18.072 us/op
     p(95.0000) =     18.324 us/op
     p(99.0000) =     18.324 us/op
     p(99.9000) =     18.324 us/op
     p(99.9900) =     18.324 us/op
     p(99.9990) =     18.324 us/op
     p(99.9999) =     18.324 us/op
    p(100.0000) =     18.324 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.125)

# Run progress: 72.73% complete, ETA 00:12:37
# Fork: 1 of 2
# Warmup Iteration   1: 3248.906 us/op
# Warmup Iteration   2: 2366.004 us/op
# Warmup Iteration   3: 2168.595 us/op
# Warmup Iteration   4: 1714.444 us/op
# Warmup Iteration   5: 1657.096 us/op
Iteration   1: 4.920 us/op
Iteration   2: 5.127 us/op
Iteration   3: 25.818 us/op
Iteration   4: 10.165 us/op
Iteration   5: 16.536 us/op

# Run progress: 72.92% complete, ETA 00:12:32
# Fork: 2 of 2
# Warmup Iteration   1: 3252.118 us/op
# Warmup Iteration   2: 2407.192 us/op
# Warmup Iteration   3: 2001.383 us/op
# Warmup Iteration   4: 1815.134 us/op
# Warmup Iteration   5: 1695.687 us/op
Iteration   1: 3.543 us/op
Iteration   2: 3.795 us/op
Iteration   3: 9.330 us/op
Iteration   4: 8.902 us/op
Iteration   5: 3.260 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =      9.140 ±(99.9%) 10.837 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 4 
    [ 5.000,  7.500) = 1 
    [ 7.500, 10.000) = 2 
    [10.000, 12.500) = 1 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 1 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 1 

  Percentiles, us/op:
      p(0.0000) =      3.260 us/op
     p(50.0000) =      7.015 us/op
     p(90.0000) =     24.890 us/op
     p(95.0000) =     25.818 us/op
     p(99.0000) =     25.818 us/op
     p(99.9000) =     25.818 us/op
     p(99.9900) =     25.818 us/op
     p(99.9990) =     25.818 us/op
     p(99.9999) =     25.818 us/op
    p(100.0000) =     25.818 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.250)

# Run progress: 73.11% complete, ETA 00:12:26
# Fork: 1 of 2
# Warmup Iteration   1: 3118.226 us/op
# Warmup Iteration   2: 2107.569 us/op
# Warmup Iteration   3: 1611.917 us/op
# Warmup Iteration   4: 1472.550 us/op
# Warmup Iteration   5: 1528.148 us/op
Iteration   1: 5.054 us/op
Iteration   2: 3.385 us/op
Iteration   3: 4.079 us/op
Iteration   4: 5.075 us/op
Iteration   5: 3.530 us/op

# Run progress: 73.30% complete, ETA 00:12:21
# Fork: 2 of 2
# Warmup Iteration   1: 3327.768 us/op
# Warmup Iteration   2: 2140.790 us/op
# Warmup Iteration   3: 1589.694 us/op
# Warmup Iteration   4: 1501.718 us/op
# Warmup Iteration   5: 1519.665 us/op
Iteration   1: 3.707 us/op
Iteration   2: 18.534 us/op
Iteration   3: 4.757 us/op
Iteration   4: 4.835 us/op
Iteration   5: 4.221 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =      5.718 ±(99.9%) 6.873 us/op

  Histogram, us/op:
    [ 0.000,  1.250) = 0 
    [ 1.250,  2.500) = 0 
    [ 2.500,  3.750) = 3 
    [ 3.750,  5.000) = 4 
    [ 5.000,  6.250) = 2 
    [ 6.250,  7.500) = 0 
    [ 7.500,  8.750) = 0 
    [ 8.750, 10.000) = 0 
    [10.000, 11.250) = 0 
    [11.250, 12.500) = 0 
    [12.500, 13.750) = 0 
    [13.750, 15.000) = 0 
    [15.000, 16.250) = 0 
    [16.250, 17.500) = 0 
    [17.500, 18.750) = 1 

  Percentiles, us/op:
      p(0.0000) =      3.385 us/op
     p(50.0000) =      4.489 us/op
     p(90.0000) =     17.188 us/op
     p(95.0000) =     18.534 us/op
     p(99.0000) =     18.534 us/op
     p(99.9000) =     18.534 us/op
     p(99.9900) =     18.534 us/op
     p(99.9990) =     18.534 us/op
     p(99.9999) =     18.534 us/op
    p(100.0000) =     18.534 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.375)

# Run progress: 73.48% complete, ETA 00:12:16
# Fork: 1 of 2
# Warmup Iteration   1: 2817.115 us/op
# Warmup Iteration   2: 1628.741 us/op
# Warmup Iteration   3: 1614.184 us/op
# Warmup Iteration   4: 1314.240 us/op
# Warmup Iteration   5: 1264.128 us/op
Iteration   1: 4.812 us/op
Iteration   2: 4.263 us/op
Iteration   3: 4.864 us/op
Iteration   4: 4.760 us/op
Iteration   5: 5.967 us/op

# Run progress: 73.67% complete, ETA 00:12:11
# Fork: 2 of 2
# Warmup Iteration   1: 3052.570 us/op
# Warmup Iteration   2: 1736.724 us/op
# Warmup Iteration   3: 1680.117 us/op
# Warmup Iteration   4: 1288.579 us/op
# Warmup Iteration   5: 1240.346 us/op
Iteration   1: 2.964 us/op
Iteration   2: 4.583 us/op
Iteration   3: 4.544 us/op
Iteration   4: 2.897 us/op
Iteration   5: 5.985 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =      4.564 ±(99.9%) 1.562 us/op

  Histogram, us/op:
    [2.000, 2.250) = 0 
    [2.250, 2.500) = 0 
    [2.500, 2.750) = 0 
    [2.750, 3.000) = 2 
    [3.000, 3.250) = 0 
    [3.250, 3.500) = 0 
    [3.500, 3.750) = 0 
    [3.750, 4.000) = 0 
    [4.000, 4.250) = 0 
    [4.250, 4.500) = 1 
    [4.500, 4.750) = 2 
    [4.750, 5.000) = 3 
    [5.000, 5.250) = 0 
    [5.250, 5.500) = 0 
    [5.500, 5.750) = 0 

  Percentiles, us/op:
      p(0.0000) =      2.897 us/op
     p(50.0000) =      4.672 us/op
     p(90.0000) =      5.983 us/op
     p(95.0000) =      5.985 us/op
     p(99.0000) =      5.985 us/op
     p(99.9000) =      5.985 us/op
     p(99.9900) =      5.985 us/op
     p(99.9990) =      5.985 us/op
     p(99.9999) =      5.985 us/op
    p(100.0000) =      5.985 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.5)

# Run progress: 73.86% complete, ETA 00:12:05
# Fork: 1 of 2
# Warmup Iteration   1: 2813.121 us/op
# Warmup Iteration   2: 1778.259 us/op
# Warmup Iteration   3: 1755.928 us/op
# Warmup Iteration   4: 1394.183 us/op
# Warmup Iteration   5: 1363.044 us/op
Iteration   1: 6.533 us/op
Iteration   2: 3.564 us/op
Iteration   3: 5.100 us/op
Iteration   4: 5.512 us/op
Iteration   5: 5.009 us/op

# Run progress: 74.05% complete, ETA 00:12:00
# Fork: 2 of 2
# Warmup Iteration   1: 3186.932 us/op
# Warmup Iteration   2: 1698.107 us/op
# Warmup Iteration   3: 1761.478 us/op
# Warmup Iteration   4: 1417.700 us/op
# Warmup Iteration   5: 1393.078 us/op
Iteration   1: 17.788 us/op
Iteration   2: 3.470 us/op
Iteration   3: 24.496 us/op
Iteration   4: 4.670 us/op
Iteration   5: 18.557 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =      9.470 ±(99.9%) 11.654 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 3 
    [ 5.000,  7.500) = 4 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 2 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 1 
    [25.000, 27.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      3.470 us/op
     p(50.0000) =      5.306 us/op
     p(90.0000) =     23.902 us/op
     p(95.0000) =     24.496 us/op
     p(99.0000) =     24.496 us/op
     p(99.9000) =     24.496 us/op
     p(99.9900) =     24.496 us/op
     p(99.9990) =     24.496 us/op
     p(99.9999) =     24.496 us/op
    p(100.0000) =     24.496 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.625)

# Run progress: 74.24% complete, ETA 00:11:55
# Fork: 1 of 2
# Warmup Iteration   1: 2609.668 us/op
# Warmup Iteration   2: 1555.011 us/op
# Warmup Iteration   3: 1393.113 us/op
# Warmup Iteration   4: 1422.862 us/op
# Warmup Iteration   5: 1164.245 us/op
Iteration   1: 3.091 us/op
Iteration   2: 32.021 us/op
Iteration   3: 6.258 us/op
Iteration   4: 19.657 us/op
Iteration   5: 4.775 us/op

# Run progress: 74.43% complete, ETA 00:11:50
# Fork: 2 of 2
# Warmup Iteration   1: 2833.390 us/op
# Warmup Iteration   2: 1539.381 us/op
# Warmup Iteration   3: 1730.652 us/op
# Warmup Iteration   4: 1183.857 us/op
# Warmup Iteration   5: 1135.073 us/op
Iteration   1: 18.691 us/op
Iteration   2: 5.359 us/op
Iteration   3: 6.439 us/op
Iteration   4: 4.878 us/op
Iteration   5: 18.542 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     11.971 ±(99.9%) 14.583 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 3 
    [ 5.000,  7.500) = 3 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 3 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 1 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      3.091 us/op
     p(50.0000) =      6.349 us/op
     p(90.0000) =     30.785 us/op
     p(95.0000) =     32.021 us/op
     p(99.0000) =     32.021 us/op
     p(99.9000) =     32.021 us/op
     p(99.9900) =     32.021 us/op
     p(99.9990) =     32.021 us/op
     p(99.9999) =     32.021 us/op
    p(100.0000) =     32.021 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.75)

# Run progress: 74.62% complete, ETA 00:11:44
# Fork: 1 of 2
# Warmup Iteration   1: 2693.411 us/op
# Warmup Iteration   2: 1584.129 us/op
# Warmup Iteration   3: 1430.262 us/op
# Warmup Iteration   4: 1532.412 us/op
# Warmup Iteration   5: 1218.636 us/op
Iteration   1: 4.860 us/op
Iteration   2: 2.328 us/op
Iteration   3: 4.170 us/op
Iteration   4: 4.704 us/op
Iteration   5: 20.377 us/op

# Run progress: 74.81% complete, ETA 00:11:39
# Fork: 2 of 2
# Warmup Iteration   1: 2867.688 us/op
# Warmup Iteration   2: 1649.445 us/op
# Warmup Iteration   3: 1675.820 us/op
# Warmup Iteration   4: 1212.638 us/op
# Warmup Iteration   5: 1192.420 us/op
Iteration   1: 4.830 us/op
Iteration   2: 5.017 us/op
Iteration   3: 5.974 us/op
Iteration   4: 3.451 us/op
Iteration   5: 4.965 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =      6.068 ±(99.9%) 7.748 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 1 
    [ 2.500,  5.000) = 6 
    [ 5.000,  7.500) = 2 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 1 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      2.328 us/op
     p(50.0000) =      4.845 us/op
     p(90.0000) =     18.937 us/op
     p(95.0000) =     20.377 us/op
     p(99.0000) =     20.377 us/op
     p(99.9000) =     20.377 us/op
     p(99.9900) =     20.377 us/op
     p(99.9990) =     20.377 us/op
     p(99.9999) =     20.377 us/op
    p(100.0000) =     20.377 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.875)

# Run progress: 75.00% complete, ETA 00:11:34
# Fork: 1 of 2
# Warmup Iteration   1: 2679.278 us/op
# Warmup Iteration   2: 1738.588 us/op
# Warmup Iteration   3: 1536.635 us/op
# Warmup Iteration   4: 1548.855 us/op
# Warmup Iteration   5: 1260.985 us/op
Iteration   1: 3.238 us/op
Iteration   2: 3.148 us/op
Iteration   3: 19.737 us/op
Iteration   4: 5.049 us/op
Iteration   5: 4.939 us/op

# Run progress: 75.19% complete, ETA 00:11:28
# Fork: 2 of 2
# Warmup Iteration   1: 2927.585 us/op
# Warmup Iteration   2: 1667.086 us/op
# Warmup Iteration   3: 1600.553 us/op
# Warmup Iteration   4: 1294.271 us/op
# Warmup Iteration   5: 1284.186 us/op
Iteration   1: 3.538 us/op
Iteration   2: 5.230 us/op
Iteration   3: 26.011 us/op
Iteration   4: 18.582 us/op
Iteration   5: 19.348 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     10.882 ±(99.9%) 13.445 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 4 
    [ 5.000,  7.500) = 2 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 3 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 1 

  Percentiles, us/op:
      p(0.0000) =      3.148 us/op
     p(50.0000) =      5.140 us/op
     p(90.0000) =     25.384 us/op
     p(95.0000) =     26.011 us/op
     p(99.0000) =     26.011 us/op
     p(99.9000) =     26.011 us/op
     p(99.9900) =     26.011 us/op
     p(99.9990) =     26.011 us/op
     p(99.9999) =     26.011 us/op
    p(100.0000) =     26.011 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 1)

# Run progress: 75.38% complete, ETA 00:11:23
# Fork: 1 of 2
# Warmup Iteration   1: 2776.910 us/op
# Warmup Iteration   2: 1871.922 us/op
# Warmup Iteration   3: 1368.094 us/op
# Warmup Iteration   4: 1314.859 us/op
# Warmup Iteration   5: 1321.925 us/op
Iteration   1: 19.565 us/op
Iteration   2: 3.491 us/op
Iteration   3: 6.182 us/op
Iteration   4: 4.713 us/op
Iteration   5: 4.858 us/op

# Run progress: 75.57% complete, ETA 00:11:18
# Fork: 2 of 2
# Warmup Iteration   1: 2879.549 us/op
# Warmup Iteration   2: 1897.868 us/op
# Warmup Iteration   3: 1624.412 us/op
# Warmup Iteration   4: 1516.943 us/op
# Warmup Iteration   5: 1291.535 us/op
Iteration   1: 4.005 us/op
Iteration   2: 28.105 us/op
Iteration   3: 5.241 us/op
Iteration   4: 24.357 us/op
Iteration   5: 5.001 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     10.552 ±(99.9%) 14.407 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 4 
    [ 5.000,  7.500) = 3 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 1 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 1 
    [25.000, 27.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      3.491 us/op
     p(50.0000) =      5.121 us/op
     p(90.0000) =     27.730 us/op
     p(95.0000) =     28.105 us/op
     p(99.0000) =     28.105 us/op
     p(99.9000) =     28.105 us/op
     p(99.9900) =     28.105 us/op
     p(99.9990) =     28.105 us/op
     p(99.9999) =     28.105 us/op
    p(100.0000) =     28.105 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.125)

# Run progress: 75.76% complete, ETA 00:11:13
# Fork: 1 of 2
# Warmup Iteration   1: 3319.180 us/op
# Warmup Iteration   2: 2385.840 us/op
# Warmup Iteration   3: 1972.877 us/op
# Warmup Iteration   4: 1720.064 us/op
# Warmup Iteration   5: 1657.934 us/op
Iteration   1: 3.798 us/op
Iteration   2: 8.666 us/op
Iteration   3: 29.087 us/op
Iteration   4: 3.824 us/op
Iteration   5: 4.822 us/op

# Run progress: 75.95% complete, ETA 00:11:07
# Fork: 2 of 2
# Warmup Iteration   1: 3402.627 us/op
# Warmup Iteration   2: 2289.741 us/op
# Warmup Iteration   3: 2142.422 us/op
# Warmup Iteration   4: 1813.095 us/op
# Warmup Iteration   5: 1680.006 us/op
Iteration   1: 17.864 us/op
Iteration   2: 5.062 us/op
Iteration   3: 19.165 us/op
Iteration   4: 10.194 us/op
Iteration   5: 22.651 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     12.513 ±(99.9%) 13.678 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 3 
    [ 5.000,  7.500) = 1 
    [ 7.500, 10.000) = 1 
    [10.000, 12.500) = 1 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 2 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 1 
    [25.000, 27.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      3.798 us/op
     p(50.0000) =      9.430 us/op
     p(90.0000) =     28.443 us/op
     p(95.0000) =     29.087 us/op
     p(99.0000) =     29.087 us/op
     p(99.9000) =     29.087 us/op
     p(99.9900) =     29.087 us/op
     p(99.9990) =     29.087 us/op
     p(99.9999) =     29.087 us/op
    p(100.0000) =     29.087 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.250)

# Run progress: 76.14% complete, ETA 00:11:02
# Fork: 1 of 2
# Warmup Iteration   1: 3140.757 us/op
# Warmup Iteration   2: 2142.314 us/op
# Warmup Iteration   3: 1927.066 us/op
# Warmup Iteration   4: 1522.423 us/op
# Warmup Iteration   5: 1506.131 us/op
Iteration   1: 5.098 us/op
Iteration   2: 24.016 us/op
Iteration   3: 4.091 us/op
Iteration   4: 18.684 us/op
Iteration   5: 4.917 us/op

# Run progress: 76.33% complete, ETA 00:10:57
# Fork: 2 of 2
# Warmup Iteration   1: 2889.265 us/op
# Warmup Iteration   2: 1894.404 us/op
# Warmup Iteration   3: 1856.904 us/op
# Warmup Iteration   4: 1523.367 us/op
# Warmup Iteration   5: 1576.848 us/op
Iteration   1: 5.100 us/op
Iteration   2: 27.277 us/op
Iteration   3: 5.419 us/op
Iteration   4: 4.839 us/op
Iteration   5: 3.508 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     10.295 ±(99.9%) 13.966 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 4 
    [ 5.000,  7.500) = 3 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 1 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 1 
    [25.000, 27.500) = 1 

  Percentiles, us/op:
      p(0.0000) =      3.508 us/op
     p(50.0000) =      5.099 us/op
     p(90.0000) =     26.951 us/op
     p(95.0000) =     27.277 us/op
     p(99.0000) =     27.277 us/op
     p(99.9000) =     27.277 us/op
     p(99.9900) =     27.277 us/op
     p(99.9990) =     27.277 us/op
     p(99.9999) =     27.277 us/op
    p(100.0000) =     27.277 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.375)

# Run progress: 76.52% complete, ETA 00:10:52
# Fork: 1 of 2
# Warmup Iteration   1: 2906.372 us/op
# Warmup Iteration   2: 1654.145 us/op
# Warmup Iteration   3: 1852.026 us/op
# Warmup Iteration   4: 1312.827 us/op
# Warmup Iteration   5: 1255.131 us/op
Iteration   1: 3.235 us/op
Iteration   2: 6.164 us/op
Iteration   3: 18.140 us/op
Iteration   4: 4.859 us/op
Iteration   5: 6.316 us/op

# Run progress: 76.70% complete, ETA 00:10:46
# Fork: 2 of 2
# Warmup Iteration   1: 2541.402 us/op
# Warmup Iteration   2: 1691.429 us/op
# Warmup Iteration   3: 1717.420 us/op
# Warmup Iteration   4: 1310.989 us/op
# Warmup Iteration   5: 1247.387 us/op
Iteration   1: 3.075 us/op
Iteration   2: 6.059 us/op
Iteration   3: 5.192 us/op
Iteration   4: 4.797 us/op
Iteration   5: 6.306 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =      6.414 ±(99.9%) 6.483 us/op

  Histogram, us/op:
    [ 0.000,  1.250) = 0 
    [ 1.250,  2.500) = 0 
    [ 2.500,  3.750) = 2 
    [ 3.750,  5.000) = 2 
    [ 5.000,  6.250) = 3 
    [ 6.250,  7.500) = 2 
    [ 7.500,  8.750) = 0 
    [ 8.750, 10.000) = 0 
    [10.000, 11.250) = 0 
    [11.250, 12.500) = 0 
    [12.500, 13.750) = 0 
    [13.750, 15.000) = 0 
    [15.000, 16.250) = 0 
    [16.250, 17.500) = 0 
    [17.500, 18.750) = 1 

  Percentiles, us/op:
      p(0.0000) =      3.075 us/op
     p(50.0000) =      5.626 us/op
     p(90.0000) =     16.958 us/op
     p(95.0000) =     18.140 us/op
     p(99.0000) =     18.140 us/op
     p(99.9000) =     18.140 us/op
     p(99.9900) =     18.140 us/op
     p(99.9990) =     18.140 us/op
     p(99.9999) =     18.140 us/op
    p(100.0000) =     18.140 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.5)

# Run progress: 76.89% complete, ETA 00:10:41
# Fork: 1 of 2
# Warmup Iteration   1: 2710.169 us/op
# Warmup Iteration   2: 1867.615 us/op
# Warmup Iteration   3: 1754.295 us/op
# Warmup Iteration   4: 1427.931 us/op
# Warmup Iteration   5: 1349.771 us/op
Iteration   1: 6.560 us/op
Iteration   2: 28.280 us/op
Iteration   3: 5.275 us/op
Iteration   4: 6.098 us/op
Iteration   5: 4.863 us/op

# Run progress: 77.08% complete, ETA 00:10:36
# Fork: 2 of 2
# Warmup Iteration   1: 3124.269 us/op
# Warmup Iteration   2: 1846.935 us/op
# Warmup Iteration   3: 1716.736 us/op
# Warmup Iteration   4: 1392.053 us/op
# Warmup Iteration   5: 1380.337 us/op
Iteration   1: 4.820 us/op
Iteration   2: 3.570 us/op
Iteration   3: 4.297 us/op
Iteration   4: 6.191 us/op
Iteration   5: 4.130 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =      7.408 ±(99.9%) 11.183 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 5 
    [ 5.000,  7.500) = 4 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      3.570 us/op
     p(50.0000) =      5.069 us/op
     p(90.0000) =     26.108 us/op
     p(95.0000) =     28.280 us/op
     p(99.0000) =     28.280 us/op
     p(99.9000) =     28.280 us/op
     p(99.9900) =     28.280 us/op
     p(99.9990) =     28.280 us/op
     p(99.9999) =     28.280 us/op
    p(100.0000) =     28.280 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.625)

# Run progress: 77.27% complete, ETA 00:10:31
# Fork: 1 of 2
# Warmup Iteration   1: 2709.049 us/op
# Warmup Iteration   2: 1606.556 us/op
# Warmup Iteration   3: 1710.775 us/op
# Warmup Iteration   4: 1160.234 us/op
# Warmup Iteration   5: 1147.783 us/op
Iteration   1: 16.495 us/op
Iteration   2: 6.759 us/op
Iteration   3: 5.977 us/op
Iteration   4: 4.886 us/op
Iteration   5: 4.804 us/op

# Run progress: 77.46% complete, ETA 00:10:25
# Fork: 2 of 2
# Warmup Iteration   1: 2429.295 us/op
# Warmup Iteration   2: 1518.144 us/op
# Warmup Iteration   3: 1647.112 us/op
# Warmup Iteration   4: 1163.010 us/op
# Warmup Iteration   5: 1135.591 us/op
Iteration   1: 4.790 us/op
Iteration   2: 3.391 us/op
Iteration   3: 6.274 us/op
Iteration   4: 4.697 us/op
Iteration   5: 4.614 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =      6.269 ±(99.9%) 5.626 us/op

  Histogram, us/op:
    [ 0.000,  1.250) = 0 
    [ 1.250,  2.500) = 0 
    [ 2.500,  3.750) = 1 
    [ 3.750,  5.000) = 5 
    [ 5.000,  6.250) = 1 
    [ 6.250,  7.500) = 2 
    [ 7.500,  8.750) = 0 
    [ 8.750, 10.000) = 0 
    [10.000, 11.250) = 0 
    [11.250, 12.500) = 0 
    [12.500, 13.750) = 0 
    [13.750, 15.000) = 0 
    [15.000, 16.250) = 0 
    [16.250, 17.500) = 1 
    [17.500, 18.750) = 0 

  Percentiles, us/op:
      p(0.0000) =      3.391 us/op
     p(50.0000) =      4.845 us/op
     p(90.0000) =     15.521 us/op
     p(95.0000) =     16.495 us/op
     p(99.0000) =     16.495 us/op
     p(99.9000) =     16.495 us/op
     p(99.9900) =     16.495 us/op
     p(99.9990) =     16.495 us/op
     p(99.9999) =     16.495 us/op
    p(100.0000) =     16.495 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.75)

# Run progress: 77.65% complete, ETA 00:10:20
# Fork: 1 of 2
# Warmup Iteration   1: 3163.244 us/op
# Warmup Iteration   2: 1757.414 us/op
# Warmup Iteration   3: 1351.334 us/op
# Warmup Iteration   4: 1218.150 us/op
# Warmup Iteration   5: 1218.380 us/op
Iteration   1: 3.174 us/op
Iteration   2: 37.167 us/op
Iteration   3: 8.801 us/op
Iteration   4: 2.978 us/op
Iteration   5: 4.806 us/op

# Run progress: 77.84% complete, ETA 00:10:15
# Fork: 2 of 2
# Warmup Iteration   1: 2713.404 us/op
# Warmup Iteration   2: 1551.906 us/op
# Warmup Iteration   3: 1728.568 us/op
# Warmup Iteration   4: 1229.351 us/op
# Warmup Iteration   5: 1212.997 us/op
Iteration   1: 5.000 us/op
Iteration   2: 3.741 us/op
Iteration   3: 6.504 us/op
Iteration   4: 5.365 us/op
Iteration   5: 5.164 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =      8.270 ±(99.9%) 15.563 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 4 
    [ 5.000,  7.500) = 4 
    [ 7.500, 10.000) = 1 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 1 

  Percentiles, us/op:
      p(0.0000) =      2.978 us/op
     p(50.0000) =      5.082 us/op
     p(90.0000) =     34.330 us/op
     p(95.0000) =     37.167 us/op
     p(99.0000) =     37.167 us/op
     p(99.9000) =     37.167 us/op
     p(99.9900) =     37.167 us/op
     p(99.9990) =     37.167 us/op
     p(99.9999) =     37.167 us/op
    p(100.0000) =     37.167 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.875)

# Run progress: 78.03% complete, ETA 00:10:10
# Fork: 1 of 2
# Warmup Iteration   1: 2786.224 us/op
# Warmup Iteration   2: 1873.465 us/op
# Warmup Iteration   3: 1472.597 us/op
# Warmup Iteration   4: 1529.962 us/op
# Warmup Iteration   5: 1254.078 us/op
Iteration   1: 4.975 us/op
Iteration   2: 3.541 us/op
Iteration   3: 5.213 us/op
Iteration   4: 5.259 us/op
Iteration   5: 4.593 us/op

# Run progress: 78.22% complete, ETA 00:10:04
# Fork: 2 of 2
# Warmup Iteration   1: 2761.487 us/op
# Warmup Iteration   2: 1856.845 us/op
# Warmup Iteration   3: 1411.004 us/op
# Warmup Iteration   4: 1274.758 us/op
# Warmup Iteration   5: 1291.424 us/op
Iteration   1: 3.342 us/op
Iteration   2: 5.465 us/op
Iteration   3: 19.849 us/op
Iteration   4: 19.218 us/op
Iteration   5: 4.773 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =      7.623 ±(99.9%) 9.552 us/op

  Histogram, us/op:
    [ 0.000,  1.250) = 0 
    [ 1.250,  2.500) = 0 
    [ 2.500,  3.750) = 2 
    [ 3.750,  5.000) = 3 
    [ 5.000,  6.250) = 3 
    [ 6.250,  7.500) = 0 
    [ 7.500,  8.750) = 0 
    [ 8.750, 10.000) = 0 
    [10.000, 11.250) = 0 
    [11.250, 12.500) = 0 
    [12.500, 13.750) = 0 
    [13.750, 15.000) = 0 
    [15.000, 16.250) = 0 
    [16.250, 17.500) = 0 
    [17.500, 18.750) = 0 

  Percentiles, us/op:
      p(0.0000) =      3.342 us/op
     p(50.0000) =      5.094 us/op
     p(90.0000) =     19.786 us/op
     p(95.0000) =     19.849 us/op
     p(99.0000) =     19.849 us/op
     p(99.9000) =     19.849 us/op
     p(99.9900) =     19.849 us/op
     p(99.9990) =     19.849 us/op
     p(99.9999) =     19.849 us/op
    p(100.0000) =     19.849 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 1)

# Run progress: 78.41% complete, ETA 00:09:59
# Fork: 1 of 2
# Warmup Iteration   1: 2746.111 us/op
# Warmup Iteration   2: 1950.987 us/op
# Warmup Iteration   3: 1377.017 us/op
# Warmup Iteration   4: 1351.710 us/op
# Warmup Iteration   5: 1336.549 us/op
Iteration   1: 17.135 us/op
Iteration   2: 3.439 us/op
Iteration   3: 6.371 us/op
Iteration   4: 4.984 us/op
Iteration   5: 4.903 us/op

# Run progress: 78.60% complete, ETA 00:09:54
# Fork: 2 of 2
# Warmup Iteration   1: 2625.267 us/op
# Warmup Iteration   2: 1998.141 us/op
# Warmup Iteration   3: 1357.958 us/op
# Warmup Iteration   4: 1349.006 us/op
# Warmup Iteration   5: 1302.789 us/op
Iteration   1: 4.870 us/op
Iteration   2: 3.692 us/op
Iteration   3: 25.343 us/op
Iteration   4: 4.214 us/op
Iteration   5: 18.708 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =      9.366 ±(99.9%) 11.980 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 6 
    [ 5.000,  7.500) = 1 
    [ 7.500, 10.000) = 0 
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 1 
    [17.500, 20.000) = 1 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 1 

  Percentiles, us/op:
      p(0.0000) =      3.439 us/op
     p(50.0000) =      4.944 us/op
     p(90.0000) =     24.680 us/op
     p(95.0000) =     25.343 us/op
     p(99.0000) =     25.343 us/op
     p(99.9000) =     25.343 us/op
     p(99.9900) =     25.343 us/op
     p(99.9990) =     25.343 us/op
     p(99.9999) =     25.343 us/op
    p(100.0000) =     25.343 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.125)

# Run progress: 78.79% complete, ETA 00:09:49
# Fork: 1 of 2
# Warmup Iteration   1: 3967.547 us/op
# Warmup Iteration   2: 2360.789 us/op
# Warmup Iteration   3: 1866.474 us/op
# Warmup Iteration   4: 1715.166 us/op
# Warmup Iteration   5: 1536.609 us/op
Iteration   1: 45.297 us/op
Iteration   2: 40.940 us/op
Iteration   3: 53.655 us/op
Iteration   4: 27.765 us/op
Iteration   5: 32.842 us/op

# Run progress: 78.98% complete, ETA 00:09:43
# Fork: 2 of 2
# Warmup Iteration   1: 3407.125 us/op
# Warmup Iteration   2: 2227.109 us/op
# Warmup Iteration   3: 1926.646 us/op
# Warmup Iteration   4: 1637.962 us/op
# Warmup Iteration   5: 1698.347 us/op
Iteration   1: 38.007 us/op
Iteration   2: 84.196 us/op
Iteration   3: 28.010 us/op
Iteration   4: 27.556 us/op
Iteration   5: 28.149 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     40.642 ±(99.9%) 26.707 us/op

  Histogram, us/op:
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 4 
    [30.000, 35.000) = 1 
    [35.000, 40.000) = 1 
    [40.000, 45.000) = 1 
    [45.000, 50.000) = 1 
    [50.000, 55.000) = 1 
    [55.000, 60.000) = 0 
    [60.000, 65.000) = 0 
    [65.000, 70.000) = 0 
    [70.000, 75.000) = 0 
    [75.000, 80.000) = 0 
    [80.000, 85.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     27.556 us/op
     p(50.0000) =     35.424 us/op
     p(90.0000) =     81.142 us/op
     p(95.0000) =     84.196 us/op
     p(99.0000) =     84.196 us/op
     p(99.9000) =     84.196 us/op
     p(99.9900) =     84.196 us/op
     p(99.9990) =     84.196 us/op
     p(99.9999) =     84.196 us/op
    p(100.0000) =     84.196 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.250)

# Run progress: 79.17% complete, ETA 00:09:38
# Fork: 1 of 2
# Warmup Iteration   1: 3217.272 us/op
# Warmup Iteration   2: 1724.713 us/op
# Warmup Iteration   3: 1868.811 us/op
# Warmup Iteration   4: 1365.612 us/op
# Warmup Iteration   5: 1425.931 us/op
Iteration   1: 38.155 us/op
Iteration   2: 52.423 us/op
Iteration   3: 26.206 us/op
Iteration   4: 23.800 us/op
Iteration   5: 36.355 us/op

# Run progress: 79.36% complete, ETA 00:09:33
# Fork: 2 of 2
# Warmup Iteration   1: 3316.700 us/op
# Warmup Iteration   2: 1786.554 us/op
# Warmup Iteration   3: 1771.574 us/op
# Warmup Iteration   4: 1422.017 us/op
# Warmup Iteration   5: 1447.047 us/op
Iteration   1: 24.480 us/op
Iteration   2: 60.868 us/op
Iteration   3: 27.180 us/op
Iteration   4: 40.615 us/op
Iteration   5: 26.785 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     35.687 ±(99.9%) 19.212 us/op

  Histogram, us/op:
    [20.000, 25.000) = 2 
    [25.000, 30.000) = 3 
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 2 
    [40.000, 45.000) = 1 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 1 
    [55.000, 60.000) = 0 
    [60.000, 65.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     23.800 us/op
     p(50.0000) =     31.768 us/op
     p(90.0000) =     60.024 us/op
     p(95.0000) =     60.868 us/op
     p(99.0000) =     60.868 us/op
     p(99.9000) =     60.868 us/op
     p(99.9900) =     60.868 us/op
     p(99.9990) =     60.868 us/op
     p(99.9999) =     60.868 us/op
    p(100.0000) =     60.868 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.375)

# Run progress: 79.55% complete, ETA 00:09:27
# Fork: 1 of 2
# Warmup Iteration   1: 2505.330 us/op
# Warmup Iteration   2: 1459.027 us/op
# Warmup Iteration   3: 1578.777 us/op
# Warmup Iteration   4: 1115.329 us/op
# Warmup Iteration   5: 1138.238 us/op
Iteration   1: 23.397 us/op
Iteration   2: 51.722 us/op
Iteration   3: 105.444 us/op
Iteration   4: 25.673 us/op
Iteration   5: 43.294 us/op

# Run progress: 79.73% complete, ETA 00:09:22
# Fork: 2 of 2
# Warmup Iteration   1: 2567.800 us/op
# Warmup Iteration   2: 1475.435 us/op
# Warmup Iteration   3: 1311.963 us/op
# Warmup Iteration   4: 1418.907 us/op
# Warmup Iteration   5: 1127.436 us/op
Iteration   1: 22.952 us/op
Iteration   2: 56.447 us/op
Iteration   3: 39.107 us/op
Iteration   4: 26.758 us/op
Iteration   5: 26.200 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     42.099 ±(99.9%) 38.366 us/op

  Histogram, us/op:
    [ 20.000,  25.000) = 2 
    [ 25.000,  30.000) = 3 
    [ 30.000,  35.000) = 0 
    [ 35.000,  40.000) = 1 
    [ 40.000,  45.000) = 1 
    [ 45.000,  50.000) = 0 
    [ 50.000,  55.000) = 1 
    [ 55.000,  60.000) = 1 
    [ 60.000,  65.000) = 0 
    [ 65.000,  70.000) = 0 
    [ 70.000,  75.000) = 0 
    [ 75.000,  80.000) = 0 
    [ 80.000,  85.000) = 0 
    [ 85.000,  90.000) = 0 
    [ 90.000,  95.000) = 0 
    [ 95.000, 100.000) = 0 
    [100.000, 105.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     22.952 us/op
     p(50.0000) =     32.933 us/op
     p(90.0000) =    100.544 us/op
     p(95.0000) =    105.444 us/op
     p(99.0000) =    105.444 us/op
     p(99.9000) =    105.444 us/op
     p(99.9900) =    105.444 us/op
     p(99.9990) =    105.444 us/op
     p(99.9999) =    105.444 us/op
    p(100.0000) =    105.444 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.5)

# Run progress: 79.92% complete, ETA 00:09:17
# Fork: 1 of 2
# Warmup Iteration   1: 2647.316 us/op
# Warmup Iteration   2: 1467.652 us/op
# Warmup Iteration   3: 1737.413 us/op
# Warmup Iteration   4: 1152.194 us/op
# Warmup Iteration   5: 1128.797 us/op
Iteration   1: 23.828 us/op
Iteration   2: 84.250 us/op
Iteration   3: 57.944 us/op
Iteration   4: 66.029 us/op
Iteration   5: 53.814 us/op

# Run progress: 80.11% complete, ETA 00:09:12
# Fork: 2 of 2
# Warmup Iteration   1: 2770.563 us/op
# Warmup Iteration   2: 1494.347 us/op
# Warmup Iteration   3: 1493.371 us/op
# Warmup Iteration   4: 1189.855 us/op
# Warmup Iteration   5: 1160.107 us/op
Iteration   1: 40.302 us/op
Iteration   2: 52.546 us/op
Iteration   3: 24.197 us/op
Iteration   4: 30.606 us/op
Iteration   5: 53.346 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     48.686 ±(99.9%) 29.077 us/op

  Histogram, us/op:
    [20.000, 25.000) = 2 
    [25.000, 30.000) = 0 
    [30.000, 35.000) = 1 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 1 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 3 
    [55.000, 60.000) = 1 
    [60.000, 65.000) = 0 
    [65.000, 70.000) = 1 
    [70.000, 75.000) = 0 
    [75.000, 80.000) = 0 
    [80.000, 85.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     23.828 us/op
     p(50.0000) =     52.946 us/op
     p(90.0000) =     82.428 us/op
     p(95.0000) =     84.250 us/op
     p(99.0000) =     84.250 us/op
     p(99.9000) =     84.250 us/op
     p(99.9900) =     84.250 us/op
     p(99.9990) =     84.250 us/op
     p(99.9999) =     84.250 us/op
    p(100.0000) =     84.250 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.625)

# Run progress: 80.30% complete, ETA 00:09:06
# Fork: 1 of 2
# Warmup Iteration   1: 2022.127 us/op
# Warmup Iteration   2: 1269.918 us/op
# Warmup Iteration   3: 1284.912 us/op
# Warmup Iteration   4: 877.115 us/op
# Warmup Iteration   5: 889.570 us/op
Iteration   1: 39.422 us/op
Iteration   2: 100.639 us/op
Iteration   3: 43.867 us/op
Iteration   4: 37.689 us/op
Iteration   5: 25.375 us/op

# Run progress: 80.49% complete, ETA 00:09:01
# Fork: 2 of 2
# Warmup Iteration   1: 2323.336 us/op
# Warmup Iteration   2: 1254.414 us/op
# Warmup Iteration   3: 1103.875 us/op
# Warmup Iteration   4: 1347.882 us/op
# Warmup Iteration   5: 875.710 us/op
Iteration   1: 36.574 us/op
Iteration   2: 72.122 us/op
Iteration   3: 27.237 us/op
Iteration   4: 25.771 us/op
Iteration   5: 25.024 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     43.372 ±(99.9%) 37.139 us/op

  Histogram, us/op:
    [ 20.000,  25.000) = 0 
    [ 25.000,  30.000) = 4 
    [ 30.000,  35.000) = 0 
    [ 35.000,  40.000) = 3 
    [ 40.000,  45.000) = 1 
    [ 45.000,  50.000) = 0 
    [ 50.000,  55.000) = 0 
    [ 55.000,  60.000) = 0 
    [ 60.000,  65.000) = 0 
    [ 65.000,  70.000) = 0 
    [ 70.000,  75.000) = 1 
    [ 75.000,  80.000) = 0 
    [ 80.000,  85.000) = 0 
    [ 85.000,  90.000) = 0 
    [ 90.000,  95.000) = 0 
    [ 95.000, 100.000) = 0 
    [100.000, 105.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     25.024 us/op
     p(50.0000) =     37.132 us/op
     p(90.0000) =     97.787 us/op
     p(95.0000) =    100.639 us/op
     p(99.0000) =    100.639 us/op
     p(99.9000) =    100.639 us/op
     p(99.9900) =    100.639 us/op
     p(99.9990) =    100.639 us/op
     p(99.9999) =    100.639 us/op
    p(100.0000) =    100.639 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.75)

# Run progress: 80.68% complete, ETA 00:08:56
# Fork: 1 of 2
# Warmup Iteration   1: 2200.066 us/op
# Warmup Iteration   2: 1618.026 us/op
# Warmup Iteration   3: 934.684 us/op
# Warmup Iteration   4: 899.341 us/op
# Warmup Iteration   5: 888.034 us/op
Iteration   1: 36.791 us/op
Iteration   2: 89.972 us/op
Iteration   3: 68.391 us/op
Iteration   4: 23.879 us/op
Iteration   5: 25.907 us/op

# Run progress: 80.87% complete, ETA 00:08:51
# Fork: 2 of 2
# Warmup Iteration   1: 1969.387 us/op
# Warmup Iteration   2: 1450.034 us/op
# Warmup Iteration   3: 929.470 us/op
# Warmup Iteration   4: 890.085 us/op
# Warmup Iteration   5: 888.198 us/op
Iteration   1: 25.176 us/op
Iteration   2: 54.202 us/op
Iteration   3: 40.046 us/op
Iteration   4: 25.227 us/op
Iteration   5: 25.798 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     41.539 ±(99.9%) 34.142 us/op

  Histogram, us/op:
    [20.000, 25.000) = 1 
    [25.000, 30.000) = 4 
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 1 
    [40.000, 45.000) = 1 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 1 
    [55.000, 60.000) = 0 
    [60.000, 65.000) = 0 
    [65.000, 70.000) = 1 
    [70.000, 75.000) = 0 
    [75.000, 80.000) = 0 
    [80.000, 85.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     23.879 us/op
     p(50.0000) =     31.349 us/op
     p(90.0000) =     87.814 us/op
     p(95.0000) =     89.972 us/op
     p(99.0000) =     89.972 us/op
     p(99.9000) =     89.972 us/op
     p(99.9900) =     89.972 us/op
     p(99.9990) =     89.972 us/op
     p(99.9999) =     89.972 us/op
    p(100.0000) =     89.972 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.875)

# Run progress: 81.06% complete, ETA 00:08:45
# Fork: 1 of 2
# Warmup Iteration   1: 2027.946 us/op
# Warmup Iteration   2: 1246.051 us/op
# Warmup Iteration   3: 1130.335 us/op
# Warmup Iteration   4: 1210.836 us/op
# Warmup Iteration   5: 929.323 us/op
Iteration   1: 25.907 us/op
Iteration   2: 96.849 us/op
Iteration   3: 53.121 us/op
Iteration   4: 25.927 us/op
Iteration   5: 29.148 us/op

# Run progress: 81.25% complete, ETA 00:08:40
# Fork: 2 of 2
# Warmup Iteration   1: 2164.869 us/op
# Warmup Iteration   2: 1225.640 us/op
# Warmup Iteration   3: 1090.205 us/op
# Warmup Iteration   4: 1182.034 us/op
# Warmup Iteration   5: 882.722 us/op
Iteration   1: 24.672 us/op
Iteration   2: 103.908 us/op
Iteration   3: 27.252 us/op
Iteration   4: 25.866 us/op
Iteration   5: 25.947 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     43.860 ±(99.9%) 46.866 us/op

  Histogram, us/op:
    [ 20.000,  25.000) = 1 
    [ 25.000,  30.000) = 6 
    [ 30.000,  35.000) = 0 
    [ 35.000,  40.000) = 0 
    [ 40.000,  45.000) = 0 
    [ 45.000,  50.000) = 0 
    [ 50.000,  55.000) = 1 
    [ 55.000,  60.000) = 0 
    [ 60.000,  65.000) = 0 
    [ 65.000,  70.000) = 0 
    [ 70.000,  75.000) = 0 
    [ 75.000,  80.000) = 0 
    [ 80.000,  85.000) = 0 
    [ 85.000,  90.000) = 0 
    [ 90.000,  95.000) = 0 
    [ 95.000, 100.000) = 1 
    [100.000, 105.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     24.672 us/op
     p(50.0000) =     26.600 us/op
     p(90.0000) =    103.202 us/op
     p(95.0000) =    103.908 us/op
     p(99.0000) =    103.908 us/op
     p(99.9000) =    103.908 us/op
     p(99.9900) =    103.908 us/op
     p(99.9990) =    103.908 us/op
     p(99.9999) =    103.908 us/op
    p(100.0000) =    103.908 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 1)

# Run progress: 81.44% complete, ETA 00:08:35
# Fork: 1 of 2
# Warmup Iteration   1: 2141.926 us/op
# Warmup Iteration   2: 1226.991 us/op
# Warmup Iteration   3: 1071.650 us/op
# Warmup Iteration   4: 1138.915 us/op
# Warmup Iteration   5: 936.544 us/op
Iteration   1: 23.576 us/op
Iteration   2: 62.327 us/op
Iteration   3: 80.119 us/op
Iteration   4: 58.750 us/op
Iteration   5: 24.793 us/op

# Run progress: 81.63% complete, ETA 00:08:30
# Fork: 2 of 2
# Warmup Iteration   1: 2123.784 us/op
# Warmup Iteration   2: 1257.627 us/op
# Warmup Iteration   3: 1176.512 us/op
# Warmup Iteration   4: 892.012 us/op
# Warmup Iteration   5: 891.899 us/op
Iteration   1: 41.307 us/op
Iteration   2: 57.341 us/op
Iteration   3: 59.833 us/op
Iteration   4: 25.356 us/op
Iteration   5: 25.442 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     45.884 ±(99.9%) 30.805 us/op

  Histogram, us/op:
    [20.000, 25.000) = 2 
    [25.000, 30.000) = 2 
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 1 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 0 
    [55.000, 60.000) = 3 
    [60.000, 65.000) = 1 
    [65.000, 70.000) = 0 
    [70.000, 75.000) = 0 
    [75.000, 80.000) = 0 
    [80.000, 85.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     23.576 us/op
     p(50.0000) =     49.324 us/op
     p(90.0000) =     78.340 us/op
     p(95.0000) =     80.119 us/op
     p(99.0000) =     80.119 us/op
     p(99.9000) =     80.119 us/op
     p(99.9900) =     80.119 us/op
     p(99.9990) =     80.119 us/op
     p(99.9999) =     80.119 us/op
    p(100.0000) =     80.119 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.125)

# Run progress: 81.82% complete, ETA 00:08:24
# Fork: 1 of 2
# Warmup Iteration   1: 3461.187 us/op
# Warmup Iteration   2: 2008.196 us/op
# Warmup Iteration   3: 1423.173 us/op
# Warmup Iteration   4: 1368.349 us/op
# Warmup Iteration   5: 1340.509 us/op
Iteration   1: 91.140 us/op
Iteration   2: 115.874 us/op
Iteration   3: 107.828 us/op
Iteration   4: 95.164 us/op
Iteration   5: 96.706 us/op

# Run progress: 82.01% complete, ETA 00:08:19
# Fork: 2 of 2
# Warmup Iteration   1: 3510.520 us/op
# Warmup Iteration   2: 1960.190 us/op
# Warmup Iteration   3: 1490.871 us/op
# Warmup Iteration   4: 1450.508 us/op
# Warmup Iteration   5: 1321.240 us/op
Iteration   1: 91.366 us/op
Iteration   2: 176.235 us/op
Iteration   3: 91.917 us/op
Iteration   4: 113.211 us/op
Iteration   5: 134.048 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    111.349 ±(99.9%) 40.390 us/op

  Histogram, us/op:
    [ 90.000,  95.000) = 3 
    [ 95.000, 100.000) = 2 
    [100.000, 105.000) = 0 
    [105.000, 110.000) = 1 
    [110.000, 115.000) = 1 
    [115.000, 120.000) = 1 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 1 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 0 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     91.140 us/op
     p(50.0000) =    102.267 us/op
     p(90.0000) =    172.016 us/op
     p(95.0000) =    176.235 us/op
     p(99.0000) =    176.235 us/op
     p(99.9000) =    176.235 us/op
     p(99.9900) =    176.235 us/op
     p(99.9990) =    176.235 us/op
     p(99.9999) =    176.235 us/op
    p(100.0000) =    176.235 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.250)

# Run progress: 82.20% complete, ETA 00:08:14
# Fork: 1 of 2
# Warmup Iteration   1: 1922.055 us/op
# Warmup Iteration   2: 1363.571 us/op
# Warmup Iteration   3: 1185.088 us/op
# Warmup Iteration   4: 1301.212 us/op
# Warmup Iteration   5: 917.181 us/op
Iteration   1: 92.275 us/op
Iteration   2: 165.959 us/op
Iteration   3: 106.470 us/op
Iteration   4: 103.007 us/op
Iteration   5: 90.576 us/op

# Run progress: 82.39% complete, ETA 00:08:09
# Fork: 2 of 2
# Warmup Iteration   1: 2007.210 us/op
# Warmup Iteration   2: 1257.073 us/op
# Warmup Iteration   3: 1124.417 us/op
# Warmup Iteration   4: 1235.531 us/op
# Warmup Iteration   5: 935.702 us/op
Iteration   1: 86.546 us/op
Iteration   2: 134.913 us/op
Iteration   3: 89.480 us/op
Iteration   4: 97.653 us/op
Iteration   5: 116.900 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    108.378 ±(99.9%) 37.880 us/op

  Histogram, us/op:
    [ 80.000,  85.000) = 0 
    [ 85.000,  90.000) = 2 
    [ 90.000,  95.000) = 2 
    [ 95.000, 100.000) = 1 
    [100.000, 105.000) = 1 
    [105.000, 110.000) = 1 
    [110.000, 115.000) = 0 
    [115.000, 120.000) = 1 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 1 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     86.546 us/op
     p(50.0000) =    100.330 us/op
     p(90.0000) =    162.854 us/op
     p(95.0000) =    165.959 us/op
     p(99.0000) =    165.959 us/op
     p(99.9000) =    165.959 us/op
     p(99.9900) =    165.959 us/op
     p(99.9990) =    165.959 us/op
     p(99.9999) =    165.959 us/op
    p(100.0000) =    165.959 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.375)

# Run progress: 82.58% complete, ETA 00:08:03
# Fork: 1 of 2
# Warmup Iteration   1: 2115.160 us/op
# Warmup Iteration   2: 1288.670 us/op
# Warmup Iteration   3: 1293.049 us/op
# Warmup Iteration   4: 946.847 us/op
# Warmup Iteration   5: 927.928 us/op
Iteration   1: 108.033 us/op
Iteration   2: 150.152 us/op
Iteration   3: 91.403 us/op
Iteration   4: 119.612 us/op
Iteration   5: 94.529 us/op

# Run progress: 82.77% complete, ETA 00:07:58
# Fork: 2 of 2
# Warmup Iteration   1: 1871.394 us/op
# Warmup Iteration   2: 1273.511 us/op
# Warmup Iteration   3: 1386.662 us/op
# Warmup Iteration   4: 1061.171 us/op
# Warmup Iteration   5: 937.118 us/op
Iteration   1: 92.075 us/op
Iteration   2: 135.572 us/op
Iteration   3: 117.340 us/op
Iteration   4: 102.356 us/op
Iteration   5: 99.152 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    111.022 ±(99.9%) 29.765 us/op

  Histogram, us/op:
    [ 90.000,  95.000) = 3 
    [ 95.000, 100.000) = 1 
    [100.000, 105.000) = 1 
    [105.000, 110.000) = 1 
    [110.000, 115.000) = 0 
    [115.000, 120.000) = 2 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 1 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     91.403 us/op
     p(50.0000) =    105.195 us/op
     p(90.0000) =    148.694 us/op
     p(95.0000) =    150.152 us/op
     p(99.0000) =    150.152 us/op
     p(99.9000) =    150.152 us/op
     p(99.9900) =    150.152 us/op
     p(99.9990) =    150.152 us/op
     p(99.9999) =    150.152 us/op
    p(100.0000) =    150.152 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.5)

# Run progress: 82.95% complete, ETA 00:07:53
# Fork: 1 of 2
# Warmup Iteration   1: 2156.285 us/op
# Warmup Iteration   2: 1307.063 us/op
# Warmup Iteration   3: 1161.443 us/op
# Warmup Iteration   4: 1260.104 us/op
# Warmup Iteration   5: 954.157 us/op
Iteration   1: 132.491 us/op
Iteration   2: 156.980 us/op
Iteration   3: 97.301 us/op
Iteration   4: 96.630 us/op
Iteration   5: 91.379 us/op

# Run progress: 83.14% complete, ETA 00:07:48
# Fork: 2 of 2
# Warmup Iteration   1: 2260.885 us/op
# Warmup Iteration   2: 1736.574 us/op
# Warmup Iteration   3: 1461.856 us/op
# Warmup Iteration   4: 941.388 us/op
# Warmup Iteration   5: 1018.016 us/op
Iteration   1: 91.510 us/op
Iteration   2: 129.389 us/op
Iteration   3: 127.949 us/op
Iteration   4: 116.472 us/op
Iteration   5: 89.827 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    112.993 ±(99.9%) 34.911 us/op

  Histogram, us/op:
    [ 80.000,  85.000) = 0 
    [ 85.000,  90.000) = 1 
    [ 90.000,  95.000) = 2 
    [ 95.000, 100.000) = 2 
    [100.000, 105.000) = 0 
    [105.000, 110.000) = 0 
    [110.000, 115.000) = 0 
    [115.000, 120.000) = 1 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 2 
    [130.000, 135.000) = 1 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     89.827 us/op
     p(50.0000) =    106.887 us/op
     p(90.0000) =    154.531 us/op
     p(95.0000) =    156.980 us/op
     p(99.0000) =    156.980 us/op
     p(99.9000) =    156.980 us/op
     p(99.9900) =    156.980 us/op
     p(99.9990) =    156.980 us/op
     p(99.9999) =    156.980 us/op
    p(100.0000) =    156.980 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.625)

# Run progress: 83.33% complete, ETA 00:07:42
# Fork: 1 of 2
# Warmup Iteration   1: 2134.534 us/op
# Warmup Iteration   2: 1494.089 us/op
# Warmup Iteration   3: 966.330 us/op
# Warmup Iteration   4: 968.175 us/op
# Warmup Iteration   5: 931.138 us/op
Iteration   1: 88.645 us/op
Iteration   2: 158.295 us/op
Iteration   3: 88.917 us/op
Iteration   4: 103.545 us/op
Iteration   5: 131.027 us/op

# Run progress: 83.52% complete, ETA 00:07:37
# Fork: 2 of 2
# Warmup Iteration   1: 2047.156 us/op
# Warmup Iteration   2: 1313.410 us/op
# Warmup Iteration   3: 1130.771 us/op
# Warmup Iteration   4: 1231.948 us/op
# Warmup Iteration   5: 969.280 us/op
Iteration   1: 87.839 us/op
Iteration   2: 130.235 us/op
Iteration   3: 112.694 us/op
Iteration   4: 98.309 us/op
Iteration   5: 92.835 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    109.234 ±(99.9%) 35.813 us/op

  Histogram, us/op:
    [ 80.000,  85.000) = 0 
    [ 85.000,  90.000) = 3 
    [ 90.000,  95.000) = 1 
    [ 95.000, 100.000) = 1 
    [100.000, 105.000) = 1 
    [105.000, 110.000) = 0 
    [110.000, 115.000) = 1 
    [115.000, 120.000) = 0 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 2 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     87.839 us/op
     p(50.0000) =    100.927 us/op
     p(90.0000) =    155.568 us/op
     p(95.0000) =    158.295 us/op
     p(99.0000) =    158.295 us/op
     p(99.9000) =    158.295 us/op
     p(99.9900) =    158.295 us/op
     p(99.9990) =    158.295 us/op
     p(99.9999) =    158.295 us/op
    p(100.0000) =    158.295 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.75)

# Run progress: 83.71% complete, ETA 00:07:32
# Fork: 1 of 2
# Warmup Iteration   1: 2049.189 us/op
# Warmup Iteration   2: 1309.823 us/op
# Warmup Iteration   3: 1233.738 us/op
# Warmup Iteration   4: 1218.192 us/op
# Warmup Iteration   5: 943.137 us/op
Iteration   1: 107.845 us/op
Iteration   2: 187.148 us/op
Iteration   3: 92.952 us/op
Iteration   4: 100.143 us/op
Iteration   5: 93.683 us/op

# Run progress: 83.90% complete, ETA 00:07:26
# Fork: 2 of 2
# Warmup Iteration   1: 1995.450 us/op
# Warmup Iteration   2: 1337.614 us/op
# Warmup Iteration   3: 1123.309 us/op
# Warmup Iteration   4: 1304.601 us/op
# Warmup Iteration   5: 938.251 us/op
Iteration   1: 99.522 us/op
Iteration   2: 166.924 us/op
Iteration   3: 88.254 us/op
Iteration   4: 97.816 us/op
Iteration   5: 119.302 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    115.359 ±(99.9%) 51.347 us/op

  Histogram, us/op:
    [ 80.000,  90.000) = 1 
    [ 90.000, 100.000) = 4 
    [100.000, 110.000) = 2 
    [110.000, 120.000) = 1 
    [120.000, 130.000) = 0 
    [130.000, 140.000) = 0 
    [140.000, 150.000) = 0 
    [150.000, 160.000) = 0 
    [160.000, 170.000) = 1 
    [170.000, 180.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     88.254 us/op
     p(50.0000) =     99.833 us/op
     p(90.0000) =    185.126 us/op
     p(95.0000) =    187.148 us/op
     p(99.0000) =    187.148 us/op
     p(99.9000) =    187.148 us/op
     p(99.9900) =    187.148 us/op
     p(99.9990) =    187.148 us/op
     p(99.9999) =    187.148 us/op
    p(100.0000) =    187.148 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.875)

# Run progress: 84.09% complete, ETA 00:07:21
# Fork: 1 of 2
# Warmup Iteration   1: 2075.806 us/op
# Warmup Iteration   2: 1272.404 us/op
# Warmup Iteration   3: 1133.095 us/op
# Warmup Iteration   4: 1156.257 us/op
# Warmup Iteration   5: 919.611 us/op
Iteration   1: 104.258 us/op
Iteration   2: 172.035 us/op
Iteration   3: 91.376 us/op
Iteration   4: 98.673 us/op
Iteration   5: 98.846 us/op

# Run progress: 84.28% complete, ETA 00:07:16
# Fork: 2 of 2
# Warmup Iteration   1: 2150.618 us/op
# Warmup Iteration   2: 1252.073 us/op
# Warmup Iteration   3: 1158.771 us/op
# Warmup Iteration   4: 1233.220 us/op
# Warmup Iteration   5: 950.341 us/op
Iteration   1: 96.100 us/op
Iteration   2: 176.862 us/op
Iteration   3: 121.569 us/op
Iteration   4: 106.883 us/op
Iteration   5: 93.113 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    115.971 ±(99.9%) 48.381 us/op

  Histogram, us/op:
    [ 90.000,  95.000) = 2 
    [ 95.000, 100.000) = 3 
    [100.000, 105.000) = 1 
    [105.000, 110.000) = 1 
    [110.000, 115.000) = 0 
    [115.000, 120.000) = 0 
    [120.000, 125.000) = 1 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 0 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     91.376 us/op
     p(50.0000) =    101.552 us/op
     p(90.0000) =    176.379 us/op
     p(95.0000) =    176.862 us/op
     p(99.0000) =    176.862 us/op
     p(99.9000) =    176.862 us/op
     p(99.9900) =    176.862 us/op
     p(99.9990) =    176.862 us/op
     p(99.9999) =    176.862 us/op
    p(100.0000) =    176.862 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 1)

# Run progress: 84.47% complete, ETA 00:07:11
# Fork: 1 of 2
# Warmup Iteration   1: 2034.251 us/op
# Warmup Iteration   2: 1341.753 us/op
# Warmup Iteration   3: 1282.667 us/op
# Warmup Iteration   4: 930.097 us/op
# Warmup Iteration   5: 947.689 us/op
Iteration   1: 89.983 us/op
Iteration   2: 132.946 us/op
Iteration   3: 91.681 us/op
Iteration   4: 103.876 us/op
Iteration   5: 92.427 us/op

# Run progress: 84.66% complete, ETA 00:07:05
# Fork: 2 of 2
# Warmup Iteration   1: 1917.911 us/op
# Warmup Iteration   2: 1648.466 us/op
# Warmup Iteration   3: 1430.334 us/op
# Warmup Iteration   4: 970.630 us/op
# Warmup Iteration   5: 929.900 us/op
Iteration   1: 89.857 us/op
Iteration   2: 179.584 us/op
Iteration   3: 108.229 us/op
Iteration   4: 96.780 us/op
Iteration   5: 88.502 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    107.387 ±(99.9%) 43.435 us/op

  Histogram, us/op:
    [ 80.000,  90.000) = 3 
    [ 90.000, 100.000) = 3 
    [100.000, 110.000) = 2 
    [110.000, 120.000) = 0 
    [120.000, 130.000) = 0 
    [130.000, 140.000) = 1 
    [140.000, 150.000) = 0 
    [150.000, 160.000) = 0 
    [160.000, 170.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     88.502 us/op
     p(50.0000) =     94.604 us/op
     p(90.0000) =    174.920 us/op
     p(95.0000) =    179.584 us/op
     p(99.0000) =    179.584 us/op
     p(99.9000) =    179.584 us/op
     p(99.9900) =    179.584 us/op
     p(99.9990) =    179.584 us/op
     p(99.9999) =    179.584 us/op
    p(100.0000) =    179.584 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.125)

# Run progress: 84.85% complete, ETA 00:07:00
# Fork: 1 of 2
# Warmup Iteration   1: 2087.610 us/op
# Warmup Iteration   2: 1420.597 us/op
# Warmup Iteration   3: 1240.676 us/op
# Warmup Iteration   4: 1292.139 us/op
# Warmup Iteration   5: 1050.058 us/op
Iteration   1: 176.588 us/op
Iteration   2: 229.432 us/op
Iteration   3: 181.194 us/op
Iteration   4: 190.718 us/op
Iteration   5: 176.653 us/op

# Run progress: 85.04% complete, ETA 00:06:55
# Fork: 2 of 2
# Warmup Iteration   1: 2229.588 us/op
# Warmup Iteration   2: 1423.430 us/op
# Warmup Iteration   3: 1354.110 us/op
# Warmup Iteration   4: 1336.070 us/op
# Warmup Iteration   5: 1075.422 us/op
Iteration   1: 176.231 us/op
Iteration   2: 287.729 us/op
Iteration   3: 199.502 us/op
Iteration   4: 194.072 us/op
Iteration   5: 188.802 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    200.092 ±(99.9%) 52.424 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 0 
    [125.000, 137.500) = 0 
    [137.500, 150.000) = 0 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 0 
    [175.000, 187.500) = 4 
    [187.500, 200.000) = 4 
    [200.000, 212.500) = 0 
    [212.500, 225.000) = 0 
    [225.000, 237.500) = 1 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    176.231 us/op
     p(50.0000) =    189.760 us/op
     p(90.0000) =    281.899 us/op
     p(95.0000) =    287.729 us/op
     p(99.0000) =    287.729 us/op
     p(99.9000) =    287.729 us/op
     p(99.9900) =    287.729 us/op
     p(99.9990) =    287.729 us/op
     p(99.9999) =    287.729 us/op
    p(100.0000) =    287.729 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.250)

# Run progress: 85.23% complete, ETA 00:06:50
# Fork: 1 of 2
# Warmup Iteration   1: 2035.144 us/op
# Warmup Iteration   2: 1365.771 us/op
# Warmup Iteration   3: 1212.158 us/op
# Warmup Iteration   4: 1272.522 us/op
# Warmup Iteration   5: 1036.624 us/op
Iteration   1: 174.754 us/op
Iteration   2: 218.638 us/op
Iteration   3: 204.497 us/op
Iteration   4: 181.176 us/op
Iteration   5: 213.677 us/op

# Run progress: 85.42% complete, ETA 00:06:44
# Fork: 2 of 2
# Warmup Iteration   1: 1996.187 us/op
# Warmup Iteration   2: 1394.526 us/op
# Warmup Iteration   3: 1519.305 us/op
# Warmup Iteration   4: 1046.232 us/op
# Warmup Iteration   5: 1043.497 us/op
Iteration   1: 176.310 us/op
Iteration   2: 219.633 us/op
Iteration   3: 190.440 us/op
Iteration   4: 180.091 us/op
Iteration   5: 183.258 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    194.247 ±(99.9%) 27.279 us/op

  Histogram, us/op:
    [170.000, 175.000) = 1 
    [175.000, 180.000) = 1 
    [180.000, 185.000) = 3 
    [185.000, 190.000) = 0 
    [190.000, 195.000) = 1 
    [195.000, 200.000) = 0 
    [200.000, 205.000) = 1 
    [205.000, 210.000) = 0 
    [210.000, 215.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    174.754 us/op
     p(50.0000) =    186.849 us/op
     p(90.0000) =    219.534 us/op
     p(95.0000) =    219.633 us/op
     p(99.0000) =    219.633 us/op
     p(99.9000) =    219.633 us/op
     p(99.9900) =    219.633 us/op
     p(99.9990) =    219.633 us/op
     p(99.9999) =    219.633 us/op
    p(100.0000) =    219.633 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.375)

# Run progress: 85.61% complete, ETA 00:06:39
# Fork: 1 of 2
# Warmup Iteration   1: 2108.718 us/op
# Warmup Iteration   2: 1613.843 us/op
# Warmup Iteration   3: 1215.283 us/op
# Warmup Iteration   4: 1364.039 us/op
# Warmup Iteration   5: 1066.995 us/op
Iteration   1: 174.758 us/op
Iteration   2: 249.375 us/op
Iteration   3: 182.165 us/op
Iteration   4: 188.152 us/op
Iteration   5: 212.430 us/op

# Run progress: 85.80% complete, ETA 00:06:34
# Fork: 2 of 2
# Warmup Iteration   1: 2185.505 us/op
# Warmup Iteration   2: 1389.118 us/op
# Warmup Iteration   3: 1691.917 us/op
# Warmup Iteration   4: 1038.510 us/op
# Warmup Iteration   5: 1103.581 us/op
Iteration   1: 222.151 us/op
Iteration   2: 260.570 us/op
Iteration   3: 177.417 us/op
Iteration   4: 198.952 us/op
Iteration   5: 215.023 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    208.099 ±(99.9%) 44.872 us/op

  Histogram, us/op:
    [170.000, 180.000) = 2 
    [180.000, 190.000) = 2 
    [190.000, 200.000) = 1 
    [200.000, 210.000) = 0 
    [210.000, 220.000) = 2 
    [220.000, 230.000) = 1 
    [230.000, 240.000) = 0 
    [240.000, 250.000) = 1 
    [250.000, 260.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    174.758 us/op
     p(50.0000) =    205.691 us/op
     p(90.0000) =    259.451 us/op
     p(95.0000) =    260.570 us/op
     p(99.0000) =    260.570 us/op
     p(99.9000) =    260.570 us/op
     p(99.9900) =    260.570 us/op
     p(99.9990) =    260.570 us/op
     p(99.9999) =    260.570 us/op
    p(100.0000) =    260.570 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.5)

# Run progress: 85.98% complete, ETA 00:06:29
# Fork: 1 of 2
# Warmup Iteration   1: 2049.025 us/op
# Warmup Iteration   2: 1403.309 us/op
# Warmup Iteration   3: 1254.850 us/op
# Warmup Iteration   4: 1290.407 us/op
# Warmup Iteration   5: 1050.406 us/op
Iteration   1: 175.929 us/op
Iteration   2: 216.533 us/op
Iteration   3: 233.808 us/op
Iteration   4: 181.640 us/op
Iteration   5: 173.018 us/op

# Run progress: 86.17% complete, ETA 00:06:23
# Fork: 2 of 2
# Warmup Iteration   1: 2283.845 us/op
# Warmup Iteration   2: 1453.344 us/op
# Warmup Iteration   3: 1269.664 us/op
# Warmup Iteration   4: 1372.107 us/op
# Warmup Iteration   5: 1025.213 us/op
Iteration   1: 171.528 us/op
Iteration   2: 230.072 us/op
Iteration   3: 217.741 us/op
Iteration   4: 177.470 us/op
Iteration   5: 222.716 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    200.046 ±(99.9%) 39.406 us/op

  Histogram, us/op:
    [170.000, 175.000) = 2 
    [175.000, 180.000) = 2 
    [180.000, 185.000) = 1 
    [185.000, 190.000) = 0 
    [190.000, 195.000) = 0 
    [195.000, 200.000) = 0 
    [200.000, 205.000) = 0 
    [205.000, 210.000) = 0 
    [210.000, 215.000) = 0 
    [215.000, 220.000) = 2 
    [220.000, 225.000) = 1 
    [225.000, 230.000) = 0 
    [230.000, 235.000) = 2 

  Percentiles, us/op:
      p(0.0000) =    171.528 us/op
     p(50.0000) =    199.087 us/op
     p(90.0000) =    233.434 us/op
     p(95.0000) =    233.808 us/op
     p(99.0000) =    233.808 us/op
     p(99.9000) =    233.808 us/op
     p(99.9900) =    233.808 us/op
     p(99.9990) =    233.808 us/op
     p(99.9999) =    233.808 us/op
    p(100.0000) =    233.808 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.625)

# Run progress: 86.36% complete, ETA 00:06:18
# Fork: 1 of 2
# Warmup Iteration   1: 2268.893 us/op
# Warmup Iteration   2: 1521.789 us/op
# Warmup Iteration   3: 1368.688 us/op
# Warmup Iteration   4: 1267.206 us/op
# Warmup Iteration   5: 1044.647 us/op
Iteration   1: 176.071 us/op
Iteration   2: 253.793 us/op
Iteration   3: 205.769 us/op
Iteration   4: 195.022 us/op
Iteration   5: 203.007 us/op

# Run progress: 86.55% complete, ETA 00:06:13
# Fork: 2 of 2
# Warmup Iteration   1: 2038.244 us/op
# Warmup Iteration   2: 1439.581 us/op
# Warmup Iteration   3: 1419.838 us/op
# Warmup Iteration   4: 1016.594 us/op
# Warmup Iteration   5: 1016.180 us/op
Iteration   1: 191.627 us/op
Iteration   2: 248.653 us/op
Iteration   3: 224.891 us/op
Iteration   4: 197.567 us/op
Iteration   5: 198.911 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    209.531 ±(99.9%) 38.010 us/op

  Histogram, us/op:
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 1 
    [180.000, 185.000) = 0 
    [185.000, 190.000) = 0 
    [190.000, 195.000) = 1 
    [195.000, 200.000) = 3 
    [200.000, 205.000) = 1 
    [205.000, 210.000) = 1 
    [210.000, 215.000) = 0 
    [215.000, 220.000) = 0 
    [220.000, 225.000) = 1 
    [225.000, 230.000) = 0 
    [230.000, 235.000) = 0 
    [235.000, 240.000) = 0 
    [240.000, 245.000) = 0 
    [245.000, 250.000) = 1 
    [250.000, 255.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    176.071 us/op
     p(50.0000) =    200.959 us/op
     p(90.0000) =    253.279 us/op
     p(95.0000) =    253.793 us/op
     p(99.0000) =    253.793 us/op
     p(99.9000) =    253.793 us/op
     p(99.9900) =    253.793 us/op
     p(99.9990) =    253.793 us/op
     p(99.9999) =    253.793 us/op
    p(100.0000) =    253.793 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.75)

# Run progress: 86.74% complete, ETA 00:06:08
# Fork: 1 of 2
# Warmup Iteration   1: 2069.879 us/op
# Warmup Iteration   2: 1474.713 us/op
# Warmup Iteration   3: 1371.085 us/op
# Warmup Iteration   4: 1307.017 us/op
# Warmup Iteration   5: 1056.392 us/op
Iteration   1: 188.110 us/op
Iteration   2: 227.160 us/op
Iteration   3: 176.594 us/op
Iteration   4: 187.488 us/op
Iteration   5: 183.728 us/op

# Run progress: 86.93% complete, ETA 00:06:02
# Fork: 2 of 2
# Warmup Iteration   1: 2383.900 us/op
# Warmup Iteration   2: 1348.261 us/op
# Warmup Iteration   3: 1297.205 us/op
# Warmup Iteration   4: 1012.533 us/op
# Warmup Iteration   5: 1011.725 us/op
Iteration   1: 177.234 us/op
Iteration   2: 230.474 us/op
Iteration   3: 170.368 us/op
Iteration   4: 171.344 us/op
Iteration   5: 175.953 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    188.845 ±(99.9%) 33.155 us/op

  Histogram, us/op:
    [170.000, 175.000) = 2 
    [175.000, 180.000) = 3 
    [180.000, 185.000) = 1 
    [185.000, 190.000) = 2 
    [190.000, 195.000) = 0 
    [195.000, 200.000) = 0 
    [200.000, 205.000) = 0 
    [205.000, 210.000) = 0 
    [210.000, 215.000) = 0 
    [215.000, 220.000) = 0 
    [220.000, 225.000) = 0 
    [225.000, 230.000) = 1 
    [230.000, 235.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    170.368 us/op
     p(50.0000) =    180.481 us/op
     p(90.0000) =    230.143 us/op
     p(95.0000) =    230.474 us/op
     p(99.0000) =    230.474 us/op
     p(99.9000) =    230.474 us/op
     p(99.9900) =    230.474 us/op
     p(99.9990) =    230.474 us/op
     p(99.9999) =    230.474 us/op
    p(100.0000) =    230.474 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.875)

# Run progress: 87.12% complete, ETA 00:05:57
# Fork: 1 of 2
# Warmup Iteration   1: 2204.587 us/op
# Warmup Iteration   2: 1417.738 us/op
# Warmup Iteration   3: 1369.717 us/op
# Warmup Iteration   4: 1030.421 us/op
# Warmup Iteration   5: 1060.718 us/op
Iteration   1: 181.295 us/op
Iteration   2: 230.393 us/op
Iteration   3: 183.818 us/op
Iteration   4: 187.990 us/op
Iteration   5: 185.222 us/op

# Run progress: 87.31% complete, ETA 00:05:52
# Fork: 2 of 2
# Warmup Iteration   1: 2179.019 us/op
# Warmup Iteration   2: 1442.619 us/op
# Warmup Iteration   3: 1312.334 us/op
# Warmup Iteration   4: 1312.660 us/op
# Warmup Iteration   5: 1046.607 us/op
Iteration   1: 203.875 us/op
Iteration   2: 269.160 us/op
Iteration   3: 205.254 us/op
Iteration   4: 201.431 us/op
Iteration   5: 195.337 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    204.378 ±(99.9%) 40.805 us/op

  Histogram, us/op:
    [180.000, 185.000) = 2 
    [185.000, 190.000) = 2 
    [190.000, 195.000) = 0 
    [195.000, 200.000) = 1 
    [200.000, 205.000) = 2 
    [205.000, 210.000) = 1 
    [210.000, 215.000) = 0 
    [215.000, 220.000) = 0 
    [220.000, 225.000) = 0 
    [225.000, 230.000) = 0 
    [230.000, 235.000) = 1 
    [235.000, 240.000) = 0 
    [240.000, 245.000) = 0 
    [245.000, 250.000) = 0 
    [250.000, 255.000) = 0 
    [255.000, 260.000) = 0 
    [260.000, 265.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    181.295 us/op
     p(50.0000) =    198.384 us/op
     p(90.0000) =    265.283 us/op
     p(95.0000) =    269.160 us/op
     p(99.0000) =    269.160 us/op
     p(99.9000) =    269.160 us/op
     p(99.9900) =    269.160 us/op
     p(99.9990) =    269.160 us/op
     p(99.9999) =    269.160 us/op
    p(100.0000) =    269.160 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 1)

# Run progress: 87.50% complete, ETA 00:05:47
# Fork: 1 of 2
# Warmup Iteration   1: 2930.527 us/op
# Warmup Iteration   2: 1439.915 us/op
# Warmup Iteration   3: 1341.349 us/op
# Warmup Iteration   4: 1025.886 us/op
# Warmup Iteration   5: 1047.815 us/op
Iteration   1: 176.152 us/op
Iteration   2: 220.177 us/op
Iteration   3: 193.807 us/op
Iteration   4: 180.872 us/op
Iteration   5: 199.074 us/op

# Run progress: 87.69% complete, ETA 00:05:41
# Fork: 2 of 2
# Warmup Iteration   1: 2066.839 us/op
# Warmup Iteration   2: 1500.784 us/op
# Warmup Iteration   3: 1510.425 us/op
# Warmup Iteration   4: 1230.084 us/op
# Warmup Iteration   5: 1048.557 us/op
Iteration   1: 180.665 us/op
Iteration   2: 229.493 us/op
Iteration   3: 187.859 us/op
Iteration   4: 188.409 us/op
Iteration   5: 180.027 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    193.653 ±(99.9%) 27.150 us/op

  Histogram, us/op:
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 1 
    [180.000, 185.000) = 3 
    [185.000, 190.000) = 2 
    [190.000, 195.000) = 1 
    [195.000, 200.000) = 1 
    [200.000, 205.000) = 0 
    [205.000, 210.000) = 0 
    [210.000, 215.000) = 0 
    [215.000, 220.000) = 0 
    [220.000, 225.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    176.152 us/op
     p(50.0000) =    188.134 us/op
     p(90.0000) =    228.561 us/op
     p(95.0000) =    229.493 us/op
     p(99.0000) =    229.493 us/op
     p(99.9000) =    229.493 us/op
     p(99.9900) =    229.493 us/op
     p(99.9990) =    229.493 us/op
     p(99.9999) =    229.493 us/op
    p(100.0000) =    229.493 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.125)

# Run progress: 87.88% complete, ETA 00:05:36
# Fork: 1 of 2
# Warmup Iteration   1: 3561.040 us/op
# Warmup Iteration   2: 2048.693 us/op
# Warmup Iteration   3: 2488.275 us/op
# Warmup Iteration   4: 1706.096 us/op
# Warmup Iteration   5: 1769.687 us/op
Iteration   1: 699.981 us/op
Iteration   2: 755.450 us/op
Iteration   3: 711.723 us/op
Iteration   4: 704.614 us/op
Iteration   5: 760.148 us/op

# Run progress: 88.07% complete, ETA 00:05:31
# Fork: 2 of 2
# Warmup Iteration   1: 2728.287 us/op
# Warmup Iteration   2: 2073.066 us/op
# Warmup Iteration   3: 2456.159 us/op
# Warmup Iteration   4: 1650.745 us/op
# Warmup Iteration   5: 1721.216 us/op
Iteration   1: 698.767 us/op
Iteration   2: 773.709 us/op
Iteration   3: 697.622 us/op
Iteration   4: 706.372 us/op
Iteration   5: 701.583 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    720.997 ±(99.9%) 44.865 us/op

  Histogram, us/op:
    [690.000, 695.000) = 0 
    [695.000, 700.000) = 3 
    [700.000, 705.000) = 2 
    [705.000, 710.000) = 1 
    [710.000, 715.000) = 1 
    [715.000, 720.000) = 0 
    [720.000, 725.000) = 0 
    [725.000, 730.000) = 0 
    [730.000, 735.000) = 0 
    [735.000, 740.000) = 0 
    [740.000, 745.000) = 0 
    [745.000, 750.000) = 0 
    [750.000, 755.000) = 0 
    [755.000, 760.000) = 1 
    [760.000, 765.000) = 1 
    [765.000, 770.000) = 0 
    [770.000, 775.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    697.622 us/op
     p(50.0000) =    705.493 us/op
     p(90.0000) =    772.353 us/op
     p(95.0000) =    773.709 us/op
     p(99.0000) =    773.709 us/op
     p(99.9000) =    773.709 us/op
     p(99.9900) =    773.709 us/op
     p(99.9990) =    773.709 us/op
     p(99.9999) =    773.709 us/op
    p(100.0000) =    773.709 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.250)

# Run progress: 88.26% complete, ETA 00:05:26
# Fork: 1 of 2
# Warmup Iteration   1: 2680.834 us/op
# Warmup Iteration   2: 2045.349 us/op
# Warmup Iteration   3: 2439.772 us/op
# Warmup Iteration   4: 1631.524 us/op
# Warmup Iteration   5: 1774.265 us/op
Iteration   1: 683.287 us/op
Iteration   2: 688.925 us/op
Iteration   3: 685.941 us/op
Iteration   4: 691.063 us/op
Iteration   5: 706.732 us/op

# Run progress: 88.45% complete, ETA 00:05:20
# Fork: 2 of 2
# Warmup Iteration   1: 2633.826 us/op
# Warmup Iteration   2: 2084.774 us/op
# Warmup Iteration   3: 2481.215 us/op
# Warmup Iteration   4: 1672.976 us/op
# Warmup Iteration   5: 1770.782 us/op
Iteration   1: 704.080 us/op
Iteration   2: 732.475 us/op
Iteration   3: 701.090 us/op
Iteration   4: 679.378 us/op
Iteration   5: 695.643 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    696.861 ±(99.9%) 23.329 us/op

  Histogram, us/op:
    [670.000, 675.000) = 0 
    [675.000, 680.000) = 1 
    [680.000, 685.000) = 1 
    [685.000, 690.000) = 2 
    [690.000, 695.000) = 1 
    [695.000, 700.000) = 1 
    [700.000, 705.000) = 2 
    [705.000, 710.000) = 1 
    [710.000, 715.000) = 0 
    [715.000, 720.000) = 0 
    [720.000, 725.000) = 0 
    [725.000, 730.000) = 0 
    [730.000, 735.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    679.378 us/op
     p(50.0000) =    693.353 us/op
     p(90.0000) =    729.901 us/op
     p(95.0000) =    732.475 us/op
     p(99.0000) =    732.475 us/op
     p(99.9000) =    732.475 us/op
     p(99.9900) =    732.475 us/op
     p(99.9990) =    732.475 us/op
     p(99.9999) =    732.475 us/op
    p(100.0000) =    732.475 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.375)

# Run progress: 88.64% complete, ETA 00:05:15
# Fork: 1 of 2
# Warmup Iteration   1: 2715.663 us/op
# Warmup Iteration   2: 2110.211 us/op
# Warmup Iteration   3: 2487.883 us/op
# Warmup Iteration   4: 1687.367 us/op
# Warmup Iteration   5: 1805.761 us/op
Iteration   1: 708.657 us/op
Iteration   2: 746.104 us/op
Iteration   3: 699.395 us/op
Iteration   4: 730.363 us/op
Iteration   5: 710.203 us/op

# Run progress: 88.83% complete, ETA 00:05:10
# Fork: 2 of 2
# Warmup Iteration   1: 2835.953 us/op
# Warmup Iteration   2: 2146.416 us/op
# Warmup Iteration   3: 2426.305 us/op
# Warmup Iteration   4: 1690.607 us/op
# Warmup Iteration   5: 1799.867 us/op
Iteration   1: 720.606 us/op
Iteration   2: 802.667 us/op
Iteration   3: 737.597 us/op
Iteration   4: 703.786 us/op
Iteration   5: 729.575 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    728.895 ±(99.9%) 45.482 us/op

  Histogram, us/op:
    [600.000, 625.000) = 0 
    [625.000, 650.000) = 0 
    [650.000, 675.000) = 0 
    [675.000, 700.000) = 1 
    [700.000, 725.000) = 4 
    [725.000, 750.000) = 4 
    [750.000, 775.000) = 0 
    [775.000, 800.000) = 0 
    [800.000, 825.000) = 1 
    [825.000, 850.000) = 0 
    [850.000, 875.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    699.395 us/op
     p(50.0000) =    725.091 us/op
     p(90.0000) =    797.011 us/op
     p(95.0000) =    802.667 us/op
     p(99.0000) =    802.667 us/op
     p(99.9000) =    802.667 us/op
     p(99.9900) =    802.667 us/op
     p(99.9990) =    802.667 us/op
     p(99.9999) =    802.667 us/op
    p(100.0000) =    802.667 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.5)

# Run progress: 89.02% complete, ETA 00:05:04
# Fork: 1 of 2
# Warmup Iteration   1: 2793.457 us/op
# Warmup Iteration   2: 2112.027 us/op
# Warmup Iteration   3: 2625.929 us/op
# Warmup Iteration   4: 1694.443 us/op
# Warmup Iteration   5: 1744.735 us/op
Iteration   1: 700.886 us/op
Iteration   2: 794.336 us/op
Iteration   3: 718.898 us/op
Iteration   4: 709.701 us/op
Iteration   5: 746.899 us/op

# Run progress: 89.20% complete, ETA 00:04:59
# Fork: 2 of 2
# Warmup Iteration   1: 2668.501 us/op
# Warmup Iteration   2: 2093.019 us/op
# Warmup Iteration   3: 2452.633 us/op
# Warmup Iteration   4: 1734.102 us/op
# Warmup Iteration   5: 1802.702 us/op
Iteration   1: 718.763 us/op
Iteration   2: 772.423 us/op
Iteration   3: 711.496 us/op
Iteration   4: 731.995 us/op
Iteration   5: 710.882 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    731.628 ±(99.9%) 46.240 us/op

  Histogram, us/op:
    [700.000, 710.000) = 2 
    [710.000, 720.000) = 4 
    [720.000, 730.000) = 0 
    [730.000, 740.000) = 1 
    [740.000, 750.000) = 1 
    [750.000, 760.000) = 0 
    [760.000, 770.000) = 0 
    [770.000, 780.000) = 1 
    [780.000, 790.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    700.886 us/op
     p(50.0000) =    718.831 us/op
     p(90.0000) =    792.145 us/op
     p(95.0000) =    794.336 us/op
     p(99.0000) =    794.336 us/op
     p(99.9000) =    794.336 us/op
     p(99.9900) =    794.336 us/op
     p(99.9990) =    794.336 us/op
     p(99.9999) =    794.336 us/op
    p(100.0000) =    794.336 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.625)

# Run progress: 89.39% complete, ETA 00:04:54
# Fork: 1 of 2
# Warmup Iteration   1: 2654.638 us/op
# Warmup Iteration   2: 2386.900 us/op
# Warmup Iteration   3: 2449.206 us/op
# Warmup Iteration   4: 1680.907 us/op
# Warmup Iteration   5: 1802.310 us/op
Iteration   1: 701.534 us/op
Iteration   2: 748.462 us/op
Iteration   3: 754.643 us/op
Iteration   4: 720.997 us/op
Iteration   5: 718.947 us/op

# Run progress: 89.58% complete, ETA 00:04:49
# Fork: 2 of 2
# Warmup Iteration   1: 2795.462 us/op
# Warmup Iteration   2: 2046.642 us/op
# Warmup Iteration   3: 2434.950 us/op
# Warmup Iteration   4: 1779.410 us/op
# Warmup Iteration   5: 1801.246 us/op
Iteration   1: 734.624 us/op
Iteration   2: 768.592 us/op
Iteration   3: 712.963 us/op
Iteration   4: 712.346 us/op
Iteration   5: 738.968 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    731.208 ±(99.9%) 32.426 us/op

  Histogram, us/op:
    [700.000, 705.000) = 1 
    [705.000, 710.000) = 0 
    [710.000, 715.000) = 2 
    [715.000, 720.000) = 1 
    [720.000, 725.000) = 1 
    [725.000, 730.000) = 0 
    [730.000, 735.000) = 1 
    [735.000, 740.000) = 1 
    [740.000, 745.000) = 0 
    [745.000, 750.000) = 1 
    [750.000, 755.000) = 1 
    [755.000, 760.000) = 0 
    [760.000, 765.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    701.534 us/op
     p(50.0000) =    727.811 us/op
     p(90.0000) =    767.197 us/op
     p(95.0000) =    768.592 us/op
     p(99.0000) =    768.592 us/op
     p(99.9000) =    768.592 us/op
     p(99.9900) =    768.592 us/op
     p(99.9990) =    768.592 us/op
     p(99.9999) =    768.592 us/op
    p(100.0000) =    768.592 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.75)

# Run progress: 89.77% complete, ETA 00:04:43
# Fork: 1 of 2
# Warmup Iteration   1: 2728.031 us/op
# Warmup Iteration   2: 2031.557 us/op
# Warmup Iteration   3: 2596.412 us/op
# Warmup Iteration   4: 1617.671 us/op
# Warmup Iteration   5: 1819.459 us/op
Iteration   1: 739.709 us/op
Iteration   2: 774.029 us/op
Iteration   3: 682.388 us/op
Iteration   4: 693.969 us/op
Iteration   5: 717.996 us/op

# Run progress: 89.96% complete, ETA 00:04:38
# Fork: 2 of 2
# Warmup Iteration   1: 2753.903 us/op
# Warmup Iteration   2: 2033.263 us/op
# Warmup Iteration   3: 2411.407 us/op
# Warmup Iteration   4: 1608.265 us/op
# Warmup Iteration   5: 1784.083 us/op
Iteration   1: 675.956 us/op
Iteration   2: 783.466 us/op
Iteration   3: 689.026 us/op
Iteration   4: 691.331 us/op
Iteration   5: 695.192 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    714.306 ±(99.9%) 58.433 us/op

  Histogram, us/op:
    [600.000, 612.500) = 0 
    [612.500, 625.000) = 0 
    [625.000, 637.500) = 0 
    [637.500, 650.000) = 0 
    [650.000, 662.500) = 0 
    [662.500, 675.000) = 0 
    [675.000, 687.500) = 2 
    [687.500, 700.000) = 4 
    [700.000, 712.500) = 0 
    [712.500, 725.000) = 1 
    [725.000, 737.500) = 0 
    [737.500, 750.000) = 1 
    [750.000, 762.500) = 0 
    [762.500, 775.000) = 1 
    [775.000, 787.500) = 1 

  Percentiles, us/op:
      p(0.0000) =    675.956 us/op
     p(50.0000) =    694.581 us/op
     p(90.0000) =    782.522 us/op
     p(95.0000) =    783.466 us/op
     p(99.0000) =    783.466 us/op
     p(99.9000) =    783.466 us/op
     p(99.9900) =    783.466 us/op
     p(99.9990) =    783.466 us/op
     p(99.9999) =    783.466 us/op
    p(100.0000) =    783.466 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.875)

# Run progress: 90.15% complete, ETA 00:04:33
# Fork: 1 of 2
# Warmup Iteration   1: 3275.410 us/op
# Warmup Iteration   2: 2020.882 us/op
# Warmup Iteration   3: 2410.577 us/op
# Warmup Iteration   4: 1671.713 us/op
# Warmup Iteration   5: 1774.738 us/op
Iteration   1: 668.449 us/op
Iteration   2: 752.492 us/op
Iteration   3: 796.159 us/op
Iteration   4: 698.451 us/op
Iteration   5: 715.307 us/op

# Run progress: 90.34% complete, ETA 00:04:28
# Fork: 2 of 2
# Warmup Iteration   1: 2624.948 us/op
# Warmup Iteration   2: 2061.760 us/op
# Warmup Iteration   3: 2417.613 us/op
# Warmup Iteration   4: 1627.304 us/op
# Warmup Iteration   5: 1943.431 us/op
Iteration   1: 719.954 us/op
Iteration   2: 781.690 us/op
Iteration   3: 694.782 us/op
Iteration   4: 693.589 us/op
Iteration   5: 729.539 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    725.041 ±(99.9%) 61.672 us/op

  Histogram, us/op:
    [600.000, 612.500) = 0 
    [612.500, 625.000) = 0 
    [625.000, 637.500) = 0 
    [637.500, 650.000) = 0 
    [650.000, 662.500) = 0 
    [662.500, 675.000) = 1 
    [675.000, 687.500) = 0 
    [687.500, 700.000) = 3 
    [700.000, 712.500) = 0 
    [712.500, 725.000) = 2 
    [725.000, 737.500) = 1 
    [737.500, 750.000) = 0 
    [750.000, 762.500) = 1 
    [762.500, 775.000) = 0 
    [775.000, 787.500) = 1 

  Percentiles, us/op:
      p(0.0000) =    668.449 us/op
     p(50.0000) =    717.631 us/op
     p(90.0000) =    794.712 us/op
     p(95.0000) =    796.159 us/op
     p(99.0000) =    796.159 us/op
     p(99.9000) =    796.159 us/op
     p(99.9900) =    796.159 us/op
     p(99.9990) =    796.159 us/op
     p(99.9999) =    796.159 us/op
    p(100.0000) =    796.159 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 1)

# Run progress: 90.53% complete, ETA 00:04:22
# Fork: 1 of 2
# Warmup Iteration   1: 2675.720 us/op
# Warmup Iteration   2: 2096.902 us/op
# Warmup Iteration   3: 2391.652 us/op
# Warmup Iteration   4: 1692.044 us/op
# Warmup Iteration   5: 1754.099 us/op
Iteration   1: 688.296 us/op
Iteration   2: 751.247 us/op
Iteration   3: 695.080 us/op
Iteration   4: 718.652 us/op
Iteration   5: 698.736 us/op

# Run progress: 90.72% complete, ETA 00:04:17
# Fork: 2 of 2
# Warmup Iteration   1: 2799.299 us/op
# Warmup Iteration   2: 2063.553 us/op
# Warmup Iteration   3: 2549.107 us/op
# Warmup Iteration   4: 1616.953 us/op
# Warmup Iteration   5: 1766.992 us/op
Iteration   1: 679.397 us/op
Iteration   2: 743.518 us/op
Iteration   3: 686.079 us/op
Iteration   4: 670.712 us/op
Iteration   5: 680.371 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    701.209 ±(99.9%) 41.793 us/op

  Histogram, us/op:
    [670.000, 675.000) = 1 
    [675.000, 680.000) = 1 
    [680.000, 685.000) = 1 
    [685.000, 690.000) = 2 
    [690.000, 695.000) = 0 
    [695.000, 700.000) = 2 
    [700.000, 705.000) = 0 
    [705.000, 710.000) = 0 
    [710.000, 715.000) = 0 
    [715.000, 720.000) = 1 
    [720.000, 725.000) = 0 
    [725.000, 730.000) = 0 
    [730.000, 735.000) = 0 
    [735.000, 740.000) = 0 
    [740.000, 745.000) = 1 
    [745.000, 750.000) = 0 
    [750.000, 755.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    670.712 us/op
     p(50.0000) =    691.688 us/op
     p(90.0000) =    750.474 us/op
     p(95.0000) =    751.247 us/op
     p(99.0000) =    751.247 us/op
     p(99.9000) =    751.247 us/op
     p(99.9900) =    751.247 us/op
     p(99.9990) =    751.247 us/op
     p(99.9999) =    751.247 us/op
    p(100.0000) =    751.247 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.125)

# Run progress: 90.91% complete, ETA 00:04:12
# Fork: 1 of 2
# Warmup Iteration   1: 3441.584 us/op
# Warmup Iteration   2: 3235.033 us/op
# Warmup Iteration   3: 2887.414 us/op
# Warmup Iteration   4: 2432.548 us/op
# Warmup Iteration   5: 2481.747 us/op
Iteration   1: 1390.236 us/op
Iteration   2: 1632.518 us/op
Iteration   3: 1403.028 us/op
Iteration   4: 1391.299 us/op
Iteration   5: 1429.980 us/op

# Run progress: 91.10% complete, ETA 00:04:07
# Fork: 2 of 2
# Warmup Iteration   1: 3598.455 us/op
# Warmup Iteration   2: 3169.380 us/op
# Warmup Iteration   3: 3108.031 us/op
# Warmup Iteration   4: 2456.116 us/op
# Warmup Iteration   5: 2413.783 us/op
Iteration   1: 1414.491 us/op
Iteration   2: 1485.224 us/op
Iteration   3: 1364.828 us/op
Iteration   4: 1384.389 us/op
Iteration   5: 1446.932 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1434.293 ±(99.9%) 117.692 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 1 
    [1375.000, 1400.000) = 3 
    [1400.000, 1425.000) = 2 
    [1425.000, 1450.000) = 2 
    [1450.000, 1475.000) = 0 
    [1475.000, 1500.000) = 1 
    [1500.000, 1525.000) = 0 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 0 
    [1575.000, 1600.000) = 0 
    [1600.000, 1625.000) = 0 
    [1625.000, 1650.000) = 1 
    [1650.000, 1675.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1364.828 us/op
     p(50.0000) =   1408.760 us/op
     p(90.0000) =   1617.789 us/op
     p(95.0000) =   1632.518 us/op
     p(99.0000) =   1632.518 us/op
     p(99.9000) =   1632.518 us/op
     p(99.9900) =   1632.518 us/op
     p(99.9990) =   1632.518 us/op
     p(99.9999) =   1632.518 us/op
    p(100.0000) =   1632.518 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.250)

# Run progress: 91.29% complete, ETA 00:04:01
# Fork: 1 of 2
# Warmup Iteration   1: 3628.774 us/op
# Warmup Iteration   2: 3359.004 us/op
# Warmup Iteration   3: 2466.605 us/op
# Warmup Iteration   4: 2409.112 us/op
# Warmup Iteration   5: 2423.345 us/op
Iteration   1: 1391.387 us/op
Iteration   2: 1404.111 us/op
Iteration   3: 1362.882 us/op
Iteration   4: 1345.693 us/op
Iteration   5: 1401.719 us/op

# Run progress: 91.48% complete, ETA 00:03:56
# Fork: 2 of 2
# Warmup Iteration   1: 3501.893 us/op
# Warmup Iteration   2: 3141.755 us/op
# Warmup Iteration   3: 3004.821 us/op
# Warmup Iteration   4: 2423.875 us/op
# Warmup Iteration   5: 2307.548 us/op
Iteration   1: 1391.539 us/op
Iteration   2: 1470.054 us/op
Iteration   3: 1353.771 us/op
Iteration   4: 1455.285 us/op
Iteration   5: 1362.797 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1393.924 ±(99.9%) 62.961 us/op

  Histogram, us/op:
    [1300.000, 1312.500) = 0 
    [1312.500, 1325.000) = 0 
    [1325.000, 1337.500) = 0 
    [1337.500, 1350.000) = 1 
    [1350.000, 1362.500) = 1 
    [1362.500, 1375.000) = 2 
    [1375.000, 1387.500) = 0 
    [1387.500, 1400.000) = 2 
    [1400.000, 1412.500) = 2 
    [1412.500, 1425.000) = 0 
    [1425.000, 1437.500) = 0 
    [1437.500, 1450.000) = 0 
    [1450.000, 1462.500) = 1 
    [1462.500, 1475.000) = 1 
    [1475.000, 1487.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1345.693 us/op
     p(50.0000) =   1391.463 us/op
     p(90.0000) =   1468.577 us/op
     p(95.0000) =   1470.054 us/op
     p(99.0000) =   1470.054 us/op
     p(99.9000) =   1470.054 us/op
     p(99.9900) =   1470.054 us/op
     p(99.9990) =   1470.054 us/op
     p(99.9999) =   1470.054 us/op
    p(100.0000) =   1470.054 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.375)

# Run progress: 91.67% complete, ETA 00:03:51
# Fork: 1 of 2
# Warmup Iteration   1: 3567.298 us/op
# Warmup Iteration   2: 3314.414 us/op
# Warmup Iteration   3: 2627.474 us/op
# Warmup Iteration   4: 2503.468 us/op
# Warmup Iteration   5: 2434.532 us/op
Iteration   1: 1411.348 us/op
Iteration   2: 1429.179 us/op
Iteration   3: 1387.222 us/op
Iteration   4: 1383.000 us/op
Iteration   5: 1382.803 us/op

# Run progress: 91.86% complete, ETA 00:03:46
# Fork: 2 of 2
# Warmup Iteration   1: 3519.308 us/op
# Warmup Iteration   2: 3059.938 us/op
# Warmup Iteration   3: 2787.804 us/op
# Warmup Iteration   4: 2428.899 us/op
# Warmup Iteration   5: 2407.984 us/op
Iteration   1: 1395.528 us/op
Iteration   2: 1404.939 us/op
Iteration   3: 1393.301 us/op
Iteration   4: 1443.710 us/op
Iteration   5: 1405.164 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1403.619 ±(99.9%) 30.337 us/op

  Histogram, us/op:
    [1380.000, 1385.000) = 2 
    [1385.000, 1390.000) = 1 
    [1390.000, 1395.000) = 1 
    [1395.000, 1400.000) = 1 
    [1400.000, 1405.000) = 1 
    [1405.000, 1410.000) = 1 
    [1410.000, 1415.000) = 1 
    [1415.000, 1420.000) = 0 
    [1420.000, 1425.000) = 0 
    [1425.000, 1430.000) = 1 
    [1430.000, 1435.000) = 0 
    [1435.000, 1440.000) = 0 
    [1440.000, 1445.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1382.803 us/op
     p(50.0000) =   1400.234 us/op
     p(90.0000) =   1442.257 us/op
     p(95.0000) =   1443.710 us/op
     p(99.0000) =   1443.710 us/op
     p(99.9000) =   1443.710 us/op
     p(99.9900) =   1443.710 us/op
     p(99.9990) =   1443.710 us/op
     p(99.9999) =   1443.710 us/op
    p(100.0000) =   1443.710 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.5)

# Run progress: 92.05% complete, ETA 00:03:40
# Fork: 1 of 2
# Warmup Iteration   1: 3526.563 us/op
# Warmup Iteration   2: 3196.859 us/op
# Warmup Iteration   3: 2978.582 us/op
# Warmup Iteration   4: 2404.308 us/op
# Warmup Iteration   5: 2383.689 us/op
Iteration   1: 1364.799 us/op
Iteration   2: 1493.720 us/op
Iteration   3: 1389.971 us/op
Iteration   4: 1351.455 us/op
Iteration   5: 1393.474 us/op

# Run progress: 92.23% complete, ETA 00:03:35
# Fork: 2 of 2
# Warmup Iteration   1: 3460.968 us/op
# Warmup Iteration   2: 3107.650 us/op
# Warmup Iteration   3: 2912.445 us/op
# Warmup Iteration   4: 2452.027 us/op
# Warmup Iteration   5: 2458.105 us/op
Iteration   1: 1391.085 us/op
Iteration   2: 1465.599 us/op
Iteration   3: 1361.540 us/op
Iteration   4: 1379.921 us/op
Iteration   5: 1374.319 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1396.588 ±(99.9%) 70.067 us/op

  Histogram, us/op:
    [1300.000, 1312.500) = 0 
    [1312.500, 1325.000) = 0 
    [1325.000, 1337.500) = 0 
    [1337.500, 1350.000) = 0 
    [1350.000, 1362.500) = 2 
    [1362.500, 1375.000) = 2 
    [1375.000, 1387.500) = 1 
    [1387.500, 1400.000) = 3 
    [1400.000, 1412.500) = 0 
    [1412.500, 1425.000) = 0 
    [1425.000, 1437.500) = 0 
    [1437.500, 1450.000) = 0 
    [1450.000, 1462.500) = 0 
    [1462.500, 1475.000) = 1 
    [1475.000, 1487.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1351.455 us/op
     p(50.0000) =   1384.946 us/op
     p(90.0000) =   1490.908 us/op
     p(95.0000) =   1493.720 us/op
     p(99.0000) =   1493.720 us/op
     p(99.9000) =   1493.720 us/op
     p(99.9900) =   1493.720 us/op
     p(99.9990) =   1493.720 us/op
     p(99.9999) =   1493.720 us/op
    p(100.0000) =   1493.720 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.625)

# Run progress: 92.42% complete, ETA 00:03:30
# Fork: 1 of 2
# Warmup Iteration   1: 3545.968 us/op
# Warmup Iteration   2: 3281.176 us/op
# Warmup Iteration   3: 2914.630 us/op
# Warmup Iteration   4: 2388.606 us/op
# Warmup Iteration   5: 2366.647 us/op
Iteration   1: 1410.326 us/op
Iteration   2: 1424.998 us/op
Iteration   3: 1362.982 us/op
Iteration   4: 1339.156 us/op
Iteration   5: 1454.207 us/op

# Run progress: 92.61% complete, ETA 00:03:25
# Fork: 2 of 2
# Warmup Iteration   1: 3574.086 us/op
# Warmup Iteration   2: 3106.194 us/op
# Warmup Iteration   3: 3105.843 us/op
# Warmup Iteration   4: 2495.068 us/op
# Warmup Iteration   5: 2399.189 us/op
Iteration   1: 1387.157 us/op
Iteration   2: 1453.359 us/op
Iteration   3: 1403.578 us/op
Iteration   4: 1378.771 us/op
Iteration   5: 1402.984 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1401.752 ±(99.9%) 55.654 us/op

  Histogram, us/op:
    [1300.000, 1312.500) = 0 
    [1312.500, 1325.000) = 0 
    [1325.000, 1337.500) = 0 
    [1337.500, 1350.000) = 1 
    [1350.000, 1362.500) = 0 
    [1362.500, 1375.000) = 1 
    [1375.000, 1387.500) = 2 
    [1387.500, 1400.000) = 0 
    [1400.000, 1412.500) = 3 
    [1412.500, 1425.000) = 1 
    [1425.000, 1437.500) = 0 
    [1437.500, 1450.000) = 0 
    [1450.000, 1462.500) = 2 
    [1462.500, 1475.000) = 0 
    [1475.000, 1487.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1339.156 us/op
     p(50.0000) =   1403.281 us/op
     p(90.0000) =   1454.122 us/op
     p(95.0000) =   1454.207 us/op
     p(99.0000) =   1454.207 us/op
     p(99.9000) =   1454.207 us/op
     p(99.9900) =   1454.207 us/op
     p(99.9990) =   1454.207 us/op
     p(99.9999) =   1454.207 us/op
    p(100.0000) =   1454.207 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.75)

# Run progress: 92.80% complete, ETA 00:03:19
# Fork: 1 of 2
# Warmup Iteration   1: 3418.652 us/op
# Warmup Iteration   2: 3103.457 us/op
# Warmup Iteration   3: 2930.357 us/op
# Warmup Iteration   4: 2406.921 us/op
# Warmup Iteration   5: 2455.385 us/op
Iteration   1: 1408.703 us/op
Iteration   2: 1537.420 us/op
Iteration   3: 1469.201 us/op
Iteration   4: 1458.421 us/op
Iteration   5: 1514.670 us/op

# Run progress: 92.99% complete, ETA 00:03:14
# Fork: 2 of 2
# Warmup Iteration   1: 3562.811 us/op
# Warmup Iteration   2: 3348.481 us/op
# Warmup Iteration   3: 2490.358 us/op
# Warmup Iteration   4: 2401.520 us/op
# Warmup Iteration   5: 2421.062 us/op
Iteration   1: 1364.867 us/op
Iteration   2: 1377.205 us/op
Iteration   3: 1340.823 us/op
Iteration   4: 1401.226 us/op
Iteration   5: 1577.010 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1444.955 ±(99.9%) 119.991 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 1 
    [1350.000, 1375.000) = 1 
    [1375.000, 1400.000) = 1 
    [1400.000, 1425.000) = 2 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 2 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 1 
    [1525.000, 1550.000) = 1 
    [1550.000, 1575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1340.823 us/op
     p(50.0000) =   1433.562 us/op
     p(90.0000) =   1573.051 us/op
     p(95.0000) =   1577.010 us/op
     p(99.0000) =   1577.010 us/op
     p(99.9000) =   1577.010 us/op
     p(99.9900) =   1577.010 us/op
     p(99.9990) =   1577.010 us/op
     p(99.9999) =   1577.010 us/op
    p(100.0000) =   1577.010 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.875)

# Run progress: 93.18% complete, ETA 00:03:09
# Fork: 1 of 2
# Warmup Iteration   1: 3445.528 us/op
# Warmup Iteration   2: 3157.977 us/op
# Warmup Iteration   3: 2899.031 us/op
# Warmup Iteration   4: 2421.258 us/op
# Warmup Iteration   5: 2400.705 us/op
Iteration   1: 1371.915 us/op
Iteration   2: 1405.595 us/op
Iteration   3: 1400.825 us/op
Iteration   4: 1395.309 us/op
Iteration   5: 1406.890 us/op

# Run progress: 93.37% complete, ETA 00:03:04
# Fork: 2 of 2
# Warmup Iteration   1: 3776.379 us/op
# Warmup Iteration   2: 3203.626 us/op
# Warmup Iteration   3: 2888.215 us/op
# Warmup Iteration   4: 2423.685 us/op
# Warmup Iteration   5: 2395.135 us/op
Iteration   1: 1435.891 us/op
Iteration   2: 1421.407 us/op
Iteration   3: 1378.440 us/op
Iteration   4: 1454.655 us/op
Iteration   5: 1405.010 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1407.594 ±(99.9%) 37.500 us/op

  Histogram, us/op:
    [1370.000, 1375.000) = 1 
    [1375.000, 1380.000) = 1 
    [1380.000, 1385.000) = 0 
    [1385.000, 1390.000) = 0 
    [1390.000, 1395.000) = 0 
    [1395.000, 1400.000) = 1 
    [1400.000, 1405.000) = 1 
    [1405.000, 1410.000) = 3 
    [1410.000, 1415.000) = 0 
    [1415.000, 1420.000) = 0 
    [1420.000, 1425.000) = 1 
    [1425.000, 1430.000) = 0 
    [1430.000, 1435.000) = 0 
    [1435.000, 1440.000) = 1 
    [1440.000, 1445.000) = 0 
    [1445.000, 1450.000) = 0 
    [1450.000, 1455.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1371.915 us/op
     p(50.0000) =   1405.303 us/op
     p(90.0000) =   1452.779 us/op
     p(95.0000) =   1454.655 us/op
     p(99.0000) =   1454.655 us/op
     p(99.9000) =   1454.655 us/op
     p(99.9900) =   1454.655 us/op
     p(99.9990) =   1454.655 us/op
     p(99.9999) =   1454.655 us/op
    p(100.0000) =   1454.655 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 1)

# Run progress: 93.56% complete, ETA 00:02:58
# Fork: 1 of 2
# Warmup Iteration   1: 3438.827 us/op
# Warmup Iteration   2: 3165.347 us/op
# Warmup Iteration   3: 3069.448 us/op
# Warmup Iteration   4: 2461.425 us/op
# Warmup Iteration   5: 2358.756 us/op
Iteration   1: 1418.142 us/op
Iteration   2: 1474.223 us/op
Iteration   3: 1331.444 us/op
Iteration   4: 1396.185 us/op
Iteration   5: 1428.381 us/op

# Run progress: 93.75% complete, ETA 00:02:53
# Fork: 2 of 2
# Warmup Iteration   1: 3628.483 us/op
# Warmup Iteration   2: 3255.433 us/op
# Warmup Iteration   3: 3124.425 us/op
# Warmup Iteration   4: 2407.771 us/op
# Warmup Iteration   5: 2415.573 us/op
Iteration   1: 1396.467 us/op
Iteration   2: 1463.308 us/op
Iteration   3: 1403.808 us/op
Iteration   4: 1379.897 us/op
Iteration   5: 1388.949 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1408.080 ±(99.9%) 62.267 us/op

  Histogram, us/op:
    [1300.000, 1312.500) = 0 
    [1312.500, 1325.000) = 0 
    [1325.000, 1337.500) = 1 
    [1337.500, 1350.000) = 0 
    [1350.000, 1362.500) = 0 
    [1362.500, 1375.000) = 0 
    [1375.000, 1387.500) = 1 
    [1387.500, 1400.000) = 3 
    [1400.000, 1412.500) = 1 
    [1412.500, 1425.000) = 1 
    [1425.000, 1437.500) = 1 
    [1437.500, 1450.000) = 0 
    [1450.000, 1462.500) = 0 
    [1462.500, 1475.000) = 2 
    [1475.000, 1487.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1331.444 us/op
     p(50.0000) =   1400.138 us/op
     p(90.0000) =   1473.132 us/op
     p(95.0000) =   1474.223 us/op
     p(99.0000) =   1474.223 us/op
     p(99.9000) =   1474.223 us/op
     p(99.9900) =   1474.223 us/op
     p(99.9990) =   1474.223 us/op
     p(99.9999) =   1474.223 us/op
    p(100.0000) =   1474.223 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.125)

# Run progress: 93.94% complete, ETA 00:02:48
# Fork: 1 of 2
# Warmup Iteration   1: 3442.427 us/op
# Warmup Iteration   2: 3317.569 us/op
# Warmup Iteration   3: 2867.176 us/op
# Warmup Iteration   4: 2402.817 us/op
# Warmup Iteration   5: 2368.896 us/op
Iteration   1: 1395.209 us/op
Iteration   2: 1399.274 us/op
Iteration   3: 1375.752 us/op
Iteration   4: 1390.731 us/op
Iteration   5: 1512.619 us/op

# Run progress: 94.13% complete, ETA 00:02:43
# Fork: 2 of 2
# Warmup Iteration   1: 3606.091 us/op
# Warmup Iteration   2: 3078.552 us/op
# Warmup Iteration   3: 3050.876 us/op
# Warmup Iteration   4: 2397.462 us/op
# Warmup Iteration   5: 2519.475 us/op
Iteration   1: 1352.086 us/op
Iteration   2: 1447.068 us/op
Iteration   3: 1390.746 us/op
Iteration   4: 1402.996 us/op
Iteration   5: 1414.708 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1408.119 ±(99.9%) 66.749 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 1 
    [1375.000, 1400.000) = 5 
    [1400.000, 1425.000) = 2 
    [1425.000, 1450.000) = 1 
    [1450.000, 1475.000) = 0 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 1 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1352.086 us/op
     p(50.0000) =   1397.242 us/op
     p(90.0000) =   1506.064 us/op
     p(95.0000) =   1512.619 us/op
     p(99.0000) =   1512.619 us/op
     p(99.9000) =   1512.619 us/op
     p(99.9900) =   1512.619 us/op
     p(99.9990) =   1512.619 us/op
     p(99.9999) =   1512.619 us/op
    p(100.0000) =   1512.619 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.250)

# Run progress: 94.32% complete, ETA 00:02:37
# Fork: 1 of 2
# Warmup Iteration   1: 3679.457 us/op
# Warmup Iteration   2: 3057.916 us/op
# Warmup Iteration   3: 2826.361 us/op
# Warmup Iteration   4: 2384.393 us/op
# Warmup Iteration   5: 2439.179 us/op
Iteration   1: 1381.854 us/op
Iteration   2: 1486.149 us/op
Iteration   3: 1381.582 us/op
Iteration   4: 1381.830 us/op
Iteration   5: 1405.907 us/op

# Run progress: 94.51% complete, ETA 00:02:32
# Fork: 2 of 2
# Warmup Iteration   1: 3410.538 us/op
# Warmup Iteration   2: 3145.799 us/op
# Warmup Iteration   3: 2973.920 us/op
# Warmup Iteration   4: 2454.969 us/op
# Warmup Iteration   5: 2352.408 us/op
Iteration   1: 1367.067 us/op
Iteration   2: 1471.890 us/op
Iteration   3: 1389.652 us/op
Iteration   4: 1381.845 us/op
Iteration   5: 1380.606 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1402.838 ±(99.9%) 62.620 us/op

  Histogram, us/op:
    [1300.000, 1312.500) = 0 
    [1312.500, 1325.000) = 0 
    [1325.000, 1337.500) = 0 
    [1337.500, 1350.000) = 0 
    [1350.000, 1362.500) = 0 
    [1362.500, 1375.000) = 1 
    [1375.000, 1387.500) = 5 
    [1387.500, 1400.000) = 1 
    [1400.000, 1412.500) = 1 
    [1412.500, 1425.000) = 0 
    [1425.000, 1437.500) = 0 
    [1437.500, 1450.000) = 0 
    [1450.000, 1462.500) = 0 
    [1462.500, 1475.000) = 1 
    [1475.000, 1487.500) = 1 

  Percentiles, us/op:
      p(0.0000) =   1367.067 us/op
     p(50.0000) =   1381.850 us/op
     p(90.0000) =   1484.723 us/op
     p(95.0000) =   1486.149 us/op
     p(99.0000) =   1486.149 us/op
     p(99.9000) =   1486.149 us/op
     p(99.9900) =   1486.149 us/op
     p(99.9990) =   1486.149 us/op
     p(99.9999) =   1486.149 us/op
    p(100.0000) =   1486.149 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.375)

# Run progress: 94.70% complete, ETA 00:02:27
# Fork: 1 of 2
# Warmup Iteration   1: 3586.863 us/op
# Warmup Iteration   2: 3293.291 us/op
# Warmup Iteration   3: 2878.797 us/op
# Warmup Iteration   4: 2443.404 us/op
# Warmup Iteration   5: 2374.466 us/op
Iteration   1: 1387.416 us/op
Iteration   2: 1421.490 us/op
Iteration   3: 1388.249 us/op
Iteration   4: 1417.066 us/op
Iteration   5: 1447.865 us/op

# Run progress: 94.89% complete, ETA 00:02:21
# Fork: 2 of 2
# Warmup Iteration   1: 3383.245 us/op
# Warmup Iteration   2: 3074.028 us/op
# Warmup Iteration   3: 3024.151 us/op
# Warmup Iteration   4: 2329.683 us/op
# Warmup Iteration   5: 2361.401 us/op
Iteration   1: 1423.591 us/op
Iteration   2: 1466.766 us/op
Iteration   3: 1396.758 us/op
Iteration   4: 1415.382 us/op
Iteration   5: 1406.874 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1417.146 ±(99.9%) 38.079 us/op

  Histogram, us/op:
    [1380.000, 1385.000) = 0 
    [1385.000, 1390.000) = 2 
    [1390.000, 1395.000) = 0 
    [1395.000, 1400.000) = 1 
    [1400.000, 1405.000) = 0 
    [1405.000, 1410.000) = 1 
    [1410.000, 1415.000) = 0 
    [1415.000, 1420.000) = 2 
    [1420.000, 1425.000) = 2 
    [1425.000, 1430.000) = 0 
    [1430.000, 1435.000) = 0 
    [1435.000, 1440.000) = 0 
    [1440.000, 1445.000) = 0 
    [1445.000, 1450.000) = 1 
    [1450.000, 1455.000) = 0 
    [1455.000, 1460.000) = 0 
    [1460.000, 1465.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1387.416 us/op
     p(50.0000) =   1416.224 us/op
     p(90.0000) =   1464.876 us/op
     p(95.0000) =   1466.766 us/op
     p(99.0000) =   1466.766 us/op
     p(99.9000) =   1466.766 us/op
     p(99.9900) =   1466.766 us/op
     p(99.9990) =   1466.766 us/op
     p(99.9999) =   1466.766 us/op
    p(100.0000) =   1466.766 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.5)

# Run progress: 95.08% complete, ETA 00:02:16
# Fork: 1 of 2
# Warmup Iteration   1: 3436.864 us/op
# Warmup Iteration   2: 3130.272 us/op
# Warmup Iteration   3: 3071.075 us/op
# Warmup Iteration   4: 2428.034 us/op
# Warmup Iteration   5: 2382.953 us/op
Iteration   1: 1387.654 us/op
Iteration   2: 1623.804 us/op
Iteration   3: 1484.598 us/op
Iteration   4: 1589.424 us/op
Iteration   5: 1702.467 us/op

# Run progress: 95.27% complete, ETA 00:02:11
# Fork: 2 of 2
# Warmup Iteration   1: 4158.435 us/op
# Warmup Iteration   2: 3279.516 us/op
# Warmup Iteration   3: 2819.214 us/op
# Warmup Iteration   4: 2473.310 us/op
# Warmup Iteration   5: 2429.528 us/op
Iteration   1: 1509.163 us/op
Iteration   2: 1461.639 us/op
Iteration   3: 1385.110 us/op
Iteration   4: 1400.319 us/op
Iteration   5: 1433.088 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1497.727 ±(99.9%) 164.302 us/op

  Histogram, us/op:
    [1300.000, 1350.000) = 0 
    [1350.000, 1400.000) = 2 
    [1400.000, 1450.000) = 2 
    [1450.000, 1500.000) = 2 
    [1500.000, 1550.000) = 1 
    [1550.000, 1600.000) = 1 
    [1600.000, 1650.000) = 1 
    [1650.000, 1700.000) = 0 
    [1700.000, 1750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1385.110 us/op
     p(50.0000) =   1473.119 us/op
     p(90.0000) =   1694.601 us/op
     p(95.0000) =   1702.467 us/op
     p(99.0000) =   1702.467 us/op
     p(99.9000) =   1702.467 us/op
     p(99.9900) =   1702.467 us/op
     p(99.9990) =   1702.467 us/op
     p(99.9999) =   1702.467 us/op
    p(100.0000) =   1702.467 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.625)

# Run progress: 95.45% complete, ETA 00:02:06
# Fork: 1 of 2
# Warmup Iteration   1: 3630.678 us/op
# Warmup Iteration   2: 3215.203 us/op
# Warmup Iteration   3: 2963.835 us/op
# Warmup Iteration   4: 2391.495 us/op
# Warmup Iteration   5: 2399.165 us/op
Iteration   1: 1353.644 us/op
Iteration   2: 1413.038 us/op
Iteration   3: 1373.208 us/op
Iteration   4: 1453.405 us/op
Iteration   5: 1368.177 us/op

# Run progress: 95.64% complete, ETA 00:02:00
# Fork: 2 of 2
# Warmup Iteration   1: 3622.037 us/op
# Warmup Iteration   2: 3559.889 us/op
# Warmup Iteration   3: 2503.214 us/op
# Warmup Iteration   4: 2491.467 us/op
# Warmup Iteration   5: 2478.425 us/op
Iteration   1: 1420.941 us/op
Iteration   2: 1541.689 us/op
Iteration   3: 1454.625 us/op
Iteration   4: 1377.685 us/op
Iteration   5: 1616.177 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1437.259 ±(99.9%) 127.240 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 3 
    [1375.000, 1400.000) = 1 
    [1400.000, 1425.000) = 2 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 2 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 0 
    [1525.000, 1550.000) = 1 
    [1550.000, 1575.000) = 0 
    [1575.000, 1600.000) = 0 
    [1600.000, 1625.000) = 1 
    [1625.000, 1650.000) = 0 
    [1650.000, 1675.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1353.644 us/op
     p(50.0000) =   1416.990 us/op
     p(90.0000) =   1608.728 us/op
     p(95.0000) =   1616.177 us/op
     p(99.0000) =   1616.177 us/op
     p(99.9000) =   1616.177 us/op
     p(99.9900) =   1616.177 us/op
     p(99.9990) =   1616.177 us/op
     p(99.9999) =   1616.177 us/op
    p(100.0000) =   1616.177 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.75)

# Run progress: 95.83% complete, ETA 00:01:55
# Fork: 1 of 2
# Warmup Iteration   1: 3320.269 us/op
# Warmup Iteration   2: 3114.344 us/op
# Warmup Iteration   3: 2916.982 us/op
# Warmup Iteration   4: 2391.358 us/op
# Warmup Iteration   5: 2381.759 us/op
Iteration   1: 1443.066 us/op
Iteration   2: 1444.943 us/op
Iteration   3: 1381.098 us/op
Iteration   4: 1398.245 us/op
Iteration   5: 1430.662 us/op

# Run progress: 96.02% complete, ETA 00:01:50
# Fork: 2 of 2
# Warmup Iteration   1: 3784.578 us/op
# Warmup Iteration   2: 3545.431 us/op
# Warmup Iteration   3: 2572.498 us/op
# Warmup Iteration   4: 2457.826 us/op
# Warmup Iteration   5: 2503.099 us/op
Iteration   1: 1457.993 us/op
Iteration   2: 1464.952 us/op
Iteration   3: 1442.847 us/op
Iteration   4: 1508.778 us/op
Iteration   5: 1455.491 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1442.808 ±(99.9%) 53.286 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 0 
    [1375.000, 1400.000) = 2 
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 4 
    [1450.000, 1475.000) = 3 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 1 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1381.098 us/op
     p(50.0000) =   1444.005 us/op
     p(90.0000) =   1504.395 us/op
     p(95.0000) =   1508.778 us/op
     p(99.0000) =   1508.778 us/op
     p(99.9000) =   1508.778 us/op
     p(99.9900) =   1508.778 us/op
     p(99.9990) =   1508.778 us/op
     p(99.9999) =   1508.778 us/op
    p(100.0000) =   1508.778 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.875)

# Run progress: 96.21% complete, ETA 00:01:45
# Fork: 1 of 2
# Warmup Iteration   1: 3436.008 us/op
# Warmup Iteration   2: 3169.721 us/op
# Warmup Iteration   3: 3078.336 us/op
# Warmup Iteration   4: 2402.898 us/op
# Warmup Iteration   5: 2339.209 us/op
Iteration   1: 1360.469 us/op
Iteration   2: 1401.843 us/op
Iteration   3: 1360.793 us/op
Iteration   4: 1335.211 us/op
Iteration   5: 1345.496 us/op

# Run progress: 96.40% complete, ETA 00:01:39
# Fork: 2 of 2
# Warmup Iteration   1: 3416.366 us/op
# Warmup Iteration   2: 3118.891 us/op
# Warmup Iteration   3: 2849.370 us/op
# Warmup Iteration   4: 2373.634 us/op
# Warmup Iteration   5: 2351.981 us/op
Iteration   1: 1348.349 us/op
Iteration   2: 1435.582 us/op
Iteration   3: 1340.995 us/op
Iteration   4: 1355.378 us/op
Iteration   5: 1386.118 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1367.023 ±(99.9%) 47.799 us/op

  Histogram, us/op:
    [1300.000, 1312.500) = 0 
    [1312.500, 1325.000) = 0 
    [1325.000, 1337.500) = 1 
    [1337.500, 1350.000) = 3 
    [1350.000, 1362.500) = 3 
    [1362.500, 1375.000) = 0 
    [1375.000, 1387.500) = 1 
    [1387.500, 1400.000) = 0 
    [1400.000, 1412.500) = 1 
    [1412.500, 1425.000) = 0 
    [1425.000, 1437.500) = 1 
    [1437.500, 1450.000) = 0 
    [1450.000, 1462.500) = 0 
    [1462.500, 1475.000) = 0 
    [1475.000, 1487.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1335.211 us/op
     p(50.0000) =   1357.923 us/op
     p(90.0000) =   1432.208 us/op
     p(95.0000) =   1435.582 us/op
     p(99.0000) =   1435.582 us/op
     p(99.9000) =   1435.582 us/op
     p(99.9900) =   1435.582 us/op
     p(99.9990) =   1435.582 us/op
     p(99.9999) =   1435.582 us/op
    p(100.0000) =   1435.582 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 1)

# Run progress: 96.59% complete, ETA 00:01:34
# Fork: 1 of 2
# Warmup Iteration   1: 3386.201 us/op
# Warmup Iteration   2: 3314.482 us/op
# Warmup Iteration   3: 2918.823 us/op
# Warmup Iteration   4: 2409.643 us/op
# Warmup Iteration   5: 2336.322 us/op
Iteration   1: 1387.238 us/op
Iteration   2: 1451.215 us/op
Iteration   3: 1359.758 us/op
Iteration   4: 1375.818 us/op
Iteration   5: 1528.640 us/op

# Run progress: 96.78% complete, ETA 00:01:29
# Fork: 2 of 2
# Warmup Iteration   1: 3614.222 us/op
# Warmup Iteration   2: 3430.149 us/op
# Warmup Iteration   3: 2611.318 us/op
# Warmup Iteration   4: 2626.521 us/op
# Warmup Iteration   5: 2363.038 us/op
Iteration   1: 1373.600 us/op
Iteration   2: 1434.811 us/op
Iteration   3: 1391.527 us/op
Iteration   4: 1369.958 us/op
Iteration   5: 1351.709 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1402.427 ±(99.9%) 82.338 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 4 
    [1375.000, 1400.000) = 3 
    [1400.000, 1425.000) = 0 
    [1425.000, 1450.000) = 1 
    [1450.000, 1475.000) = 1 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 0 
    [1525.000, 1550.000) = 1 
    [1550.000, 1575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1351.709 us/op
     p(50.0000) =   1381.528 us/op
     p(90.0000) =   1520.898 us/op
     p(95.0000) =   1528.640 us/op
     p(99.0000) =   1528.640 us/op
     p(99.9000) =   1528.640 us/op
     p(99.9900) =   1528.640 us/op
     p(99.9990) =   1528.640 us/op
     p(99.9999) =   1528.640 us/op
    p(100.0000) =   1528.640 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.125)

# Run progress: 96.97% complete, ETA 00:01:24
# Fork: 1 of 2
# Warmup Iteration   1: 4929.509 us/op
# Warmup Iteration   2: 4871.511 us/op
# Warmup Iteration   3: 3998.009 us/op
# Warmup Iteration   4: 3955.303 us/op
# Warmup Iteration   5: 3928.568 us/op
Iteration   1: 2732.938 us/op
Iteration   2: 2771.792 us/op
Iteration   3: 2744.133 us/op
Iteration   4: 2861.039 us/op
Iteration   5: 2900.533 us/op

# Run progress: 97.16% complete, ETA 00:01:18
# Fork: 2 of 2
# Warmup Iteration   1: 4903.269 us/op
# Warmup Iteration   2: 4934.672 us/op
# Warmup Iteration   3: 4100.686 us/op
# Warmup Iteration   4: 3997.675 us/op
# Warmup Iteration   5: 3990.601 us/op
Iteration   1: 2781.813 us/op
Iteration   2: 2819.493 us/op
Iteration   3: 2858.975 us/op
Iteration   4: 2794.364 us/op
Iteration   5: 2770.840 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2803.592 ±(99.9%) 83.097 us/op

  Histogram, us/op:
    [2700.000, 2725.000) = 0 
    [2725.000, 2750.000) = 2 
    [2750.000, 2775.000) = 2 
    [2775.000, 2800.000) = 2 
    [2800.000, 2825.000) = 1 
    [2825.000, 2850.000) = 0 
    [2850.000, 2875.000) = 2 
    [2875.000, 2900.000) = 0 
    [2900.000, 2925.000) = 1 
    [2925.000, 2950.000) = 0 
    [2950.000, 2975.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2732.938 us/op
     p(50.0000) =   2788.089 us/op
     p(90.0000) =   2896.584 us/op
     p(95.0000) =   2900.533 us/op
     p(99.0000) =   2900.533 us/op
     p(99.9000) =   2900.533 us/op
     p(99.9900) =   2900.533 us/op
     p(99.9990) =   2900.533 us/op
     p(99.9999) =   2900.533 us/op
    p(100.0000) =   2900.533 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.250)

# Run progress: 97.35% complete, ETA 00:01:13
# Fork: 1 of 2
# Warmup Iteration   1: 4964.558 us/op
# Warmup Iteration   2: 4927.839 us/op
# Warmup Iteration   3: 4060.604 us/op
# Warmup Iteration   4: 4001.469 us/op
# Warmup Iteration   5: 4023.655 us/op
Iteration   1: 2696.625 us/op
Iteration   2: 2758.812 us/op
Iteration   3: 2732.539 us/op
Iteration   4: 2713.326 us/op
Iteration   5: 2737.575 us/op

# Run progress: 97.54% complete, ETA 00:01:08
# Fork: 2 of 2
# Warmup Iteration   1: 5102.488 us/op
# Warmup Iteration   2: 5201.782 us/op
# Warmup Iteration   3: 4119.977 us/op
# Warmup Iteration   4: 3931.168 us/op
# Warmup Iteration   5: 4024.061 us/op
Iteration   1: 2742.159 us/op
Iteration   2: 2873.554 us/op
Iteration   3: 2780.868 us/op
Iteration   4: 2796.734 us/op
Iteration   5: 2827.944 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2766.014 ±(99.9%) 82.355 us/op

  Histogram, us/op:
    [2600.000, 2625.000) = 0 
    [2625.000, 2650.000) = 0 
    [2650.000, 2675.000) = 0 
    [2675.000, 2700.000) = 1 
    [2700.000, 2725.000) = 1 
    [2725.000, 2750.000) = 3 
    [2750.000, 2775.000) = 1 
    [2775.000, 2800.000) = 2 
    [2800.000, 2825.000) = 0 
    [2825.000, 2850.000) = 1 
    [2850.000, 2875.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2696.625 us/op
     p(50.0000) =   2750.486 us/op
     p(90.0000) =   2868.993 us/op
     p(95.0000) =   2873.554 us/op
     p(99.0000) =   2873.554 us/op
     p(99.9000) =   2873.554 us/op
     p(99.9900) =   2873.554 us/op
     p(99.9990) =   2873.554 us/op
     p(99.9999) =   2873.554 us/op
    p(100.0000) =   2873.554 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.375)

# Run progress: 97.73% complete, ETA 00:01:03
# Fork: 1 of 2
# Warmup Iteration   1: 4980.724 us/op
# Warmup Iteration   2: 5010.536 us/op
# Warmup Iteration   3: 4046.083 us/op
# Warmup Iteration   4: 4024.986 us/op
# Warmup Iteration   5: 3881.866 us/op
Iteration   1: 2801.190 us/op
Iteration   2: 2832.979 us/op
Iteration   3: 2817.613 us/op
Iteration   4: 2854.829 us/op
Iteration   5: 2909.751 us/op

# Run progress: 97.92% complete, ETA 00:00:57
# Fork: 2 of 2
# Warmup Iteration   1: 4948.592 us/op
# Warmup Iteration   2: 4923.880 us/op
# Warmup Iteration   3: 4325.166 us/op
# Warmup Iteration   4: 4028.152 us/op
# Warmup Iteration   5: 3866.206 us/op
Iteration   1: 2693.350 us/op
Iteration   2: 2747.303 us/op
Iteration   3: 2783.403 us/op
Iteration   4: 2691.932 us/op
Iteration   5: 2761.206 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2789.356 ±(99.9%) 104.414 us/op

  Histogram, us/op:
    [2600.000, 2625.000) = 0 
    [2625.000, 2650.000) = 0 
    [2650.000, 2675.000) = 0 
    [2675.000, 2700.000) = 2 
    [2700.000, 2725.000) = 0 
    [2725.000, 2750.000) = 1 
    [2750.000, 2775.000) = 1 
    [2775.000, 2800.000) = 1 
    [2800.000, 2825.000) = 2 
    [2825.000, 2850.000) = 1 
    [2850.000, 2875.000) = 1 
    [2875.000, 2900.000) = 0 
    [2900.000, 2925.000) = 1 
    [2925.000, 2950.000) = 0 
    [2950.000, 2975.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2691.932 us/op
     p(50.0000) =   2792.297 us/op
     p(90.0000) =   2904.259 us/op
     p(95.0000) =   2909.751 us/op
     p(99.0000) =   2909.751 us/op
     p(99.9000) =   2909.751 us/op
     p(99.9900) =   2909.751 us/op
     p(99.9990) =   2909.751 us/op
     p(99.9999) =   2909.751 us/op
    p(100.0000) =   2909.751 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.5)

# Run progress: 98.11% complete, ETA 00:00:52
# Fork: 1 of 2
# Warmup Iteration   1: 5039.516 us/op
# Warmup Iteration   2: 4922.464 us/op
# Warmup Iteration   3: 4035.692 us/op
# Warmup Iteration   4: 3877.328 us/op
# Warmup Iteration   5: 3925.242 us/op
Iteration   1: 2813.118 us/op
Iteration   2: 2789.129 us/op
Iteration   3: 2714.179 us/op
Iteration   4: 2730.871 us/op
Iteration   5: 2756.533 us/op

# Run progress: 98.30% complete, ETA 00:00:47
# Fork: 2 of 2
# Warmup Iteration   1: 5193.578 us/op
# Warmup Iteration   2: 4964.937 us/op
# Warmup Iteration   3: 4182.638 us/op
# Warmup Iteration   4: 3981.274 us/op
# Warmup Iteration   5: 3888.828 us/op
Iteration   1: 2765.324 us/op
Iteration   2: 2885.941 us/op
Iteration   3: 2768.085 us/op
Iteration   4: 2809.375 us/op
Iteration   5: 2817.596 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2785.015 ±(99.9%) 74.888 us/op

  Histogram, us/op:
    [2700.000, 2712.500) = 0 
    [2712.500, 2725.000) = 1 
    [2725.000, 2737.500) = 1 
    [2737.500, 2750.000) = 0 
    [2750.000, 2762.500) = 1 
    [2762.500, 2775.000) = 2 
    [2775.000, 2787.500) = 0 
    [2787.500, 2800.000) = 1 
    [2800.000, 2812.500) = 1 
    [2812.500, 2825.000) = 2 
    [2825.000, 2837.500) = 0 
    [2837.500, 2850.000) = 0 
    [2850.000, 2862.500) = 0 
    [2862.500, 2875.000) = 0 
    [2875.000, 2887.500) = 1 

  Percentiles, us/op:
      p(0.0000) =   2714.179 us/op
     p(50.0000) =   2778.607 us/op
     p(90.0000) =   2879.107 us/op
     p(95.0000) =   2885.941 us/op
     p(99.0000) =   2885.941 us/op
     p(99.9000) =   2885.941 us/op
     p(99.9900) =   2885.941 us/op
     p(99.9990) =   2885.941 us/op
     p(99.9999) =   2885.941 us/op
    p(100.0000) =   2885.941 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.625)

# Run progress: 98.48% complete, ETA 00:00:42
# Fork: 1 of 2
# Warmup Iteration   1: 4887.086 us/op
# Warmup Iteration   2: 4879.885 us/op
# Warmup Iteration   3: 4042.063 us/op
# Warmup Iteration   4: 3845.193 us/op
# Warmup Iteration   5: 3911.562 us/op
Iteration   1: 2706.969 us/op
Iteration   2: 2718.722 us/op
Iteration   3: 2699.038 us/op
Iteration   4: 2709.564 us/op
Iteration   5: 2736.101 us/op

# Run progress: 98.67% complete, ETA 00:00:36
# Fork: 2 of 2
# Warmup Iteration   1: 5085.957 us/op
# Warmup Iteration   2: 4992.129 us/op
# Warmup Iteration   3: 4159.234 us/op
# Warmup Iteration   4: 4051.151 us/op
# Warmup Iteration   5: 3894.177 us/op
Iteration   1: 2774.785 us/op
Iteration   2: 2853.014 us/op
Iteration   3: 2774.009 us/op
Iteration   4: 2783.730 us/op
Iteration   5: 2867.420 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2762.335 ±(99.9%) 90.798 us/op

  Histogram, us/op:
    [2600.000, 2625.000) = 0 
    [2625.000, 2650.000) = 0 
    [2650.000, 2675.000) = 0 
    [2675.000, 2700.000) = 1 
    [2700.000, 2725.000) = 3 
    [2725.000, 2750.000) = 1 
    [2750.000, 2775.000) = 2 
    [2775.000, 2800.000) = 1 
    [2800.000, 2825.000) = 0 
    [2825.000, 2850.000) = 0 
    [2850.000, 2875.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   2699.038 us/op
     p(50.0000) =   2755.055 us/op
     p(90.0000) =   2865.979 us/op
     p(95.0000) =   2867.420 us/op
     p(99.0000) =   2867.420 us/op
     p(99.9000) =   2867.420 us/op
     p(99.9900) =   2867.420 us/op
     p(99.9990) =   2867.420 us/op
     p(99.9999) =   2867.420 us/op
    p(100.0000) =   2867.420 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.75)

# Run progress: 98.86% complete, ETA 00:00:31
# Fork: 1 of 2
# Warmup Iteration   1: 4744.899 us/op
# Warmup Iteration   2: 4634.328 us/op
# Warmup Iteration   3: 4365.227 us/op
# Warmup Iteration   4: 3945.729 us/op
# Warmup Iteration   5: 3954.892 us/op
Iteration   1: 2805.619 us/op
Iteration   2: 2799.768 us/op
Iteration   3: 2754.726 us/op
Iteration   4: 2732.507 us/op
Iteration   5: 2762.482 us/op

# Run progress: 99.05% complete, ETA 00:00:26
# Fork: 2 of 2
# Warmup Iteration   1: 4995.007 us/op
# Warmup Iteration   2: 5133.093 us/op
# Warmup Iteration   3: 4155.184 us/op
# Warmup Iteration   4: 3985.271 us/op
# Warmup Iteration   5: 3908.309 us/op
Iteration   1: 2777.568 us/op
Iteration   2: 2800.300 us/op
Iteration   3: 2787.303 us/op
Iteration   4: 2808.360 us/op
Iteration   5: 2801.112 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2782.975 ±(99.9%) 38.648 us/op

  Histogram, us/op:
    [2730.000, 2735.000) = 1 
    [2735.000, 2740.000) = 0 
    [2740.000, 2745.000) = 0 
    [2745.000, 2750.000) = 0 
    [2750.000, 2755.000) = 1 
    [2755.000, 2760.000) = 0 
    [2760.000, 2765.000) = 1 
    [2765.000, 2770.000) = 0 
    [2770.000, 2775.000) = 0 
    [2775.000, 2780.000) = 1 
    [2780.000, 2785.000) = 0 
    [2785.000, 2790.000) = 1 
    [2790.000, 2795.000) = 0 
    [2795.000, 2800.000) = 1 
    [2800.000, 2805.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   2732.507 us/op
     p(50.0000) =   2793.536 us/op
     p(90.0000) =   2808.086 us/op
     p(95.0000) =   2808.360 us/op
     p(99.0000) =   2808.360 us/op
     p(99.9000) =   2808.360 us/op
     p(99.9900) =   2808.360 us/op
     p(99.9990) =   2808.360 us/op
     p(99.9999) =   2808.360 us/op
    p(100.0000) =   2808.360 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.875)

# Run progress: 99.24% complete, ETA 00:00:21
# Fork: 1 of 2
# Warmup Iteration   1: 4777.808 us/op
# Warmup Iteration   2: 5079.543 us/op
# Warmup Iteration   3: 4179.315 us/op
# Warmup Iteration   4: 3979.352 us/op
# Warmup Iteration   5: 4013.410 us/op
Iteration   1: 2836.297 us/op
Iteration   2: 3025.071 us/op
Iteration   3: 3202.174 us/op
Iteration   4: 3466.110 us/op
Iteration   5: 3699.412 us/op

# Run progress: 99.43% complete, ETA 00:00:15
# Fork: 2 of 2
# Warmup Iteration   1: 5039.910 us/op
# Warmup Iteration   2: 4972.778 us/op
# Warmup Iteration   3: 4104.875 us/op
# Warmup Iteration   4: 3955.615 us/op
# Warmup Iteration   5: 3896.795 us/op
Iteration   1: 2745.842 us/op
Iteration   2: 2788.436 us/op
Iteration   3: 2713.949 us/op
Iteration   4: 2759.114 us/op
Iteration   5: 2766.878 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   3000.328 ±(99.9%) 523.308 us/op

  Histogram, us/op:
    [2700.000, 2800.000) = 5 
    [2800.000, 2900.000) = 1 
    [2900.000, 3000.000) = 0 
    [3000.000, 3100.000) = 1 
    [3100.000, 3200.000) = 0 
    [3200.000, 3300.000) = 1 
    [3300.000, 3400.000) = 0 
    [3400.000, 3500.000) = 1 
    [3500.000, 3600.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2713.949 us/op
     p(50.0000) =   2812.367 us/op
     p(90.0000) =   3676.082 us/op
     p(95.0000) =   3699.412 us/op
     p(99.0000) =   3699.412 us/op
     p(99.9000) =   3699.412 us/op
     p(99.9900) =   3699.412 us/op
     p(99.9990) =   3699.412 us/op
     p(99.9999) =   3699.412 us/op
    p(100.0000) =   3699.412 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 10 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 1)

# Run progress: 99.62% complete, ETA 00:00:10
# Fork: 1 of 2
# Warmup Iteration   1: 5079.623 us/op
# Warmup Iteration   2: 4890.002 us/op
# Warmup Iteration   3: 4129.874 us/op
# Warmup Iteration   4: 4209.882 us/op
# Warmup Iteration   5: 3929.424 us/op
Iteration   1: 2707.867 us/op
Iteration   2: 2696.849 us/op
Iteration   3: 2699.869 us/op
Iteration   4: 2729.557 us/op
Iteration   5: 2883.993 us/op

# Run progress: 99.81% complete, ETA 00:00:05
# Fork: 2 of 2
# Warmup Iteration   1: 5067.717 us/op
# Warmup Iteration   2: 4791.929 us/op
# Warmup Iteration   3: 4406.541 us/op
# Warmup Iteration   4: 3935.309 us/op
# Warmup Iteration   5: 4151.133 us/op
Iteration   1: 2818.111 us/op
Iteration   2: 2838.658 us/op
Iteration   3: 2870.129 us/op
Iteration   4: 2867.188 us/op
Iteration   5: 2873.818 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2798.604 ±(99.9%) 121.217 us/op

  Histogram, us/op:
    [2600.000, 2625.000) = 0 
    [2625.000, 2650.000) = 0 
    [2650.000, 2675.000) = 0 
    [2675.000, 2700.000) = 2 
    [2700.000, 2725.000) = 1 
    [2725.000, 2750.000) = 1 
    [2750.000, 2775.000) = 0 
    [2775.000, 2800.000) = 0 
    [2800.000, 2825.000) = 1 
    [2825.000, 2850.000) = 1 
    [2850.000, 2875.000) = 3 

  Percentiles, us/op:
      p(0.0000) =   2696.849 us/op
     p(50.0000) =   2828.385 us/op
     p(90.0000) =   2882.976 us/op
     p(95.0000) =   2883.993 us/op
     p(99.0000) =   2883.993 us/op
     p(99.9000) =   2883.993 us/op
     p(99.9900) =   2883.993 us/op
     p(99.9990) =   2883.993 us/op
     p(99.9999) =   2883.993 us/op
    p(100.0000) =   2883.993 us/op


# Run complete. Total time: 00:46:17

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                    (initialCapacity)  (loadFactor)  Mode  Cnt     Score     Error  Units
JavaHashMapBenchMarkPut.put                                 16         0.125    ss   10     6.224 ±   7.372  us/op
JavaHashMapBenchMarkPut.put                                 16         0.250    ss   10     6.338 ±  12.733  us/op
JavaHashMapBenchMarkPut.put                                 16         0.375    ss   10     4.277 ±   8.612  us/op
JavaHashMapBenchMarkPut.put                                 16           0.5    ss   10     1.650 ±   0.257  us/op
JavaHashMapBenchMarkPut.put                                 16         0.625    ss   10     1.204 ±   0.207  us/op
JavaHashMapBenchMarkPut.put                                 16          0.75    ss   10     1.929 ±   1.936  us/op
JavaHashMapBenchMarkPut.put                                 16         0.875    ss   10     1.139 ±   0.141  us/op
JavaHashMapBenchMarkPut.put                                 16             1    ss   10     1.161 ±   0.265  us/op
JavaHashMapBenchMarkPut.put                                100         0.125    ss   10     8.324 ±  32.208  us/op
JavaHashMapBenchMarkPut.put                                100         0.250    ss   10     5.177 ±  16.619  us/op
JavaHashMapBenchMarkPut.put                                100         0.375    ss   10     2.705 ±   3.853  us/op
JavaHashMapBenchMarkPut.put                                100           0.5    ss   10     3.329 ±   5.556  us/op
JavaHashMapBenchMarkPut.put                                100         0.625    ss   10     4.898 ±  12.202  us/op
JavaHashMapBenchMarkPut.put                                100          0.75    ss   10     4.424 ±  12.785  us/op
JavaHashMapBenchMarkPut.put                                100         0.875    ss   10     2.184 ±   2.302  us/op
JavaHashMapBenchMarkPut.put                                100             1    ss   10     4.727 ±  10.687  us/op
JavaHashMapBenchMarkPut.put                               1024         0.125    ss   10    10.026 ±  12.629  us/op
JavaHashMapBenchMarkPut.put                               1024         0.250    ss   10    10.052 ±  12.887  us/op
JavaHashMapBenchMarkPut.put                               1024         0.375    ss   10     5.903 ±   9.523  us/op
JavaHashMapBenchMarkPut.put                               1024           0.5    ss   10     8.857 ±  12.769  us/op
JavaHashMapBenchMarkPut.put                               1024         0.625    ss   10    10.289 ±  17.061  us/op
JavaHashMapBenchMarkPut.put                               1024          0.75    ss   10     6.048 ±   7.331  us/op
JavaHashMapBenchMarkPut.put                               1024         0.875    ss   10     6.416 ±   8.927  us/op
JavaHashMapBenchMarkPut.put                               1024             1    ss   10     3.996 ±   1.110  us/op
JavaHashMapBenchMarkPut.put                               1000         0.125    ss   10     8.362 ±  11.343  us/op
JavaHashMapBenchMarkPut.put                               1000         0.250    ss   10     5.339 ±   1.397  us/op
JavaHashMapBenchMarkPut.put                               1000         0.375    ss   10     8.271 ±  12.962  us/op
JavaHashMapBenchMarkPut.put                               1000           0.5    ss   10     7.785 ±   8.245  us/op
JavaHashMapBenchMarkPut.put                               1000         0.625    ss   10     4.634 ±   1.468  us/op
JavaHashMapBenchMarkPut.put                               1000          0.75    ss   10     8.814 ±  11.858  us/op
JavaHashMapBenchMarkPut.put                               1000         0.875    ss   10     9.240 ±  14.815  us/op
JavaHashMapBenchMarkPut.put                               1000             1    ss   10     7.635 ±  10.756  us/op
JavaHashMapBenchMarkPut.put                              10000         0.125    ss   10    41.929 ±  30.566  us/op
JavaHashMapBenchMarkPut.put                              10000         0.250    ss   10    48.102 ±  30.980  us/op
JavaHashMapBenchMarkPut.put                              10000         0.375    ss   10    39.782 ±  27.234  us/op
JavaHashMapBenchMarkPut.put                              10000           0.5    ss   10    26.520 ±   4.369  us/op
JavaHashMapBenchMarkPut.put                              10000         0.625    ss   10    38.987 ±  25.157  us/op
JavaHashMapBenchMarkPut.put                              10000          0.75    ss   10    37.533 ±  22.136  us/op
JavaHashMapBenchMarkPut.put                              10000         0.875    ss   10    45.168 ±  22.925  us/op
JavaHashMapBenchMarkPut.put                              10000             1    ss   10    44.707 ±  26.884  us/op
JavaHashMapBenchMarkPut.put                              65536         0.125    ss   10   107.564 ±  19.464  us/op
JavaHashMapBenchMarkPut.put                              65536         0.250    ss   10   121.683 ±  27.627  us/op
JavaHashMapBenchMarkPut.put                              65536         0.375    ss   10   113.691 ±  34.200  us/op
JavaHashMapBenchMarkPut.put                              65536           0.5    ss   10   109.180 ±  35.040  us/op
JavaHashMapBenchMarkPut.put                              65536         0.625    ss   10   104.361 ±  19.324  us/op
JavaHashMapBenchMarkPut.put                              65536          0.75    ss   10   117.879 ±  44.377  us/op
JavaHashMapBenchMarkPut.put                              65536         0.875    ss   10   114.227 ±  28.065  us/op
JavaHashMapBenchMarkPut.put                              65536             1    ss   10   119.571 ±  38.936  us/op
JavaHashMapBenchMarkPut.put                             100000         0.125    ss   10   205.444 ±  58.824  us/op
JavaHashMapBenchMarkPut.put                             100000         0.250    ss   10   190.395 ±  26.765  us/op
JavaHashMapBenchMarkPut.put                             100000         0.375    ss   10   201.071 ±  45.705  us/op
JavaHashMapBenchMarkPut.put                             100000           0.5    ss   10   203.191 ±  42.165  us/op
JavaHashMapBenchMarkPut.put                             100000         0.625    ss   10   200.554 ±  41.989  us/op
JavaHashMapBenchMarkPut.put                             100000          0.75    ss   10   203.356 ±  47.257  us/op
JavaHashMapBenchMarkPut.put                             100000         0.875    ss   10   194.186 ±  24.640  us/op
JavaHashMapBenchMarkPut.put                             100000             1    ss   10   204.208 ±  35.001  us/op
JavaHashMapBenchMarkPut.put                             524288         0.125    ss   10   844.274 ± 336.724  us/op
JavaHashMapBenchMarkPut.put                             524288         0.250    ss   10   731.371 ±  56.197  us/op
JavaHashMapBenchMarkPut.put                             524288         0.375    ss   10   741.248 ±  70.578  us/op
JavaHashMapBenchMarkPut.put                             524288           0.5    ss   10   722.236 ±  53.137  us/op
JavaHashMapBenchMarkPut.put                             524288         0.625    ss   10   760.001 ± 164.224  us/op
JavaHashMapBenchMarkPut.put                             524288          0.75    ss   10   740.488 ±  99.566  us/op
JavaHashMapBenchMarkPut.put                             524288         0.875    ss   10   724.735 ±  35.405  us/op
JavaHashMapBenchMarkPut.put                             524288             1    ss   10   737.501 ±  80.576  us/op
JavaHashMapBenchMarkPut.put                            1000000         0.125    ss   10  1429.087 ±  70.898  us/op
JavaHashMapBenchMarkPut.put                            1000000         0.250    ss   10  1449.138 ± 147.089  us/op
JavaHashMapBenchMarkPut.put                            1000000         0.375    ss   10  1423.349 ±  47.520  us/op
JavaHashMapBenchMarkPut.put                            1000000           0.5    ss   10  1501.985 ±  92.352  us/op
JavaHashMapBenchMarkPut.put                            1000000         0.625    ss   10  1465.107 ± 146.110  us/op
JavaHashMapBenchMarkPut.put                            1000000          0.75    ss   10  1427.541 ±  92.836  us/op
JavaHashMapBenchMarkPut.put                            1000000         0.875    ss   10  1439.083 ±  52.177  us/op
JavaHashMapBenchMarkPut.put                            1000000             1    ss   10  1422.394 ±  77.604  us/op
JavaHashMapBenchMarkPut.put                            1048576         0.125    ss   10  1406.223 ±  50.204  us/op
JavaHashMapBenchMarkPut.put                            1048576         0.250    ss   10  1461.337 ±  66.420  us/op
JavaHashMapBenchMarkPut.put                            1048576         0.375    ss   10  1405.417 ±  29.598  us/op
JavaHashMapBenchMarkPut.put                            1048576           0.5    ss   10  1430.702 ±  82.794  us/op
JavaHashMapBenchMarkPut.put                            1048576         0.625    ss   10  1479.833 ± 135.158  us/op
JavaHashMapBenchMarkPut.put                            1048576          0.75    ss   10  1456.558 ±  70.239  us/op
JavaHashMapBenchMarkPut.put                            1048576         0.875    ss   10  1503.421 ± 124.447  us/op
JavaHashMapBenchMarkPut.put                            1048576             1    ss   10  1457.173 ±  99.608  us/op
JavaHashMapBenchMarkPut.put                            2097152         0.125    ss   10  3025.208 ± 517.001  us/op
JavaHashMapBenchMarkPut.put                            2097152         0.250    ss   10  3169.628 ± 584.300  us/op
JavaHashMapBenchMarkPut.put                            2097152         0.375    ss   10  3270.078 ± 439.954  us/op
JavaHashMapBenchMarkPut.put                            2097152           0.5    ss   10  3198.694 ± 709.542  us/op
JavaHashMapBenchMarkPut.put                            2097152         0.625    ss   10  3034.851 ± 491.866  us/op
JavaHashMapBenchMarkPut.put                            2097152          0.75    ss   10  3237.211 ± 663.648  us/op
JavaHashMapBenchMarkPut.put                            2097152         0.875    ss   10  3104.922 ± 540.103  us/op
JavaHashMapBenchMarkPut.put                            2097152             1    ss   10  2840.587 ± 149.453  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16         0.125    ss   10     9.463 ±  18.092  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16         0.250    ss   10     5.059 ±  12.705  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16         0.375    ss   10     2.048 ±   1.473  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16           0.5    ss   10     2.549 ±   2.468  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16         0.625    ss   10     1.891 ±   2.398  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16          0.75    ss   10     2.077 ±   2.786  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16         0.875    ss   10     4.077 ±  12.389  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16             1    ss   10     1.863 ±   2.342  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100         0.125    ss   10     1.817 ±   2.034  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100         0.250    ss   10     6.585 ±  12.270  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100         0.375    ss   10     3.358 ±   3.027  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100           0.5    ss   10     4.972 ±  13.394  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100         0.625    ss   10     2.490 ±   6.667  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100          0.75    ss   10     1.136 ±   0.143  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100         0.875    ss   10     6.973 ±  26.566  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100             1    ss   10     5.191 ±   9.698  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024         0.125    ss   10     7.737 ±   7.797  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024         0.250    ss   10     3.590 ±   1.649  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024         0.375    ss   10     8.799 ±  13.760  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024           0.5    ss   10     5.931 ±  11.328  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024         0.625    ss   10    12.250 ±  23.276  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024          0.75    ss   10     6.142 ±   7.296  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024         0.875    ss   10    10.362 ±  12.515  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024             1    ss   10     7.802 ±  12.740  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000         0.125    ss   10    13.025 ±  15.638  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000         0.250    ss   10     3.518 ±   1.270  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000         0.375    ss   10     4.995 ±   1.853  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000           0.5    ss   10     6.821 ±  13.210  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000         0.625    ss   10     4.398 ±   1.967  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000          0.75    ss   10     4.652 ±   1.426  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000         0.875    ss   10     4.680 ±   1.585  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000             1    ss   10    13.388 ±  14.609  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000         0.125    ss   10    33.857 ±  22.468  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000         0.250    ss   10    35.027 ±  24.242  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000         0.375    ss   10    38.961 ±  20.835  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000           0.5    ss   10    28.469 ±  13.363  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000         0.625    ss   10    28.089 ±   7.086  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000          0.75    ss   10    34.448 ±  23.866  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000         0.875    ss   10    35.257 ±  25.059  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000             1    ss   10    30.607 ±  21.915  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536         0.125    ss   10   130.532 ±  71.719  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536         0.250    ss   10   108.360 ±  31.958  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536         0.375    ss   10   117.608 ±  50.508  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536           0.5    ss   10   122.570 ±  65.515  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536         0.625    ss   10   112.648 ±  45.728  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536          0.75    ss   10   113.249 ±  46.409  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536         0.875    ss   10   118.301 ±  59.558  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536             1    ss   10   116.487 ±  35.776  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000         0.125    ss   10   193.977 ±  37.314  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000         0.250    ss   10   205.265 ±  62.845  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000         0.375    ss   10   192.105 ±  26.542  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000           0.5    ss   10   199.118 ±  45.906  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000         0.625    ss   10   225.029 ±  84.092  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000          0.75    ss   10   199.979 ±  48.319  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000         0.875    ss   10   206.478 ±  31.491  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000             1    ss   10   217.273 ±  59.567  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288         0.125    ss   10   714.743 ±  54.752  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288         0.250    ss   10   718.149 ±  49.310  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288         0.375    ss   10   744.458 ±  82.962  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288           0.5    ss   10   735.445 ±  49.739  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288         0.625    ss   10   717.360 ±  35.043  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288          0.75    ss   10   726.145 ±  43.980  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288         0.875    ss   10   739.552 ± 115.021  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288             1    ss   10   719.203 ±  60.376  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000         0.125    ss   10  1404.447 ±  34.090  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000         0.250    ss   10  1395.334 ±  66.476  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000         0.375    ss   10  1404.023 ±  30.968  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000           0.5    ss   10  1442.674 ±  48.899  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000         0.625    ss   10  1405.725 ±  50.638  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000          0.75    ss   10  1425.995 ±  63.558  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000         0.875    ss   10  1402.320 ±  61.036  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000             1    ss   10  1418.400 ±  49.551  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576         0.125    ss   10  1419.260 ±  52.159  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576         0.250    ss   10  1379.983 ±  62.675  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576         0.375    ss   10  1418.407 ±  52.211  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576           0.5    ss   10  1426.472 ± 130.152  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576         0.625    ss   10  1413.370 ±  60.736  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576          0.75    ss   10  1385.164 ±  35.025  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576         0.875    ss   10  1386.703 ±  53.415  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576             1    ss   10  1400.054 ±  63.824  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152         0.125    ss   10  2792.796 ±  69.218  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152         0.250    ss   10  3025.521 ± 449.689  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152         0.375    ss   10  2800.097 ± 129.861  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152           0.5    ss   10  2839.690 ± 125.578  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152         0.625    ss   10  2761.415 ±  93.308  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152          0.75    ss   10  2759.370 ±  65.783  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152         0.875    ss   10  2830.657 ± 131.049  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152             1    ss   10  3057.500 ± 495.784  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16         0.125    ss   10     8.962 ±  11.191  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16         0.250    ss   10     4.780 ±   8.330  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16         0.375    ss   10     3.681 ±   6.588  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16           0.5    ss   10     3.306 ±   7.745  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16         0.625    ss   10     3.630 ±  11.809  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16          0.75    ss   10     3.456 ±   9.403  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16         0.875    ss   10     1.122 ±   0.100  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16             1    ss   10     1.517 ±   1.820  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100         0.125    ss   10     1.789 ±   2.164  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100         0.250    ss   10     1.770 ±   2.083  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100         0.375    ss   10     3.899 ±   6.194  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100           0.5    ss   10     6.562 ±  11.865  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100         0.625    ss   10     3.075 ±   7.603  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100          0.75    ss   10     3.741 ±   8.281  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100         0.875    ss   10     2.083 ±   3.229  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100             1    ss   10     6.596 ±  10.483  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024         0.125    ss   10     9.140 ±  10.837  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024         0.250    ss   10     5.718 ±   6.873  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024         0.375    ss   10     4.564 ±   1.562  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024           0.5    ss   10     9.470 ±  11.654  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024         0.625    ss   10    11.971 ±  14.583  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024          0.75    ss   10     6.068 ±   7.748  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024         0.875    ss   10    10.882 ±  13.445  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024             1    ss   10    10.552 ±  14.407  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000         0.125    ss   10    12.513 ±  13.678  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000         0.250    ss   10    10.295 ±  13.966  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000         0.375    ss   10     6.414 ±   6.483  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000           0.5    ss   10     7.408 ±  11.183  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000         0.625    ss   10     6.269 ±   5.626  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000          0.75    ss   10     8.270 ±  15.563  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000         0.875    ss   10     7.623 ±   9.552  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000             1    ss   10     9.366 ±  11.980  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000         0.125    ss   10    40.642 ±  26.707  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000         0.250    ss   10    35.687 ±  19.212  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000         0.375    ss   10    42.099 ±  38.366  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000           0.5    ss   10    48.686 ±  29.077  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000         0.625    ss   10    43.372 ±  37.139  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000          0.75    ss   10    41.539 ±  34.142  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000         0.875    ss   10    43.860 ±  46.866  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000             1    ss   10    45.884 ±  30.805  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536         0.125    ss   10   111.349 ±  40.390  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536         0.250    ss   10   108.378 ±  37.880  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536         0.375    ss   10   111.022 ±  29.765  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536           0.5    ss   10   112.993 ±  34.911  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536         0.625    ss   10   109.234 ±  35.813  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536          0.75    ss   10   115.359 ±  51.347  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536         0.875    ss   10   115.971 ±  48.381  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536             1    ss   10   107.387 ±  43.435  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000         0.125    ss   10   200.092 ±  52.424  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000         0.250    ss   10   194.247 ±  27.279  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000         0.375    ss   10   208.099 ±  44.872  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000           0.5    ss   10   200.046 ±  39.406  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000         0.625    ss   10   209.531 ±  38.010  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000          0.75    ss   10   188.845 ±  33.155  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000         0.875    ss   10   204.378 ±  40.805  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000             1    ss   10   193.653 ±  27.150  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288         0.125    ss   10   720.997 ±  44.865  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288         0.250    ss   10   696.861 ±  23.329  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288         0.375    ss   10   728.895 ±  45.482  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288           0.5    ss   10   731.628 ±  46.240  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288         0.625    ss   10   731.208 ±  32.426  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288          0.75    ss   10   714.306 ±  58.433  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288         0.875    ss   10   725.041 ±  61.672  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288             1    ss   10   701.209 ±  41.793  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000         0.125    ss   10  1434.293 ± 117.692  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000         0.250    ss   10  1393.924 ±  62.961  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000         0.375    ss   10  1403.619 ±  30.337  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000           0.5    ss   10  1396.588 ±  70.067  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000         0.625    ss   10  1401.752 ±  55.654  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000          0.75    ss   10  1444.955 ± 119.991  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000         0.875    ss   10  1407.594 ±  37.500  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000             1    ss   10  1408.080 ±  62.267  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576         0.125    ss   10  1408.119 ±  66.749  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576         0.250    ss   10  1402.838 ±  62.620  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576         0.375    ss   10  1417.146 ±  38.079  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576           0.5    ss   10  1497.727 ± 164.302  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576         0.625    ss   10  1437.259 ± 127.240  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576          0.75    ss   10  1442.808 ±  53.286  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576         0.875    ss   10  1367.023 ±  47.799  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576             1    ss   10  1402.427 ±  82.338  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152         0.125    ss   10  2803.592 ±  83.097  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152         0.250    ss   10  2766.014 ±  82.355  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152         0.375    ss   10  2789.356 ± 104.414  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152           0.5    ss   10  2785.015 ±  74.888  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152         0.625    ss   10  2762.335 ±  90.798  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152          0.75    ss   10  2782.975 ±  38.648  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152         0.875    ss   10  3000.328 ± 523.308  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152             1    ss   10  2798.604 ± 121.217  us/op

Benchmark result is saved to results/machine_out_10.csv
