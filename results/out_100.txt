# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.125)

# Run progress: 0.00% complete, ETA 00:00:05
# Fork: 1 of 2
# Warmup Iteration   1: 2916.778 us/op
# Warmup Iteration   2: 2395.459 us/op
# Warmup Iteration   3: 1956.012 us/op
# Warmup Iteration   4: 1913.692 us/op
# Warmup Iteration   5: 1695.218 us/op
Iteration   1: 63.016 us/op
Iteration   2: 30.059 us/op
Iteration   3: 32.464 us/op
Iteration   4: 61.611 us/op
Iteration   5: 15.690 us/op

# Run progress: 0.19% complete, ETA 00:46:23
# Fork: 2 of 2
# Warmup Iteration   1: 3312.236 us/op
# Warmup Iteration   2: 2506.595 us/op
# Warmup Iteration   3: 1927.853 us/op
# Warmup Iteration   4: 1864.084 us/op
# Warmup Iteration   5: 1783.081 us/op
Iteration   1: 32.518 us/op
Iteration   2: 37.353 us/op
Iteration   3: 32.298 us/op
Iteration   4: 17.973 us/op
Iteration   5: 16.645 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     33.963 ±(99.9%) 25.357 us/op

  Histogram, us/op:
    [10.000, 15.000) = 0 
    [15.000, 20.000) = 3 
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 0 
    [30.000, 35.000) = 4 
    [35.000, 40.000) = 1 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 0 
    [55.000, 60.000) = 0 
    [60.000, 65.000) = 2 

  Percentiles, us/op:
      p(0.0000) =     15.690 us/op
     p(50.0000) =     32.381 us/op
     p(90.0000) =     62.875 us/op
     p(95.0000) =     63.016 us/op
     p(99.0000) =     63.016 us/op
     p(99.9000) =     63.016 us/op
     p(99.9900) =     63.016 us/op
     p(99.9990) =     63.016 us/op
     p(99.9999) =     63.016 us/op
    p(100.0000) =     63.016 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.250)

# Run progress: 0.38% complete, ETA 00:46:09
# Fork: 1 of 2
# Warmup Iteration   1: 3035.147 us/op
# Warmup Iteration   2: 1892.305 us/op
# Warmup Iteration   3: 1617.202 us/op
# Warmup Iteration   4: 1544.831 us/op
# Warmup Iteration   5: 1724.838 us/op
Iteration   1: 15.888 us/op
Iteration   2: 46.345 us/op
Iteration   3: 16.073 us/op
Iteration   4: 45.095 us/op
Iteration   5: 38.446 us/op

# Run progress: 0.57% complete, ETA 00:46:07
# Fork: 2 of 2
# Warmup Iteration   1: 3061.635 us/op
# Warmup Iteration   2: 2007.325 us/op
# Warmup Iteration   3: 1582.097 us/op
# Warmup Iteration   4: 1527.257 us/op
# Warmup Iteration   5: 1635.951 us/op
Iteration   1: 15.884 us/op
Iteration   2: 75.749 us/op
Iteration   3: 18.451 us/op
Iteration   4: 16.961 us/op
Iteration   5: 17.572 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     30.646 ±(99.9%) 30.676 us/op

  Histogram, us/op:
    [10.000, 15.000) = 0 
    [15.000, 20.000) = 6 
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 0 
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 1 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 2 
    [50.000, 55.000) = 0 
    [55.000, 60.000) = 0 
    [60.000, 65.000) = 0 
    [65.000, 70.000) = 0 
    [70.000, 75.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     15.884 us/op
     p(50.0000) =     18.011 us/op
     p(90.0000) =     72.809 us/op
     p(95.0000) =     75.749 us/op
     p(99.0000) =     75.749 us/op
     p(99.9000) =     75.749 us/op
     p(99.9900) =     75.749 us/op
     p(99.9990) =     75.749 us/op
     p(99.9999) =     75.749 us/op
    p(100.0000) =     75.749 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.375)

# Run progress: 0.76% complete, ETA 00:46:00
# Fork: 1 of 2
# Warmup Iteration   1: 2844.594 us/op
# Warmup Iteration   2: 1681.963 us/op
# Warmup Iteration   3: 1556.050 us/op
# Warmup Iteration   4: 1358.481 us/op
# Warmup Iteration   5: 1275.695 us/op
Iteration   1: 19.118 us/op
Iteration   2: 57.375 us/op
Iteration   3: 18.382 us/op
Iteration   4: 41.624 us/op
Iteration   5: 53.212 us/op

# Run progress: 0.95% complete, ETA 00:45:54
# Fork: 2 of 2
# Warmup Iteration   1: 2869.814 us/op
# Warmup Iteration   2: 1752.293 us/op
# Warmup Iteration   3: 1499.472 us/op
# Warmup Iteration   4: 1358.527 us/op
# Warmup Iteration   5: 1250.526 us/op
Iteration   1: 18.301 us/op
Iteration   2: 19.131 us/op
Iteration   3: 19.954 us/op
Iteration   4: 19.814 us/op
Iteration   5: 45.884 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     31.280 ±(99.9%) 24.546 us/op

  Histogram, us/op:
    [10.000, 15.000) = 0 
    [15.000, 20.000) = 6 
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 0 
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 1 
    [45.000, 50.000) = 1 
    [50.000, 55.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     18.301 us/op
     p(50.0000) =     19.884 us/op
     p(90.0000) =     56.959 us/op
     p(95.0000) =     57.375 us/op
     p(99.0000) =     57.375 us/op
     p(99.9000) =     57.375 us/op
     p(99.9900) =     57.375 us/op
     p(99.9990) =     57.375 us/op
     p(99.9999) =     57.375 us/op
    p(100.0000) =     57.375 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.5)

# Run progress: 1.14% complete, ETA 00:45:48
# Fork: 1 of 2
# Warmup Iteration   1: 2556.309 us/op
# Warmup Iteration   2: 1803.802 us/op
# Warmup Iteration   3: 1583.198 us/op
# Warmup Iteration   4: 1416.111 us/op
# Warmup Iteration   5: 1453.485 us/op
Iteration   1: 13.250 us/op
Iteration   2: 14.725 us/op
Iteration   3: 16.537 us/op
Iteration   4: 17.503 us/op
Iteration   5: 36.409 us/op

# Run progress: 1.33% complete, ETA 00:45:42
# Fork: 2 of 2
# Warmup Iteration   1: 2632.020 us/op
# Warmup Iteration   2: 1897.462 us/op
# Warmup Iteration   3: 1629.108 us/op
# Warmup Iteration   4: 1449.793 us/op
# Warmup Iteration   5: 1397.621 us/op
Iteration   1: 13.585 us/op
Iteration   2: 14.287 us/op
Iteration   3: 34.741 us/op
Iteration   4: 41.387 us/op
Iteration   5: 38.143 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     24.057 ±(99.9%) 17.987 us/op

  Histogram, us/op:
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 4 
    [15.000, 17.500) = 1 
    [17.500, 20.000) = 1 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 1 
    [35.000, 37.500) = 1 
    [37.500, 40.000) = 1 
    [40.000, 42.500) = 1 
    [42.500, 45.000) = 0 
    [45.000, 47.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     13.250 us/op
     p(50.0000) =     17.020 us/op
     p(90.0000) =     41.063 us/op
     p(95.0000) =     41.387 us/op
     p(99.0000) =     41.387 us/op
     p(99.9000) =     41.387 us/op
     p(99.9900) =     41.387 us/op
     p(99.9990) =     41.387 us/op
     p(99.9999) =     41.387 us/op
    p(100.0000) =     41.387 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.625)

# Run progress: 1.52% complete, ETA 00:45:36
# Fork: 1 of 2
# Warmup Iteration   1: 2668.728 us/op
# Warmup Iteration   2: 1495.887 us/op
# Warmup Iteration   3: 1515.057 us/op
# Warmup Iteration   4: 1382.445 us/op
# Warmup Iteration   5: 1176.054 us/op
Iteration   1: 13.769 us/op
Iteration   2: 16.308 us/op
Iteration   3: 31.403 us/op
Iteration   4: 14.751 us/op
Iteration   5: 17.048 us/op

# Run progress: 1.70% complete, ETA 00:45:31
# Fork: 2 of 2
# Warmup Iteration   1: 2646.647 us/op
# Warmup Iteration   2: 1505.389 us/op
# Warmup Iteration   3: 1474.868 us/op
# Warmup Iteration   4: 1281.919 us/op
# Warmup Iteration   5: 1253.338 us/op
Iteration   1: 13.807 us/op
Iteration   2: 31.569 us/op
Iteration   3: 21.451 us/op
Iteration   4: 16.763 us/op
Iteration   5: 17.792 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     19.466 ±(99.9%) 10.149 us/op

  Histogram, us/op:
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 3 
    [15.000, 17.500) = 3 
    [17.500, 20.000) = 1 
    [20.000, 22.500) = 1 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 2 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     13.769 us/op
     p(50.0000) =     16.906 us/op
     p(90.0000) =     31.552 us/op
     p(95.0000) =     31.569 us/op
     p(99.0000) =     31.569 us/op
     p(99.9000) =     31.569 us/op
     p(99.9900) =     31.569 us/op
     p(99.9990) =     31.569 us/op
     p(99.9999) =     31.569 us/op
    p(100.0000) =     31.569 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.75)

# Run progress: 1.89% complete, ETA 00:45:25
# Fork: 1 of 2
# Warmup Iteration   1: 2427.493 us/op
# Warmup Iteration   2: 1638.778 us/op
# Warmup Iteration   3: 1323.354 us/op
# Warmup Iteration   4: 1285.601 us/op
# Warmup Iteration   5: 1231.842 us/op
Iteration   1: 18.630 us/op
Iteration   2: 31.234 us/op
Iteration   3: 31.633 us/op
Iteration   4: 15.737 us/op
Iteration   5: 18.093 us/op

# Run progress: 2.08% complete, ETA 00:45:19
# Fork: 2 of 2
# Warmup Iteration   1: 2615.746 us/op
# Warmup Iteration   2: 1630.588 us/op
# Warmup Iteration   3: 1444.628 us/op
# Warmup Iteration   4: 1325.806 us/op
# Warmup Iteration   5: 1246.115 us/op
Iteration   1: 15.762 us/op
Iteration   2: 22.097 us/op
Iteration   3: 17.467 us/op
Iteration   4: 17.199 us/op
Iteration   5: 17.766 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     20.562 ±(99.9%) 9.067 us/op

  Histogram, us/op:
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 4 
    [17.500, 20.000) = 3 
    [20.000, 22.500) = 1 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 2 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     15.737 us/op
     p(50.0000) =     17.929 us/op
     p(90.0000) =     31.593 us/op
     p(95.0000) =     31.633 us/op
     p(99.0000) =     31.633 us/op
     p(99.9000) =     31.633 us/op
     p(99.9900) =     31.633 us/op
     p(99.9990) =     31.633 us/op
     p(99.9999) =     31.633 us/op
    p(100.0000) =     31.633 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 0.875)

# Run progress: 2.27% complete, ETA 00:45:14
# Fork: 1 of 2
# Warmup Iteration   1: 2780.160 us/op
# Warmup Iteration   2: 1648.505 us/op
# Warmup Iteration   3: 1609.394 us/op
# Warmup Iteration   4: 1368.842 us/op
# Warmup Iteration   5: 1247.225 us/op
Iteration   1: 11.942 us/op
Iteration   2: 14.624 us/op
Iteration   3: 12.101 us/op
Iteration   4: 36.104 us/op
Iteration   5: 15.208 us/op

# Run progress: 2.46% complete, ETA 00:45:09
# Fork: 2 of 2
# Warmup Iteration   1: 2786.941 us/op
# Warmup Iteration   2: 1614.312 us/op
# Warmup Iteration   3: 1586.105 us/op
# Warmup Iteration   4: 1433.514 us/op
# Warmup Iteration   5: 1472.382 us/op
Iteration   1: 14.087 us/op
Iteration   2: 29.719 us/op
Iteration   3: 11.283 us/op
Iteration   4: 15.589 us/op
Iteration   5: 34.793 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     19.545 ±(99.9%) 14.951 us/op

  Histogram, us/op:
    [10.000, 12.500) = 3 
    [12.500, 15.000) = 2 
    [15.000, 17.500) = 2 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 1 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 1 
    [35.000, 37.500) = 1 

  Percentiles, us/op:
      p(0.0000) =     11.283 us/op
     p(50.0000) =     14.916 us/op
     p(90.0000) =     35.973 us/op
     p(95.0000) =     36.104 us/op
     p(99.0000) =     36.104 us/op
     p(99.9000) =     36.104 us/op
     p(99.9900) =     36.104 us/op
     p(99.9990) =     36.104 us/op
     p(99.9999) =     36.104 us/op
    p(100.0000) =     36.104 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 16, loadFactor = 1)

# Run progress: 2.65% complete, ETA 00:45:03
# Fork: 1 of 2
# Warmup Iteration   1: 2699.372 us/op
# Warmup Iteration   2: 1694.399 us/op
# Warmup Iteration   3: 1547.518 us/op
# Warmup Iteration   4: 1486.442 us/op
# Warmup Iteration   5: 1317.955 us/op
Iteration   1: 14.854 us/op
Iteration   2: 13.822 us/op
Iteration   3: 12.689 us/op
Iteration   4: 36.286 us/op
Iteration   5: 35.636 us/op

# Run progress: 2.84% complete, ETA 00:44:58
# Fork: 2 of 2
# Warmup Iteration   1: 2809.110 us/op
# Warmup Iteration   2: 1745.909 us/op
# Warmup Iteration   3: 1504.232 us/op
# Warmup Iteration   4: 1313.763 us/op
# Warmup Iteration   5: 1327.207 us/op
Iteration   1: 14.036 us/op
Iteration   2: 13.383 us/op
Iteration   3: 11.834 us/op
Iteration   4: 35.943 us/op
Iteration   5: 56.775 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     24.526 ±(99.9%) 23.506 us/op

  Histogram, us/op:
    [10.000, 15.000) = 6 
    [15.000, 20.000) = 0 
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 0 
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 3 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     11.834 us/op
     p(50.0000) =     14.445 us/op
     p(90.0000) =     54.726 us/op
     p(95.0000) =     56.775 us/op
     p(99.0000) =     56.775 us/op
     p(99.9000) =     56.775 us/op
     p(99.9900) =     56.775 us/op
     p(99.9990) =     56.775 us/op
     p(99.9999) =     56.775 us/op
    p(100.0000) =     56.775 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.125)

# Run progress: 3.03% complete, ETA 00:44:53
# Fork: 1 of 2
# Warmup Iteration   1: 3126.098 us/op
# Warmup Iteration   2: 2421.734 us/op
# Warmup Iteration   3: 2153.510 us/op
# Warmup Iteration   4: 2042.625 us/op
# Warmup Iteration   5: 1912.540 us/op
Iteration   1: 32.552 us/op
Iteration   2: 46.170 us/op
Iteration   3: 19.390 us/op
Iteration   4: 154.912 us/op
Iteration   5: 34.896 us/op

# Run progress: 3.22% complete, ETA 00:44:47
# Fork: 2 of 2
# Warmup Iteration   1: 3016.448 us/op
# Warmup Iteration   2: 2516.981 us/op
# Warmup Iteration   3: 2026.515 us/op
# Warmup Iteration   4: 1995.376 us/op
# Warmup Iteration   5: 1854.397 us/op
Iteration   1: 18.529 us/op
Iteration   2: 18.331 us/op
Iteration   3: 20.965 us/op
Iteration   4: 39.460 us/op
Iteration   5: 18.760 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     40.396 ±(99.9%) 62.725 us/op

  Histogram, us/op:
    [  0.000,  12.500) = 0 
    [ 12.500,  25.000) = 5 
    [ 25.000,  37.500) = 2 
    [ 37.500,  50.000) = 2 
    [ 50.000,  62.500) = 0 
    [ 62.500,  75.000) = 0 
    [ 75.000,  87.500) = 0 
    [ 87.500, 100.000) = 0 
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 0 
    [125.000, 137.500) = 0 
    [137.500, 150.000) = 0 
    [150.000, 162.500) = 1 
    [162.500, 175.000) = 0 
    [175.000, 187.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     18.331 us/op
     p(50.0000) =     26.758 us/op
     p(90.0000) =    144.038 us/op
     p(95.0000) =    154.912 us/op
     p(99.0000) =    154.912 us/op
     p(99.9000) =    154.912 us/op
     p(99.9900) =    154.912 us/op
     p(99.9990) =    154.912 us/op
     p(99.9999) =    154.912 us/op
    p(100.0000) =    154.912 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.250)

# Run progress: 3.41% complete, ETA 00:44:42
# Fork: 1 of 2
# Warmup Iteration   1: 2903.388 us/op
# Warmup Iteration   2: 1885.741 us/op
# Warmup Iteration   3: 1577.586 us/op
# Warmup Iteration   4: 1473.412 us/op
# Warmup Iteration   5: 1546.131 us/op
Iteration   1: 16.357 us/op
Iteration   2: 16.755 us/op
Iteration   3: 17.017 us/op
Iteration   4: 37.396 us/op
Iteration   5: 37.020 us/op

# Run progress: 3.60% complete, ETA 00:44:37
# Fork: 2 of 2
# Warmup Iteration   1: 2811.054 us/op
# Warmup Iteration   2: 1903.646 us/op
# Warmup Iteration   3: 1750.146 us/op
# Warmup Iteration   4: 1502.502 us/op
# Warmup Iteration   5: 1522.393 us/op
Iteration   1: 28.643 us/op
Iteration   2: 17.039 us/op
Iteration   3: 16.776 us/op
Iteration   4: 34.643 us/op
Iteration   5: 30.916 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     25.256 ±(99.9%) 14.040 us/op

  Histogram, us/op:
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 5 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 1 
    [30.000, 32.500) = 1 
    [32.500, 35.000) = 1 
    [35.000, 37.500) = 2 

  Percentiles, us/op:
      p(0.0000) =     16.357 us/op
     p(50.0000) =     22.841 us/op
     p(90.0000) =     37.358 us/op
     p(95.0000) =     37.396 us/op
     p(99.0000) =     37.396 us/op
     p(99.9000) =     37.396 us/op
     p(99.9900) =     37.396 us/op
     p(99.9990) =     37.396 us/op
     p(99.9999) =     37.396 us/op
    p(100.0000) =     37.396 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.375)

# Run progress: 3.79% complete, ETA 00:44:31
# Fork: 1 of 2
# Warmup Iteration   1: 2651.776 us/op
# Warmup Iteration   2: 1667.701 us/op
# Warmup Iteration   3: 1450.641 us/op
# Warmup Iteration   4: 1271.271 us/op
# Warmup Iteration   5: 1356.776 us/op
Iteration   1: 15.386 us/op
Iteration   2: 41.107 us/op
Iteration   3: 16.371 us/op
Iteration   4: 38.322 us/op
Iteration   5: 17.281 us/op

# Run progress: 3.98% complete, ETA 00:44:25
# Fork: 2 of 2
# Warmup Iteration   1: 2667.839 us/op
# Warmup Iteration   2: 1779.763 us/op
# Warmup Iteration   3: 1461.194 us/op
# Warmup Iteration   4: 1369.219 us/op
# Warmup Iteration   5: 1281.986 us/op
Iteration   1: 17.331 us/op
Iteration   2: 17.667 us/op
Iteration   3: 49.254 us/op
Iteration   4: 35.671 us/op
Iteration   5: 17.265 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     26.565 ±(99.9%) 19.605 us/op

  Histogram, us/op:
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 5 
    [17.500, 20.000) = 1 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 1 
    [37.500, 40.000) = 1 
    [40.000, 42.500) = 1 
    [42.500, 45.000) = 0 
    [45.000, 47.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     15.386 us/op
     p(50.0000) =     17.499 us/op
     p(90.0000) =     48.439 us/op
     p(95.0000) =     49.254 us/op
     p(99.0000) =     49.254 us/op
     p(99.9000) =     49.254 us/op
     p(99.9900) =     49.254 us/op
     p(99.9990) =     49.254 us/op
     p(99.9999) =     49.254 us/op
    p(100.0000) =     49.254 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.5)

# Run progress: 4.17% complete, ETA 00:44:20
# Fork: 1 of 2
# Warmup Iteration   1: 2621.598 us/op
# Warmup Iteration   2: 1833.474 us/op
# Warmup Iteration   3: 1408.697 us/op
# Warmup Iteration   4: 1414.759 us/op
# Warmup Iteration   5: 1465.190 us/op
Iteration   1: 12.771 us/op
Iteration   2: 16.238 us/op
Iteration   3: 30.463 us/op
Iteration   4: 85.731 us/op
Iteration   5: 17.354 us/op

# Run progress: 4.36% complete, ETA 00:44:15
# Fork: 2 of 2
# Warmup Iteration   1: 3170.261 us/op
# Warmup Iteration   2: 1709.795 us/op
# Warmup Iteration   3: 1408.525 us/op
# Warmup Iteration   4: 1379.535 us/op
# Warmup Iteration   5: 1362.832 us/op
Iteration   1: 14.880 us/op
Iteration   2: 58.021 us/op
Iteration   3: 14.748 us/op
Iteration   4: 13.877 us/op
Iteration   5: 14.919 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     27.900 ±(99.9%) 37.177 us/op

  Histogram, us/op:
    [10.000, 15.000) = 5 
    [15.000, 20.000) = 2 
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 0 
    [30.000, 35.000) = 1 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 0 
    [55.000, 60.000) = 1 
    [60.000, 65.000) = 0 
    [65.000, 70.000) = 0 
    [70.000, 75.000) = 0 
    [75.000, 80.000) = 0 
    [80.000, 85.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     12.771 us/op
     p(50.0000) =     15.579 us/op
     p(90.0000) =     82.960 us/op
     p(95.0000) =     85.731 us/op
     p(99.0000) =     85.731 us/op
     p(99.9000) =     85.731 us/op
     p(99.9900) =     85.731 us/op
     p(99.9990) =     85.731 us/op
     p(99.9999) =     85.731 us/op
    p(100.0000) =     85.731 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.625)

# Run progress: 4.55% complete, ETA 00:44:10
# Fork: 1 of 2
# Warmup Iteration   1: 2477.175 us/op
# Warmup Iteration   2: 1564.217 us/op
# Warmup Iteration   3: 1462.523 us/op
# Warmup Iteration   4: 1243.514 us/op
# Warmup Iteration   5: 1140.942 us/op
Iteration   1: 11.882 us/op
Iteration   2: 56.761 us/op
Iteration   3: 14.350 us/op
Iteration   4: 31.839 us/op
Iteration   5: 16.295 us/op

# Run progress: 4.73% complete, ETA 00:44:04
# Fork: 2 of 2
# Warmup Iteration   1: 2444.248 us/op
# Warmup Iteration   2: 1690.284 us/op
# Warmup Iteration   3: 1412.108 us/op
# Warmup Iteration   4: 1155.238 us/op
# Warmup Iteration   5: 1172.836 us/op
Iteration   1: 12.434 us/op
Iteration   2: 15.739 us/op
Iteration   3: 15.064 us/op
Iteration   4: 30.005 us/op
Iteration   5: 26.115 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     23.048 ±(99.9%) 21.066 us/op

  Histogram, us/op:
    [10.000, 15.000) = 3 
    [15.000, 20.000) = 3 
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 1 
    [30.000, 35.000) = 2 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     11.882 us/op
     p(50.0000) =     16.017 us/op
     p(90.0000) =     54.269 us/op
     p(95.0000) =     56.761 us/op
     p(99.0000) =     56.761 us/op
     p(99.9000) =     56.761 us/op
     p(99.9900) =     56.761 us/op
     p(99.9990) =     56.761 us/op
     p(99.9999) =     56.761 us/op
    p(100.0000) =     56.761 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.75)

# Run progress: 4.92% complete, ETA 00:43:59
# Fork: 1 of 2
# Warmup Iteration   1: 2522.922 us/op
# Warmup Iteration   2: 1758.217 us/op
# Warmup Iteration   3: 1476.459 us/op
# Warmup Iteration   4: 1272.638 us/op
# Warmup Iteration   5: 1187.392 us/op
Iteration   1: 14.820 us/op
Iteration   2: 28.604 us/op
Iteration   3: 12.893 us/op
Iteration   4: 14.738 us/op
Iteration   5: 48.884 us/op

# Run progress: 5.11% complete, ETA 00:43:54
# Fork: 2 of 2
# Warmup Iteration   1: 2403.181 us/op
# Warmup Iteration   2: 1742.920 us/op
# Warmup Iteration   3: 1575.571 us/op
# Warmup Iteration   4: 1369.517 us/op
# Warmup Iteration   5: 1211.783 us/op
Iteration   1: 13.273 us/op
Iteration   2: 20.645 us/op
Iteration   3: 38.157 us/op
Iteration   4: 36.549 us/op
Iteration   5: 30.859 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     25.942 ±(99.9%) 19.040 us/op

  Histogram, us/op:
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 4 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 1 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 1 
    [30.000, 32.500) = 1 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 1 
    [37.500, 40.000) = 1 
    [40.000, 42.500) = 0 
    [42.500, 45.000) = 0 
    [45.000, 47.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     12.893 us/op
     p(50.0000) =     24.624 us/op
     p(90.0000) =     47.811 us/op
     p(95.0000) =     48.884 us/op
     p(99.0000) =     48.884 us/op
     p(99.9000) =     48.884 us/op
     p(99.9900) =     48.884 us/op
     p(99.9990) =     48.884 us/op
     p(99.9999) =     48.884 us/op
    p(100.0000) =     48.884 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 0.875)

# Run progress: 5.30% complete, ETA 00:43:48
# Fork: 1 of 2
# Warmup Iteration   1: 2914.453 us/op
# Warmup Iteration   2: 1652.945 us/op
# Warmup Iteration   3: 1589.981 us/op
# Warmup Iteration   4: 1336.218 us/op
# Warmup Iteration   5: 1312.672 us/op
Iteration   1: 24.487 us/op
Iteration   2: 12.919 us/op
Iteration   3: 10.948 us/op
Iteration   4: 12.703 us/op
Iteration   5: 40.662 us/op

# Run progress: 5.49% complete, ETA 00:43:43
# Fork: 2 of 2
# Warmup Iteration   1: 2900.022 us/op
# Warmup Iteration   2: 1711.279 us/op
# Warmup Iteration   3: 1554.831 us/op
# Warmup Iteration   4: 1345.537 us/op
# Warmup Iteration   5: 1245.590 us/op
Iteration   1: 12.026 us/op
Iteration   2: 34.412 us/op
Iteration   3: 11.079 us/op
Iteration   4: 10.762 us/op
Iteration   5: 12.184 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     18.218 ±(99.9%) 16.699 us/op

  Histogram, us/op:
    [10.000, 12.500) = 5 
    [12.500, 15.000) = 2 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 1 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 1 
    [35.000, 37.500) = 0 
    [37.500, 40.000) = 0 
    [40.000, 42.500) = 1 
    [42.500, 45.000) = 0 
    [45.000, 47.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     10.762 us/op
     p(50.0000) =     12.444 us/op
     p(90.0000) =     40.037 us/op
     p(95.0000) =     40.662 us/op
     p(99.0000) =     40.662 us/op
     p(99.9000) =     40.662 us/op
     p(99.9900) =     40.662 us/op
     p(99.9990) =     40.662 us/op
     p(99.9999) =     40.662 us/op
    p(100.0000) =     40.662 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100, loadFactor = 1)

# Run progress: 5.68% complete, ETA 00:43:37
# Fork: 1 of 2
# Warmup Iteration   1: 2625.631 us/op
# Warmup Iteration   2: 1722.166 us/op
# Warmup Iteration   3: 1583.835 us/op
# Warmup Iteration   4: 1319.596 us/op
# Warmup Iteration   5: 1313.499 us/op
Iteration   1: 10.097 us/op
Iteration   2: 39.077 us/op
Iteration   3: 33.128 us/op
Iteration   4: 10.279 us/op
Iteration   5: 26.988 us/op

# Run progress: 5.87% complete, ETA 00:43:31
# Fork: 2 of 2
# Warmup Iteration   1: 2449.258 us/op
# Warmup Iteration   2: 1796.448 us/op
# Warmup Iteration   3: 1660.957 us/op
# Warmup Iteration   4: 1389.799 us/op
# Warmup Iteration   5: 1281.378 us/op
Iteration   1: 10.255 us/op
Iteration   2: 26.592 us/op
Iteration   3: 9.831 us/op
Iteration   4: 30.258 us/op
Iteration   5: 12.476 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     20.898 ±(99.9%) 17.262 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 0 
    [ 5.000,  7.500) = 0 
    [ 7.500, 10.000) = 1 
    [10.000, 12.500) = 4 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 2 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 1 
    [32.500, 35.000) = 1 
    [35.000, 37.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      9.831 us/op
     p(50.0000) =     19.534 us/op
     p(90.0000) =     38.482 us/op
     p(95.0000) =     39.077 us/op
     p(99.0000) =     39.077 us/op
     p(99.9000) =     39.077 us/op
     p(99.9900) =     39.077 us/op
     p(99.9990) =     39.077 us/op
     p(99.9999) =     39.077 us/op
    p(100.0000) =     39.077 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.125)

# Run progress: 6.06% complete, ETA 00:43:26
# Fork: 1 of 2
# Warmup Iteration   1: 3115.865 us/op
# Warmup Iteration   2: 2386.385 us/op
# Warmup Iteration   3: 1898.341 us/op
# Warmup Iteration   4: 1742.603 us/op
# Warmup Iteration   5: 1716.420 us/op
Iteration   1: 11.053 us/op
Iteration   2: 33.099 us/op
Iteration   3: 46.526 us/op
Iteration   4: 25.461 us/op
Iteration   5: 25.750 us/op

# Run progress: 6.25% complete, ETA 00:43:20
# Fork: 2 of 2
# Warmup Iteration   1: 3532.937 us/op
# Warmup Iteration   2: 2395.696 us/op
# Warmup Iteration   3: 1824.861 us/op
# Warmup Iteration   4: 1879.687 us/op
# Warmup Iteration   5: 1708.437 us/op
Iteration   1: 11.314 us/op
Iteration   2: 14.369 us/op
Iteration   3: 38.500 us/op
Iteration   4: 37.125 us/op
Iteration   5: 10.579 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     25.378 ±(99.9%) 19.907 us/op

  Histogram, us/op:
    [10.000, 12.500) = 3 
    [12.500, 15.000) = 1 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 2 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 1 
    [35.000, 37.500) = 1 
    [37.500, 40.000) = 1 
    [40.000, 42.500) = 0 
    [42.500, 45.000) = 0 
    [45.000, 47.500) = 1 

  Percentiles, us/op:
      p(0.0000) =     10.579 us/op
     p(50.0000) =     25.606 us/op
     p(90.0000) =     45.723 us/op
     p(95.0000) =     46.526 us/op
     p(99.0000) =     46.526 us/op
     p(99.9000) =     46.526 us/op
     p(99.9900) =     46.526 us/op
     p(99.9990) =     46.526 us/op
     p(99.9999) =     46.526 us/op
    p(100.0000) =     46.526 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.250)

# Run progress: 6.44% complete, ETA 00:43:15
# Fork: 1 of 2
# Warmup Iteration   1: 2809.811 us/op
# Warmup Iteration   2: 1841.352 us/op
# Warmup Iteration   3: 1607.579 us/op
# Warmup Iteration   4: 1524.790 us/op
# Warmup Iteration   5: 1519.793 us/op
Iteration   1: 11.623 us/op
Iteration   2: 31.788 us/op
Iteration   3: 15.778 us/op
Iteration   4: 11.633 us/op
Iteration   5: 12.554 us/op

# Run progress: 6.63% complete, ETA 00:43:09
# Fork: 2 of 2
# Warmup Iteration   1: 3046.568 us/op
# Warmup Iteration   2: 1934.694 us/op
# Warmup Iteration   3: 1666.228 us/op
# Warmup Iteration   4: 1478.770 us/op
# Warmup Iteration   5: 1511.988 us/op
Iteration   1: 12.028 us/op
Iteration   2: 10.311 us/op
Iteration   3: 13.882 us/op
Iteration   4: 31.469 us/op
Iteration   5: 27.130 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     17.820 ±(99.9%) 13.162 us/op

  Histogram, us/op:
    [10.000, 12.500) = 4 
    [12.500, 15.000) = 2 
    [15.000, 17.500) = 1 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 1 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 2 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     10.311 us/op
     p(50.0000) =     13.218 us/op
     p(90.0000) =     31.756 us/op
     p(95.0000) =     31.788 us/op
     p(99.0000) =     31.788 us/op
     p(99.9000) =     31.788 us/op
     p(99.9900) =     31.788 us/op
     p(99.9990) =     31.788 us/op
     p(99.9999) =     31.788 us/op
    p(100.0000) =     31.788 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.375)

# Run progress: 6.82% complete, ETA 00:43:03
# Fork: 1 of 2
# Warmup Iteration   1: 2914.075 us/op
# Warmup Iteration   2: 1652.302 us/op
# Warmup Iteration   3: 1504.906 us/op
# Warmup Iteration   4: 1425.933 us/op
# Warmup Iteration   5: 1286.837 us/op
Iteration   1: 13.398 us/op
Iteration   2: 61.735 us/op
Iteration   3: 12.588 us/op
Iteration   4: 14.433 us/op
Iteration   5: 28.513 us/op

# Run progress: 7.01% complete, ETA 00:42:58
# Fork: 2 of 2
# Warmup Iteration   1: 2627.472 us/op
# Warmup Iteration   2: 1779.450 us/op
# Warmup Iteration   3: 1446.538 us/op
# Warmup Iteration   4: 1315.375 us/op
# Warmup Iteration   5: 1312.824 us/op
Iteration   1: 11.459 us/op
Iteration   2: 38.772 us/op
Iteration   3: 13.380 us/op
Iteration   4: 25.869 us/op
Iteration   5: 47.997 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     26.814 ±(99.9%) 26.508 us/op

  Histogram, us/op:
    [10.000, 15.000) = 5 
    [15.000, 20.000) = 0 
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 2 
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 1 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 1 
    [50.000, 55.000) = 0 
    [55.000, 60.000) = 0 
    [60.000, 65.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     11.459 us/op
     p(50.0000) =     20.151 us/op
     p(90.0000) =     60.361 us/op
     p(95.0000) =     61.735 us/op
     p(99.0000) =     61.735 us/op
     p(99.9000) =     61.735 us/op
     p(99.9900) =     61.735 us/op
     p(99.9990) =     61.735 us/op
     p(99.9999) =     61.735 us/op
    p(100.0000) =     61.735 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.5)

# Run progress: 7.20% complete, ETA 00:42:52
# Fork: 1 of 2
# Warmup Iteration   1: 2489.497 us/op
# Warmup Iteration   2: 1796.721 us/op
# Warmup Iteration   3: 1560.466 us/op
# Warmup Iteration   4: 1397.323 us/op
# Warmup Iteration   5: 1353.944 us/op
Iteration   1: 15.729 us/op
Iteration   2: 12.989 us/op
Iteration   3: 12.475 us/op
Iteration   4: 27.617 us/op
Iteration   5: 30.012 us/op

# Run progress: 7.39% complete, ETA 00:42:47
# Fork: 2 of 2
# Warmup Iteration   1: 3252.425 us/op
# Warmup Iteration   2: 1753.048 us/op
# Warmup Iteration   3: 1585.949 us/op
# Warmup Iteration   4: 1325.828 us/op
# Warmup Iteration   5: 1327.396 us/op
Iteration   1: 13.452 us/op
Iteration   2: 12.533 us/op
Iteration   3: 35.789 us/op
Iteration   4: 13.325 us/op
Iteration   5: 30.878 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     20.480 ±(99.9%) 14.172 us/op

  Histogram, us/op:
    [10.000, 12.500) = 1 
    [12.500, 15.000) = 4 
    [15.000, 17.500) = 1 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 1 
    [30.000, 32.500) = 2 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 1 

  Percentiles, us/op:
      p(0.0000) =     12.475 us/op
     p(50.0000) =     14.590 us/op
     p(90.0000) =     35.298 us/op
     p(95.0000) =     35.789 us/op
     p(99.0000) =     35.789 us/op
     p(99.9000) =     35.789 us/op
     p(99.9900) =     35.789 us/op
     p(99.9990) =     35.789 us/op
     p(99.9999) =     35.789 us/op
    p(100.0000) =     35.789 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.625)

# Run progress: 7.58% complete, ETA 00:42:41
# Fork: 1 of 2
# Warmup Iteration   1: 2528.361 us/op
# Warmup Iteration   2: 1538.618 us/op
# Warmup Iteration   3: 1568.618 us/op
# Warmup Iteration   4: 1216.368 us/op
# Warmup Iteration   5: 1137.244 us/op
Iteration   1: 15.002 us/op
Iteration   2: 41.818 us/op
Iteration   3: 13.614 us/op
Iteration   4: 12.529 us/op
Iteration   5: 13.175 us/op

# Run progress: 7.77% complete, ETA 00:42:36
# Fork: 2 of 2
# Warmup Iteration   1: 2527.165 us/op
# Warmup Iteration   2: 1518.399 us/op
# Warmup Iteration   3: 1311.862 us/op
# Warmup Iteration   4: 1175.035 us/op
# Warmup Iteration   5: 1160.498 us/op
Iteration   1: 9.835 us/op
Iteration   2: 42.999 us/op
Iteration   3: 31.532 us/op
Iteration   4: 26.544 us/op
Iteration   5: 13.344 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     22.039 ±(99.9%) 19.223 us/op

  Histogram, us/op:
    [ 0.000,  5.000) = 0 
    [ 5.000, 10.000) = 1 
    [10.000, 15.000) = 4 
    [15.000, 20.000) = 1 
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 1 
    [30.000, 35.000) = 1 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 2 

  Percentiles, us/op:
      p(0.0000) =      9.835 us/op
     p(50.0000) =     14.308 us/op
     p(90.0000) =     42.881 us/op
     p(95.0000) =     42.999 us/op
     p(99.0000) =     42.999 us/op
     p(99.9000) =     42.999 us/op
     p(99.9900) =     42.999 us/op
     p(99.9990) =     42.999 us/op
     p(99.9999) =     42.999 us/op
    p(100.0000) =     42.999 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.75)

# Run progress: 7.95% complete, ETA 00:42:30
# Fork: 1 of 2
# Warmup Iteration   1: 2793.870 us/op
# Warmup Iteration   2: 1643.426 us/op
# Warmup Iteration   3: 1459.916 us/op
# Warmup Iteration   4: 1185.364 us/op
# Warmup Iteration   5: 1191.319 us/op
Iteration   1: 11.389 us/op
Iteration   2: 14.067 us/op
Iteration   3: 13.575 us/op
Iteration   4: 11.568 us/op
Iteration   5: 26.468 us/op

# Run progress: 8.14% complete, ETA 00:42:25
# Fork: 2 of 2
# Warmup Iteration   1: 2868.856 us/op
# Warmup Iteration   2: 1657.117 us/op
# Warmup Iteration   3: 1319.180 us/op
# Warmup Iteration   4: 1225.684 us/op
# Warmup Iteration   5: 1198.753 us/op
Iteration   1: 23.862 us/op
Iteration   2: 37.135 us/op
Iteration   3: 13.753 us/op
Iteration   4: 38.599 us/op
Iteration   5: 13.519 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     20.394 ±(99.9%) 15.916 us/op

  Histogram, us/op:
    [10.000, 12.500) = 2 
    [12.500, 15.000) = 4 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 1 
    [25.000, 27.500) = 1 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 1 

  Percentiles, us/op:
      p(0.0000) =     11.389 us/op
     p(50.0000) =     13.910 us/op
     p(90.0000) =     38.453 us/op
     p(95.0000) =     38.599 us/op
     p(99.0000) =     38.599 us/op
     p(99.9000) =     38.599 us/op
     p(99.9900) =     38.599 us/op
     p(99.9990) =     38.599 us/op
     p(99.9999) =     38.599 us/op
    p(100.0000) =     38.599 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 0.875)

# Run progress: 8.33% complete, ETA 00:42:19
# Fork: 1 of 2
# Warmup Iteration   1: 2643.124 us/op
# Warmup Iteration   2: 1710.855 us/op
# Warmup Iteration   3: 1452.081 us/op
# Warmup Iteration   4: 1277.582 us/op
# Warmup Iteration   5: 1257.182 us/op
Iteration   1: 10.347 us/op
Iteration   2: 10.611 us/op
Iteration   3: 33.759 us/op
Iteration   4: 27.714 us/op
Iteration   5: 12.556 us/op

# Run progress: 8.52% complete, ETA 00:42:14
# Fork: 2 of 2
# Warmup Iteration   1: 2536.378 us/op
# Warmup Iteration   2: 1725.595 us/op
# Warmup Iteration   3: 1501.542 us/op
# Warmup Iteration   4: 1280.732 us/op
# Warmup Iteration   5: 1208.329 us/op
Iteration   1: 9.784 us/op
Iteration   2: 34.771 us/op
Iteration   3: 35.511 us/op
Iteration   4: 11.949 us/op
Iteration   5: 11.541 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     19.854 ±(99.9%) 17.347 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 0 
    [ 5.000,  7.500) = 0 
    [ 7.500, 10.000) = 1 
    [10.000, 12.500) = 4 
    [12.500, 15.000) = 1 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 1 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 2 
    [35.000, 37.500) = 1 

  Percentiles, us/op:
      p(0.0000) =      9.784 us/op
     p(50.0000) =     12.253 us/op
     p(90.0000) =     35.437 us/op
     p(95.0000) =     35.511 us/op
     p(99.0000) =     35.511 us/op
     p(99.9000) =     35.511 us/op
     p(99.9900) =     35.511 us/op
     p(99.9990) =     35.511 us/op
     p(99.9999) =     35.511 us/op
    p(100.0000) =     35.511 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1024, loadFactor = 1)

# Run progress: 8.71% complete, ETA 00:42:09
# Fork: 1 of 2
# Warmup Iteration   1: 3060.776 us/op
# Warmup Iteration   2: 1748.192 us/op
# Warmup Iteration   3: 1616.612 us/op
# Warmup Iteration   4: 1370.643 us/op
# Warmup Iteration   5: 1281.465 us/op
Iteration   1: 11.695 us/op
Iteration   2: 13.931 us/op
Iteration   3: 13.449 us/op
Iteration   4: 10.080 us/op
Iteration   5: 25.592 us/op

# Run progress: 8.90% complete, ETA 00:42:03
# Fork: 2 of 2
# Warmup Iteration   1: 2736.043 us/op
# Warmup Iteration   2: 1863.871 us/op
# Warmup Iteration   3: 1620.862 us/op
# Warmup Iteration   4: 1293.814 us/op
# Warmup Iteration   5: 1260.095 us/op
Iteration   1: 9.623 us/op
Iteration   2: 13.780 us/op
Iteration   3: 27.483 us/op
Iteration   4: 10.021 us/op
Iteration   5: 13.572 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     14.923 ±(99.9%) 9.613 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 0 
    [ 5.000,  7.500) = 0 
    [ 7.500, 10.000) = 1 
    [10.000, 12.500) = 3 
    [12.500, 15.000) = 4 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 2 

  Percentiles, us/op:
      p(0.0000) =      9.623 us/op
     p(50.0000) =     13.511 us/op
     p(90.0000) =     27.294 us/op
     p(95.0000) =     27.483 us/op
     p(99.0000) =     27.483 us/op
     p(99.9000) =     27.483 us/op
     p(99.9900) =     27.483 us/op
     p(99.9990) =     27.483 us/op
     p(99.9999) =     27.483 us/op
    p(100.0000) =     27.483 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.125)

# Run progress: 9.09% complete, ETA 00:41:58
# Fork: 1 of 2
# Warmup Iteration   1: 2895.831 us/op
# Warmup Iteration   2: 2374.492 us/op
# Warmup Iteration   3: 1865.828 us/op
# Warmup Iteration   4: 1847.588 us/op
# Warmup Iteration   5: 1781.217 us/op
Iteration   1: 17.099 us/op
Iteration   2: 11.872 us/op
Iteration   3: 18.613 us/op
Iteration   4: 30.641 us/op
Iteration   5: 11.856 us/op

# Run progress: 9.28% complete, ETA 00:41:52
# Fork: 2 of 2
# Warmup Iteration   1: 3292.565 us/op
# Warmup Iteration   2: 2544.337 us/op
# Warmup Iteration   3: 1881.319 us/op
# Warmup Iteration   4: 1738.046 us/op
# Warmup Iteration   5: 1642.523 us/op
Iteration   1: 12.991 us/op
Iteration   2: 12.047 us/op
Iteration   3: 14.130 us/op
Iteration   4: 13.258 us/op
Iteration   5: 12.874 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     15.538 ±(99.9%) 8.728 us/op

  Histogram, us/op:
    [10.000, 12.500) = 3 
    [12.500, 15.000) = 4 
    [15.000, 17.500) = 1 
    [17.500, 20.000) = 1 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 1 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     11.856 us/op
     p(50.0000) =     13.125 us/op
     p(90.0000) =     29.438 us/op
     p(95.0000) =     30.641 us/op
     p(99.0000) =     30.641 us/op
     p(99.9000) =     30.641 us/op
     p(99.9900) =     30.641 us/op
     p(99.9990) =     30.641 us/op
     p(99.9999) =     30.641 us/op
    p(100.0000) =     30.641 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.250)

# Run progress: 9.47% complete, ETA 00:41:47
# Fork: 1 of 2
# Warmup Iteration   1: 2966.205 us/op
# Warmup Iteration   2: 1956.828 us/op
# Warmup Iteration   3: 1557.600 us/op
# Warmup Iteration   4: 1479.713 us/op
# Warmup Iteration   5: 1521.290 us/op
Iteration   1: 24.228 us/op
Iteration   2: 40.924 us/op
Iteration   3: 13.219 us/op
Iteration   4: 33.844 us/op
Iteration   5: 12.155 us/op

# Run progress: 9.66% complete, ETA 00:41:42
# Fork: 2 of 2
# Warmup Iteration   1: 2723.621 us/op
# Warmup Iteration   2: 1948.521 us/op
# Warmup Iteration   3: 1596.076 us/op
# Warmup Iteration   4: 1459.193 us/op
# Warmup Iteration   5: 1501.693 us/op
Iteration   1: 10.918 us/op
Iteration   2: 27.841 us/op
Iteration   3: 28.101 us/op
Iteration   4: 10.650 us/op
Iteration   5: 24.891 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     22.677 ±(99.9%) 15.969 us/op

  Histogram, us/op:
    [10.000, 12.500) = 3 
    [12.500, 15.000) = 1 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 2 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 2 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 1 
    [35.000, 37.500) = 0 
    [37.500, 40.000) = 0 
    [40.000, 42.500) = 1 
    [42.500, 45.000) = 0 
    [45.000, 47.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     10.650 us/op
     p(50.0000) =     24.560 us/op
     p(90.0000) =     40.216 us/op
     p(95.0000) =     40.924 us/op
     p(99.0000) =     40.924 us/op
     p(99.9000) =     40.924 us/op
     p(99.9900) =     40.924 us/op
     p(99.9990) =     40.924 us/op
     p(99.9999) =     40.924 us/op
    p(100.0000) =     40.924 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.375)

# Run progress: 9.85% complete, ETA 00:41:36
# Fork: 1 of 2
# Warmup Iteration   1: 2763.063 us/op
# Warmup Iteration   2: 1701.620 us/op
# Warmup Iteration   3: 1461.325 us/op
# Warmup Iteration   4: 1358.282 us/op
# Warmup Iteration   5: 1235.840 us/op
Iteration   1: 27.532 us/op
Iteration   2: 47.358 us/op
Iteration   3: 13.440 us/op
Iteration   4: 12.330 us/op
Iteration   5: 11.769 us/op

# Run progress: 10.04% complete, ETA 00:41:31
# Fork: 2 of 2
# Warmup Iteration   1: 3145.398 us/op
# Warmup Iteration   2: 1557.307 us/op
# Warmup Iteration   3: 1480.992 us/op
# Warmup Iteration   4: 1353.409 us/op
# Warmup Iteration   5: 1285.043 us/op
Iteration   1: 14.162 us/op
Iteration   2: 10.867 us/op
Iteration   3: 14.203 us/op
Iteration   4: 55.828 us/op
Iteration   5: 12.431 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     21.992 ±(99.9%) 24.828 us/op

  Histogram, us/op:
    [10.000, 15.000) = 7 
    [15.000, 20.000) = 0 
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 1 
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 1 
    [50.000, 55.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     10.867 us/op
     p(50.0000) =     13.801 us/op
     p(90.0000) =     54.981 us/op
     p(95.0000) =     55.828 us/op
     p(99.0000) =     55.828 us/op
     p(99.9000) =     55.828 us/op
     p(99.9900) =     55.828 us/op
     p(99.9990) =     55.828 us/op
     p(99.9999) =     55.828 us/op
    p(100.0000) =     55.828 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.5)

# Run progress: 10.23% complete, ETA 00:41:25
# Fork: 1 of 2
# Warmup Iteration   1: 2444.592 us/op
# Warmup Iteration   2: 1728.843 us/op
# Warmup Iteration   3: 1529.510 us/op
# Warmup Iteration   4: 1375.098 us/op
# Warmup Iteration   5: 1396.778 us/op
Iteration   1: 12.760 us/op
Iteration   2: 43.297 us/op
Iteration   3: 11.912 us/op
Iteration   4: 25.842 us/op
Iteration   5: 12.465 us/op

# Run progress: 10.42% complete, ETA 00:41:20
# Fork: 2 of 2
# Warmup Iteration   1: 2479.489 us/op
# Warmup Iteration   2: 1770.968 us/op
# Warmup Iteration   3: 1553.435 us/op
# Warmup Iteration   4: 1338.794 us/op
# Warmup Iteration   5: 1397.738 us/op
Iteration   1: 15.587 us/op
Iteration   2: 26.045 us/op
Iteration   3: 11.810 us/op
Iteration   4: 13.543 us/op
Iteration   5: 12.605 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     18.587 ±(99.9%) 15.541 us/op

  Histogram, us/op:
    [10.000, 12.500) = 3 
    [12.500, 15.000) = 3 
    [15.000, 17.500) = 1 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 2 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 0 
    [37.500, 40.000) = 0 
    [40.000, 42.500) = 0 
    [42.500, 45.000) = 1 
    [45.000, 47.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     11.810 us/op
     p(50.0000) =     13.151 us/op
     p(90.0000) =     41.572 us/op
     p(95.0000) =     43.297 us/op
     p(99.0000) =     43.297 us/op
     p(99.9000) =     43.297 us/op
     p(99.9900) =     43.297 us/op
     p(99.9990) =     43.297 us/op
     p(99.9999) =     43.297 us/op
    p(100.0000) =     43.297 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.625)

# Run progress: 10.61% complete, ETA 00:41:15
# Fork: 1 of 2
# Warmup Iteration   1: 2472.775 us/op
# Warmup Iteration   2: 1567.340 us/op
# Warmup Iteration   3: 1457.956 us/op
# Warmup Iteration   4: 1245.643 us/op
# Warmup Iteration   5: 1152.052 us/op
Iteration   1: 10.097 us/op
Iteration   2: 38.053 us/op
Iteration   3: 14.979 us/op
Iteration   4: 10.419 us/op
Iteration   5: 27.192 us/op

# Run progress: 10.80% complete, ETA 00:41:10
# Fork: 2 of 2
# Warmup Iteration   1: 2665.064 us/op
# Warmup Iteration   2: 1485.561 us/op
# Warmup Iteration   3: 1488.384 us/op
# Warmup Iteration   4: 1306.049 us/op
# Warmup Iteration   5: 1128.181 us/op
Iteration   1: 38.565 us/op
Iteration   2: 53.345 us/op
Iteration   3: 13.450 us/op
Iteration   4: 10.209 us/op
Iteration   5: 15.030 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     23.134 ±(99.9%) 23.174 us/op

  Histogram, us/op:
    [10.000, 15.000) = 5 
    [15.000, 20.000) = 1 
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 1 
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 2 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     10.097 us/op
     p(50.0000) =     15.005 us/op
     p(90.0000) =     51.867 us/op
     p(95.0000) =     53.345 us/op
     p(99.0000) =     53.345 us/op
     p(99.9000) =     53.345 us/op
     p(99.9900) =     53.345 us/op
     p(99.9990) =     53.345 us/op
     p(99.9999) =     53.345 us/op
    p(100.0000) =     53.345 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.75)

# Run progress: 10.98% complete, ETA 00:41:04
# Fork: 1 of 2
# Warmup Iteration   1: 2418.080 us/op
# Warmup Iteration   2: 1597.580 us/op
# Warmup Iteration   3: 1585.980 us/op
# Warmup Iteration   4: 1254.993 us/op
# Warmup Iteration   5: 1168.030 us/op
Iteration   1: 23.050 us/op
Iteration   2: 33.452 us/op
Iteration   3: 28.408 us/op
Iteration   4: 26.549 us/op
Iteration   5: 33.639 us/op

# Run progress: 11.17% complete, ETA 00:40:59
# Fork: 2 of 2
# Warmup Iteration   1: 2708.430 us/op
# Warmup Iteration   2: 1550.734 us/op
# Warmup Iteration   3: 1416.657 us/op
# Warmup Iteration   4: 1297.336 us/op
# Warmup Iteration   5: 1162.917 us/op
Iteration   1: 23.367 us/op
Iteration   2: 11.964 us/op
Iteration   3: 13.511 us/op
Iteration   4: 37.811 us/op
Iteration   5: 13.543 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     24.529 ±(99.9%) 13.908 us/op

  Histogram, us/op:
    [10.000, 12.500) = 1 
    [12.500, 15.000) = 2 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 2 
    [25.000, 27.500) = 1 
    [27.500, 30.000) = 1 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 2 
    [35.000, 37.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     11.964 us/op
     p(50.0000) =     24.958 us/op
     p(90.0000) =     37.394 us/op
     p(95.0000) =     37.811 us/op
     p(99.0000) =     37.811 us/op
     p(99.9000) =     37.811 us/op
     p(99.9900) =     37.811 us/op
     p(99.9990) =     37.811 us/op
     p(99.9999) =     37.811 us/op
    p(100.0000) =     37.811 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 0.875)

# Run progress: 11.36% complete, ETA 00:40:54
# Fork: 1 of 2
# Warmup Iteration   1: 2753.108 us/op
# Warmup Iteration   2: 1620.488 us/op
# Warmup Iteration   3: 1461.121 us/op
# Warmup Iteration   4: 1340.055 us/op
# Warmup Iteration   5: 1278.533 us/op
Iteration   1: 12.485 us/op
Iteration   2: 10.003 us/op
Iteration   3: 33.661 us/op
Iteration   4: 25.547 us/op
Iteration   5: 27.323 us/op

# Run progress: 11.55% complete, ETA 00:40:49
# Fork: 2 of 2
# Warmup Iteration   1: 2559.439 us/op
# Warmup Iteration   2: 1624.156 us/op
# Warmup Iteration   3: 1397.470 us/op
# Warmup Iteration   4: 1211.833 us/op
# Warmup Iteration   5: 1229.431 us/op
Iteration   1: 9.633 us/op
Iteration   2: 34.056 us/op
Iteration   3: 13.155 us/op
Iteration   4: 27.011 us/op
Iteration   5: 11.578 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     20.445 ±(99.9%) 15.097 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 0 
    [ 5.000,  7.500) = 0 
    [ 7.500, 10.000) = 1 
    [10.000, 12.500) = 3 
    [12.500, 15.000) = 1 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 3 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 2 
    [35.000, 37.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      9.633 us/op
     p(50.0000) =     19.351 us/op
     p(90.0000) =     34.017 us/op
     p(95.0000) =     34.056 us/op
     p(99.0000) =     34.056 us/op
     p(99.9000) =     34.056 us/op
     p(99.9900) =     34.056 us/op
     p(99.9990) =     34.056 us/op
     p(99.9999) =     34.056 us/op
    p(100.0000) =     34.056 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000, loadFactor = 1)

# Run progress: 11.74% complete, ETA 00:40:43
# Fork: 1 of 2
# Warmup Iteration   1: 2473.307 us/op
# Warmup Iteration   2: 1711.368 us/op
# Warmup Iteration   3: 1638.633 us/op
# Warmup Iteration   4: 1437.563 us/op
# Warmup Iteration   5: 1303.540 us/op
Iteration   1: 24.452 us/op
Iteration   2: 34.055 us/op
Iteration   3: 27.378 us/op
Iteration   4: 11.234 us/op
Iteration   5: 13.486 us/op

# Run progress: 11.93% complete, ETA 00:40:38
# Fork: 2 of 2
# Warmup Iteration   1: 2594.339 us/op
# Warmup Iteration   2: 1654.230 us/op
# Warmup Iteration   3: 1531.371 us/op
# Warmup Iteration   4: 1378.687 us/op
# Warmup Iteration   5: 1261.645 us/op
Iteration   1: 9.968 us/op
Iteration   2: 26.168 us/op
Iteration   3: 28.488 us/op
Iteration   4: 25.628 us/op
Iteration   5: 13.802 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     21.466 ±(99.9%) 12.852 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 0 
    [ 5.000,  7.500) = 0 
    [ 7.500, 10.000) = 1 
    [10.000, 12.500) = 1 
    [12.500, 15.000) = 2 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 1 
    [25.000, 27.500) = 3 
    [27.500, 30.000) = 1 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 1 
    [35.000, 37.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      9.968 us/op
     p(50.0000) =     25.040 us/op
     p(90.0000) =     33.498 us/op
     p(95.0000) =     34.055 us/op
     p(99.0000) =     34.055 us/op
     p(99.9000) =     34.055 us/op
     p(99.9900) =     34.055 us/op
     p(99.9990) =     34.055 us/op
     p(99.9999) =     34.055 us/op
    p(100.0000) =     34.055 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.125)

# Run progress: 12.12% complete, ETA 00:40:33
# Fork: 1 of 2
# Warmup Iteration   1: 3124.248 us/op
# Warmup Iteration   2: 2201.184 us/op
# Warmup Iteration   3: 1683.177 us/op
# Warmup Iteration   4: 1633.583 us/op
# Warmup Iteration   5: 1628.502 us/op
Iteration   1: 38.049 us/op
Iteration   2: 47.364 us/op
Iteration   3: 67.722 us/op
Iteration   4: 52.952 us/op
Iteration   5: 70.731 us/op

# Run progress: 12.31% complete, ETA 00:40:28
# Fork: 2 of 2
# Warmup Iteration   1: 3130.764 us/op
# Warmup Iteration   2: 2235.528 us/op
# Warmup Iteration   3: 1717.967 us/op
# Warmup Iteration   4: 1743.130 us/op
# Warmup Iteration   5: 1608.880 us/op
Iteration   1: 29.557 us/op
Iteration   2: 56.341 us/op
Iteration   3: 37.580 us/op
Iteration   4: 87.048 us/op
Iteration   5: 33.773 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     52.112 ±(99.9%) 28.086 us/op

  Histogram, us/op:
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 1 
    [30.000, 35.000) = 1 
    [35.000, 40.000) = 2 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 1 
    [50.000, 55.000) = 1 
    [55.000, 60.000) = 1 
    [60.000, 65.000) = 0 
    [65.000, 70.000) = 1 
    [70.000, 75.000) = 1 
    [75.000, 80.000) = 0 
    [80.000, 85.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     29.557 us/op
     p(50.0000) =     50.158 us/op
     p(90.0000) =     85.416 us/op
     p(95.0000) =     87.048 us/op
     p(99.0000) =     87.048 us/op
     p(99.9000) =     87.048 us/op
     p(99.9900) =     87.048 us/op
     p(99.9990) =     87.048 us/op
     p(99.9999) =     87.048 us/op
    p(100.0000) =     87.048 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.250)

# Run progress: 12.50% complete, ETA 00:40:23
# Fork: 1 of 2
# Warmup Iteration   1: 2975.154 us/op
# Warmup Iteration   2: 1722.668 us/op
# Warmup Iteration   3: 1588.058 us/op
# Warmup Iteration   4: 1513.313 us/op
# Warmup Iteration   5: 1400.130 us/op
Iteration   1: 31.868 us/op
Iteration   2: 95.793 us/op
Iteration   3: 34.929 us/op
Iteration   4: 48.008 us/op
Iteration   5: 33.923 us/op

# Run progress: 12.69% complete, ETA 00:40:18
# Fork: 2 of 2
# Warmup Iteration   1: 3068.453 us/op
# Warmup Iteration   2: 1758.500 us/op
# Warmup Iteration   3: 1487.143 us/op
# Warmup Iteration   4: 1368.309 us/op
# Warmup Iteration   5: 1387.232 us/op
Iteration   1: 30.576 us/op
Iteration   2: 93.823 us/op
Iteration   3: 56.910 us/op
Iteration   4: 88.802 us/op
Iteration   5: 34.735 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     54.937 ±(99.9%) 41.422 us/op

  Histogram, us/op:
    [ 30.000,  35.000) = 5 
    [ 35.000,  40.000) = 0 
    [ 40.000,  45.000) = 0 
    [ 45.000,  50.000) = 1 
    [ 50.000,  55.000) = 0 
    [ 55.000,  60.000) = 1 
    [ 60.000,  65.000) = 0 
    [ 65.000,  70.000) = 0 
    [ 70.000,  75.000) = 0 
    [ 75.000,  80.000) = 0 
    [ 80.000,  85.000) = 0 
    [ 85.000,  90.000) = 1 
    [ 90.000,  95.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     30.576 us/op
     p(50.0000) =     41.469 us/op
     p(90.0000) =     95.596 us/op
     p(95.0000) =     95.793 us/op
     p(99.0000) =     95.793 us/op
     p(99.9000) =     95.793 us/op
     p(99.9900) =     95.793 us/op
     p(99.9990) =     95.793 us/op
     p(99.9999) =     95.793 us/op
    p(100.0000) =     95.793 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.375)

# Run progress: 12.88% complete, ETA 00:40:12
# Fork: 1 of 2
# Warmup Iteration   1: 2159.499 us/op
# Warmup Iteration   2: 1407.472 us/op
# Warmup Iteration   3: 1291.253 us/op
# Warmup Iteration   4: 1133.802 us/op
# Warmup Iteration   5: 1078.909 us/op
Iteration   1: 51.563 us/op
Iteration   2: 61.485 us/op
Iteration   3: 64.187 us/op
Iteration   4: 48.028 us/op
Iteration   5: 38.367 us/op

# Run progress: 13.07% complete, ETA 00:40:07
# Fork: 2 of 2
# Warmup Iteration   1: 2285.326 us/op
# Warmup Iteration   2: 1402.686 us/op
# Warmup Iteration   3: 1401.089 us/op
# Warmup Iteration   4: 1098.986 us/op
# Warmup Iteration   5: 1058.665 us/op
Iteration   1: 30.933 us/op
Iteration   2: 86.646 us/op
Iteration   3: 49.512 us/op
Iteration   4: 64.216 us/op
Iteration   5: 44.045 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     53.898 ±(99.9%) 23.995 us/op

  Histogram, us/op:
    [30.000, 35.000) = 1 
    [35.000, 40.000) = 1 
    [40.000, 45.000) = 1 
    [45.000, 50.000) = 2 
    [50.000, 55.000) = 1 
    [55.000, 60.000) = 0 
    [60.000, 65.000) = 3 
    [65.000, 70.000) = 0 
    [70.000, 75.000) = 0 
    [75.000, 80.000) = 0 
    [80.000, 85.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     30.933 us/op
     p(50.0000) =     50.538 us/op
     p(90.0000) =     84.403 us/op
     p(95.0000) =     86.646 us/op
     p(99.0000) =     86.646 us/op
     p(99.9000) =     86.646 us/op
     p(99.9900) =     86.646 us/op
     p(99.9990) =     86.646 us/op
     p(99.9999) =     86.646 us/op
    p(100.0000) =     86.646 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.5)

# Run progress: 13.26% complete, ETA 00:40:02
# Fork: 1 of 2
# Warmup Iteration   1: 2396.084 us/op
# Warmup Iteration   2: 1496.546 us/op
# Warmup Iteration   3: 1469.378 us/op
# Warmup Iteration   4: 1268.523 us/op
# Warmup Iteration   5: 1156.523 us/op
Iteration   1: 44.479 us/op
Iteration   2: 59.320 us/op
Iteration   3: 50.550 us/op
Iteration   4: 76.090 us/op
Iteration   5: 85.440 us/op

# Run progress: 13.45% complete, ETA 00:39:57
# Fork: 2 of 2
# Warmup Iteration   1: 2564.087 us/op
# Warmup Iteration   2: 1508.674 us/op
# Warmup Iteration   3: 1351.252 us/op
# Warmup Iteration   4: 1153.488 us/op
# Warmup Iteration   5: 1104.411 us/op
Iteration   1: 51.810 us/op
Iteration   2: 58.885 us/op
Iteration   3: 48.135 us/op
Iteration   4: 82.242 us/op
Iteration   5: 49.671 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     60.662 ±(99.9%) 22.778 us/op

  Histogram, us/op:
    [40.000, 45.000) = 1 
    [45.000, 50.000) = 2 
    [50.000, 55.000) = 2 
    [55.000, 60.000) = 2 
    [60.000, 65.000) = 0 
    [65.000, 70.000) = 0 
    [70.000, 75.000) = 0 
    [75.000, 80.000) = 1 
    [80.000, 85.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     44.479 us/op
     p(50.0000) =     55.348 us/op
     p(90.0000) =     85.120 us/op
     p(95.0000) =     85.440 us/op
     p(99.0000) =     85.440 us/op
     p(99.9000) =     85.440 us/op
     p(99.9900) =     85.440 us/op
     p(99.9990) =     85.440 us/op
     p(99.9999) =     85.440 us/op
    p(100.0000) =     85.440 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.625)

# Run progress: 13.64% complete, ETA 00:39:52
# Fork: 1 of 2
# Warmup Iteration   1: 1713.627 us/op
# Warmup Iteration   2: 1267.149 us/op
# Warmup Iteration   3: 1073.235 us/op
# Warmup Iteration   4: 1155.212 us/op
# Warmup Iteration   5: 866.327 us/op
Iteration   1: 32.318 us/op
Iteration   2: 95.988 us/op
Iteration   3: 65.932 us/op
Iteration   4: 49.128 us/op
Iteration   5: 33.336 us/op

# Run progress: 13.83% complete, ETA 00:39:46
# Fork: 2 of 2
# Warmup Iteration   1: 1818.854 us/op
# Warmup Iteration   2: 1283.233 us/op
# Warmup Iteration   3: 1152.426 us/op
# Warmup Iteration   4: 1120.579 us/op
# Warmup Iteration   5: 903.473 us/op
Iteration   1: 39.734 us/op
Iteration   2: 34.181 us/op
Iteration   3: 46.301 us/op
Iteration   4: 32.794 us/op
Iteration   5: 34.327 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     46.404 ±(99.9%) 30.826 us/op

  Histogram, us/op:
    [ 30.000,  35.000) = 5 
    [ 35.000,  40.000) = 1 
    [ 40.000,  45.000) = 0 
    [ 45.000,  50.000) = 2 
    [ 50.000,  55.000) = 0 
    [ 55.000,  60.000) = 0 
    [ 60.000,  65.000) = 0 
    [ 65.000,  70.000) = 1 
    [ 70.000,  75.000) = 0 
    [ 75.000,  80.000) = 0 
    [ 80.000,  85.000) = 0 
    [ 85.000,  90.000) = 0 
    [ 90.000,  95.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     32.318 us/op
     p(50.0000) =     37.031 us/op
     p(90.0000) =     92.982 us/op
     p(95.0000) =     95.988 us/op
     p(99.0000) =     95.988 us/op
     p(99.9000) =     95.988 us/op
     p(99.9900) =     95.988 us/op
     p(99.9990) =     95.988 us/op
     p(99.9999) =     95.988 us/op
    p(100.0000) =     95.988 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.75)

# Run progress: 14.02% complete, ETA 00:39:41
# Fork: 1 of 2
# Warmup Iteration   1: 1647.904 us/op
# Warmup Iteration   2: 1233.136 us/op
# Warmup Iteration   3: 1093.751 us/op
# Warmup Iteration   4: 908.666 us/op
# Warmup Iteration   5: 894.059 us/op
Iteration   1: 34.127 us/op
Iteration   2: 96.805 us/op
Iteration   3: 52.442 us/op
Iteration   4: 33.899 us/op
Iteration   5: 63.561 us/op

# Run progress: 14.20% complete, ETA 00:39:36
# Fork: 2 of 2
# Warmup Iteration   1: 1686.895 us/op
# Warmup Iteration   2: 1236.351 us/op
# Warmup Iteration   3: 1059.527 us/op
# Warmup Iteration   4: 892.402 us/op
# Warmup Iteration   5: 864.301 us/op
Iteration   1: 67.910 us/op
Iteration   2: 90.145 us/op
Iteration   3: 65.771 us/op
Iteration   4: 31.632 us/op
Iteration   5: 32.921 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     56.921 ±(99.9%) 36.420 us/op

  Histogram, us/op:
    [ 30.000,  35.000) = 4 
    [ 35.000,  40.000) = 0 
    [ 40.000,  45.000) = 0 
    [ 45.000,  50.000) = 0 
    [ 50.000,  55.000) = 1 
    [ 55.000,  60.000) = 0 
    [ 60.000,  65.000) = 1 
    [ 65.000,  70.000) = 2 
    [ 70.000,  75.000) = 0 
    [ 75.000,  80.000) = 0 
    [ 80.000,  85.000) = 0 
    [ 85.000,  90.000) = 0 
    [ 90.000,  95.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     31.632 us/op
     p(50.0000) =     58.002 us/op
     p(90.0000) =     96.139 us/op
     p(95.0000) =     96.805 us/op
     p(99.0000) =     96.805 us/op
     p(99.9000) =     96.805 us/op
     p(99.9900) =     96.805 us/op
     p(99.9990) =     96.805 us/op
     p(99.9999) =     96.805 us/op
    p(100.0000) =     96.805 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 0.875)

# Run progress: 14.39% complete, ETA 00:39:31
# Fork: 1 of 2
# Warmup Iteration   1: 1796.214 us/op
# Warmup Iteration   2: 1225.879 us/op
# Warmup Iteration   3: 1087.616 us/op
# Warmup Iteration   4: 1048.494 us/op
# Warmup Iteration   5: 900.072 us/op
Iteration   1: 47.269 us/op
Iteration   2: 67.469 us/op
Iteration   3: 66.613 us/op
Iteration   4: 32.337 us/op
Iteration   5: 86.627 us/op

# Run progress: 14.58% complete, ETA 00:39:26
# Fork: 2 of 2
# Warmup Iteration   1: 1861.840 us/op
# Warmup Iteration   2: 1234.367 us/op
# Warmup Iteration   3: 1150.914 us/op
# Warmup Iteration   4: 1033.294 us/op
# Warmup Iteration   5: 852.455 us/op
Iteration   1: 39.489 us/op
Iteration   2: 78.614 us/op
Iteration   3: 90.086 us/op
Iteration   4: 63.540 us/op
Iteration   5: 46.911 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     61.895 ±(99.9%) 30.052 us/op

  Histogram, us/op:
    [ 30.000,  35.000) = 1 
    [ 35.000,  40.000) = 1 
    [ 40.000,  45.000) = 0 
    [ 45.000,  50.000) = 2 
    [ 50.000,  55.000) = 0 
    [ 55.000,  60.000) = 0 
    [ 60.000,  65.000) = 1 
    [ 65.000,  70.000) = 2 
    [ 70.000,  75.000) = 0 
    [ 75.000,  80.000) = 1 
    [ 80.000,  85.000) = 0 
    [ 85.000,  90.000) = 1 
    [ 90.000,  95.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     32.337 us/op
     p(50.0000) =     65.077 us/op
     p(90.0000) =     89.740 us/op
     p(95.0000) =     90.086 us/op
     p(99.0000) =     90.086 us/op
     p(99.9000) =     90.086 us/op
     p(99.9900) =     90.086 us/op
     p(99.9990) =     90.086 us/op
     p(99.9999) =     90.086 us/op
    p(100.0000) =     90.086 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 10000, loadFactor = 1)

# Run progress: 14.77% complete, ETA 00:39:21
# Fork: 1 of 2
# Warmup Iteration   1: 1944.593 us/op
# Warmup Iteration   2: 1262.626 us/op
# Warmup Iteration   3: 1125.966 us/op
# Warmup Iteration   4: 949.650 us/op
# Warmup Iteration   5: 856.430 us/op
Iteration   1: 29.994 us/op
Iteration   2: 75.376 us/op
Iteration   3: 67.029 us/op
Iteration   4: 64.915 us/op
Iteration   5: 81.871 us/op

# Run progress: 14.96% complete, ETA 00:39:15
# Fork: 2 of 2
# Warmup Iteration   1: 1722.177 us/op
# Warmup Iteration   2: 1250.267 us/op
# Warmup Iteration   3: 1092.037 us/op
# Warmup Iteration   4: 1016.050 us/op
# Warmup Iteration   5: 880.850 us/op
Iteration   1: 52.543 us/op
Iteration   2: 77.712 us/op
Iteration   3: 69.396 us/op
Iteration   4: 33.814 us/op
Iteration   5: 35.659 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =     58.831 ±(99.9%) 29.432 us/op

  Histogram, us/op:
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 1 
    [30.000, 35.000) = 1 
    [35.000, 40.000) = 1 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 1 
    [55.000, 60.000) = 0 
    [60.000, 65.000) = 1 
    [65.000, 70.000) = 2 
    [70.000, 75.000) = 0 
    [75.000, 80.000) = 2 
    [80.000, 85.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     29.994 us/op
     p(50.0000) =     65.972 us/op
     p(90.0000) =     81.455 us/op
     p(95.0000) =     81.871 us/op
     p(99.0000) =     81.871 us/op
     p(99.9000) =     81.871 us/op
     p(99.9900) =     81.871 us/op
     p(99.9990) =     81.871 us/op
     p(99.9999) =     81.871 us/op
    p(100.0000) =     81.871 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.125)

# Run progress: 15.15% complete, ETA 00:39:10
# Fork: 1 of 2
# Warmup Iteration   1: 3267.400 us/op
# Warmup Iteration   2: 1855.757 us/op
# Warmup Iteration   3: 1437.052 us/op
# Warmup Iteration   4: 1272.543 us/op
# Warmup Iteration   5: 1257.357 us/op
Iteration   1: 150.000 us/op
Iteration   2: 143.393 us/op
Iteration   3: 131.686 us/op
Iteration   4: 161.450 us/op
Iteration   5: 101.869 us/op

# Run progress: 15.34% complete, ETA 00:39:05
# Fork: 2 of 2
# Warmup Iteration   1: 3165.493 us/op
# Warmup Iteration   2: 1747.079 us/op
# Warmup Iteration   3: 1411.057 us/op
# Warmup Iteration   4: 1293.525 us/op
# Warmup Iteration   5: 1286.373 us/op
Iteration   1: 134.812 us/op
Iteration   2: 109.421 us/op
Iteration   3: 125.003 us/op
Iteration   4: 155.606 us/op
Iteration   5: 146.111 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    135.935 ±(99.9%) 29.373 us/op

  Histogram, us/op:
    [100.000, 105.000) = 1 
    [105.000, 110.000) = 1 
    [110.000, 115.000) = 0 
    [115.000, 120.000) = 0 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 1 
    [130.000, 135.000) = 2 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 1 
    [145.000, 150.000) = 1 
    [150.000, 155.000) = 1 
    [155.000, 160.000) = 1 
    [160.000, 165.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    101.869 us/op
     p(50.0000) =    139.103 us/op
     p(90.0000) =    160.866 us/op
     p(95.0000) =    161.450 us/op
     p(99.0000) =    161.450 us/op
     p(99.9000) =    161.450 us/op
     p(99.9900) =    161.450 us/op
     p(99.9990) =    161.450 us/op
     p(99.9999) =    161.450 us/op
    p(100.0000) =    161.450 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.250)

# Run progress: 15.53% complete, ETA 00:39:00
# Fork: 1 of 2
# Warmup Iteration   1: 1763.310 us/op
# Warmup Iteration   2: 1256.325 us/op
# Warmup Iteration   3: 1144.638 us/op
# Warmup Iteration   4: 1219.026 us/op
# Warmup Iteration   5: 892.716 us/op
Iteration   1: 94.521 us/op
Iteration   2: 160.456 us/op
Iteration   3: 174.170 us/op
Iteration   4: 128.520 us/op
Iteration   5: 95.482 us/op

# Run progress: 15.72% complete, ETA 00:38:54
# Fork: 2 of 2
# Warmup Iteration   1: 2532.002 us/op
# Warmup Iteration   2: 1292.502 us/op
# Warmup Iteration   3: 1244.648 us/op
# Warmup Iteration   4: 1044.825 us/op
# Warmup Iteration   5: 926.158 us/op
Iteration   1: 95.216 us/op
Iteration   2: 162.571 us/op
Iteration   3: 115.825 us/op
Iteration   4: 220.108 us/op
Iteration   5: 96.565 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    134.343 ±(99.9%) 65.420 us/op

  Histogram, us/op:
    [  0.000,  25.000) = 0 
    [ 25.000,  50.000) = 0 
    [ 50.000,  75.000) = 0 
    [ 75.000, 100.000) = 4 
    [100.000, 125.000) = 1 
    [125.000, 150.000) = 1 
    [150.000, 175.000) = 3 
    [175.000, 200.000) = 0 
    [200.000, 225.000) = 1 
    [225.000, 250.000) = 0 
    [250.000, 275.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     94.521 us/op
     p(50.0000) =    122.173 us/op
     p(90.0000) =    215.514 us/op
     p(95.0000) =    220.108 us/op
     p(99.0000) =    220.108 us/op
     p(99.9000) =    220.108 us/op
     p(99.9900) =    220.108 us/op
     p(99.9990) =    220.108 us/op
     p(99.9999) =    220.108 us/op
    p(100.0000) =    220.108 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.375)

# Run progress: 15.91% complete, ETA 00:38:49
# Fork: 1 of 2
# Warmup Iteration   1: 1842.956 us/op
# Warmup Iteration   2: 1318.025 us/op
# Warmup Iteration   3: 947.610 us/op
# Warmup Iteration   4: 944.842 us/op
# Warmup Iteration   5: 896.679 us/op
Iteration   1: 111.596 us/op
Iteration   2: 141.866 us/op
Iteration   3: 105.321 us/op
Iteration   4: 117.436 us/op
Iteration   5: 95.402 us/op

# Run progress: 16.10% complete, ETA 00:38:44
# Fork: 2 of 2
# Warmup Iteration   1: 1667.412 us/op
# Warmup Iteration   2: 1303.788 us/op
# Warmup Iteration   3: 1264.085 us/op
# Warmup Iteration   4: 923.488 us/op
# Warmup Iteration   5: 895.316 us/op
Iteration   1: 92.045 us/op
Iteration   2: 163.893 us/op
Iteration   3: 128.624 us/op
Iteration   4: 104.041 us/op
Iteration   5: 101.204 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    116.143 ±(99.9%) 34.245 us/op

  Histogram, us/op:
    [ 90.000,  95.000) = 1 
    [ 95.000, 100.000) = 1 
    [100.000, 105.000) = 2 
    [105.000, 110.000) = 1 
    [110.000, 115.000) = 1 
    [115.000, 120.000) = 1 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 1 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 1 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     92.045 us/op
     p(50.0000) =    108.459 us/op
     p(90.0000) =    161.690 us/op
     p(95.0000) =    163.893 us/op
     p(99.0000) =    163.893 us/op
     p(99.9000) =    163.893 us/op
     p(99.9900) =    163.893 us/op
     p(99.9990) =    163.893 us/op
     p(99.9999) =    163.893 us/op
    p(100.0000) =    163.893 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.5)

# Run progress: 16.29% complete, ETA 00:38:39
# Fork: 1 of 2
# Warmup Iteration   1: 1965.480 us/op
# Warmup Iteration   2: 1284.735 us/op
# Warmup Iteration   3: 1147.569 us/op
# Warmup Iteration   4: 1071.203 us/op
# Warmup Iteration   5: 898.971 us/op
Iteration   1: 100.064 us/op
Iteration   2: 164.300 us/op
Iteration   3: 141.357 us/op
Iteration   4: 139.471 us/op
Iteration   5: 120.182 us/op

# Run progress: 16.48% complete, ETA 00:38:33
# Fork: 2 of 2
# Warmup Iteration   1: 1767.057 us/op
# Warmup Iteration   2: 1286.240 us/op
# Warmup Iteration   3: 1023.356 us/op
# Warmup Iteration   4: 974.220 us/op
# Warmup Iteration   5: 943.174 us/op
Iteration   1: 98.554 us/op
Iteration   2: 161.710 us/op
Iteration   3: 101.635 us/op
Iteration   4: 106.976 us/op
Iteration   5: 99.150 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    123.340 ±(99.9%) 39.761 us/op

  Histogram, us/op:
    [ 90.000,  95.000) = 0 
    [ 95.000, 100.000) = 2 
    [100.000, 105.000) = 2 
    [105.000, 110.000) = 1 
    [110.000, 115.000) = 0 
    [115.000, 120.000) = 0 
    [120.000, 125.000) = 1 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 1 
    [140.000, 145.000) = 1 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 2 

  Percentiles, us/op:
      p(0.0000) =     98.554 us/op
     p(50.0000) =    113.579 us/op
     p(90.0000) =    164.041 us/op
     p(95.0000) =    164.300 us/op
     p(99.0000) =    164.300 us/op
     p(99.9000) =    164.300 us/op
     p(99.9900) =    164.300 us/op
     p(99.9990) =    164.300 us/op
     p(99.9999) =    164.300 us/op
    p(100.0000) =    164.300 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.625)

# Run progress: 16.67% complete, ETA 00:38:28
# Fork: 1 of 2
# Warmup Iteration   1: 1746.995 us/op
# Warmup Iteration   2: 1272.861 us/op
# Warmup Iteration   3: 1121.134 us/op
# Warmup Iteration   4: 1096.601 us/op
# Warmup Iteration   5: 925.748 us/op
Iteration   1: 116.500 us/op
Iteration   2: 180.823 us/op
Iteration   3: 123.839 us/op
Iteration   4: 154.714 us/op
Iteration   5: 102.404 us/op

# Run progress: 16.86% complete, ETA 00:38:23
# Fork: 2 of 2
# Warmup Iteration   1: 1691.323 us/op
# Warmup Iteration   2: 1272.534 us/op
# Warmup Iteration   3: 1243.582 us/op
# Warmup Iteration   4: 1077.816 us/op
# Warmup Iteration   5: 909.558 us/op
Iteration   1: 107.778 us/op
Iteration   2: 160.983 us/op
Iteration   3: 103.649 us/op
Iteration   4: 107.770 us/op
Iteration   5: 106.359 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    126.482 ±(99.9%) 42.919 us/op

  Histogram, us/op:
    [100.000, 105.000) = 2 
    [105.000, 110.000) = 3 
    [110.000, 115.000) = 0 
    [115.000, 120.000) = 1 
    [120.000, 125.000) = 1 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 1 
    [155.000, 160.000) = 0 
    [160.000, 165.000) = 1 
    [165.000, 170.000) = 0 
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 0 
    [180.000, 185.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    102.404 us/op
     p(50.0000) =    112.139 us/op
     p(90.0000) =    178.839 us/op
     p(95.0000) =    180.823 us/op
     p(99.0000) =    180.823 us/op
     p(99.9000) =    180.823 us/op
     p(99.9900) =    180.823 us/op
     p(99.9990) =    180.823 us/op
     p(99.9999) =    180.823 us/op
    p(100.0000) =    180.823 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.75)

# Run progress: 17.05% complete, ETA 00:38:18
# Fork: 1 of 2
# Warmup Iteration   1: 1762.372 us/op
# Warmup Iteration   2: 1381.194 us/op
# Warmup Iteration   3: 1162.692 us/op
# Warmup Iteration   4: 1129.643 us/op
# Warmup Iteration   5: 933.455 us/op
Iteration   1: 97.674 us/op
Iteration   2: 156.547 us/op
Iteration   3: 130.416 us/op
Iteration   4: 119.457 us/op
Iteration   5: 94.103 us/op

# Run progress: 17.23% complete, ETA 00:38:13
# Fork: 2 of 2
# Warmup Iteration   1: 1681.084 us/op
# Warmup Iteration   2: 1395.387 us/op
# Warmup Iteration   3: 1120.580 us/op
# Warmup Iteration   4: 967.513 us/op
# Warmup Iteration   5: 928.600 us/op
Iteration   1: 99.318 us/op
Iteration   2: 165.394 us/op
Iteration   3: 100.150 us/op
Iteration   4: 113.883 us/op
Iteration   5: 115.982 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    119.292 ±(99.9%) 37.525 us/op

  Histogram, us/op:
    [ 90.000,  95.000) = 1 
    [ 95.000, 100.000) = 2 
    [100.000, 105.000) = 1 
    [105.000, 110.000) = 0 
    [110.000, 115.000) = 1 
    [115.000, 120.000) = 2 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 1 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 1 
    [160.000, 165.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     94.103 us/op
     p(50.0000) =    114.933 us/op
     p(90.0000) =    164.509 us/op
     p(95.0000) =    165.394 us/op
     p(99.0000) =    165.394 us/op
     p(99.9000) =    165.394 us/op
     p(99.9900) =    165.394 us/op
     p(99.9990) =    165.394 us/op
     p(99.9999) =    165.394 us/op
    p(100.0000) =    165.394 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 0.875)

# Run progress: 17.42% complete, ETA 00:38:07
# Fork: 1 of 2
# Warmup Iteration   1: 1774.699 us/op
# Warmup Iteration   2: 1286.206 us/op
# Warmup Iteration   3: 1197.888 us/op
# Warmup Iteration   4: 1169.131 us/op
# Warmup Iteration   5: 931.074 us/op
Iteration   1: 93.800 us/op
Iteration   2: 135.171 us/op
Iteration   3: 134.297 us/op
Iteration   4: 127.599 us/op
Iteration   5: 94.957 us/op

# Run progress: 17.61% complete, ETA 00:38:02
# Fork: 2 of 2
# Warmup Iteration   1: 1794.722 us/op
# Warmup Iteration   2: 1244.128 us/op
# Warmup Iteration   3: 1145.677 us/op
# Warmup Iteration   4: 1081.494 us/op
# Warmup Iteration   5: 916.771 us/op
Iteration   1: 99.565 us/op
Iteration   2: 143.019 us/op
Iteration   3: 99.389 us/op
Iteration   4: 124.765 us/op
Iteration   5: 108.649 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    116.121 ±(99.9%) 28.415 us/op

  Histogram, us/op:
    [ 90.000,  95.000) = 2 
    [ 95.000, 100.000) = 2 
    [100.000, 105.000) = 0 
    [105.000, 110.000) = 1 
    [110.000, 115.000) = 0 
    [115.000, 120.000) = 0 
    [120.000, 125.000) = 1 
    [125.000, 130.000) = 1 
    [130.000, 135.000) = 1 
    [135.000, 140.000) = 1 
    [140.000, 145.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     93.800 us/op
     p(50.0000) =    116.707 us/op
     p(90.0000) =    142.234 us/op
     p(95.0000) =    143.019 us/op
     p(99.0000) =    143.019 us/op
     p(99.9000) =    143.019 us/op
     p(99.9900) =    143.019 us/op
     p(99.9990) =    143.019 us/op
     p(99.9999) =    143.019 us/op
    p(100.0000) =    143.019 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 65536, loadFactor = 1)

# Run progress: 17.80% complete, ETA 00:37:57
# Fork: 1 of 2
# Warmup Iteration   1: 2186.098 us/op
# Warmup Iteration   2: 1274.257 us/op
# Warmup Iteration   3: 1181.464 us/op
# Warmup Iteration   4: 1124.613 us/op
# Warmup Iteration   5: 910.829 us/op
Iteration   1: 120.632 us/op
Iteration   2: 199.674 us/op
Iteration   3: 162.161 us/op
Iteration   4: 148.815 us/op
Iteration   5: 96.646 us/op

# Run progress: 17.99% complete, ETA 00:37:52
# Fork: 2 of 2
# Warmup Iteration   1: 1843.908 us/op
# Warmup Iteration   2: 1333.695 us/op
# Warmup Iteration   3: 958.823 us/op
# Warmup Iteration   4: 984.752 us/op
# Warmup Iteration   5: 908.637 us/op
Iteration   1: 92.637 us/op
Iteration   2: 199.498 us/op
Iteration   3: 131.593 us/op
Iteration   4: 117.513 us/op
Iteration   5: 91.502 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    136.067 ±(99.9%) 61.601 us/op

  Histogram, us/op:
    [  0.000,  12.500) = 0 
    [ 12.500,  25.000) = 0 
    [ 25.000,  37.500) = 0 
    [ 37.500,  50.000) = 0 
    [ 50.000,  62.500) = 0 
    [ 62.500,  75.000) = 0 
    [ 75.000,  87.500) = 0 
    [ 87.500, 100.000) = 3 
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 2 
    [125.000, 137.500) = 1 
    [137.500, 150.000) = 1 
    [150.000, 162.500) = 1 
    [162.500, 175.000) = 0 
    [175.000, 187.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     91.502 us/op
     p(50.0000) =    126.113 us/op
     p(90.0000) =    199.656 us/op
     p(95.0000) =    199.674 us/op
     p(99.0000) =    199.674 us/op
     p(99.9000) =    199.674 us/op
     p(99.9900) =    199.674 us/op
     p(99.9990) =    199.674 us/op
     p(99.9999) =    199.674 us/op
    p(100.0000) =    199.674 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.125)

# Run progress: 18.18% complete, ETA 00:37:46
# Fork: 1 of 2
# Warmup Iteration   1: 2012.260 us/op
# Warmup Iteration   2: 1405.856 us/op
# Warmup Iteration   3: 1335.238 us/op
# Warmup Iteration   4: 1188.171 us/op
# Warmup Iteration   5: 1005.185 us/op
Iteration   1: 181.136 us/op
Iteration   2: 242.231 us/op
Iteration   3: 224.216 us/op
Iteration   4: 204.962 us/op
Iteration   5: 270.561 us/op

# Run progress: 18.37% complete, ETA 00:37:41
# Fork: 2 of 2
# Warmup Iteration   1: 1896.563 us/op
# Warmup Iteration   2: 1355.636 us/op
# Warmup Iteration   3: 1230.493 us/op
# Warmup Iteration   4: 1145.984 us/op
# Warmup Iteration   5: 987.182 us/op
Iteration   1: 175.704 us/op
Iteration   2: 222.921 us/op
Iteration   3: 262.139 us/op
Iteration   4: 204.896 us/op
Iteration   5: 234.086 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    222.285 ±(99.9%) 47.611 us/op

  Histogram, us/op:
    [170.000, 180.000) = 1 
    [180.000, 190.000) = 1 
    [190.000, 200.000) = 0 
    [200.000, 210.000) = 2 
    [210.000, 220.000) = 0 
    [220.000, 230.000) = 2 
    [230.000, 240.000) = 1 
    [240.000, 250.000) = 1 
    [250.000, 260.000) = 0 
    [260.000, 270.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    175.704 us/op
     p(50.0000) =    223.569 us/op
     p(90.0000) =    269.719 us/op
     p(95.0000) =    270.561 us/op
     p(99.0000) =    270.561 us/op
     p(99.9000) =    270.561 us/op
     p(99.9900) =    270.561 us/op
     p(99.9990) =    270.561 us/op
     p(99.9999) =    270.561 us/op
    p(100.0000) =    270.561 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.250)

# Run progress: 18.56% complete, ETA 00:37:36
# Fork: 1 of 2
# Warmup Iteration   1: 1897.430 us/op
# Warmup Iteration   2: 1432.687 us/op
# Warmup Iteration   3: 1058.927 us/op
# Warmup Iteration   4: 1000.882 us/op
# Warmup Iteration   5: 1014.062 us/op
Iteration   1: 182.913 us/op
Iteration   2: 255.088 us/op
Iteration   3: 214.451 us/op
Iteration   4: 193.210 us/op
Iteration   5: 202.340 us/op

# Run progress: 18.75% complete, ETA 00:37:31
# Fork: 2 of 2
# Warmup Iteration   1: 1919.646 us/op
# Warmup Iteration   2: 1357.849 us/op
# Warmup Iteration   3: 1148.152 us/op
# Warmup Iteration   4: 1055.925 us/op
# Warmup Iteration   5: 1032.748 us/op
Iteration   1: 210.070 us/op
Iteration   2: 251.038 us/op
Iteration   3: 219.859 us/op
Iteration   4: 243.797 us/op
Iteration   5: 194.677 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    216.744 ±(99.9%) 38.481 us/op

  Histogram, us/op:
    [180.000, 185.000) = 1 
    [185.000, 190.000) = 0 
    [190.000, 195.000) = 2 
    [195.000, 200.000) = 0 
    [200.000, 205.000) = 1 
    [205.000, 210.000) = 0 
    [210.000, 215.000) = 2 
    [215.000, 220.000) = 1 
    [220.000, 225.000) = 0 
    [225.000, 230.000) = 0 
    [230.000, 235.000) = 0 
    [235.000, 240.000) = 0 
    [240.000, 245.000) = 1 
    [245.000, 250.000) = 0 
    [250.000, 255.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    182.913 us/op
     p(50.0000) =    212.260 us/op
     p(90.0000) =    254.683 us/op
     p(95.0000) =    255.088 us/op
     p(99.0000) =    255.088 us/op
     p(99.9000) =    255.088 us/op
     p(99.9900) =    255.088 us/op
     p(99.9990) =    255.088 us/op
     p(99.9999) =    255.088 us/op
    p(100.0000) =    255.088 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.375)

# Run progress: 18.94% complete, ETA 00:37:25
# Fork: 1 of 2
# Warmup Iteration   1: 1974.589 us/op
# Warmup Iteration   2: 1383.982 us/op
# Warmup Iteration   3: 1368.655 us/op
# Warmup Iteration   4: 986.772 us/op
# Warmup Iteration   5: 1004.052 us/op
Iteration   1: 190.895 us/op
Iteration   2: 252.556 us/op
Iteration   3: 230.752 us/op
Iteration   4: 216.618 us/op
Iteration   5: 215.804 us/op

# Run progress: 19.13% complete, ETA 00:37:20
# Fork: 2 of 2
# Warmup Iteration   1: 2073.030 us/op
# Warmup Iteration   2: 1547.137 us/op
# Warmup Iteration   3: 1300.968 us/op
# Warmup Iteration   4: 1024.655 us/op
# Warmup Iteration   5: 1036.593 us/op
Iteration   1: 195.514 us/op
Iteration   2: 266.137 us/op
Iteration   3: 190.478 us/op
Iteration   4: 207.192 us/op
Iteration   5: 191.507 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    215.745 ±(99.9%) 40.462 us/op

  Histogram, us/op:
    [190.000, 195.000) = 3 
    [195.000, 200.000) = 1 
    [200.000, 205.000) = 0 
    [205.000, 210.000) = 1 
    [210.000, 215.000) = 0 
    [215.000, 220.000) = 2 
    [220.000, 225.000) = 0 
    [225.000, 230.000) = 0 
    [230.000, 235.000) = 1 
    [235.000, 240.000) = 0 
    [240.000, 245.000) = 0 
    [245.000, 250.000) = 0 
    [250.000, 255.000) = 1 
    [255.000, 260.000) = 0 
    [260.000, 265.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    190.478 us/op
     p(50.0000) =    211.498 us/op
     p(90.0000) =    264.779 us/op
     p(95.0000) =    266.137 us/op
     p(99.0000) =    266.137 us/op
     p(99.9000) =    266.137 us/op
     p(99.9900) =    266.137 us/op
     p(99.9990) =    266.137 us/op
     p(99.9999) =    266.137 us/op
    p(100.0000) =    266.137 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.5)

# Run progress: 19.32% complete, ETA 00:37:15
# Fork: 1 of 2
# Warmup Iteration   1: 1704.150 us/op
# Warmup Iteration   2: 1361.843 us/op
# Warmup Iteration   3: 1282.057 us/op
# Warmup Iteration   4: 1139.108 us/op
# Warmup Iteration   5: 1102.172 us/op
Iteration   1: 242.801 us/op
Iteration   2: 252.578 us/op
Iteration   3: 186.070 us/op
Iteration   4: 231.193 us/op
Iteration   5: 201.423 us/op

# Run progress: 19.51% complete, ETA 00:37:10
# Fork: 2 of 2
# Warmup Iteration   1: 1939.484 us/op
# Warmup Iteration   2: 1478.423 us/op
# Warmup Iteration   3: 1256.628 us/op
# Warmup Iteration   4: 1090.806 us/op
# Warmup Iteration   5: 989.022 us/op
Iteration   1: 175.745 us/op
Iteration   2: 245.646 us/op
Iteration   3: 201.365 us/op
Iteration   4: 233.284 us/op
Iteration   5: 189.258 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    215.936 ±(99.9%) 42.532 us/op

  Histogram, us/op:
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 1 
    [180.000, 185.000) = 0 
    [185.000, 190.000) = 2 
    [190.000, 195.000) = 0 
    [195.000, 200.000) = 0 
    [200.000, 205.000) = 2 
    [205.000, 210.000) = 0 
    [210.000, 215.000) = 0 
    [215.000, 220.000) = 0 
    [220.000, 225.000) = 0 
    [225.000, 230.000) = 0 
    [230.000, 235.000) = 2 
    [235.000, 240.000) = 0 
    [240.000, 245.000) = 1 
    [245.000, 250.000) = 1 
    [250.000, 255.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    175.745 us/op
     p(50.0000) =    216.308 us/op
     p(90.0000) =    251.885 us/op
     p(95.0000) =    252.578 us/op
     p(99.0000) =    252.578 us/op
     p(99.9000) =    252.578 us/op
     p(99.9900) =    252.578 us/op
     p(99.9990) =    252.578 us/op
     p(99.9999) =    252.578 us/op
    p(100.0000) =    252.578 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.625)

# Run progress: 19.70% complete, ETA 00:37:04
# Fork: 1 of 2
# Warmup Iteration   1: 1906.687 us/op
# Warmup Iteration   2: 1365.905 us/op
# Warmup Iteration   3: 1250.904 us/op
# Warmup Iteration   4: 1097.863 us/op
# Warmup Iteration   5: 994.086 us/op
Iteration   1: 179.685 us/op
Iteration   2: 269.722 us/op
Iteration   3: 208.122 us/op
Iteration   4: 231.501 us/op
Iteration   5: 230.570 us/op

# Run progress: 19.89% complete, ETA 00:36:59
# Fork: 2 of 2
# Warmup Iteration   1: 1882.988 us/op
# Warmup Iteration   2: 1372.491 us/op
# Warmup Iteration   3: 1247.623 us/op
# Warmup Iteration   4: 1123.496 us/op
# Warmup Iteration   5: 1026.067 us/op
Iteration   1: 196.240 us/op
Iteration   2: 246.899 us/op
Iteration   3: 202.856 us/op
Iteration   4: 187.077 us/op
Iteration   5: 183.366 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    213.604 ±(99.9%) 45.304 us/op

  Histogram, us/op:
    [170.000, 180.000) = 1 
    [180.000, 190.000) = 2 
    [190.000, 200.000) = 1 
    [200.000, 210.000) = 2 
    [210.000, 220.000) = 0 
    [220.000, 230.000) = 0 
    [230.000, 240.000) = 2 
    [240.000, 250.000) = 1 
    [250.000, 260.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    179.685 us/op
     p(50.0000) =    205.489 us/op
     p(90.0000) =    267.440 us/op
     p(95.0000) =    269.722 us/op
     p(99.0000) =    269.722 us/op
     p(99.9000) =    269.722 us/op
     p(99.9900) =    269.722 us/op
     p(99.9990) =    269.722 us/op
     p(99.9999) =    269.722 us/op
    p(100.0000) =    269.722 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.75)

# Run progress: 20.08% complete, ETA 00:36:54
# Fork: 1 of 2
# Warmup Iteration   1: 1919.659 us/op
# Warmup Iteration   2: 1385.311 us/op
# Warmup Iteration   3: 1304.416 us/op
# Warmup Iteration   4: 1114.687 us/op
# Warmup Iteration   5: 1019.758 us/op
Iteration   1: 193.218 us/op
Iteration   2: 191.344 us/op
Iteration   3: 189.041 us/op
Iteration   4: 187.004 us/op
Iteration   5: 188.189 us/op

# Run progress: 20.27% complete, ETA 00:36:49
# Fork: 2 of 2
# Warmup Iteration   1: 1769.426 us/op
# Warmup Iteration   2: 1392.646 us/op
# Warmup Iteration   3: 1325.366 us/op
# Warmup Iteration   4: 1134.460 us/op
# Warmup Iteration   5: 1048.676 us/op
Iteration   1: 201.596 us/op
Iteration   2: 255.150 us/op
Iteration   3: 184.817 us/op
Iteration   4: 225.666 us/op
Iteration   5: 196.607 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    201.263 ±(99.9%) 33.725 us/op

  Histogram, us/op:
    [180.000, 185.000) = 1 
    [185.000, 190.000) = 3 
    [190.000, 195.000) = 2 
    [195.000, 200.000) = 1 
    [200.000, 205.000) = 1 
    [205.000, 210.000) = 0 
    [210.000, 215.000) = 0 
    [215.000, 220.000) = 0 
    [220.000, 225.000) = 0 
    [225.000, 230.000) = 1 
    [230.000, 235.000) = 0 
    [235.000, 240.000) = 0 
    [240.000, 245.000) = 0 
    [245.000, 250.000) = 0 
    [250.000, 255.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    184.817 us/op
     p(50.0000) =    192.281 us/op
     p(90.0000) =    252.202 us/op
     p(95.0000) =    255.150 us/op
     p(99.0000) =    255.150 us/op
     p(99.9000) =    255.150 us/op
     p(99.9900) =    255.150 us/op
     p(99.9990) =    255.150 us/op
     p(99.9999) =    255.150 us/op
    p(100.0000) =    255.150 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 0.875)

# Run progress: 20.45% complete, ETA 00:36:44
# Fork: 1 of 2
# Warmup Iteration   1: 1780.756 us/op
# Warmup Iteration   2: 1445.766 us/op
# Warmup Iteration   3: 1296.597 us/op
# Warmup Iteration   4: 1123.314 us/op
# Warmup Iteration   5: 995.783 us/op
Iteration   1: 178.513 us/op
Iteration   2: 251.379 us/op
Iteration   3: 207.464 us/op
Iteration   4: 216.245 us/op
Iteration   5: 218.201 us/op

# Run progress: 20.64% complete, ETA 00:36:38
# Fork: 2 of 2
# Warmup Iteration   1: 1717.845 us/op
# Warmup Iteration   2: 1459.745 us/op
# Warmup Iteration   3: 1310.554 us/op
# Warmup Iteration   4: 1097.939 us/op
# Warmup Iteration   5: 1014.790 us/op
Iteration   1: 185.020 us/op
Iteration   2: 246.898 us/op
Iteration   3: 198.138 us/op
Iteration   4: 189.552 us/op
Iteration   5: 190.862 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    208.227 ±(99.9%) 38.032 us/op

  Histogram, us/op:
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 1 
    [180.000, 185.000) = 0 
    [185.000, 190.000) = 2 
    [190.000, 195.000) = 1 
    [195.000, 200.000) = 1 
    [200.000, 205.000) = 0 
    [205.000, 210.000) = 1 
    [210.000, 215.000) = 0 
    [215.000, 220.000) = 2 
    [220.000, 225.000) = 0 
    [225.000, 230.000) = 0 
    [230.000, 235.000) = 0 
    [235.000, 240.000) = 0 
    [240.000, 245.000) = 0 
    [245.000, 250.000) = 1 
    [250.000, 255.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    178.513 us/op
     p(50.0000) =    202.801 us/op
     p(90.0000) =    250.931 us/op
     p(95.0000) =    251.379 us/op
     p(99.0000) =    251.379 us/op
     p(99.9000) =    251.379 us/op
     p(99.9900) =    251.379 us/op
     p(99.9990) =    251.379 us/op
     p(99.9999) =    251.379 us/op
    p(100.0000) =    251.379 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 100000, loadFactor = 1)

# Run progress: 20.83% complete, ETA 00:36:33
# Fork: 1 of 2
# Warmup Iteration   1: 2063.884 us/op
# Warmup Iteration   2: 1363.162 us/op
# Warmup Iteration   3: 1262.355 us/op
# Warmup Iteration   4: 1171.231 us/op
# Warmup Iteration   5: 1024.277 us/op
Iteration   1: 200.470 us/op
Iteration   2: 246.521 us/op
Iteration   3: 207.473 us/op
Iteration   4: 207.721 us/op
Iteration   5: 184.451 us/op

# Run progress: 21.02% complete, ETA 00:36:28
# Fork: 2 of 2
# Warmup Iteration   1: 1882.549 us/op
# Warmup Iteration   2: 1572.684 us/op
# Warmup Iteration   3: 1321.831 us/op
# Warmup Iteration   4: 1108.953 us/op
# Warmup Iteration   5: 1004.648 us/op
Iteration   1: 215.516 us/op
Iteration   2: 243.948 us/op
Iteration   3: 192.725 us/op
Iteration   4: 186.414 us/op
Iteration   5: 193.181 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    207.842 ±(99.9%) 33.287 us/op

  Histogram, us/op:
    [180.000, 185.000) = 1 
    [185.000, 190.000) = 1 
    [190.000, 195.000) = 2 
    [195.000, 200.000) = 0 
    [200.000, 205.000) = 1 
    [205.000, 210.000) = 2 
    [210.000, 215.000) = 0 
    [215.000, 220.000) = 1 
    [220.000, 225.000) = 0 
    [225.000, 230.000) = 0 
    [230.000, 235.000) = 0 
    [235.000, 240.000) = 0 
    [240.000, 245.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    184.451 us/op
     p(50.0000) =    203.972 us/op
     p(90.0000) =    246.264 us/op
     p(95.0000) =    246.521 us/op
     p(99.0000) =    246.521 us/op
     p(99.9000) =    246.521 us/op
     p(99.9900) =    246.521 us/op
     p(99.9990) =    246.521 us/op
     p(99.9999) =    246.521 us/op
    p(100.0000) =    246.521 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.125)

# Run progress: 21.21% complete, ETA 00:36:23
# Fork: 1 of 2
# Warmup Iteration   1: 2497.986 us/op
# Warmup Iteration   2: 2034.031 us/op
# Warmup Iteration   3: 2034.806 us/op
# Warmup Iteration   4: 1600.205 us/op
# Warmup Iteration   5: 1755.413 us/op
Iteration   1: 730.213 us/op
Iteration   2: 741.655 us/op
Iteration   3: 724.464 us/op
Iteration   4: 702.402 us/op
Iteration   5: 736.918 us/op

# Run progress: 21.40% complete, ETA 00:36:17
# Fork: 2 of 2
# Warmup Iteration   1: 2616.976 us/op
# Warmup Iteration   2: 2225.822 us/op
# Warmup Iteration   3: 2144.040 us/op
# Warmup Iteration   4: 1608.411 us/op
# Warmup Iteration   5: 1703.686 us/op
Iteration   1: 699.605 us/op
Iteration   2: 759.024 us/op
Iteration   3: 722.936 us/op
Iteration   4: 706.865 us/op
Iteration   5: 709.368 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    723.345 ±(99.9%) 28.995 us/op

  Histogram, us/op:
    [690.000, 695.000) = 0 
    [695.000, 700.000) = 1 
    [700.000, 705.000) = 1 
    [705.000, 710.000) = 2 
    [710.000, 715.000) = 0 
    [715.000, 720.000) = 0 
    [720.000, 725.000) = 2 
    [725.000, 730.000) = 0 
    [730.000, 735.000) = 1 
    [735.000, 740.000) = 1 
    [740.000, 745.000) = 1 
    [745.000, 750.000) = 0 
    [750.000, 755.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    699.605 us/op
     p(50.0000) =    723.700 us/op
     p(90.0000) =    757.287 us/op
     p(95.0000) =    759.024 us/op
     p(99.0000) =    759.024 us/op
     p(99.9000) =    759.024 us/op
     p(99.9900) =    759.024 us/op
     p(99.9990) =    759.024 us/op
     p(99.9999) =    759.024 us/op
    p(100.0000) =    759.024 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.250)

# Run progress: 21.59% complete, ETA 00:36:12
# Fork: 1 of 2
# Warmup Iteration   1: 2496.918 us/op
# Warmup Iteration   2: 2127.481 us/op
# Warmup Iteration   3: 2247.433 us/op
# Warmup Iteration   4: 1630.707 us/op
# Warmup Iteration   5: 1793.664 us/op
Iteration   1: 689.975 us/op
Iteration   2: 750.352 us/op
Iteration   3: 757.496 us/op
Iteration   4: 727.793 us/op
Iteration   5: 713.483 us/op

# Run progress: 21.78% complete, ETA 00:36:07
# Fork: 2 of 2
# Warmup Iteration   1: 2691.647 us/op
# Warmup Iteration   2: 2058.504 us/op
# Warmup Iteration   3: 2069.663 us/op
# Warmup Iteration   4: 1613.674 us/op
# Warmup Iteration   5: 1785.624 us/op
Iteration   1: 700.500 us/op
Iteration   2: 767.319 us/op
Iteration   3: 705.189 us/op
Iteration   4: 898.053 us/op
Iteration   5: 730.515 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    744.068 ±(99.9%) 90.419 us/op

  Histogram, us/op:
    [600.000, 625.000) = 0 
    [625.000, 650.000) = 0 
    [650.000, 675.000) = 0 
    [675.000, 700.000) = 1 
    [700.000, 725.000) = 3 
    [725.000, 750.000) = 2 
    [750.000, 775.000) = 3 
    [775.000, 800.000) = 0 
    [800.000, 825.000) = 0 
    [825.000, 850.000) = 0 
    [850.000, 875.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    689.975 us/op
     p(50.0000) =    729.154 us/op
     p(90.0000) =    884.980 us/op
     p(95.0000) =    898.053 us/op
     p(99.0000) =    898.053 us/op
     p(99.9000) =    898.053 us/op
     p(99.9900) =    898.053 us/op
     p(99.9990) =    898.053 us/op
     p(99.9999) =    898.053 us/op
    p(100.0000) =    898.053 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.375)

# Run progress: 21.97% complete, ETA 00:36:02
# Fork: 1 of 2
# Warmup Iteration   1: 2473.038 us/op
# Warmup Iteration   2: 2084.699 us/op
# Warmup Iteration   3: 2381.214 us/op
# Warmup Iteration   4: 1640.914 us/op
# Warmup Iteration   5: 1793.849 us/op
Iteration   1: 704.139 us/op
Iteration   2: 788.750 us/op
Iteration   3: 702.252 us/op
Iteration   4: 703.609 us/op
Iteration   5: 720.260 us/op

# Run progress: 22.16% complete, ETA 00:35:57
# Fork: 2 of 2
# Warmup Iteration   1: 2386.926 us/op
# Warmup Iteration   2: 2019.340 us/op
# Warmup Iteration   3: 2431.629 us/op
# Warmup Iteration   4: 1630.405 us/op
# Warmup Iteration   5: 1712.648 us/op
Iteration   1: 692.145 us/op
Iteration   2: 799.752 us/op
Iteration   3: 708.561 us/op
Iteration   4: 701.911 us/op
Iteration   5: 706.030 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    722.741 ±(99.9%) 58.067 us/op

  Histogram, us/op:
    [600.000, 612.500) = 0 
    [612.500, 625.000) = 0 
    [625.000, 637.500) = 0 
    [637.500, 650.000) = 0 
    [650.000, 662.500) = 0 
    [662.500, 675.000) = 0 
    [675.000, 687.500) = 0 
    [687.500, 700.000) = 1 
    [700.000, 712.500) = 6 
    [712.500, 725.000) = 1 
    [725.000, 737.500) = 0 
    [737.500, 750.000) = 0 
    [750.000, 762.500) = 0 
    [762.500, 775.000) = 0 
    [775.000, 787.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    692.145 us/op
     p(50.0000) =    705.084 us/op
     p(90.0000) =    798.652 us/op
     p(95.0000) =    799.752 us/op
     p(99.0000) =    799.752 us/op
     p(99.9000) =    799.752 us/op
     p(99.9900) =    799.752 us/op
     p(99.9990) =    799.752 us/op
     p(99.9999) =    799.752 us/op
    p(100.0000) =    799.752 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.5)

# Run progress: 22.35% complete, ETA 00:35:51
# Fork: 1 of 2
# Warmup Iteration   1: 2319.154 us/op
# Warmup Iteration   2: 2118.649 us/op
# Warmup Iteration   3: 2227.890 us/op
# Warmup Iteration   4: 1649.846 us/op
# Warmup Iteration   5: 1789.568 us/op
Iteration   1: 689.373 us/op
Iteration   2: 774.561 us/op
Iteration   3: 735.567 us/op
Iteration   4: 718.541 us/op
Iteration   5: 720.722 us/op

# Run progress: 22.54% complete, ETA 00:35:46
# Fork: 2 of 2
# Warmup Iteration   1: 2396.036 us/op
# Warmup Iteration   2: 2022.716 us/op
# Warmup Iteration   3: 2328.430 us/op
# Warmup Iteration   4: 1629.149 us/op
# Warmup Iteration   5: 1734.075 us/op
Iteration   1: 701.704 us/op
Iteration   2: 789.580 us/op
Iteration   3: 695.225 us/op
Iteration   4: 730.303 us/op
Iteration   5: 736.070 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    729.165 ±(99.9%) 49.053 us/op

  Histogram, us/op:
    [600.000, 612.500) = 0 
    [612.500, 625.000) = 0 
    [625.000, 637.500) = 0 
    [637.500, 650.000) = 0 
    [650.000, 662.500) = 0 
    [662.500, 675.000) = 0 
    [675.000, 687.500) = 0 
    [687.500, 700.000) = 2 
    [700.000, 712.500) = 1 
    [712.500, 725.000) = 2 
    [725.000, 737.500) = 3 
    [737.500, 750.000) = 0 
    [750.000, 762.500) = 0 
    [762.500, 775.000) = 1 
    [775.000, 787.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    689.373 us/op
     p(50.0000) =    725.513 us/op
     p(90.0000) =    788.078 us/op
     p(95.0000) =    789.580 us/op
     p(99.0000) =    789.580 us/op
     p(99.9000) =    789.580 us/op
     p(99.9900) =    789.580 us/op
     p(99.9990) =    789.580 us/op
     p(99.9999) =    789.580 us/op
    p(100.0000) =    789.580 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.625)

# Run progress: 22.73% complete, ETA 00:35:41
# Fork: 1 of 2
# Warmup Iteration   1: 2653.115 us/op
# Warmup Iteration   2: 2003.674 us/op
# Warmup Iteration   3: 2155.307 us/op
# Warmup Iteration   4: 1624.336 us/op
# Warmup Iteration   5: 1787.911 us/op
Iteration   1: 696.079 us/op
Iteration   2: 830.675 us/op
Iteration   3: 735.056 us/op
Iteration   4: 715.981 us/op
Iteration   5: 712.975 us/op

# Run progress: 22.92% complete, ETA 00:35:36
# Fork: 2 of 2
# Warmup Iteration   1: 2496.790 us/op
# Warmup Iteration   2: 2205.216 us/op
# Warmup Iteration   3: 2276.713 us/op
# Warmup Iteration   4: 1655.903 us/op
# Warmup Iteration   5: 1816.263 us/op
Iteration   1: 713.125 us/op
Iteration   2: 755.250 us/op
Iteration   3: 730.381 us/op
Iteration   4: 769.957 us/op
Iteration   5: 771.468 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    743.095 ±(99.9%) 60.310 us/op

  Histogram, us/op:
    [600.000, 625.000) = 0 
    [625.000, 650.000) = 0 
    [650.000, 675.000) = 0 
    [675.000, 700.000) = 1 
    [700.000, 725.000) = 3 
    [725.000, 750.000) = 2 
    [750.000, 775.000) = 3 
    [775.000, 800.000) = 0 
    [800.000, 825.000) = 0 
    [825.000, 850.000) = 1 
    [850.000, 875.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    696.079 us/op
     p(50.0000) =    732.719 us/op
     p(90.0000) =    824.754 us/op
     p(95.0000) =    830.675 us/op
     p(99.0000) =    830.675 us/op
     p(99.9000) =    830.675 us/op
     p(99.9900) =    830.675 us/op
     p(99.9990) =    830.675 us/op
     p(99.9999) =    830.675 us/op
    p(100.0000) =    830.675 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.75)

# Run progress: 23.11% complete, ETA 00:35:30
# Fork: 1 of 2
# Warmup Iteration   1: 2528.819 us/op
# Warmup Iteration   2: 2082.169 us/op
# Warmup Iteration   3: 2203.911 us/op
# Warmup Iteration   4: 1665.344 us/op
# Warmup Iteration   5: 1708.858 us/op
Iteration   1: 809.225 us/op
Iteration   2: 836.115 us/op
Iteration   3: 744.335 us/op
Iteration   4: 745.297 us/op
Iteration   5: 705.254 us/op

# Run progress: 23.30% complete, ETA 00:35:25
# Fork: 2 of 2
# Warmup Iteration   1: 2607.952 us/op
# Warmup Iteration   2: 2067.320 us/op
# Warmup Iteration   3: 2272.084 us/op
# Warmup Iteration   4: 1639.117 us/op
# Warmup Iteration   5: 1840.511 us/op
Iteration   1: 704.274 us/op
Iteration   2: 772.056 us/op
Iteration   3: 747.739 us/op
Iteration   4: 704.327 us/op
Iteration   5: 693.078 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    746.170 ±(99.9%) 72.579 us/op

  Histogram, us/op:
    [600.000, 625.000) = 0 
    [625.000, 650.000) = 0 
    [650.000, 675.000) = 0 
    [675.000, 700.000) = 1 
    [700.000, 725.000) = 3 
    [725.000, 750.000) = 3 
    [750.000, 775.000) = 1 
    [775.000, 800.000) = 0 
    [800.000, 825.000) = 1 
    [825.000, 850.000) = 1 
    [850.000, 875.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    693.078 us/op
     p(50.0000) =    744.816 us/op
     p(90.0000) =    833.426 us/op
     p(95.0000) =    836.115 us/op
     p(99.0000) =    836.115 us/op
     p(99.9000) =    836.115 us/op
     p(99.9900) =    836.115 us/op
     p(99.9990) =    836.115 us/op
     p(99.9999) =    836.115 us/op
    p(100.0000) =    836.115 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 0.875)

# Run progress: 23.48% complete, ETA 00:35:20
# Fork: 1 of 2
# Warmup Iteration   1: 3304.531 us/op
# Warmup Iteration   2: 2174.197 us/op
# Warmup Iteration   3: 2144.243 us/op
# Warmup Iteration   4: 1659.191 us/op
# Warmup Iteration   5: 2188.651 us/op
Iteration   1: 728.721 us/op
Iteration   2: 743.806 us/op
Iteration   3: 714.490 us/op
Iteration   4: 772.452 us/op
Iteration   5: 752.685 us/op

# Run progress: 23.67% complete, ETA 00:35:15
# Fork: 2 of 2
# Warmup Iteration   1: 2578.793 us/op
# Warmup Iteration   2: 2175.876 us/op
# Warmup Iteration   3: 2066.797 us/op
# Warmup Iteration   4: 1610.584 us/op
# Warmup Iteration   5: 1731.770 us/op
Iteration   1: 688.881 us/op
Iteration   2: 766.251 us/op
Iteration   3: 725.783 us/op
Iteration   4: 825.505 us/op
Iteration   5: 724.388 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    744.296 ±(99.9%) 57.196 us/op

  Histogram, us/op:
    [600.000, 625.000) = 0 
    [625.000, 650.000) = 0 
    [650.000, 675.000) = 0 
    [675.000, 700.000) = 1 
    [700.000, 725.000) = 2 
    [725.000, 750.000) = 3 
    [750.000, 775.000) = 3 
    [775.000, 800.000) = 0 
    [800.000, 825.000) = 0 
    [825.000, 850.000) = 1 
    [850.000, 875.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    688.881 us/op
     p(50.0000) =    736.264 us/op
     p(90.0000) =    820.200 us/op
     p(95.0000) =    825.505 us/op
     p(99.0000) =    825.505 us/op
     p(99.9000) =    825.505 us/op
     p(99.9900) =    825.505 us/op
     p(99.9990) =    825.505 us/op
     p(99.9999) =    825.505 us/op
    p(100.0000) =    825.505 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 524288, loadFactor = 1)

# Run progress: 23.86% complete, ETA 00:35:10
# Fork: 1 of 2
# Warmup Iteration   1: 2397.202 us/op
# Warmup Iteration   2: 2049.442 us/op
# Warmup Iteration   3: 2226.061 us/op
# Warmup Iteration   4: 1633.948 us/op
# Warmup Iteration   5: 1706.938 us/op
Iteration   1: 731.251 us/op
Iteration   2: 768.392 us/op
Iteration   3: 729.978 us/op
Iteration   4: 753.470 us/op
Iteration   5: 740.365 us/op

# Run progress: 24.05% complete, ETA 00:35:04
# Fork: 2 of 2
# Warmup Iteration   1: 2567.595 us/op
# Warmup Iteration   2: 2262.221 us/op
# Warmup Iteration   3: 2288.123 us/op
# Warmup Iteration   4: 1644.626 us/op
# Warmup Iteration   5: 1907.011 us/op
Iteration   1: 735.996 us/op
Iteration   2: 768.054 us/op
Iteration   3: 764.375 us/op
Iteration   4: 699.560 us/op
Iteration   5: 702.002 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =    739.344 ±(99.9%) 37.836 us/op

  Histogram, us/op:
    [690.000, 695.000) = 0 
    [695.000, 700.000) = 1 
    [700.000, 705.000) = 1 
    [705.000, 710.000) = 0 
    [710.000, 715.000) = 0 
    [715.000, 720.000) = 0 
    [720.000, 725.000) = 0 
    [725.000, 730.000) = 1 
    [730.000, 735.000) = 1 
    [735.000, 740.000) = 1 
    [740.000, 745.000) = 1 
    [745.000, 750.000) = 0 
    [750.000, 755.000) = 1 
    [755.000, 760.000) = 0 
    [760.000, 765.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    699.560 us/op
     p(50.0000) =    738.180 us/op
     p(90.0000) =    768.358 us/op
     p(95.0000) =    768.392 us/op
     p(99.0000) =    768.392 us/op
     p(99.9000) =    768.392 us/op
     p(99.9900) =    768.392 us/op
     p(99.9990) =    768.392 us/op
     p(99.9999) =    768.392 us/op
    p(100.0000) =    768.392 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.125)

# Run progress: 24.24% complete, ETA 00:34:59
# Fork: 1 of 2
# Warmup Iteration   1: 3167.864 us/op
# Warmup Iteration   2: 3281.740 us/op
# Warmup Iteration   3: 2571.098 us/op
# Warmup Iteration   4: 2340.689 us/op
# Warmup Iteration   5: 2378.001 us/op
Iteration   1: 1437.949 us/op
Iteration   2: 1404.797 us/op
Iteration   3: 1396.161 us/op
Iteration   4: 1362.780 us/op
Iteration   5: 1357.103 us/op

# Run progress: 24.43% complete, ETA 00:34:54
# Fork: 2 of 2
# Warmup Iteration   1: 3221.311 us/op
# Warmup Iteration   2: 3144.165 us/op
# Warmup Iteration   3: 2927.369 us/op
# Warmup Iteration   4: 2356.657 us/op
# Warmup Iteration   5: 2357.869 us/op
Iteration   1: 1382.067 us/op
Iteration   2: 1451.000 us/op
Iteration   3: 1417.538 us/op
Iteration   4: 1455.060 us/op
Iteration   5: 1438.483 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1410.294 ±(99.9%) 53.775 us/op

  Histogram, us/op:
    [1350.000, 1360.000) = 1 
    [1360.000, 1370.000) = 1 
    [1370.000, 1380.000) = 0 
    [1380.000, 1390.000) = 1 
    [1390.000, 1400.000) = 1 
    [1400.000, 1410.000) = 1 
    [1410.000, 1420.000) = 1 
    [1420.000, 1430.000) = 0 
    [1430.000, 1440.000) = 2 
    [1440.000, 1450.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1357.103 us/op
     p(50.0000) =   1411.168 us/op
     p(90.0000) =   1454.654 us/op
     p(95.0000) =   1455.060 us/op
     p(99.0000) =   1455.060 us/op
     p(99.9000) =   1455.060 us/op
     p(99.9900) =   1455.060 us/op
     p(99.9990) =   1455.060 us/op
     p(99.9999) =   1455.060 us/op
    p(100.0000) =   1455.060 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.250)

# Run progress: 24.62% complete, ETA 00:34:49
# Fork: 1 of 2
# Warmup Iteration   1: 3242.276 us/op
# Warmup Iteration   2: 3235.332 us/op
# Warmup Iteration   3: 2583.525 us/op
# Warmup Iteration   4: 2371.422 us/op
# Warmup Iteration   5: 2387.215 us/op
Iteration   1: 1422.099 us/op
Iteration   2: 1450.725 us/op
Iteration   3: 1407.541 us/op
Iteration   4: 1393.540 us/op
Iteration   5: 1403.911 us/op

# Run progress: 24.81% complete, ETA 00:34:44
# Fork: 2 of 2
# Warmup Iteration   1: 3199.036 us/op
# Warmup Iteration   2: 3140.193 us/op
# Warmup Iteration   3: 2755.356 us/op
# Warmup Iteration   4: 2369.793 us/op
# Warmup Iteration   5: 2346.626 us/op
Iteration   1: 1407.006 us/op
Iteration   2: 1429.066 us/op
Iteration   3: 1390.597 us/op
Iteration   4: 1365.194 us/op
Iteration   5: 1369.424 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1403.910 ±(99.9%) 39.524 us/op

  Histogram, us/op:
    [1360.000, 1370.000) = 2 
    [1370.000, 1380.000) = 0 
    [1380.000, 1390.000) = 0 
    [1390.000, 1400.000) = 2 
    [1400.000, 1410.000) = 3 
    [1410.000, 1420.000) = 0 
    [1420.000, 1430.000) = 2 
    [1430.000, 1440.000) = 0 
    [1440.000, 1450.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1365.194 us/op
     p(50.0000) =   1405.459 us/op
     p(90.0000) =   1448.559 us/op
     p(95.0000) =   1450.725 us/op
     p(99.0000) =   1450.725 us/op
     p(99.9000) =   1450.725 us/op
     p(99.9900) =   1450.725 us/op
     p(99.9990) =   1450.725 us/op
     p(99.9999) =   1450.725 us/op
    p(100.0000) =   1450.725 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.375)

# Run progress: 25.00% complete, ETA 00:34:38
# Fork: 1 of 2
# Warmup Iteration   1: 3207.668 us/op
# Warmup Iteration   2: 3113.798 us/op
# Warmup Iteration   3: 2677.272 us/op
# Warmup Iteration   4: 2386.486 us/op
# Warmup Iteration   5: 2471.847 us/op
Iteration   1: 1410.977 us/op
Iteration   2: 1463.218 us/op
Iteration   3: 1436.057 us/op
Iteration   4: 1409.221 us/op
Iteration   5: 1434.570 us/op

# Run progress: 25.19% complete, ETA 00:34:33
# Fork: 2 of 2
# Warmup Iteration   1: 3185.016 us/op
# Warmup Iteration   2: 3115.954 us/op
# Warmup Iteration   3: 2656.487 us/op
# Warmup Iteration   4: 2533.878 us/op
# Warmup Iteration   5: 2504.648 us/op
Iteration   1: 1487.385 us/op
Iteration   2: 1538.806 us/op
Iteration   3: 1540.639 us/op
Iteration   4: 1591.606 us/op
Iteration   5: 1496.162 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1480.864 ±(99.9%) 92.856 us/op

  Histogram, us/op:
    [1400.000, 1412.500) = 2 
    [1412.500, 1425.000) = 0 
    [1425.000, 1437.500) = 2 
    [1437.500, 1450.000) = 0 
    [1450.000, 1462.500) = 0 
    [1462.500, 1475.000) = 1 
    [1475.000, 1487.500) = 1 
    [1487.500, 1500.000) = 1 
    [1500.000, 1512.500) = 0 
    [1512.500, 1525.000) = 0 
    [1525.000, 1537.500) = 0 
    [1537.500, 1550.000) = 2 
    [1550.000, 1562.500) = 0 
    [1562.500, 1575.000) = 0 
    [1575.000, 1587.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1409.221 us/op
     p(50.0000) =   1475.302 us/op
     p(90.0000) =   1586.509 us/op
     p(95.0000) =   1591.606 us/op
     p(99.0000) =   1591.606 us/op
     p(99.9000) =   1591.606 us/op
     p(99.9900) =   1591.606 us/op
     p(99.9990) =   1591.606 us/op
     p(99.9999) =   1591.606 us/op
    p(100.0000) =   1591.606 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.5)

# Run progress: 25.38% complete, ETA 00:34:28
# Fork: 1 of 2
# Warmup Iteration   1: 3312.007 us/op
# Warmup Iteration   2: 3165.613 us/op
# Warmup Iteration   3: 2644.114 us/op
# Warmup Iteration   4: 2385.669 us/op
# Warmup Iteration   5: 2356.204 us/op
Iteration   1: 1394.611 us/op
Iteration   2: 1518.711 us/op
Iteration   3: 1411.026 us/op
Iteration   4: 1376.493 us/op
Iteration   5: 1405.826 us/op

# Run progress: 25.57% complete, ETA 00:34:23
# Fork: 2 of 2
# Warmup Iteration   1: 3240.436 us/op
# Warmup Iteration   2: 3188.603 us/op
# Warmup Iteration   3: 2584.623 us/op
# Warmup Iteration   4: 2410.695 us/op
# Warmup Iteration   5: 2391.129 us/op
Iteration   1: 1406.547 us/op
Iteration   2: 1446.946 us/op
Iteration   3: 1392.056 us/op
Iteration   4: 1382.862 us/op
Iteration   5: 1504.082 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1423.916 ±(99.9%) 75.671 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 0 
    [1375.000, 1400.000) = 4 
    [1400.000, 1425.000) = 3 
    [1425.000, 1450.000) = 1 
    [1450.000, 1475.000) = 0 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 2 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1376.493 us/op
     p(50.0000) =   1406.187 us/op
     p(90.0000) =   1517.248 us/op
     p(95.0000) =   1518.711 us/op
     p(99.0000) =   1518.711 us/op
     p(99.9000) =   1518.711 us/op
     p(99.9900) =   1518.711 us/op
     p(99.9990) =   1518.711 us/op
     p(99.9999) =   1518.711 us/op
    p(100.0000) =   1518.711 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.625)

# Run progress: 25.76% complete, ETA 00:34:18
# Fork: 1 of 2
# Warmup Iteration   1: 3365.401 us/op
# Warmup Iteration   2: 3064.532 us/op
# Warmup Iteration   3: 2541.524 us/op
# Warmup Iteration   4: 2409.923 us/op
# Warmup Iteration   5: 2472.963 us/op
Iteration   1: 1458.160 us/op
Iteration   2: 1447.223 us/op
Iteration   3: 1393.514 us/op
Iteration   4: 1395.575 us/op
Iteration   5: 1398.006 us/op

# Run progress: 25.95% complete, ETA 00:34:12
# Fork: 2 of 2
# Warmup Iteration   1: 3120.698 us/op
# Warmup Iteration   2: 3297.182 us/op
# Warmup Iteration   3: 2561.476 us/op
# Warmup Iteration   4: 2413.037 us/op
# Warmup Iteration   5: 2278.910 us/op
Iteration   1: 1401.727 us/op
Iteration   2: 1391.932 us/op
Iteration   3: 1383.962 us/op
Iteration   4: 1385.998 us/op
Iteration   5: 1353.506 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1400.960 ±(99.9%) 46.056 us/op

  Histogram, us/op:
    [1300.000, 1312.500) = 0 
    [1312.500, 1325.000) = 0 
    [1325.000, 1337.500) = 0 
    [1337.500, 1350.000) = 0 
    [1350.000, 1362.500) = 1 
    [1362.500, 1375.000) = 0 
    [1375.000, 1387.500) = 2 
    [1387.500, 1400.000) = 4 
    [1400.000, 1412.500) = 1 
    [1412.500, 1425.000) = 0 
    [1425.000, 1437.500) = 0 
    [1437.500, 1450.000) = 1 
    [1450.000, 1462.500) = 1 
    [1462.500, 1475.000) = 0 
    [1475.000, 1487.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1353.506 us/op
     p(50.0000) =   1394.545 us/op
     p(90.0000) =   1457.066 us/op
     p(95.0000) =   1458.160 us/op
     p(99.0000) =   1458.160 us/op
     p(99.9000) =   1458.160 us/op
     p(99.9900) =   1458.160 us/op
     p(99.9990) =   1458.160 us/op
     p(99.9999) =   1458.160 us/op
    p(100.0000) =   1458.160 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.75)

# Run progress: 26.14% complete, ETA 00:34:07
# Fork: 1 of 2
# Warmup Iteration   1: 3263.647 us/op
# Warmup Iteration   2: 3117.949 us/op
# Warmup Iteration   3: 2678.617 us/op
# Warmup Iteration   4: 2372.956 us/op
# Warmup Iteration   5: 2365.797 us/op
Iteration   1: 1414.105 us/op
Iteration   2: 1440.335 us/op
Iteration   3: 1384.904 us/op
Iteration   4: 1415.229 us/op
Iteration   5: 1429.554 us/op

# Run progress: 26.33% complete, ETA 00:34:02
# Fork: 2 of 2
# Warmup Iteration   1: 3267.454 us/op
# Warmup Iteration   2: 3151.889 us/op
# Warmup Iteration   3: 2723.617 us/op
# Warmup Iteration   4: 2328.398 us/op
# Warmup Iteration   5: 2433.364 us/op
Iteration   1: 1388.661 us/op
Iteration   2: 1417.515 us/op
Iteration   3: 1406.335 us/op
Iteration   4: 1371.915 us/op
Iteration   5: 1544.518 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1421.307 ±(99.9%) 72.627 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 1 
    [1375.000, 1400.000) = 2 
    [1400.000, 1425.000) = 4 
    [1425.000, 1450.000) = 2 
    [1450.000, 1475.000) = 0 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 0 
    [1525.000, 1550.000) = 1 
    [1550.000, 1575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1371.915 us/op
     p(50.0000) =   1414.667 us/op
     p(90.0000) =   1534.100 us/op
     p(95.0000) =   1544.518 us/op
     p(99.0000) =   1544.518 us/op
     p(99.9000) =   1544.518 us/op
     p(99.9900) =   1544.518 us/op
     p(99.9990) =   1544.518 us/op
     p(99.9999) =   1544.518 us/op
    p(100.0000) =   1544.518 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 0.875)

# Run progress: 26.52% complete, ETA 00:33:57
# Fork: 1 of 2
# Warmup Iteration   1: 3289.120 us/op
# Warmup Iteration   2: 3360.785 us/op
# Warmup Iteration   3: 2546.452 us/op
# Warmup Iteration   4: 2384.665 us/op
# Warmup Iteration   5: 2433.991 us/op
Iteration   1: 1351.391 us/op
Iteration   2: 1425.792 us/op
Iteration   3: 1406.542 us/op
Iteration   4: 1340.763 us/op
Iteration   5: 1347.676 us/op

# Run progress: 26.70% complete, ETA 00:33:52
# Fork: 2 of 2
# Warmup Iteration   1: 3321.631 us/op
# Warmup Iteration   2: 3101.254 us/op
# Warmup Iteration   3: 2493.895 us/op
# Warmup Iteration   4: 2486.668 us/op
# Warmup Iteration   5: 2358.508 us/op
Iteration   1: 1371.317 us/op
Iteration   2: 1423.548 us/op
Iteration   3: 1403.338 us/op
Iteration   4: 1385.947 us/op
Iteration   5: 1378.136 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1383.445 ±(99.9%) 46.846 us/op

  Histogram, us/op:
    [1340.000, 1345.000) = 1 
    [1345.000, 1350.000) = 1 
    [1350.000, 1355.000) = 1 
    [1355.000, 1360.000) = 0 
    [1360.000, 1365.000) = 0 
    [1365.000, 1370.000) = 0 
    [1370.000, 1375.000) = 1 
    [1375.000, 1380.000) = 1 
    [1380.000, 1385.000) = 0 
    [1385.000, 1390.000) = 1 
    [1390.000, 1395.000) = 0 
    [1395.000, 1400.000) = 0 
    [1400.000, 1405.000) = 1 
    [1405.000, 1410.000) = 1 
    [1410.000, 1415.000) = 0 
    [1415.000, 1420.000) = 0 
    [1420.000, 1425.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1340.763 us/op
     p(50.0000) =   1382.041 us/op
     p(90.0000) =   1425.568 us/op
     p(95.0000) =   1425.792 us/op
     p(99.0000) =   1425.792 us/op
     p(99.9000) =   1425.792 us/op
     p(99.9900) =   1425.792 us/op
     p(99.9990) =   1425.792 us/op
     p(99.9999) =   1425.792 us/op
    p(100.0000) =   1425.792 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1000000, loadFactor = 1)

# Run progress: 26.89% complete, ETA 00:33:46
# Fork: 1 of 2
# Warmup Iteration   1: 3192.691 us/op
# Warmup Iteration   2: 3168.952 us/op
# Warmup Iteration   3: 2713.191 us/op
# Warmup Iteration   4: 2473.563 us/op
# Warmup Iteration   5: 2412.735 us/op
Iteration   1: 1412.875 us/op
Iteration   2: 1452.806 us/op
Iteration   3: 1372.402 us/op
Iteration   4: 1402.586 us/op
Iteration   5: 1411.371 us/op

# Run progress: 27.08% complete, ETA 00:33:41
# Fork: 2 of 2
# Warmup Iteration   1: 3260.242 us/op
# Warmup Iteration   2: 3164.611 us/op
# Warmup Iteration   3: 2722.516 us/op
# Warmup Iteration   4: 2384.382 us/op
# Warmup Iteration   5: 2471.893 us/op
Iteration   1: 1387.118 us/op
Iteration   2: 1502.066 us/op
Iteration   3: 1460.004 us/op
Iteration   4: 1384.966 us/op
Iteration   5: 1393.888 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1418.008 ±(99.9%) 61.837 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 1 
    [1375.000, 1400.000) = 3 
    [1400.000, 1425.000) = 3 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 2 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 1 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1372.402 us/op
     p(50.0000) =   1406.979 us/op
     p(90.0000) =   1497.860 us/op
     p(95.0000) =   1502.066 us/op
     p(99.0000) =   1502.066 us/op
     p(99.9000) =   1502.066 us/op
     p(99.9900) =   1502.066 us/op
     p(99.9990) =   1502.066 us/op
     p(99.9999) =   1502.066 us/op
    p(100.0000) =   1502.066 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.125)

# Run progress: 27.27% complete, ETA 00:33:36
# Fork: 1 of 2
# Warmup Iteration   1: 3299.053 us/op
# Warmup Iteration   2: 3142.626 us/op
# Warmup Iteration   3: 2596.110 us/op
# Warmup Iteration   4: 2451.290 us/op
# Warmup Iteration   5: 2363.533 us/op
Iteration   1: 1424.321 us/op
Iteration   2: 1477.046 us/op
Iteration   3: 1413.622 us/op
Iteration   4: 1445.711 us/op
Iteration   5: 1445.054 us/op

# Run progress: 27.46% complete, ETA 00:33:31
# Fork: 2 of 2
# Warmup Iteration   1: 3199.867 us/op
# Warmup Iteration   2: 3128.272 us/op
# Warmup Iteration   3: 2701.924 us/op
# Warmup Iteration   4: 2428.263 us/op
# Warmup Iteration   5: 2386.982 us/op
Iteration   1: 1399.630 us/op
Iteration   2: 1489.364 us/op
Iteration   3: 1441.526 us/op
Iteration   4: 1422.943 us/op
Iteration   5: 1400.397 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1435.961 ±(99.9%) 45.460 us/op

  Histogram, us/op:
    [1390.000, 1400.000) = 1 
    [1400.000, 1410.000) = 1 
    [1410.000, 1420.000) = 1 
    [1420.000, 1430.000) = 2 
    [1430.000, 1440.000) = 0 
    [1440.000, 1450.000) = 3 
    [1450.000, 1460.000) = 0 
    [1460.000, 1470.000) = 0 
    [1470.000, 1480.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1399.630 us/op
     p(50.0000) =   1432.923 us/op
     p(90.0000) =   1488.132 us/op
     p(95.0000) =   1489.364 us/op
     p(99.0000) =   1489.364 us/op
     p(99.9000) =   1489.364 us/op
     p(99.9900) =   1489.364 us/op
     p(99.9990) =   1489.364 us/op
     p(99.9999) =   1489.364 us/op
    p(100.0000) =   1489.364 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.250)

# Run progress: 27.65% complete, ETA 00:33:26
# Fork: 1 of 2
# Warmup Iteration   1: 3226.848 us/op
# Warmup Iteration   2: 3136.282 us/op
# Warmup Iteration   3: 2611.761 us/op
# Warmup Iteration   4: 2377.508 us/op
# Warmup Iteration   5: 2379.762 us/op
Iteration   1: 1374.229 us/op
Iteration   2: 1441.589 us/op
Iteration   3: 1431.155 us/op
Iteration   4: 1364.702 us/op
Iteration   5: 1592.344 us/op

# Run progress: 27.84% complete, ETA 00:33:20
# Fork: 2 of 2
# Warmup Iteration   1: 3240.880 us/op
# Warmup Iteration   2: 3149.075 us/op
# Warmup Iteration   3: 2659.476 us/op
# Warmup Iteration   4: 2369.711 us/op
# Warmup Iteration   5: 2508.003 us/op
Iteration   1: 1387.811 us/op
Iteration   2: 1451.196 us/op
Iteration   3: 1421.058 us/op
Iteration   4: 1389.229 us/op
Iteration   5: 1483.235 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1433.655 ±(99.9%) 101.465 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 2 
    [1375.000, 1400.000) = 2 
    [1400.000, 1425.000) = 1 
    [1425.000, 1450.000) = 2 
    [1450.000, 1475.000) = 1 
    [1475.000, 1500.000) = 1 
    [1500.000, 1525.000) = 0 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1364.702 us/op
     p(50.0000) =   1426.106 us/op
     p(90.0000) =   1581.433 us/op
     p(95.0000) =   1592.344 us/op
     p(99.0000) =   1592.344 us/op
     p(99.9000) =   1592.344 us/op
     p(99.9900) =   1592.344 us/op
     p(99.9990) =   1592.344 us/op
     p(99.9999) =   1592.344 us/op
    p(100.0000) =   1592.344 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.375)

# Run progress: 28.03% complete, ETA 00:33:15
# Fork: 1 of 2
# Warmup Iteration   1: 3325.866 us/op
# Warmup Iteration   2: 3171.002 us/op
# Warmup Iteration   3: 2553.697 us/op
# Warmup Iteration   4: 2457.783 us/op
# Warmup Iteration   5: 2499.596 us/op
Iteration   1: 1406.686 us/op
Iteration   2: 1456.390 us/op
Iteration   3: 1456.220 us/op
Iteration   4: 1396.974 us/op
Iteration   5: 1439.315 us/op

# Run progress: 28.22% complete, ETA 00:33:10
# Fork: 2 of 2
# Warmup Iteration   1: 3173.859 us/op
# Warmup Iteration   2: 3197.384 us/op
# Warmup Iteration   3: 2637.635 us/op
# Warmup Iteration   4: 2369.193 us/op
# Warmup Iteration   5: 2327.184 us/op
Iteration   1: 1380.066 us/op
Iteration   2: 1424.048 us/op
Iteration   3: 1379.486 us/op
Iteration   4: 1382.783 us/op
Iteration   5: 1393.595 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1411.556 ±(99.9%) 46.019 us/op

  Histogram, us/op:
    [1370.000, 1375.000) = 0 
    [1375.000, 1380.000) = 1 
    [1380.000, 1385.000) = 2 
    [1385.000, 1390.000) = 0 
    [1390.000, 1395.000) = 1 
    [1395.000, 1400.000) = 1 
    [1400.000, 1405.000) = 0 
    [1405.000, 1410.000) = 1 
    [1410.000, 1415.000) = 0 
    [1415.000, 1420.000) = 0 
    [1420.000, 1425.000) = 1 
    [1425.000, 1430.000) = 0 
    [1430.000, 1435.000) = 0 
    [1435.000, 1440.000) = 1 
    [1440.000, 1445.000) = 0 
    [1445.000, 1450.000) = 0 
    [1450.000, 1455.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1379.486 us/op
     p(50.0000) =   1401.830 us/op
     p(90.0000) =   1456.373 us/op
     p(95.0000) =   1456.390 us/op
     p(99.0000) =   1456.390 us/op
     p(99.9000) =   1456.390 us/op
     p(99.9900) =   1456.390 us/op
     p(99.9990) =   1456.390 us/op
     p(99.9999) =   1456.390 us/op
    p(100.0000) =   1456.390 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.5)

# Run progress: 28.41% complete, ETA 00:33:05
# Fork: 1 of 2
# Warmup Iteration   1: 3104.390 us/op
# Warmup Iteration   2: 3042.293 us/op
# Warmup Iteration   3: 2605.036 us/op
# Warmup Iteration   4: 2354.959 us/op
# Warmup Iteration   5: 2307.230 us/op
Iteration   1: 1388.082 us/op
Iteration   2: 1456.381 us/op
Iteration   3: 1429.396 us/op
Iteration   4: 1412.484 us/op
Iteration   5: 1527.125 us/op

# Run progress: 28.60% complete, ETA 00:33:00
# Fork: 2 of 2
# Warmup Iteration   1: 3342.271 us/op
# Warmup Iteration   2: 3182.155 us/op
# Warmup Iteration   3: 2668.947 us/op
# Warmup Iteration   4: 2445.800 us/op
# Warmup Iteration   5: 2478.989 us/op
Iteration   1: 1499.344 us/op
Iteration   2: 1514.603 us/op
Iteration   3: 1460.603 us/op
Iteration   4: 1473.028 us/op
Iteration   5: 1542.051 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1470.310 ±(99.9%) 76.850 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 0 
    [1375.000, 1400.000) = 1 
    [1400.000, 1425.000) = 1 
    [1425.000, 1450.000) = 1 
    [1450.000, 1475.000) = 3 
    [1475.000, 1500.000) = 1 
    [1500.000, 1525.000) = 1 
    [1525.000, 1550.000) = 2 
    [1550.000, 1575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1388.082 us/op
     p(50.0000) =   1466.816 us/op
     p(90.0000) =   1540.558 us/op
     p(95.0000) =   1542.051 us/op
     p(99.0000) =   1542.051 us/op
     p(99.9000) =   1542.051 us/op
     p(99.9900) =   1542.051 us/op
     p(99.9990) =   1542.051 us/op
     p(99.9999) =   1542.051 us/op
    p(100.0000) =   1542.051 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.625)

# Run progress: 28.79% complete, ETA 00:32:54
# Fork: 1 of 2
# Warmup Iteration   1: 3151.674 us/op
# Warmup Iteration   2: 3061.384 us/op
# Warmup Iteration   3: 2533.356 us/op
# Warmup Iteration   4: 2384.205 us/op
# Warmup Iteration   5: 2370.808 us/op
Iteration   1: 1422.111 us/op
Iteration   2: 1488.069 us/op
Iteration   3: 1406.504 us/op
Iteration   4: 1407.017 us/op
Iteration   5: 1449.257 us/op

# Run progress: 28.98% complete, ETA 00:32:49
# Fork: 2 of 2
# Warmup Iteration   1: 3149.320 us/op
# Warmup Iteration   2: 3137.777 us/op
# Warmup Iteration   3: 2818.086 us/op
# Warmup Iteration   4: 2325.312 us/op
# Warmup Iteration   5: 2315.758 us/op
Iteration   1: 1402.834 us/op
Iteration   2: 1495.150 us/op
Iteration   3: 1406.988 us/op
Iteration   4: 1438.207 us/op
Iteration   5: 1360.865 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1427.700 ±(99.9%) 62.114 us/op

  Histogram, us/op:
    [1300.000, 1312.500) = 0 
    [1312.500, 1325.000) = 0 
    [1325.000, 1337.500) = 0 
    [1337.500, 1350.000) = 0 
    [1350.000, 1362.500) = 1 
    [1362.500, 1375.000) = 0 
    [1375.000, 1387.500) = 0 
    [1387.500, 1400.000) = 0 
    [1400.000, 1412.500) = 4 
    [1412.500, 1425.000) = 1 
    [1425.000, 1437.500) = 0 
    [1437.500, 1450.000) = 2 
    [1450.000, 1462.500) = 0 
    [1462.500, 1475.000) = 0 
    [1475.000, 1487.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1360.865 us/op
     p(50.0000) =   1414.564 us/op
     p(90.0000) =   1494.442 us/op
     p(95.0000) =   1495.150 us/op
     p(99.0000) =   1495.150 us/op
     p(99.9000) =   1495.150 us/op
     p(99.9900) =   1495.150 us/op
     p(99.9990) =   1495.150 us/op
     p(99.9999) =   1495.150 us/op
    p(100.0000) =   1495.150 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.75)

# Run progress: 29.17% complete, ETA 00:32:44
# Fork: 1 of 2
# Warmup Iteration   1: 3185.270 us/op
# Warmup Iteration   2: 3278.552 us/op
# Warmup Iteration   3: 2465.218 us/op
# Warmup Iteration   4: 2385.101 us/op
# Warmup Iteration   5: 2348.478 us/op
Iteration   1: 1403.919 us/op
Iteration   2: 1437.728 us/op
Iteration   3: 1377.697 us/op
Iteration   4: 1424.970 us/op
Iteration   5: 1412.411 us/op

# Run progress: 29.36% complete, ETA 00:32:39
# Fork: 2 of 2
# Warmup Iteration   1: 3170.737 us/op
# Warmup Iteration   2: 3142.873 us/op
# Warmup Iteration   3: 2595.248 us/op
# Warmup Iteration   4: 2404.263 us/op
# Warmup Iteration   5: 2432.606 us/op
Iteration   1: 1405.450 us/op
Iteration   2: 1476.864 us/op
Iteration   3: 1374.396 us/op
Iteration   4: 1520.394 us/op
Iteration   5: 1453.489 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1428.732 ±(99.9%) 68.374 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 1 
    [1375.000, 1400.000) = 1 
    [1400.000, 1425.000) = 4 
    [1425.000, 1450.000) = 1 
    [1450.000, 1475.000) = 1 
    [1475.000, 1500.000) = 1 
    [1500.000, 1525.000) = 1 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1374.396 us/op
     p(50.0000) =   1418.691 us/op
     p(90.0000) =   1516.041 us/op
     p(95.0000) =   1520.394 us/op
     p(99.0000) =   1520.394 us/op
     p(99.9000) =   1520.394 us/op
     p(99.9900) =   1520.394 us/op
     p(99.9990) =   1520.394 us/op
     p(99.9999) =   1520.394 us/op
    p(100.0000) =   1520.394 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 0.875)

# Run progress: 29.55% complete, ETA 00:32:34
# Fork: 1 of 2
# Warmup Iteration   1: 3347.272 us/op
# Warmup Iteration   2: 3036.185 us/op
# Warmup Iteration   3: 2651.609 us/op
# Warmup Iteration   4: 2355.917 us/op
# Warmup Iteration   5: 2366.494 us/op
Iteration   1: 1383.819 us/op
Iteration   2: 1431.467 us/op
Iteration   3: 1358.906 us/op
Iteration   4: 1435.562 us/op
Iteration   5: 1389.135 us/op

# Run progress: 29.73% complete, ETA 00:32:28
# Fork: 2 of 2
# Warmup Iteration   1: 3404.308 us/op
# Warmup Iteration   2: 3249.293 us/op
# Warmup Iteration   3: 2606.778 us/op
# Warmup Iteration   4: 2493.793 us/op
# Warmup Iteration   5: 2358.353 us/op
Iteration   1: 1365.835 us/op
Iteration   2: 1422.330 us/op
Iteration   3: 1416.885 us/op
Iteration   4: 1362.821 us/op
Iteration   5: 1423.817 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1399.058 ±(99.9%) 45.677 us/op

  Histogram, us/op:
    [1350.000, 1355.000) = 0 
    [1355.000, 1360.000) = 1 
    [1360.000, 1365.000) = 1 
    [1365.000, 1370.000) = 1 
    [1370.000, 1375.000) = 0 
    [1375.000, 1380.000) = 0 
    [1380.000, 1385.000) = 1 
    [1385.000, 1390.000) = 1 
    [1390.000, 1395.000) = 0 
    [1395.000, 1400.000) = 0 
    [1400.000, 1405.000) = 0 
    [1405.000, 1410.000) = 0 
    [1410.000, 1415.000) = 0 
    [1415.000, 1420.000) = 1 
    [1420.000, 1425.000) = 2 
    [1425.000, 1430.000) = 0 
    [1430.000, 1435.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1358.906 us/op
     p(50.0000) =   1403.010 us/op
     p(90.0000) =   1435.153 us/op
     p(95.0000) =   1435.562 us/op
     p(99.0000) =   1435.562 us/op
     p(99.9000) =   1435.562 us/op
     p(99.9900) =   1435.562 us/op
     p(99.9990) =   1435.562 us/op
     p(99.9999) =   1435.562 us/op
    p(100.0000) =   1435.562 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 1048576, loadFactor = 1)

# Run progress: 29.92% complete, ETA 00:32:23
# Fork: 1 of 2
# Warmup Iteration   1: 3370.511 us/op
# Warmup Iteration   2: 3099.257 us/op
# Warmup Iteration   3: 2640.392 us/op
# Warmup Iteration   4: 2748.484 us/op
# Warmup Iteration   5: 2726.064 us/op
Iteration   1: 1405.345 us/op
Iteration   2: 1469.752 us/op
Iteration   3: 1350.421 us/op
Iteration   4: 1396.249 us/op
Iteration   5: 1439.361 us/op

# Run progress: 30.11% complete, ETA 00:32:18
# Fork: 2 of 2
# Warmup Iteration   1: 3236.639 us/op
# Warmup Iteration   2: 3175.319 us/op
# Warmup Iteration   3: 2632.408 us/op
# Warmup Iteration   4: 2392.763 us/op
# Warmup Iteration   5: 2361.360 us/op
Iteration   1: 1427.843 us/op
Iteration   2: 1433.678 us/op
Iteration   3: 1438.388 us/op
Iteration   4: 1377.980 us/op
Iteration   5: 1388.602 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   1412.762 ±(99.9%) 53.534 us/op

  Histogram, us/op:
    [1300.000, 1312.500) = 0 
    [1312.500, 1325.000) = 0 
    [1325.000, 1337.500) = 0 
    [1337.500, 1350.000) = 0 
    [1350.000, 1362.500) = 1 
    [1362.500, 1375.000) = 0 
    [1375.000, 1387.500) = 1 
    [1387.500, 1400.000) = 2 
    [1400.000, 1412.500) = 1 
    [1412.500, 1425.000) = 0 
    [1425.000, 1437.500) = 2 
    [1437.500, 1450.000) = 2 
    [1450.000, 1462.500) = 0 
    [1462.500, 1475.000) = 1 
    [1475.000, 1487.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1350.421 us/op
     p(50.0000) =   1416.594 us/op
     p(90.0000) =   1466.713 us/op
     p(95.0000) =   1469.752 us/op
     p(99.0000) =   1469.752 us/op
     p(99.9000) =   1469.752 us/op
     p(99.9900) =   1469.752 us/op
     p(99.9990) =   1469.752 us/op
     p(99.9999) =   1469.752 us/op
    p(100.0000) =   1469.752 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.125)

# Run progress: 30.30% complete, ETA 00:32:13
# Fork: 1 of 2
# Warmup Iteration   1: 4743.343 us/op
# Warmup Iteration   2: 4685.273 us/op
# Warmup Iteration   3: 4094.796 us/op
# Warmup Iteration   4: 3833.920 us/op
# Warmup Iteration   5: 3925.450 us/op
Iteration   1: 2959.355 us/op
Iteration   2: 2828.122 us/op
Iteration   3: 2897.190 us/op
Iteration   4: 2894.501 us/op
Iteration   5: 2924.234 us/op

# Run progress: 30.49% complete, ETA 00:32:08
# Fork: 2 of 2
# Warmup Iteration   1: 4590.393 us/op
# Warmup Iteration   2: 4781.664 us/op
# Warmup Iteration   3: 3916.508 us/op
# Warmup Iteration   4: 3879.779 us/op
# Warmup Iteration   5: 3990.218 us/op
Iteration   1: 2785.577 us/op
Iteration   2: 2859.432 us/op
Iteration   3: 2746.302 us/op
Iteration   4: 2762.818 us/op
Iteration   5: 2780.334 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2843.786 ±(99.9%) 111.800 us/op

  Histogram, us/op:
    [2700.000, 2725.000) = 0 
    [2725.000, 2750.000) = 1 
    [2750.000, 2775.000) = 1 
    [2775.000, 2800.000) = 2 
    [2800.000, 2825.000) = 0 
    [2825.000, 2850.000) = 1 
    [2850.000, 2875.000) = 1 
    [2875.000, 2900.000) = 2 
    [2900.000, 2925.000) = 1 
    [2925.000, 2950.000) = 0 
    [2950.000, 2975.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2746.302 us/op
     p(50.0000) =   2843.777 us/op
     p(90.0000) =   2955.843 us/op
     p(95.0000) =   2959.355 us/op
     p(99.0000) =   2959.355 us/op
     p(99.9000) =   2959.355 us/op
     p(99.9900) =   2959.355 us/op
     p(99.9990) =   2959.355 us/op
     p(99.9999) =   2959.355 us/op
    p(100.0000) =   2959.355 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.250)

# Run progress: 30.68% complete, ETA 00:32:02
# Fork: 1 of 2
# Warmup Iteration   1: 4646.767 us/op
# Warmup Iteration   2: 4628.597 us/op
# Warmup Iteration   3: 4076.477 us/op
# Warmup Iteration   4: 3819.252 us/op
# Warmup Iteration   5: 4123.198 us/op
Iteration   1: 2844.780 us/op
Iteration   2: 2773.213 us/op
Iteration   3: 2718.222 us/op
Iteration   4: 2875.601 us/op
Iteration   5: 2770.196 us/op

# Run progress: 30.87% complete, ETA 00:31:57
# Fork: 2 of 2
# Warmup Iteration   1: 4579.611 us/op
# Warmup Iteration   2: 4621.343 us/op
# Warmup Iteration   3: 3983.005 us/op
# Warmup Iteration   4: 3938.978 us/op
# Warmup Iteration   5: 3847.785 us/op
Iteration   1: 2753.151 us/op
Iteration   2: 2788.767 us/op
Iteration   3: 2763.484 us/op
Iteration   4: 2745.866 us/op
Iteration   5: 2760.532 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2779.381 ±(99.9%) 71.101 us/op

  Histogram, us/op:
    [2700.000, 2712.500) = 0 
    [2712.500, 2725.000) = 1 
    [2725.000, 2737.500) = 0 
    [2737.500, 2750.000) = 1 
    [2750.000, 2762.500) = 2 
    [2762.500, 2775.000) = 3 
    [2775.000, 2787.500) = 0 
    [2787.500, 2800.000) = 1 
    [2800.000, 2812.500) = 0 
    [2812.500, 2825.000) = 0 
    [2825.000, 2837.500) = 0 
    [2837.500, 2850.000) = 1 
    [2850.000, 2862.500) = 0 
    [2862.500, 2875.000) = 0 
    [2875.000, 2887.500) = 1 

  Percentiles, us/op:
      p(0.0000) =   2718.222 us/op
     p(50.0000) =   2766.840 us/op
     p(90.0000) =   2872.519 us/op
     p(95.0000) =   2875.601 us/op
     p(99.0000) =   2875.601 us/op
     p(99.9000) =   2875.601 us/op
     p(99.9900) =   2875.601 us/op
     p(99.9990) =   2875.601 us/op
     p(99.9999) =   2875.601 us/op
    p(100.0000) =   2875.601 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.375)

# Run progress: 31.06% complete, ETA 00:31:52
# Fork: 1 of 2
# Warmup Iteration   1: 4715.442 us/op
# Warmup Iteration   2: 4629.086 us/op
# Warmup Iteration   3: 4050.848 us/op
# Warmup Iteration   4: 3985.538 us/op
# Warmup Iteration   5: 3989.622 us/op
Iteration   1: 2782.553 us/op
Iteration   2: 2806.920 us/op
Iteration   3: 2755.796 us/op
Iteration   4: 2862.054 us/op
Iteration   5: 2971.394 us/op

# Run progress: 31.25% complete, ETA 00:31:47
# Fork: 2 of 2
# Warmup Iteration   1: 4608.096 us/op
# Warmup Iteration   2: 4544.967 us/op
# Warmup Iteration   3: 4053.932 us/op
# Warmup Iteration   4: 4072.857 us/op
# Warmup Iteration   5: 3901.964 us/op
Iteration   1: 2753.422 us/op
Iteration   2: 2770.553 us/op
Iteration   3: 2708.929 us/op
Iteration   4: 2724.718 us/op
Iteration   5: 2749.433 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2788.577 ±(99.9%) 116.872 us/op

  Histogram, us/op:
    [2700.000, 2725.000) = 2 
    [2725.000, 2750.000) = 1 
    [2750.000, 2775.000) = 3 
    [2775.000, 2800.000) = 1 
    [2800.000, 2825.000) = 1 
    [2825.000, 2850.000) = 0 
    [2850.000, 2875.000) = 1 
    [2875.000, 2900.000) = 0 
    [2900.000, 2925.000) = 0 
    [2925.000, 2950.000) = 0 
    [2950.000, 2975.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2708.929 us/op
     p(50.0000) =   2763.175 us/op
     p(90.0000) =   2960.460 us/op
     p(95.0000) =   2971.394 us/op
     p(99.0000) =   2971.394 us/op
     p(99.9000) =   2971.394 us/op
     p(99.9900) =   2971.394 us/op
     p(99.9990) =   2971.394 us/op
     p(99.9999) =   2971.394 us/op
    p(100.0000) =   2971.394 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.5)

# Run progress: 31.44% complete, ETA 00:31:42
# Fork: 1 of 2
# Warmup Iteration   1: 4627.536 us/op
# Warmup Iteration   2: 5032.733 us/op
# Warmup Iteration   3: 3921.527 us/op
# Warmup Iteration   4: 3965.109 us/op
# Warmup Iteration   5: 3956.264 us/op
Iteration   1: 2816.563 us/op
Iteration   2: 2869.331 us/op
Iteration   3: 2810.859 us/op
Iteration   4: 2794.059 us/op
Iteration   5: 2773.613 us/op

# Run progress: 31.63% complete, ETA 00:31:36
# Fork: 2 of 2
# Warmup Iteration   1: 4703.633 us/op
# Warmup Iteration   2: 4665.404 us/op
# Warmup Iteration   3: 4360.164 us/op
# Warmup Iteration   4: 3905.701 us/op
# Warmup Iteration   5: 4046.067 us/op
Iteration   1: 2741.957 us/op
Iteration   2: 2860.881 us/op
Iteration   3: 2882.145 us/op
Iteration   4: 2787.143 us/op
Iteration   5: 2825.448 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2816.200 ±(99.9%) 67.504 us/op

  Histogram, us/op:
    [2700.000, 2712.500) = 0 
    [2712.500, 2725.000) = 0 
    [2725.000, 2737.500) = 0 
    [2737.500, 2750.000) = 1 
    [2750.000, 2762.500) = 0 
    [2762.500, 2775.000) = 1 
    [2775.000, 2787.500) = 1 
    [2787.500, 2800.000) = 1 
    [2800.000, 2812.500) = 1 
    [2812.500, 2825.000) = 1 
    [2825.000, 2837.500) = 1 
    [2837.500, 2850.000) = 0 
    [2850.000, 2862.500) = 1 
    [2862.500, 2875.000) = 1 
    [2875.000, 2887.500) = 1 

  Percentiles, us/op:
      p(0.0000) =   2741.957 us/op
     p(50.0000) =   2813.711 us/op
     p(90.0000) =   2880.864 us/op
     p(95.0000) =   2882.145 us/op
     p(99.0000) =   2882.145 us/op
     p(99.9000) =   2882.145 us/op
     p(99.9900) =   2882.145 us/op
     p(99.9990) =   2882.145 us/op
     p(99.9999) =   2882.145 us/op
    p(100.0000) =   2882.145 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.625)

# Run progress: 31.82% complete, ETA 00:31:31
# Fork: 1 of 2
# Warmup Iteration   1: 4968.370 us/op
# Warmup Iteration   2: 4643.637 us/op
# Warmup Iteration   3: 4172.588 us/op
# Warmup Iteration   4: 3947.175 us/op
# Warmup Iteration   5: 4067.287 us/op
Iteration   1: 2766.875 us/op
Iteration   2: 2807.850 us/op
Iteration   3: 2693.254 us/op
Iteration   4: 2762.134 us/op
Iteration   5: 2825.081 us/op

# Run progress: 32.01% complete, ETA 00:31:26
# Fork: 2 of 2
# Warmup Iteration   1: 4686.694 us/op
# Warmup Iteration   2: 4684.173 us/op
# Warmup Iteration   3: 3995.749 us/op
# Warmup Iteration   4: 3890.631 us/op
# Warmup Iteration   5: 3820.773 us/op
Iteration   1: 2764.509 us/op
Iteration   2: 2842.957 us/op
Iteration   3: 2746.379 us/op
Iteration   4: 2752.591 us/op
Iteration   5: 2815.327 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2777.696 ±(99.9%) 67.808 us/op

  Histogram, us/op:
    [2600.000, 2625.000) = 0 
    [2625.000, 2650.000) = 0 
    [2650.000, 2675.000) = 0 
    [2675.000, 2700.000) = 1 
    [2700.000, 2725.000) = 0 
    [2725.000, 2750.000) = 1 
    [2750.000, 2775.000) = 4 
    [2775.000, 2800.000) = 0 
    [2800.000, 2825.000) = 2 
    [2825.000, 2850.000) = 2 
    [2850.000, 2875.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2693.254 us/op
     p(50.0000) =   2765.692 us/op
     p(90.0000) =   2841.169 us/op
     p(95.0000) =   2842.957 us/op
     p(99.0000) =   2842.957 us/op
     p(99.9000) =   2842.957 us/op
     p(99.9900) =   2842.957 us/op
     p(99.9990) =   2842.957 us/op
     p(99.9999) =   2842.957 us/op
    p(100.0000) =   2842.957 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.75)

# Run progress: 32.20% complete, ETA 00:31:21
# Fork: 1 of 2
# Warmup Iteration   1: 4618.201 us/op
# Warmup Iteration   2: 4743.803 us/op
# Warmup Iteration   3: 4025.237 us/op
# Warmup Iteration   4: 4057.784 us/op
# Warmup Iteration   5: 3925.791 us/op
Iteration   1: 2767.562 us/op
Iteration   2: 2793.728 us/op
Iteration   3: 2808.920 us/op
Iteration   4: 2757.346 us/op
Iteration   5: 2779.705 us/op

# Run progress: 32.39% complete, ETA 00:31:16
# Fork: 2 of 2
# Warmup Iteration   1: 4833.084 us/op
# Warmup Iteration   2: 4670.620 us/op
# Warmup Iteration   3: 3941.410 us/op
# Warmup Iteration   4: 3902.723 us/op
# Warmup Iteration   5: 3870.097 us/op
Iteration   1: 2741.133 us/op
Iteration   2: 2785.866 us/op
Iteration   3: 2742.128 us/op
Iteration   4: 2780.193 us/op
Iteration   5: 2754.217 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2771.080 ±(99.9%) 33.961 us/op

  Histogram, us/op:
    [2740.000, 2745.000) = 2 
    [2745.000, 2750.000) = 0 
    [2750.000, 2755.000) = 1 
    [2755.000, 2760.000) = 1 
    [2760.000, 2765.000) = 0 
    [2765.000, 2770.000) = 1 
    [2770.000, 2775.000) = 0 
    [2775.000, 2780.000) = 1 
    [2780.000, 2785.000) = 1 
    [2785.000, 2790.000) = 1 
    [2790.000, 2795.000) = 1 
    [2795.000, 2800.000) = 0 
    [2800.000, 2805.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2741.133 us/op
     p(50.0000) =   2773.634 us/op
     p(90.0000) =   2807.401 us/op
     p(95.0000) =   2808.920 us/op
     p(99.0000) =   2808.920 us/op
     p(99.9000) =   2808.920 us/op
     p(99.9900) =   2808.920 us/op
     p(99.9990) =   2808.920 us/op
     p(99.9999) =   2808.920 us/op
    p(100.0000) =   2808.920 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 0.875)

# Run progress: 32.58% complete, ETA 00:31:10
# Fork: 1 of 2
# Warmup Iteration   1: 4587.435 us/op
# Warmup Iteration   2: 4818.719 us/op
# Warmup Iteration   3: 3906.540 us/op
# Warmup Iteration   4: 3914.133 us/op
# Warmup Iteration   5: 3844.121 us/op
Iteration   1: 2877.513 us/op
Iteration   2: 2771.575 us/op
Iteration   3: 2709.951 us/op
Iteration   4: 2769.275 us/op
Iteration   5: 2742.168 us/op

# Run progress: 32.77% complete, ETA 00:31:05
# Fork: 2 of 2
# Warmup Iteration   1: 4671.720 us/op
# Warmup Iteration   2: 4651.463 us/op
# Warmup Iteration   3: 3938.771 us/op
# Warmup Iteration   4: 3804.466 us/op
# Warmup Iteration   5: 3948.716 us/op
Iteration   1: 2773.154 us/op
Iteration   2: 2779.397 us/op
Iteration   3: 2863.321 us/op
Iteration   4: 2817.514 us/op
Iteration   5: 2821.256 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2792.512 ±(99.9%) 78.988 us/op

  Histogram, us/op:
    [2700.000, 2712.500) = 1 
    [2712.500, 2725.000) = 0 
    [2725.000, 2737.500) = 0 
    [2737.500, 2750.000) = 1 
    [2750.000, 2762.500) = 0 
    [2762.500, 2775.000) = 3 
    [2775.000, 2787.500) = 1 
    [2787.500, 2800.000) = 0 
    [2800.000, 2812.500) = 0 
    [2812.500, 2825.000) = 2 
    [2825.000, 2837.500) = 0 
    [2837.500, 2850.000) = 0 
    [2850.000, 2862.500) = 0 
    [2862.500, 2875.000) = 1 
    [2875.000, 2887.500) = 1 

  Percentiles, us/op:
      p(0.0000) =   2709.951 us/op
     p(50.0000) =   2776.275 us/op
     p(90.0000) =   2876.094 us/op
     p(95.0000) =   2877.513 us/op
     p(99.0000) =   2877.513 us/op
     p(99.9000) =   2877.513 us/op
     p(99.9900) =   2877.513 us/op
     p(99.9990) =   2877.513 us/op
     p(99.9999) =   2877.513 us/op
    p(100.0000) =   2877.513 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put
# Parameters: (initialCapacity = 2097152, loadFactor = 1)

# Run progress: 32.95% complete, ETA 00:31:00
# Fork: 1 of 2
# Warmup Iteration   1: 4549.552 us/op
# Warmup Iteration   2: 4764.636 us/op
# Warmup Iteration   3: 4036.411 us/op
# Warmup Iteration   4: 3922.686 us/op
# Warmup Iteration   5: 3873.648 us/op
Iteration   1: 2846.706 us/op
Iteration   2: 2861.718 us/op
Iteration   3: 2811.008 us/op
Iteration   4: 2929.599 us/op
Iteration   5: 2842.415 us/op

# Run progress: 33.14% complete, ETA 00:30:55
# Fork: 2 of 2
# Warmup Iteration   1: 4767.830 us/op
# Warmup Iteration   2: 4735.533 us/op
# Warmup Iteration   3: 4039.709 us/op
# Warmup Iteration   4: 3943.493 us/op
# Warmup Iteration   5: 3965.343 us/op
Iteration   1: 2963.732 us/op
Iteration   2: 2946.573 us/op
Iteration   3: 2810.236 us/op
Iteration   4: 2868.727 us/op
Iteration   5: 2844.994 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.put":
  N = 10
  mean =   2872.571 ±(99.9%) 83.092 us/op

  Histogram, us/op:
    [2800.000, 2812.500) = 2 
    [2812.500, 2825.000) = 0 
    [2825.000, 2837.500) = 0 
    [2837.500, 2850.000) = 3 
    [2850.000, 2862.500) = 1 
    [2862.500, 2875.000) = 1 
    [2875.000, 2887.500) = 0 
    [2887.500, 2900.000) = 0 
    [2900.000, 2912.500) = 0 
    [2912.500, 2925.000) = 0 
    [2925.000, 2937.500) = 1 
    [2937.500, 2950.000) = 1 
    [2950.000, 2962.500) = 0 
    [2962.500, 2975.000) = 1 
    [2975.000, 2987.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   2810.236 us/op
     p(50.0000) =   2854.212 us/op
     p(90.0000) =   2962.016 us/op
     p(95.0000) =   2963.732 us/op
     p(99.0000) =   2963.732 us/op
     p(99.9000) =   2963.732 us/op
     p(99.9900) =   2963.732 us/op
     p(99.9990) =   2963.732 us/op
     p(99.9999) =   2963.732 us/op
    p(100.0000) =   2963.732 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.125)

# Run progress: 33.33% complete, ETA 00:30:50
# Fork: 1 of 2
# Warmup Iteration   1: 3286.336 us/op
# Warmup Iteration   2: 2349.149 us/op
# Warmup Iteration   3: 2115.900 us/op
# Warmup Iteration   4: 1800.217 us/op
# Warmup Iteration   5: 1727.969 us/op
Iteration   1: 19.229 us/op
Iteration   2: 25.235 us/op
Iteration   3: 35.121 us/op
Iteration   4: 14.983 us/op
Iteration   5: 14.508 us/op

# Run progress: 33.52% complete, ETA 00:30:44
# Fork: 2 of 2
# Warmup Iteration   1: 3330.579 us/op
# Warmup Iteration   2: 2518.191 us/op
# Warmup Iteration   3: 2178.144 us/op
# Warmup Iteration   4: 1792.373 us/op
# Warmup Iteration   5: 1754.420 us/op
Iteration   1: 33.297 us/op
Iteration   2: 57.296 us/op
Iteration   3: 53.586 us/op
Iteration   4: 35.939 us/op
Iteration   5: 14.043 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     30.324 ±(99.9%) 23.806 us/op

  Histogram, us/op:
    [10.000, 15.000) = 3 
    [15.000, 20.000) = 1 
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 1 
    [30.000, 35.000) = 1 
    [35.000, 40.000) = 2 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     14.043 us/op
     p(50.0000) =     29.266 us/op
     p(90.0000) =     56.925 us/op
     p(95.0000) =     57.296 us/op
     p(99.0000) =     57.296 us/op
     p(99.9000) =     57.296 us/op
     p(99.9900) =     57.296 us/op
     p(99.9990) =     57.296 us/op
     p(99.9999) =     57.296 us/op
    p(100.0000) =     57.296 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.250)

# Run progress: 33.71% complete, ETA 00:30:39
# Fork: 1 of 2
# Warmup Iteration   1: 3353.269 us/op
# Warmup Iteration   2: 1992.541 us/op
# Warmup Iteration   3: 1893.547 us/op
# Warmup Iteration   4: 1545.678 us/op
# Warmup Iteration   5: 1611.734 us/op
Iteration   1: 16.002 us/op
Iteration   2: 17.760 us/op
Iteration   3: 29.327 us/op
Iteration   4: 15.212 us/op
Iteration   5: 18.692 us/op

# Run progress: 33.90% complete, ETA 00:30:34
# Fork: 2 of 2
# Warmup Iteration   1: 3047.091 us/op
# Warmup Iteration   2: 1908.574 us/op
# Warmup Iteration   3: 1935.982 us/op
# Warmup Iteration   4: 1530.351 us/op
# Warmup Iteration   5: 1615.564 us/op
Iteration   1: 29.426 us/op
Iteration   2: 16.874 us/op
Iteration   3: 30.638 us/op
Iteration   4: 19.610 us/op
Iteration   5: 18.398 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     21.194 ±(99.9%) 9.195 us/op

  Histogram, us/op:
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 3 
    [17.500, 20.000) = 4 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 2 
    [30.000, 32.500) = 1 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     15.212 us/op
     p(50.0000) =     18.545 us/op
     p(90.0000) =     30.517 us/op
     p(95.0000) =     30.638 us/op
     p(99.0000) =     30.638 us/op
     p(99.9000) =     30.638 us/op
     p(99.9900) =     30.638 us/op
     p(99.9990) =     30.638 us/op
     p(99.9999) =     30.638 us/op
    p(100.0000) =     30.638 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.375)

# Run progress: 34.09% complete, ETA 00:30:29
# Fork: 1 of 2
# Warmup Iteration   1: 2835.452 us/op
# Warmup Iteration   2: 1841.549 us/op
# Warmup Iteration   3: 1892.661 us/op
# Warmup Iteration   4: 1299.775 us/op
# Warmup Iteration   5: 1269.257 us/op
Iteration   1: 31.022 us/op
Iteration   2: 18.597 us/op
Iteration   3: 19.606 us/op
Iteration   4: 18.236 us/op
Iteration   5: 45.938 us/op

# Run progress: 34.28% complete, ETA 00:30:23
# Fork: 2 of 2
# Warmup Iteration   1: 3097.753 us/op
# Warmup Iteration   2: 1742.641 us/op
# Warmup Iteration   3: 1855.962 us/op
# Warmup Iteration   4: 1338.939 us/op
# Warmup Iteration   5: 1300.393 us/op
Iteration   1: 19.104 us/op
Iteration   2: 19.594 us/op
Iteration   3: 19.321 us/op
Iteration   4: 17.836 us/op
Iteration   5: 34.094 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     24.335 ±(99.9%) 14.399 us/op

  Histogram, us/op:
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 7 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 1 
    [32.500, 35.000) = 1 
    [35.000, 37.500) = 0 
    [37.500, 40.000) = 0 
    [40.000, 42.500) = 0 
    [42.500, 45.000) = 0 
    [45.000, 47.500) = 1 

  Percentiles, us/op:
      p(0.0000) =     17.836 us/op
     p(50.0000) =     19.458 us/op
     p(90.0000) =     44.754 us/op
     p(95.0000) =     45.938 us/op
     p(99.0000) =     45.938 us/op
     p(99.9000) =     45.938 us/op
     p(99.9900) =     45.938 us/op
     p(99.9990) =     45.938 us/op
     p(99.9999) =     45.938 us/op
    p(100.0000) =     45.938 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.5)

# Run progress: 34.47% complete, ETA 00:30:18
# Fork: 1 of 2
# Warmup Iteration   1: 3043.244 us/op
# Warmup Iteration   2: 1787.691 us/op
# Warmup Iteration   3: 1840.969 us/op
# Warmup Iteration   4: 1486.668 us/op
# Warmup Iteration   5: 1405.418 us/op
Iteration   1: 15.479 us/op
Iteration   2: 62.468 us/op
Iteration   3: 36.720 us/op
Iteration   4: 29.729 us/op
Iteration   5: 15.932 us/op

# Run progress: 34.66% complete, ETA 00:30:13
# Fork: 2 of 2
# Warmup Iteration   1: 3044.795 us/op
# Warmup Iteration   2: 1835.600 us/op
# Warmup Iteration   3: 2151.012 us/op
# Warmup Iteration   4: 1577.003 us/op
# Warmup Iteration   5: 1413.097 us/op
Iteration   1: 30.286 us/op
Iteration   2: 40.549 us/op
Iteration   3: 16.597 us/op
Iteration   4: 15.487 us/op
Iteration   5: 32.991 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     29.624 ±(99.9%) 22.635 us/op

  Histogram, us/op:
    [10.000, 15.000) = 0 
    [15.000, 20.000) = 4 
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 1 
    [30.000, 35.000) = 2 
    [35.000, 40.000) = 1 
    [40.000, 45.000) = 1 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 0 
    [55.000, 60.000) = 0 
    [60.000, 65.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     15.479 us/op
     p(50.0000) =     30.008 us/op
     p(90.0000) =     60.276 us/op
     p(95.0000) =     62.468 us/op
     p(99.0000) =     62.468 us/op
     p(99.9000) =     62.468 us/op
     p(99.9900) =     62.468 us/op
     p(99.9990) =     62.468 us/op
     p(99.9999) =     62.468 us/op
    p(100.0000) =     62.468 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.625)

# Run progress: 34.85% complete, ETA 00:30:08
# Fork: 1 of 2
# Warmup Iteration   1: 2719.963 us/op
# Warmup Iteration   2: 1530.081 us/op
# Warmup Iteration   3: 1515.476 us/op
# Warmup Iteration   4: 1450.247 us/op
# Warmup Iteration   5: 1180.842 us/op
Iteration   1: 14.244 us/op
Iteration   2: 30.857 us/op
Iteration   3: 15.658 us/op
Iteration   4: 28.169 us/op
Iteration   5: 18.371 us/op

# Run progress: 35.04% complete, ETA 00:30:02
# Fork: 2 of 2
# Warmup Iteration   1: 2781.021 us/op
# Warmup Iteration   2: 1731.241 us/op
# Warmup Iteration   3: 1339.320 us/op
# Warmup Iteration   4: 1292.585 us/op
# Warmup Iteration   5: 1235.340 us/op
Iteration   1: 17.148 us/op
Iteration   2: 41.336 us/op
Iteration   3: 31.676 us/op
Iteration   4: 17.573 us/op
Iteration   5: 33.139 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     24.817 ±(99.9%) 14.123 us/op

  Histogram, us/op:
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 1 
    [15.000, 17.500) = 2 
    [17.500, 20.000) = 2 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 1 
    [30.000, 32.500) = 2 
    [32.500, 35.000) = 1 
    [35.000, 37.500) = 0 
    [37.500, 40.000) = 0 
    [40.000, 42.500) = 1 
    [42.500, 45.000) = 0 
    [45.000, 47.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     14.244 us/op
     p(50.0000) =     23.270 us/op
     p(90.0000) =     40.516 us/op
     p(95.0000) =     41.336 us/op
     p(99.0000) =     41.336 us/op
     p(99.9000) =     41.336 us/op
     p(99.9900) =     41.336 us/op
     p(99.9990) =     41.336 us/op
     p(99.9999) =     41.336 us/op
    p(100.0000) =     41.336 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.75)

# Run progress: 35.23% complete, ETA 00:29:57
# Fork: 1 of 2
# Warmup Iteration   1: 3086.406 us/op
# Warmup Iteration   2: 1602.293 us/op
# Warmup Iteration   3: 1528.645 us/op
# Warmup Iteration   4: 1606.174 us/op
# Warmup Iteration   5: 1266.977 us/op
Iteration   1: 48.924 us/op
Iteration   2: 46.792 us/op
Iteration   3: 16.948 us/op
Iteration   4: 19.801 us/op
Iteration   5: 15.674 us/op

# Run progress: 35.42% complete, ETA 00:29:52
# Fork: 2 of 2
# Warmup Iteration   1: 2946.660 us/op
# Warmup Iteration   2: 1602.739 us/op
# Warmup Iteration   3: 1544.915 us/op
# Warmup Iteration   4: 1586.301 us/op
# Warmup Iteration   5: 1257.186 us/op
Iteration   1: 28.422 us/op
Iteration   2: 43.470 us/op
Iteration   3: 50.651 us/op
Iteration   4: 19.182 us/op
Iteration   5: 15.895 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     30.576 ±(99.9%) 22.777 us/op

  Histogram, us/op:
    [10.000, 15.000) = 0 
    [15.000, 20.000) = 5 
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 1 
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 1 
    [45.000, 50.000) = 2 
    [50.000, 55.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     15.674 us/op
     p(50.0000) =     24.112 us/op
     p(90.0000) =     50.478 us/op
     p(95.0000) =     50.651 us/op
     p(99.0000) =     50.651 us/op
     p(99.9000) =     50.651 us/op
     p(99.9900) =     50.651 us/op
     p(99.9990) =     50.651 us/op
     p(99.9999) =     50.651 us/op
    p(100.0000) =     50.651 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.875)

# Run progress: 35.61% complete, ETA 00:29:47
# Fork: 1 of 2
# Warmup Iteration   1: 2874.252 us/op
# Warmup Iteration   2: 1670.103 us/op
# Warmup Iteration   3: 1562.427 us/op
# Warmup Iteration   4: 1586.146 us/op
# Warmup Iteration   5: 1412.611 us/op
Iteration   1: 13.361 us/op
Iteration   2: 55.124 us/op
Iteration   3: 29.109 us/op
Iteration   4: 48.919 us/op
Iteration   5: 16.559 us/op

# Run progress: 35.80% complete, ETA 00:29:41
# Fork: 2 of 2
# Warmup Iteration   1: 3067.864 us/op
# Warmup Iteration   2: 1674.115 us/op
# Warmup Iteration   3: 1780.695 us/op
# Warmup Iteration   4: 1292.571 us/op
# Warmup Iteration   5: 1311.630 us/op
Iteration   1: 17.378 us/op
Iteration   2: 48.156 us/op
Iteration   3: 15.551 us/op
Iteration   4: 15.633 us/op
Iteration   5: 17.591 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     27.738 ±(99.9%) 24.967 us/op

  Histogram, us/op:
    [10.000, 15.000) = 1 
    [15.000, 20.000) = 5 
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 1 
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 2 
    [50.000, 55.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     13.361 us/op
     p(50.0000) =     17.485 us/op
     p(90.0000) =     54.504 us/op
     p(95.0000) =     55.124 us/op
     p(99.0000) =     55.124 us/op
     p(99.9000) =     55.124 us/op
     p(99.9900) =     55.124 us/op
     p(99.9990) =     55.124 us/op
     p(99.9999) =     55.124 us/op
    p(100.0000) =     55.124 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 16, loadFactor = 1)

# Run progress: 35.98% complete, ETA 00:29:36
# Fork: 1 of 2
# Warmup Iteration   1: 2681.571 us/op
# Warmup Iteration   2: 1891.159 us/op
# Warmup Iteration   3: 1972.214 us/op
# Warmup Iteration   4: 1363.730 us/op
# Warmup Iteration   5: 1345.954 us/op
Iteration   1: 15.512 us/op
Iteration   2: 29.756 us/op
Iteration   3: 16.447 us/op
Iteration   4: 14.184 us/op
Iteration   5: 47.625 us/op

# Run progress: 36.17% complete, ETA 00:29:31
# Fork: 2 of 2
# Warmup Iteration   1: 2855.893 us/op
# Warmup Iteration   2: 1717.755 us/op
# Warmup Iteration   3: 1648.271 us/op
# Warmup Iteration   4: 1697.564 us/op
# Warmup Iteration   5: 1398.925 us/op
Iteration   1: 27.899 us/op
Iteration   2: 63.523 us/op
Iteration   3: 14.366 us/op
Iteration   4: 21.685 us/op
Iteration   5: 14.940 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     26.594 ±(99.9%) 25.233 us/op

  Histogram, us/op:
    [10.000, 15.000) = 3 
    [15.000, 20.000) = 2 
    [20.000, 25.000) = 1 
    [25.000, 30.000) = 2 
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 1 
    [50.000, 55.000) = 0 
    [55.000, 60.000) = 0 
    [60.000, 65.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     14.184 us/op
     p(50.0000) =     19.066 us/op
     p(90.0000) =     61.933 us/op
     p(95.0000) =     63.523 us/op
     p(99.0000) =     63.523 us/op
     p(99.9000) =     63.523 us/op
     p(99.9900) =     63.523 us/op
     p(99.9990) =     63.523 us/op
     p(99.9999) =     63.523 us/op
    p(100.0000) =     63.523 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.125)

# Run progress: 36.36% complete, ETA 00:29:26
# Fork: 1 of 2
# Warmup Iteration   1: 3618.914 us/op
# Warmup Iteration   2: 2537.073 us/op
# Warmup Iteration   3: 2524.061 us/op
# Warmup Iteration   4: 1930.829 us/op
# Warmup Iteration   5: 1863.793 us/op
Iteration   1: 33.167 us/op
Iteration   2: 20.729 us/op
Iteration   3: 20.062 us/op
Iteration   4: 120.825 us/op
Iteration   5: 33.529 us/op

# Run progress: 36.55% complete, ETA 00:29:20
# Fork: 2 of 2
# Warmup Iteration   1: 3229.898 us/op
# Warmup Iteration   2: 2550.993 us/op
# Warmup Iteration   3: 2705.795 us/op
# Warmup Iteration   4: 2064.282 us/op
# Warmup Iteration   5: 1947.017 us/op
Iteration   1: 21.289 us/op
Iteration   2: 35.460 us/op
Iteration   3: 34.948 us/op
Iteration   4: 125.315 us/op
Iteration   5: 21.240 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     46.656 ±(99.9%) 61.668 us/op

  Histogram, us/op:
    [  0.000,  12.500) = 0 
    [ 12.500,  25.000) = 4 
    [ 25.000,  37.500) = 4 
    [ 37.500,  50.000) = 0 
    [ 50.000,  62.500) = 0 
    [ 62.500,  75.000) = 0 
    [ 75.000,  87.500) = 0 
    [ 87.500, 100.000) = 0 
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 1 
    [125.000, 137.500) = 1 
    [137.500, 150.000) = 0 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 0 
    [175.000, 187.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     20.062 us/op
     p(50.0000) =     33.348 us/op
     p(90.0000) =    124.866 us/op
     p(95.0000) =    125.315 us/op
     p(99.0000) =    125.315 us/op
     p(99.9000) =    125.315 us/op
     p(99.9900) =    125.315 us/op
     p(99.9990) =    125.315 us/op
     p(99.9999) =    125.315 us/op
    p(100.0000) =    125.315 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.250)

# Run progress: 36.74% complete, ETA 00:29:15
# Fork: 1 of 2
# Warmup Iteration   1: 3228.882 us/op
# Warmup Iteration   2: 1915.083 us/op
# Warmup Iteration   3: 1849.815 us/op
# Warmup Iteration   4: 1506.895 us/op
# Warmup Iteration   5: 1554.376 us/op
Iteration   1: 48.178 us/op
Iteration   2: 17.575 us/op
Iteration   3: 15.990 us/op
Iteration   4: 33.136 us/op
Iteration   5: 37.384 us/op

# Run progress: 36.93% complete, ETA 00:29:10
# Fork: 2 of 2
# Warmup Iteration   1: 3235.206 us/op
# Warmup Iteration   2: 2047.202 us/op
# Warmup Iteration   3: 1895.724 us/op
# Warmup Iteration   4: 1508.102 us/op
# Warmup Iteration   5: 1616.218 us/op
Iteration   1: 29.167 us/op
Iteration   2: 22.953 us/op
Iteration   3: 17.523 us/op
Iteration   4: 15.942 us/op
Iteration   5: 16.103 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     25.395 ±(99.9%) 16.942 us/op

  Histogram, us/op:
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 3 
    [17.500, 20.000) = 2 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 1 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 1 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 1 
    [35.000, 37.500) = 1 
    [37.500, 40.000) = 0 
    [40.000, 42.500) = 0 
    [42.500, 45.000) = 0 
    [45.000, 47.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     15.942 us/op
     p(50.0000) =     20.264 us/op
     p(90.0000) =     47.099 us/op
     p(95.0000) =     48.178 us/op
     p(99.0000) =     48.178 us/op
     p(99.9000) =     48.178 us/op
     p(99.9900) =     48.178 us/op
     p(99.9990) =     48.178 us/op
     p(99.9999) =     48.178 us/op
    p(100.0000) =     48.178 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.375)

# Run progress: 37.12% complete, ETA 00:29:05
# Fork: 1 of 2
# Warmup Iteration   1: 2983.440 us/op
# Warmup Iteration   2: 1689.131 us/op
# Warmup Iteration   3: 1713.437 us/op
# Warmup Iteration   4: 1376.813 us/op
# Warmup Iteration   5: 1327.719 us/op
Iteration   1: 16.765 us/op
Iteration   2: 42.627 us/op
Iteration   3: 33.761 us/op
Iteration   4: 17.059 us/op
Iteration   5: 16.883 us/op

# Run progress: 37.31% complete, ETA 00:28:59
# Fork: 2 of 2
# Warmup Iteration   1: 2778.638 us/op
# Warmup Iteration   2: 1741.314 us/op
# Warmup Iteration   3: 1506.556 us/op
# Warmup Iteration   4: 1612.977 us/op
# Warmup Iteration   5: 1273.932 us/op
Iteration   1: 43.032 us/op
Iteration   2: 79.573 us/op
Iteration   3: 32.434 us/op
Iteration   4: 15.902 us/op
Iteration   5: 16.719 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     31.476 ±(99.9%) 30.550 us/op

  Histogram, us/op:
    [10.000, 15.000) = 0 
    [15.000, 20.000) = 5 
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 0 
    [30.000, 35.000) = 2 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 2 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 0 
    [55.000, 60.000) = 0 
    [60.000, 65.000) = 0 
    [65.000, 70.000) = 0 
    [70.000, 75.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     15.902 us/op
     p(50.0000) =     24.746 us/op
     p(90.0000) =     75.919 us/op
     p(95.0000) =     79.573 us/op
     p(99.0000) =     79.573 us/op
     p(99.9000) =     79.573 us/op
     p(99.9900) =     79.573 us/op
     p(99.9990) =     79.573 us/op
     p(99.9999) =     79.573 us/op
    p(100.0000) =     79.573 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.5)

# Run progress: 37.50% complete, ETA 00:28:54
# Fork: 1 of 2
# Warmup Iteration   1: 2904.334 us/op
# Warmup Iteration   2: 1828.116 us/op
# Warmup Iteration   3: 1794.875 us/op
# Warmup Iteration   4: 1655.448 us/op
# Warmup Iteration   5: 1469.368 us/op
Iteration   1: 14.939 us/op
Iteration   2: 13.203 us/op
Iteration   3: 14.184 us/op
Iteration   4: 15.277 us/op
Iteration   5: 16.274 us/op

# Run progress: 37.69% complete, ETA 00:28:49
# Fork: 2 of 2
# Warmup Iteration   1: 2931.302 us/op
# Warmup Iteration   2: 1851.217 us/op
# Warmup Iteration   3: 2072.066 us/op
# Warmup Iteration   4: 1455.406 us/op
# Warmup Iteration   5: 1480.664 us/op
Iteration   1: 30.223 us/op
Iteration   2: 41.033 us/op
Iteration   3: 12.513 us/op
Iteration   4: 32.887 us/op
Iteration   5: 30.396 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     22.093 ±(99.9%) 15.737 us/op

  Histogram, us/op:
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 4 
    [15.000, 17.500) = 2 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 2 
    [32.500, 35.000) = 1 
    [35.000, 37.500) = 0 
    [37.500, 40.000) = 0 
    [40.000, 42.500) = 1 
    [42.500, 45.000) = 0 
    [45.000, 47.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     12.513 us/op
     p(50.0000) =     15.776 us/op
     p(90.0000) =     40.218 us/op
     p(95.0000) =     41.033 us/op
     p(99.0000) =     41.033 us/op
     p(99.9000) =     41.033 us/op
     p(99.9900) =     41.033 us/op
     p(99.9990) =     41.033 us/op
     p(99.9999) =     41.033 us/op
    p(100.0000) =     41.033 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.625)

# Run progress: 37.88% complete, ETA 00:28:43
# Fork: 1 of 2
# Warmup Iteration   1: 2891.764 us/op
# Warmup Iteration   2: 1544.654 us/op
# Warmup Iteration   3: 1658.567 us/op
# Warmup Iteration   4: 1262.429 us/op
# Warmup Iteration   5: 1258.426 us/op
Iteration   1: 14.714 us/op
Iteration   2: 16.698 us/op
Iteration   3: 29.048 us/op
Iteration   4: 12.976 us/op
Iteration   5: 15.060 us/op

# Run progress: 38.07% complete, ETA 00:28:38
# Fork: 2 of 2
# Warmup Iteration   1: 2755.721 us/op
# Warmup Iteration   2: 1691.726 us/op
# Warmup Iteration   3: 1666.692 us/op
# Warmup Iteration   4: 1180.422 us/op
# Warmup Iteration   5: 1183.436 us/op
Iteration   1: 13.758 us/op
Iteration   2: 28.990 us/op
Iteration   3: 30.244 us/op
Iteration   4: 35.563 us/op
Iteration   5: 15.206 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     21.226 ±(99.9%) 13.038 us/op

  Histogram, us/op:
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 3 
    [15.000, 17.500) = 3 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 2 
    [30.000, 32.500) = 1 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 1 

  Percentiles, us/op:
      p(0.0000) =     12.976 us/op
     p(50.0000) =     15.952 us/op
     p(90.0000) =     35.031 us/op
     p(95.0000) =     35.563 us/op
     p(99.0000) =     35.563 us/op
     p(99.9000) =     35.563 us/op
     p(99.9900) =     35.563 us/op
     p(99.9990) =     35.563 us/op
     p(99.9999) =     35.563 us/op
    p(100.0000) =     35.563 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.75)

# Run progress: 38.26% complete, ETA 00:28:33
# Fork: 1 of 2
# Warmup Iteration   1: 2721.649 us/op
# Warmup Iteration   2: 1633.948 us/op
# Warmup Iteration   3: 1534.346 us/op
# Warmup Iteration   4: 1621.861 us/op
# Warmup Iteration   5: 1302.459 us/op
Iteration   1: 12.980 us/op
Iteration   2: 14.866 us/op
Iteration   3: 16.122 us/op
Iteration   4: 17.655 us/op
Iteration   5: 17.366 us/op

# Run progress: 38.45% complete, ETA 00:28:28
# Fork: 2 of 2
# Warmup Iteration   1: 3365.778 us/op
# Warmup Iteration   2: 1613.362 us/op
# Warmup Iteration   3: 1521.507 us/op
# Warmup Iteration   4: 1653.628 us/op
# Warmup Iteration   5: 1263.715 us/op
Iteration   1: 25.971 us/op
Iteration   2: 40.892 us/op
Iteration   3: 14.991 us/op
Iteration   4: 31.020 us/op
Iteration   5: 16.423 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     20.829 ±(99.9%) 13.595 us/op

  Histogram, us/op:
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 3 
    [15.000, 17.500) = 3 
    [17.500, 20.000) = 1 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 1 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 1 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 0 
    [37.500, 40.000) = 0 
    [40.000, 42.500) = 1 
    [42.500, 45.000) = 0 
    [45.000, 47.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     12.980 us/op
     p(50.0000) =     16.895 us/op
     p(90.0000) =     39.905 us/op
     p(95.0000) =     40.892 us/op
     p(99.0000) =     40.892 us/op
     p(99.9000) =     40.892 us/op
     p(99.9900) =     40.892 us/op
     p(99.9990) =     40.892 us/op
     p(99.9999) =     40.892 us/op
    p(100.0000) =     40.892 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.875)

# Run progress: 38.64% complete, ETA 00:28:22
# Fork: 1 of 2
# Warmup Iteration   1: 3043.966 us/op
# Warmup Iteration   2: 1698.586 us/op
# Warmup Iteration   3: 1535.058 us/op
# Warmup Iteration   4: 1598.348 us/op
# Warmup Iteration   5: 1307.063 us/op
Iteration   1: 23.992 us/op
Iteration   2: 35.452 us/op
Iteration   3: 12.238 us/op
Iteration   4: 11.258 us/op
Iteration   5: 12.191 us/op

# Run progress: 38.83% complete, ETA 00:28:17
# Fork: 2 of 2
# Warmup Iteration   1: 2800.502 us/op
# Warmup Iteration   2: 1755.431 us/op
# Warmup Iteration   3: 1578.205 us/op
# Warmup Iteration   4: 1641.818 us/op
# Warmup Iteration   5: 1328.788 us/op
Iteration   1: 12.980 us/op
Iteration   2: 12.221 us/op
Iteration   3: 11.815 us/op
Iteration   4: 13.423 us/op
Iteration   5: 12.591 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     15.816 ±(99.9%) 11.843 us/op

  Histogram, us/op:
    [10.000, 12.500) = 5 
    [12.500, 15.000) = 3 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 1 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 1 

  Percentiles, us/op:
      p(0.0000) =     11.258 us/op
     p(50.0000) =     12.415 us/op
     p(90.0000) =     34.306 us/op
     p(95.0000) =     35.452 us/op
     p(99.0000) =     35.452 us/op
     p(99.9000) =     35.452 us/op
     p(99.9900) =     35.452 us/op
     p(99.9990) =     35.452 us/op
     p(99.9999) =     35.452 us/op
    p(100.0000) =     35.452 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100, loadFactor = 1)

# Run progress: 39.02% complete, ETA 00:28:12
# Fork: 1 of 2
# Warmup Iteration   1: 3395.505 us/op
# Warmup Iteration   2: 1817.111 us/op
# Warmup Iteration   3: 1912.999 us/op
# Warmup Iteration   4: 1425.245 us/op
# Warmup Iteration   5: 1382.691 us/op
Iteration   1: 11.474 us/op
Iteration   2: 35.211 us/op
Iteration   3: 37.554 us/op
Iteration   4: 12.701 us/op
Iteration   5: 15.698 us/op

# Run progress: 39.20% complete, ETA 00:28:07
# Fork: 2 of 2
# Warmup Iteration   1: 3016.013 us/op
# Warmup Iteration   2: 2127.389 us/op
# Warmup Iteration   3: 1401.196 us/op
# Warmup Iteration   4: 1349.956 us/op
# Warmup Iteration   5: 1338.178 us/op
Iteration   1: 25.988 us/op
Iteration   2: 10.871 us/op
Iteration   3: 45.708 us/op
Iteration   4: 12.331 us/op
Iteration   5: 28.182 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     23.572 ±(99.9%) 19.271 us/op

  Histogram, us/op:
    [10.000, 12.500) = 3 
    [12.500, 15.000) = 1 
    [15.000, 17.500) = 1 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 1 
    [27.500, 30.000) = 1 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 1 
    [37.500, 40.000) = 1 
    [40.000, 42.500) = 0 
    [42.500, 45.000) = 0 
    [45.000, 47.500) = 1 

  Percentiles, us/op:
      p(0.0000) =     10.871 us/op
     p(50.0000) =     20.843 us/op
     p(90.0000) =     44.893 us/op
     p(95.0000) =     45.708 us/op
     p(99.0000) =     45.708 us/op
     p(99.9000) =     45.708 us/op
     p(99.9900) =     45.708 us/op
     p(99.9990) =     45.708 us/op
     p(99.9999) =     45.708 us/op
    p(100.0000) =     45.708 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.125)

# Run progress: 39.39% complete, ETA 00:28:01
# Fork: 1 of 2
# Warmup Iteration   1: 3422.569 us/op
# Warmup Iteration   2: 2345.344 us/op
# Warmup Iteration   3: 2243.318 us/op
# Warmup Iteration   4: 1854.138 us/op
# Warmup Iteration   5: 1717.661 us/op
Iteration   1: 12.570 us/op
Iteration   2: 12.550 us/op
Iteration   3: 12.881 us/op
Iteration   4: 12.794 us/op
Iteration   5: 29.409 us/op

# Run progress: 39.58% complete, ETA 00:27:56
# Fork: 2 of 2
# Warmup Iteration   1: 3483.842 us/op
# Warmup Iteration   2: 2515.583 us/op
# Warmup Iteration   3: 2293.918 us/op
# Warmup Iteration   4: 1763.167 us/op
# Warmup Iteration   5: 1676.803 us/op
Iteration   1: 25.548 us/op
Iteration   2: 12.187 us/op
Iteration   3: 12.247 us/op
Iteration   4: 12.174 us/op
Iteration   5: 11.697 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     15.406 ±(99.9%) 9.731 us/op

  Histogram, us/op:
    [10.000, 11.250) = 0 
    [11.250, 12.500) = 4 
    [12.500, 13.750) = 4 
    [13.750, 15.000) = 0 
    [15.000, 16.250) = 0 
    [16.250, 17.500) = 0 
    [17.500, 18.750) = 0 
    [18.750, 20.000) = 0 
    [20.000, 21.250) = 0 
    [21.250, 22.500) = 0 
    [22.500, 23.750) = 0 
    [23.750, 25.000) = 0 
    [25.000, 26.250) = 1 
    [26.250, 27.500) = 0 
    [27.500, 28.750) = 0 

  Percentiles, us/op:
      p(0.0000) =     11.697 us/op
     p(50.0000) =     12.560 us/op
     p(90.0000) =     29.023 us/op
     p(95.0000) =     29.409 us/op
     p(99.0000) =     29.409 us/op
     p(99.9000) =     29.409 us/op
     p(99.9900) =     29.409 us/op
     p(99.9990) =     29.409 us/op
     p(99.9999) =     29.409 us/op
    p(100.0000) =     29.409 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.250)

# Run progress: 39.77% complete, ETA 00:27:51
# Fork: 1 of 2
# Warmup Iteration   1: 3253.932 us/op
# Warmup Iteration   2: 2117.461 us/op
# Warmup Iteration   3: 1767.592 us/op
# Warmup Iteration   4: 1473.528 us/op
# Warmup Iteration   5: 1538.374 us/op
Iteration   1: 12.609 us/op
Iteration   2: 33.147 us/op
Iteration   3: 13.337 us/op
Iteration   4: 52.614 us/op
Iteration   5: 13.522 us/op

# Run progress: 39.96% complete, ETA 00:27:46
# Fork: 2 of 2
# Warmup Iteration   1: 3252.118 us/op
# Warmup Iteration   2: 2032.546 us/op
# Warmup Iteration   3: 1657.166 us/op
# Warmup Iteration   4: 1543.613 us/op
# Warmup Iteration   5: 1536.182 us/op
Iteration   1: 13.625 us/op
Iteration   2: 27.924 us/op
Iteration   3: 27.528 us/op
Iteration   4: 11.707 us/op
Iteration   5: 13.336 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     21.935 ±(99.9%) 20.242 us/op

  Histogram, us/op:
    [10.000, 15.000) = 6 
    [15.000, 20.000) = 0 
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 2 
    [30.000, 35.000) = 1 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     11.707 us/op
     p(50.0000) =     13.574 us/op
     p(90.0000) =     50.667 us/op
     p(95.0000) =     52.614 us/op
     p(99.0000) =     52.614 us/op
     p(99.9000) =     52.614 us/op
     p(99.9900) =     52.614 us/op
     p(99.9990) =     52.614 us/op
     p(99.9999) =     52.614 us/op
    p(100.0000) =     52.614 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.375)

# Run progress: 40.15% complete, ETA 00:27:40
# Fork: 1 of 2
# Warmup Iteration   1: 2843.832 us/op
# Warmup Iteration   2: 1684.022 us/op
# Warmup Iteration   3: 1748.951 us/op
# Warmup Iteration   4: 1328.728 us/op
# Warmup Iteration   5: 1301.110 us/op
Iteration   1: 26.442 us/op
Iteration   2: 13.113 us/op
Iteration   3: 28.560 us/op
Iteration   4: 44.217 us/op
Iteration   5: 25.572 us/op

# Run progress: 40.34% complete, ETA 00:27:35
# Fork: 2 of 2
# Warmup Iteration   1: 3047.221 us/op
# Warmup Iteration   2: 1705.770 us/op
# Warmup Iteration   3: 1671.256 us/op
# Warmup Iteration   4: 1418.780 us/op
# Warmup Iteration   5: 1304.663 us/op
Iteration   1: 11.130 us/op
Iteration   2: 42.713 us/op
Iteration   3: 14.092 us/op
Iteration   4: 12.685 us/op
Iteration   5: 30.628 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     24.915 ±(99.9%) 18.407 us/op

  Histogram, us/op:
    [10.000, 12.500) = 1 
    [12.500, 15.000) = 3 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 2 
    [27.500, 30.000) = 1 
    [30.000, 32.500) = 1 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 0 
    [37.500, 40.000) = 0 
    [40.000, 42.500) = 0 
    [42.500, 45.000) = 2 
    [45.000, 47.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     11.130 us/op
     p(50.0000) =     26.007 us/op
     p(90.0000) =     44.067 us/op
     p(95.0000) =     44.217 us/op
     p(99.0000) =     44.217 us/op
     p(99.9000) =     44.217 us/op
     p(99.9900) =     44.217 us/op
     p(99.9990) =     44.217 us/op
     p(99.9999) =     44.217 us/op
    p(100.0000) =     44.217 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.5)

# Run progress: 40.53% complete, ETA 00:27:30
# Fork: 1 of 2
# Warmup Iteration   1: 2762.677 us/op
# Warmup Iteration   2: 1873.955 us/op
# Warmup Iteration   3: 1826.185 us/op
# Warmup Iteration   4: 1432.363 us/op
# Warmup Iteration   5: 1467.294 us/op
Iteration   1: 9.648 us/op
Iteration   2: 27.757 us/op
Iteration   3: 13.398 us/op
Iteration   4: 11.781 us/op
Iteration   5: 45.729 us/op

# Run progress: 40.72% complete, ETA 00:27:25
# Fork: 2 of 2
# Warmup Iteration   1: 3126.790 us/op
# Warmup Iteration   2: 1802.690 us/op
# Warmup Iteration   3: 1853.185 us/op
# Warmup Iteration   4: 1425.457 us/op
# Warmup Iteration   5: 1391.168 us/op
Iteration   1: 9.662 us/op
Iteration   2: 12.679 us/op
Iteration   3: 45.230 us/op
Iteration   4: 13.430 us/op
Iteration   5: 29.755 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     21.907 ±(99.9%) 21.614 us/op

  Histogram, us/op:
    [ 0.000,  5.000) = 0 
    [ 5.000, 10.000) = 2 
    [10.000, 15.000) = 4 
    [15.000, 20.000) = 0 
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 2 
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 0 

  Percentiles, us/op:
      p(0.0000) =      9.648 us/op
     p(50.0000) =     13.414 us/op
     p(90.0000) =     45.679 us/op
     p(95.0000) =     45.729 us/op
     p(99.0000) =     45.729 us/op
     p(99.9000) =     45.729 us/op
     p(99.9900) =     45.729 us/op
     p(99.9990) =     45.729 us/op
     p(99.9999) =     45.729 us/op
    p(100.0000) =     45.729 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.625)

# Run progress: 40.91% complete, ETA 00:27:19
# Fork: 1 of 2
# Warmup Iteration   1: 2805.149 us/op
# Warmup Iteration   2: 1789.333 us/op
# Warmup Iteration   3: 1405.974 us/op
# Warmup Iteration   4: 1190.437 us/op
# Warmup Iteration   5: 1173.211 us/op
Iteration   1: 37.555 us/op
Iteration   2: 10.646 us/op
Iteration   3: 10.698 us/op
Iteration   4: 27.487 us/op
Iteration   5: 27.218 us/op

# Run progress: 41.10% complete, ETA 00:27:14
# Fork: 2 of 2
# Warmup Iteration   1: 2701.840 us/op
# Warmup Iteration   2: 1532.227 us/op
# Warmup Iteration   3: 1644.039 us/op
# Warmup Iteration   4: 1208.487 us/op
# Warmup Iteration   5: 1198.355 us/op
Iteration   1: 11.594 us/op
Iteration   2: 36.524 us/op
Iteration   3: 10.107 us/op
Iteration   4: 41.649 us/op
Iteration   5: 12.415 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     22.589 ±(99.9%) 19.460 us/op

  Histogram, us/op:
    [10.000, 12.500) = 5 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 2 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 1 
    [37.500, 40.000) = 1 
    [40.000, 42.500) = 1 
    [42.500, 45.000) = 0 
    [45.000, 47.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     10.107 us/op
     p(50.0000) =     19.816 us/op
     p(90.0000) =     41.240 us/op
     p(95.0000) =     41.649 us/op
     p(99.0000) =     41.649 us/op
     p(99.9000) =     41.649 us/op
     p(99.9900) =     41.649 us/op
     p(99.9990) =     41.649 us/op
     p(99.9999) =     41.649 us/op
    p(100.0000) =     41.649 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.75)

# Run progress: 41.29% complete, ETA 00:27:09
# Fork: 1 of 2
# Warmup Iteration   1: 3072.067 us/op
# Warmup Iteration   2: 1568.780 us/op
# Warmup Iteration   3: 1751.697 us/op
# Warmup Iteration   4: 1262.824 us/op
# Warmup Iteration   5: 1234.870 us/op
Iteration   1: 11.616 us/op
Iteration   2: 13.144 us/op
Iteration   3: 10.729 us/op
Iteration   4: 26.907 us/op
Iteration   5: 32.135 us/op

# Run progress: 41.48% complete, ETA 00:27:03
# Fork: 2 of 2
# Warmup Iteration   1: 2880.942 us/op
# Warmup Iteration   2: 1638.562 us/op
# Warmup Iteration   3: 1539.327 us/op
# Warmup Iteration   4: 1639.596 us/op
# Warmup Iteration   5: 1252.472 us/op
Iteration   1: 11.279 us/op
Iteration   2: 10.781 us/op
Iteration   3: 31.756 us/op
Iteration   4: 13.018 us/op
Iteration   5: 16.780 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     17.815 ±(99.9%) 13.417 us/op

  Histogram, us/op:
    [10.000, 12.500) = 4 
    [12.500, 15.000) = 2 
    [15.000, 17.500) = 1 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 1 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 2 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     10.729 us/op
     p(50.0000) =     13.081 us/op
     p(90.0000) =     32.097 us/op
     p(95.0000) =     32.135 us/op
     p(99.0000) =     32.135 us/op
     p(99.9000) =     32.135 us/op
     p(99.9900) =     32.135 us/op
     p(99.9990) =     32.135 us/op
     p(99.9999) =     32.135 us/op
    p(100.0000) =     32.135 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.875)

# Run progress: 41.67% complete, ETA 00:26:58
# Fork: 1 of 2
# Warmup Iteration   1: 2865.268 us/op
# Warmup Iteration   2: 1827.436 us/op
# Warmup Iteration   3: 1852.157 us/op
# Warmup Iteration   4: 1271.107 us/op
# Warmup Iteration   5: 1266.147 us/op
Iteration   1: 24.758 us/op
Iteration   2: 12.534 us/op
Iteration   3: 10.892 us/op
Iteration   4: 12.945 us/op
Iteration   5: 12.662 us/op

# Run progress: 41.86% complete, ETA 00:26:53
# Fork: 2 of 2
# Warmup Iteration   1: 2962.209 us/op
# Warmup Iteration   2: 1702.888 us/op
# Warmup Iteration   3: 1591.533 us/op
# Warmup Iteration   4: 1613.385 us/op
# Warmup Iteration   5: 1294.776 us/op
Iteration   1: 24.849 us/op
Iteration   2: 41.595 us/op
Iteration   3: 9.973 us/op
Iteration   4: 12.686 us/op
Iteration   5: 27.085 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     18.998 ±(99.9%) 15.525 us/op

  Histogram, us/op:
    [ 0.000,  5.000) = 0 
    [ 5.000, 10.000) = 1 
    [10.000, 15.000) = 5 
    [15.000, 20.000) = 0 
    [20.000, 25.000) = 2 
    [25.000, 30.000) = 1 
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 1 

  Percentiles, us/op:
      p(0.0000) =      9.973 us/op
     p(50.0000) =     12.816 us/op
     p(90.0000) =     40.144 us/op
     p(95.0000) =     41.595 us/op
     p(99.0000) =     41.595 us/op
     p(99.9000) =     41.595 us/op
     p(99.9900) =     41.595 us/op
     p(99.9990) =     41.595 us/op
     p(99.9999) =     41.595 us/op
    p(100.0000) =     41.595 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 1)

# Run progress: 42.05% complete, ETA 00:26:48
# Fork: 1 of 2
# Warmup Iteration   1: 3087.825 us/op
# Warmup Iteration   2: 1942.869 us/op
# Warmup Iteration   3: 1464.106 us/op
# Warmup Iteration   4: 1351.315 us/op
# Warmup Iteration   5: 1495.149 us/op
Iteration   1: 24.656 us/op
Iteration   2: 25.133 us/op
Iteration   3: 10.172 us/op
Iteration   4: 29.692 us/op
Iteration   5: 13.286 us/op

# Run progress: 42.23% complete, ETA 00:26:42
# Fork: 2 of 2
# Warmup Iteration   1: 2729.466 us/op
# Warmup Iteration   2: 1771.174 us/op
# Warmup Iteration   3: 1699.610 us/op
# Warmup Iteration   4: 1665.765 us/op
# Warmup Iteration   5: 1349.943 us/op
Iteration   1: 39.078 us/op
Iteration   2: 17.319 us/op
Iteration   3: 29.087 us/op
Iteration   4: 25.442 us/op
Iteration   5: 25.755 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     23.962 ±(99.9%) 12.780 us/op

  Histogram, us/op:
    [10.000, 12.500) = 1 
    [12.500, 15.000) = 1 
    [15.000, 17.500) = 1 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 1 
    [25.000, 27.500) = 3 
    [27.500, 30.000) = 2 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     10.172 us/op
     p(50.0000) =     25.288 us/op
     p(90.0000) =     38.139 us/op
     p(95.0000) =     39.078 us/op
     p(99.0000) =     39.078 us/op
     p(99.9000) =     39.078 us/op
     p(99.9900) =     39.078 us/op
     p(99.9990) =     39.078 us/op
     p(99.9999) =     39.078 us/op
    p(100.0000) =     39.078 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.125)

# Run progress: 42.42% complete, ETA 00:26:37
# Fork: 1 of 2
# Warmup Iteration   1: 3433.399 us/op
# Warmup Iteration   2: 2647.811 us/op
# Warmup Iteration   3: 2077.119 us/op
# Warmup Iteration   4: 1770.837 us/op
# Warmup Iteration   5: 1685.189 us/op
Iteration   1: 25.803 us/op
Iteration   2: 58.227 us/op
Iteration   3: 26.354 us/op
Iteration   4: 25.300 us/op
Iteration   5: 27.819 us/op

# Run progress: 42.61% complete, ETA 00:26:32
# Fork: 2 of 2
# Warmup Iteration   1: 3291.570 us/op
# Warmup Iteration   2: 2444.693 us/op
# Warmup Iteration   3: 2188.724 us/op
# Warmup Iteration   4: 1903.455 us/op
# Warmup Iteration   5: 1723.174 us/op
Iteration   1: 12.340 us/op
Iteration   2: 53.486 us/op
Iteration   3: 17.900 us/op
Iteration   4: 17.789 us/op
Iteration   5: 14.109 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     27.913 ±(99.9%) 23.758 us/op

  Histogram, us/op:
    [10.000, 15.000) = 2 
    [15.000, 20.000) = 2 
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 4 
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     12.340 us/op
     p(50.0000) =     25.552 us/op
     p(90.0000) =     57.753 us/op
     p(95.0000) =     58.227 us/op
     p(99.0000) =     58.227 us/op
     p(99.9000) =     58.227 us/op
     p(99.9900) =     58.227 us/op
     p(99.9990) =     58.227 us/op
     p(99.9999) =     58.227 us/op
    p(100.0000) =     58.227 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.250)

# Run progress: 42.80% complete, ETA 00:26:27
# Fork: 1 of 2
# Warmup Iteration   1: 3018.580 us/op
# Warmup Iteration   2: 1877.926 us/op
# Warmup Iteration   3: 2125.521 us/op
# Warmup Iteration   4: 1474.447 us/op
# Warmup Iteration   5: 1531.257 us/op
Iteration   1: 11.381 us/op
Iteration   2: 13.621 us/op
Iteration   3: 47.601 us/op
Iteration   4: 13.654 us/op
Iteration   5: 13.674 us/op

# Run progress: 42.99% complete, ETA 00:26:21
# Fork: 2 of 2
# Warmup Iteration   1: 3141.585 us/op
# Warmup Iteration   2: 2297.432 us/op
# Warmup Iteration   3: 1620.721 us/op
# Warmup Iteration   4: 1517.403 us/op
# Warmup Iteration   5: 1573.960 us/op
Iteration   1: 11.380 us/op
Iteration   2: 13.299 us/op
Iteration   3: 14.851 us/op
Iteration   4: 13.898 us/op
Iteration   5: 27.421 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     18.078 ±(99.9%) 17.150 us/op

  Histogram, us/op:
    [10.000, 12.500) = 2 
    [12.500, 15.000) = 6 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 1 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 0 
    [37.500, 40.000) = 0 
    [40.000, 42.500) = 0 
    [42.500, 45.000) = 0 
    [45.000, 47.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     11.380 us/op
     p(50.0000) =     13.664 us/op
     p(90.0000) =     45.583 us/op
     p(95.0000) =     47.601 us/op
     p(99.0000) =     47.601 us/op
     p(99.9000) =     47.601 us/op
     p(99.9900) =     47.601 us/op
     p(99.9990) =     47.601 us/op
     p(99.9999) =     47.601 us/op
    p(100.0000) =     47.601 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.375)

# Run progress: 43.18% complete, ETA 00:26:16
# Fork: 1 of 2
# Warmup Iteration   1: 2760.104 us/op
# Warmup Iteration   2: 1927.220 us/op
# Warmup Iteration   3: 1333.444 us/op
# Warmup Iteration   4: 1316.058 us/op
# Warmup Iteration   5: 1314.717 us/op
Iteration   1: 11.601 us/op
Iteration   2: 13.405 us/op
Iteration   3: 12.071 us/op
Iteration   4: 11.853 us/op
Iteration   5: 41.341 us/op

# Run progress: 43.37% complete, ETA 00:26:11
# Fork: 2 of 2
# Warmup Iteration   1: 2836.447 us/op
# Warmup Iteration   2: 1734.934 us/op
# Warmup Iteration   3: 1676.844 us/op
# Warmup Iteration   4: 1345.093 us/op
# Warmup Iteration   5: 1240.533 us/op
Iteration   1: 11.241 us/op
Iteration   2: 42.609 us/op
Iteration   3: 26.788 us/op
Iteration   4: 15.929 us/op
Iteration   5: 12.173 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     19.901 ±(99.9%) 18.926 us/op

  Histogram, us/op:
    [10.000, 12.500) = 5 
    [12.500, 15.000) = 1 
    [15.000, 17.500) = 1 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 1 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 0 
    [37.500, 40.000) = 0 
    [40.000, 42.500) = 1 
    [42.500, 45.000) = 1 
    [45.000, 47.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     11.241 us/op
     p(50.0000) =     12.789 us/op
     p(90.0000) =     42.482 us/op
     p(95.0000) =     42.609 us/op
     p(99.0000) =     42.609 us/op
     p(99.9000) =     42.609 us/op
     p(99.9900) =     42.609 us/op
     p(99.9990) =     42.609 us/op
     p(99.9999) =     42.609 us/op
    p(100.0000) =     42.609 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.5)

# Run progress: 43.56% complete, ETA 00:26:06
# Fork: 1 of 2
# Warmup Iteration   1: 2883.307 us/op
# Warmup Iteration   2: 2148.528 us/op
# Warmup Iteration   3: 1436.632 us/op
# Warmup Iteration   4: 1455.163 us/op
# Warmup Iteration   5: 1417.798 us/op
Iteration   1: 12.556 us/op
Iteration   2: 12.327 us/op
Iteration   3: 13.740 us/op
Iteration   4: 12.000 us/op
Iteration   5: 13.053 us/op

# Run progress: 43.75% complete, ETA 00:26:00
# Fork: 2 of 2
# Warmup Iteration   1: 3003.432 us/op
# Warmup Iteration   2: 1880.662 us/op
# Warmup Iteration   3: 1846.336 us/op
# Warmup Iteration   4: 1455.126 us/op
# Warmup Iteration   5: 1412.368 us/op
Iteration   1: 9.862 us/op
Iteration   2: 37.171 us/op
Iteration   3: 13.883 us/op
Iteration   4: 13.128 us/op
Iteration   5: 13.104 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     15.082 ±(99.9%) 11.859 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 0 
    [ 5.000,  7.500) = 0 
    [ 7.500, 10.000) = 1 
    [10.000, 12.500) = 2 
    [12.500, 15.000) = 6 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 1 

  Percentiles, us/op:
      p(0.0000) =      9.862 us/op
     p(50.0000) =     13.079 us/op
     p(90.0000) =     34.842 us/op
     p(95.0000) =     37.171 us/op
     p(99.0000) =     37.171 us/op
     p(99.9000) =     37.171 us/op
     p(99.9900) =     37.171 us/op
     p(99.9990) =     37.171 us/op
     p(99.9999) =     37.171 us/op
    p(100.0000) =     37.171 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.625)

# Run progress: 43.94% complete, ETA 00:25:55
# Fork: 1 of 2
# Warmup Iteration   1: 2578.653 us/op
# Warmup Iteration   2: 1562.873 us/op
# Warmup Iteration   3: 1663.533 us/op
# Warmup Iteration   4: 1236.651 us/op
# Warmup Iteration   5: 1198.889 us/op
Iteration   1: 14.587 us/op
Iteration   2: 12.184 us/op
Iteration   3: 10.089 us/op
Iteration   4: 13.134 us/op
Iteration   5: 13.009 us/op

# Run progress: 44.13% complete, ETA 00:25:50
# Fork: 2 of 2
# Warmup Iteration   1: 2908.712 us/op
# Warmup Iteration   2: 1517.612 us/op
# Warmup Iteration   3: 1605.012 us/op
# Warmup Iteration   4: 1182.118 us/op
# Warmup Iteration   5: 1205.465 us/op
Iteration   1: 24.347 us/op
Iteration   2: 37.763 us/op
Iteration   3: 10.520 us/op
Iteration   4: 27.686 us/op
Iteration   5: 26.445 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     18.976 ±(99.9%) 14.246 us/op

  Histogram, us/op:
    [10.000, 12.500) = 3 
    [12.500, 15.000) = 3 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 1 
    [25.000, 27.500) = 1 
    [27.500, 30.000) = 1 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     10.089 us/op
     p(50.0000) =     13.861 us/op
     p(90.0000) =     36.755 us/op
     p(95.0000) =     37.763 us/op
     p(99.0000) =     37.763 us/op
     p(99.9000) =     37.763 us/op
     p(99.9900) =     37.763 us/op
     p(99.9990) =     37.763 us/op
     p(99.9999) =     37.763 us/op
    p(100.0000) =     37.763 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.75)

# Run progress: 44.32% complete, ETA 00:25:45
# Fork: 1 of 2
# Warmup Iteration   1: 2829.204 us/op
# Warmup Iteration   2: 1620.414 us/op
# Warmup Iteration   3: 1555.281 us/op
# Warmup Iteration   4: 1582.582 us/op
# Warmup Iteration   5: 1231.671 us/op
Iteration   1: 13.341 us/op
Iteration   2: 12.753 us/op
Iteration   3: 11.161 us/op
Iteration   4: 13.573 us/op
Iteration   5: 16.739 us/op

# Run progress: 44.51% complete, ETA 00:25:39
# Fork: 2 of 2
# Warmup Iteration   1: 2714.869 us/op
# Warmup Iteration   2: 1587.998 us/op
# Warmup Iteration   3: 1531.469 us/op
# Warmup Iteration   4: 1591.328 us/op
# Warmup Iteration   5: 1219.477 us/op
Iteration   1: 13.498 us/op
Iteration   2: 65.668 us/op
Iteration   3: 25.659 us/op
Iteration   4: 28.174 us/op
Iteration   5: 42.590 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     24.316 ±(99.9%) 26.560 us/op

  Histogram, us/op:
    [10.000, 15.000) = 5 
    [15.000, 20.000) = 1 
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 2 
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 1 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 0 
    [55.000, 60.000) = 0 
    [60.000, 65.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     11.161 us/op
     p(50.0000) =     15.156 us/op
     p(90.0000) =     63.360 us/op
     p(95.0000) =     65.668 us/op
     p(99.0000) =     65.668 us/op
     p(99.9000) =     65.668 us/op
     p(99.9900) =     65.668 us/op
     p(99.9990) =     65.668 us/op
     p(99.9999) =     65.668 us/op
    p(100.0000) =     65.668 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.875)

# Run progress: 44.70% complete, ETA 00:25:34
# Fork: 1 of 2
# Warmup Iteration   1: 2997.918 us/op
# Warmup Iteration   2: 1670.363 us/op
# Warmup Iteration   3: 1643.951 us/op
# Warmup Iteration   4: 1541.250 us/op
# Warmup Iteration   5: 1284.446 us/op
Iteration   1: 13.028 us/op
Iteration   2: 12.887 us/op
Iteration   3: 10.779 us/op
Iteration   4: 13.567 us/op
Iteration   5: 13.634 us/op

# Run progress: 44.89% complete, ETA 00:25:29
# Fork: 2 of 2
# Warmup Iteration   1: 2817.258 us/op
# Warmup Iteration   2: 1778.473 us/op
# Warmup Iteration   3: 1496.254 us/op
# Warmup Iteration   4: 1870.016 us/op
# Warmup Iteration   5: 1314.569 us/op
Iteration   1: 10.873 us/op
Iteration   2: 10.558 us/op
Iteration   3: 23.979 us/op
Iteration   4: 11.524 us/op
Iteration   5: 30.027 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     15.086 ±(99.9%) 9.892 us/op

  Histogram, us/op:
    [10.000, 12.500) = 4 
    [12.500, 15.000) = 4 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 1 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 1 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     10.558 us/op
     p(50.0000) =     12.958 us/op
     p(90.0000) =     29.422 us/op
     p(95.0000) =     30.027 us/op
     p(99.0000) =     30.027 us/op
     p(99.9000) =     30.027 us/op
     p(99.9900) =     30.027 us/op
     p(99.9990) =     30.027 us/op
     p(99.9999) =     30.027 us/op
    p(100.0000) =     30.027 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 1)

# Run progress: 45.08% complete, ETA 00:25:24
# Fork: 1 of 2
# Warmup Iteration   1: 2927.505 us/op
# Warmup Iteration   2: 1749.402 us/op
# Warmup Iteration   3: 1830.355 us/op
# Warmup Iteration   4: 1421.288 us/op
# Warmup Iteration   5: 1348.100 us/op
Iteration   1: 25.832 us/op
Iteration   2: 35.796 us/op
Iteration   3: 10.201 us/op
Iteration   4: 13.676 us/op
Iteration   5: 27.512 us/op

# Run progress: 45.27% complete, ETA 00:25:18
# Fork: 2 of 2
# Warmup Iteration   1: 3036.361 us/op
# Warmup Iteration   2: 1771.355 us/op
# Warmup Iteration   3: 1617.276 us/op
# Warmup Iteration   4: 1783.428 us/op
# Warmup Iteration   5: 1336.496 us/op
Iteration   1: 10.736 us/op
Iteration   2: 26.567 us/op
Iteration   3: 38.233 us/op
Iteration   4: 25.752 us/op
Iteration   5: 12.763 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     22.707 ±(99.9%) 15.529 us/op

  Histogram, us/op:
    [10.000, 12.500) = 2 
    [12.500, 15.000) = 2 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 3 
    [27.500, 30.000) = 1 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 1 

  Percentiles, us/op:
      p(0.0000) =     10.201 us/op
     p(50.0000) =     25.792 us/op
     p(90.0000) =     37.989 us/op
     p(95.0000) =     38.233 us/op
     p(99.0000) =     38.233 us/op
     p(99.9000) =     38.233 us/op
     p(99.9900) =     38.233 us/op
     p(99.9990) =     38.233 us/op
     p(99.9999) =     38.233 us/op
    p(100.0000) =     38.233 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.125)

# Run progress: 45.45% complete, ETA 00:25:13
# Fork: 1 of 2
# Warmup Iteration   1: 3805.284 us/op
# Warmup Iteration   2: 2221.250 us/op
# Warmup Iteration   3: 2068.392 us/op
# Warmup Iteration   4: 1649.457 us/op
# Warmup Iteration   5: 1603.094 us/op
Iteration   1: 49.720 us/op
Iteration   2: 102.543 us/op
Iteration   3: 88.222 us/op
Iteration   4: 35.947 us/op
Iteration   5: 48.798 us/op

# Run progress: 45.64% complete, ETA 00:25:08
# Fork: 2 of 2
# Warmup Iteration   1: 3663.478 us/op
# Warmup Iteration   2: 2204.404 us/op
# Warmup Iteration   3: 2085.559 us/op
# Warmup Iteration   4: 1713.747 us/op
# Warmup Iteration   5: 1565.949 us/op
Iteration   1: 43.444 us/op
Iteration   2: 77.193 us/op
Iteration   3: 58.398 us/op
Iteration   4: 64.895 us/op
Iteration   5: 51.479 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     62.064 ±(99.9%) 32.041 us/op

  Histogram, us/op:
    [ 30.000,  35.000) = 0 
    [ 35.000,  40.000) = 1 
    [ 40.000,  45.000) = 1 
    [ 45.000,  50.000) = 2 
    [ 50.000,  55.000) = 1 
    [ 55.000,  60.000) = 1 
    [ 60.000,  65.000) = 1 
    [ 65.000,  70.000) = 0 
    [ 70.000,  75.000) = 0 
    [ 75.000,  80.000) = 1 
    [ 80.000,  85.000) = 0 
    [ 85.000,  90.000) = 1 
    [ 90.000,  95.000) = 0 
    [ 95.000, 100.000) = 0 
    [100.000, 105.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     35.947 us/op
     p(50.0000) =     54.939 us/op
     p(90.0000) =    101.111 us/op
     p(95.0000) =    102.543 us/op
     p(99.0000) =    102.543 us/op
     p(99.9000) =    102.543 us/op
     p(99.9900) =    102.543 us/op
     p(99.9990) =    102.543 us/op
     p(99.9999) =    102.543 us/op
    p(100.0000) =    102.543 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.250)

# Run progress: 45.83% complete, ETA 00:25:02
# Fork: 1 of 2
# Warmup Iteration   1: 3668.005 us/op
# Warmup Iteration   2: 1994.753 us/op
# Warmup Iteration   3: 1784.521 us/op
# Warmup Iteration   4: 1430.931 us/op
# Warmup Iteration   5: 1491.934 us/op
Iteration   1: 45.718 us/op
Iteration   2: 105.787 us/op
Iteration   3: 50.928 us/op
Iteration   4: 33.192 us/op
Iteration   5: 46.998 us/op

# Run progress: 46.02% complete, ETA 00:24:57
# Fork: 2 of 2
# Warmup Iteration   1: 3309.142 us/op
# Warmup Iteration   2: 1908.408 us/op
# Warmup Iteration   3: 1828.090 us/op
# Warmup Iteration   4: 1403.140 us/op
# Warmup Iteration   5: 1478.607 us/op
Iteration   1: 60.961 us/op
Iteration   2: 50.632 us/op
Iteration   3: 37.206 us/op
Iteration   4: 31.877 us/op
Iteration   5: 46.529 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     50.983 ±(99.9%) 32.024 us/op

  Histogram, us/op:
    [ 30.000,  35.000) = 2 
    [ 35.000,  40.000) = 1 
    [ 40.000,  45.000) = 0 
    [ 45.000,  50.000) = 3 
    [ 50.000,  55.000) = 2 
    [ 55.000,  60.000) = 0 
    [ 60.000,  65.000) = 1 
    [ 65.000,  70.000) = 0 
    [ 70.000,  75.000) = 0 
    [ 75.000,  80.000) = 0 
    [ 80.000,  85.000) = 0 
    [ 85.000,  90.000) = 0 
    [ 90.000,  95.000) = 0 
    [ 95.000, 100.000) = 0 
    [100.000, 105.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     31.877 us/op
     p(50.0000) =     46.764 us/op
     p(90.0000) =    101.304 us/op
     p(95.0000) =    105.787 us/op
     p(99.0000) =    105.787 us/op
     p(99.9000) =    105.787 us/op
     p(99.9900) =    105.787 us/op
     p(99.9990) =    105.787 us/op
     p(99.9999) =    105.787 us/op
    p(100.0000) =    105.787 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.375)

# Run progress: 46.21% complete, ETA 00:24:52
# Fork: 1 of 2
# Warmup Iteration   1: 2840.975 us/op
# Warmup Iteration   2: 1587.402 us/op
# Warmup Iteration   3: 1398.898 us/op
# Warmup Iteration   4: 1352.107 us/op
# Warmup Iteration   5: 1197.061 us/op
Iteration   1: 30.111 us/op
Iteration   2: 32.699 us/op
Iteration   3: 31.316 us/op
Iteration   4: 50.128 us/op
Iteration   5: 64.563 us/op

# Run progress: 46.40% complete, ETA 00:24:47
# Fork: 2 of 2
# Warmup Iteration   1: 2799.296 us/op
# Warmup Iteration   2: 1440.489 us/op
# Warmup Iteration   3: 1388.327 us/op
# Warmup Iteration   4: 1417.787 us/op
# Warmup Iteration   5: 1091.274 us/op
Iteration   1: 30.572 us/op
Iteration   2: 93.987 us/op
Iteration   3: 43.873 us/op
Iteration   4: 56.424 us/op
Iteration   5: 45.617 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     47.929 ±(99.9%) 30.336 us/op

  Histogram, us/op:
    [ 30.000,  35.000) = 4 
    [ 35.000,  40.000) = 0 
    [ 40.000,  45.000) = 1 
    [ 45.000,  50.000) = 1 
    [ 50.000,  55.000) = 1 
    [ 55.000,  60.000) = 1 
    [ 60.000,  65.000) = 1 
    [ 65.000,  70.000) = 0 
    [ 70.000,  75.000) = 0 
    [ 75.000,  80.000) = 0 
    [ 80.000,  85.000) = 0 
    [ 85.000,  90.000) = 0 
    [ 90.000,  95.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     30.111 us/op
     p(50.0000) =     44.745 us/op
     p(90.0000) =     91.045 us/op
     p(95.0000) =     93.987 us/op
     p(99.0000) =     93.987 us/op
     p(99.9000) =     93.987 us/op
     p(99.9900) =     93.987 us/op
     p(99.9990) =     93.987 us/op
     p(99.9999) =     93.987 us/op
    p(100.0000) =     93.987 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.5)

# Run progress: 46.59% complete, ETA 00:24:41
# Fork: 1 of 2
# Warmup Iteration   1: 3050.602 us/op
# Warmup Iteration   2: 1873.675 us/op
# Warmup Iteration   3: 1294.061 us/op
# Warmup Iteration   4: 1209.782 us/op
# Warmup Iteration   5: 1197.239 us/op
Iteration   1: 31.747 us/op
Iteration   2: 79.425 us/op
Iteration   3: 44.388 us/op
Iteration   4: 30.096 us/op
Iteration   5: 32.642 us/op

# Run progress: 46.78% complete, ETA 00:24:36
# Fork: 2 of 2
# Warmup Iteration   1: 2777.579 us/op
# Warmup Iteration   2: 1530.621 us/op
# Warmup Iteration   3: 1419.208 us/op
# Warmup Iteration   4: 1460.426 us/op
# Warmup Iteration   5: 1157.859 us/op
Iteration   1: 47.848 us/op
Iteration   2: 30.637 us/op
Iteration   3: 46.188 us/op
Iteration   4: 43.839 us/op
Iteration   5: 45.119 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     43.193 ±(99.9%) 22.085 us/op

  Histogram, us/op:
    [30.000, 35.000) = 4 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 2 
    [45.000, 50.000) = 3 
    [50.000, 55.000) = 0 
    [55.000, 60.000) = 0 
    [60.000, 65.000) = 0 
    [65.000, 70.000) = 0 
    [70.000, 75.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     30.096 us/op
     p(50.0000) =     44.114 us/op
     p(90.0000) =     76.267 us/op
     p(95.0000) =     79.425 us/op
     p(99.0000) =     79.425 us/op
     p(99.9000) =     79.425 us/op
     p(99.9900) =     79.425 us/op
     p(99.9990) =     79.425 us/op
     p(99.9999) =     79.425 us/op
    p(100.0000) =     79.425 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.625)

# Run progress: 46.97% complete, ETA 00:24:31
# Fork: 1 of 2
# Warmup Iteration   1: 2229.255 us/op
# Warmup Iteration   2: 1247.466 us/op
# Warmup Iteration   3: 1114.247 us/op
# Warmup Iteration   4: 1257.900 us/op
# Warmup Iteration   5: 931.186 us/op
Iteration   1: 49.300 us/op
Iteration   2: 73.923 us/op
Iteration   3: 49.625 us/op
Iteration   4: 34.916 us/op
Iteration   5: 57.719 us/op

# Run progress: 47.16% complete, ETA 00:24:26
# Fork: 2 of 2
# Warmup Iteration   1: 2005.056 us/op
# Warmup Iteration   2: 1442.513 us/op
# Warmup Iteration   3: 1139.727 us/op
# Warmup Iteration   4: 1188.787 us/op
# Warmup Iteration   5: 904.181 us/op
Iteration   1: 46.985 us/op
Iteration   2: 87.357 us/op
Iteration   3: 68.775 us/op
Iteration   4: 33.166 us/op
Iteration   5: 47.993 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     54.976 ±(99.9%) 25.977 us/op

  Histogram, us/op:
    [30.000, 35.000) = 2 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 4 
    [50.000, 55.000) = 0 
    [55.000, 60.000) = 1 
    [60.000, 65.000) = 0 
    [65.000, 70.000) = 1 
    [70.000, 75.000) = 1 
    [75.000, 80.000) = 0 
    [80.000, 85.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     33.166 us/op
     p(50.0000) =     49.463 us/op
     p(90.0000) =     86.014 us/op
     p(95.0000) =     87.357 us/op
     p(99.0000) =     87.357 us/op
     p(99.9000) =     87.357 us/op
     p(99.9900) =     87.357 us/op
     p(99.9990) =     87.357 us/op
     p(99.9999) =     87.357 us/op
    p(100.0000) =     87.357 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.75)

# Run progress: 47.35% complete, ETA 00:24:20
# Fork: 1 of 2
# Warmup Iteration   1: 2045.215 us/op
# Warmup Iteration   2: 1303.025 us/op
# Warmup Iteration   3: 1130.929 us/op
# Warmup Iteration   4: 1204.792 us/op
# Warmup Iteration   5: 916.491 us/op
Iteration   1: 32.997 us/op
Iteration   2: 74.245 us/op
Iteration   3: 49.270 us/op
Iteration   4: 35.754 us/op
Iteration   5: 67.204 us/op

# Run progress: 47.54% complete, ETA 00:24:15
# Fork: 2 of 2
# Warmup Iteration   1: 2235.858 us/op
# Warmup Iteration   2: 1281.148 us/op
# Warmup Iteration   3: 1172.747 us/op
# Warmup Iteration   4: 1316.592 us/op
# Warmup Iteration   5: 913.037 us/op
Iteration   1: 46.999 us/op
Iteration   2: 84.356 us/op
Iteration   3: 47.106 us/op
Iteration   4: 70.629 us/op
Iteration   5: 43.753 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     55.231 ±(99.9%) 26.500 us/op

  Histogram, us/op:
    [30.000, 35.000) = 1 
    [35.000, 40.000) = 1 
    [40.000, 45.000) = 1 
    [45.000, 50.000) = 3 
    [50.000, 55.000) = 0 
    [55.000, 60.000) = 0 
    [60.000, 65.000) = 0 
    [65.000, 70.000) = 1 
    [70.000, 75.000) = 2 
    [75.000, 80.000) = 0 
    [80.000, 85.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     32.997 us/op
     p(50.0000) =     48.188 us/op
     p(90.0000) =     83.345 us/op
     p(95.0000) =     84.356 us/op
     p(99.0000) =     84.356 us/op
     p(99.9000) =     84.356 us/op
     p(99.9900) =     84.356 us/op
     p(99.9990) =     84.356 us/op
     p(99.9999) =     84.356 us/op
    p(100.0000) =     84.356 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.875)

# Run progress: 47.73% complete, ETA 00:24:10
# Fork: 1 of 2
# Warmup Iteration   1: 2156.393 us/op
# Warmup Iteration   2: 1339.707 us/op
# Warmup Iteration   3: 1344.061 us/op
# Warmup Iteration   4: 1216.388 us/op
# Warmup Iteration   5: 929.499 us/op
Iteration   1: 30.965 us/op
Iteration   2: 72.040 us/op
Iteration   3: 34.922 us/op
Iteration   4: 32.410 us/op
Iteration   5: 34.705 us/op

# Run progress: 47.92% complete, ETA 00:24:05
# Fork: 2 of 2
# Warmup Iteration   1: 2196.507 us/op
# Warmup Iteration   2: 1280.863 us/op
# Warmup Iteration   3: 1153.497 us/op
# Warmup Iteration   4: 1201.481 us/op
# Warmup Iteration   5: 911.943 us/op
Iteration   1: 46.147 us/op
Iteration   2: 70.217 us/op
Iteration   3: 49.572 us/op
Iteration   4: 88.100 us/op
Iteration   5: 49.729 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     50.881 ±(99.9%) 29.757 us/op

  Histogram, us/op:
    [30.000, 35.000) = 4 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 3 
    [50.000, 55.000) = 0 
    [55.000, 60.000) = 0 
    [60.000, 65.000) = 0 
    [65.000, 70.000) = 0 
    [70.000, 75.000) = 2 
    [75.000, 80.000) = 0 
    [80.000, 85.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     30.965 us/op
     p(50.0000) =     47.860 us/op
     p(90.0000) =     86.494 us/op
     p(95.0000) =     88.100 us/op
     p(99.0000) =     88.100 us/op
     p(99.9000) =     88.100 us/op
     p(99.9900) =     88.100 us/op
     p(99.9990) =     88.100 us/op
     p(99.9999) =     88.100 us/op
    p(100.0000) =     88.100 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 1)

# Run progress: 48.11% complete, ETA 00:23:59
# Fork: 1 of 2
# Warmup Iteration   1: 2347.444 us/op
# Warmup Iteration   2: 1282.409 us/op
# Warmup Iteration   3: 1141.767 us/op
# Warmup Iteration   4: 1242.500 us/op
# Warmup Iteration   5: 958.104 us/op
Iteration   1: 33.023 us/op
Iteration   2: 82.532 us/op
Iteration   3: 34.547 us/op
Iteration   4: 35.944 us/op
Iteration   5: 37.022 us/op

# Run progress: 48.30% complete, ETA 00:23:54
# Fork: 2 of 2
# Warmup Iteration   1: 2200.699 us/op
# Warmup Iteration   2: 1335.951 us/op
# Warmup Iteration   3: 1228.491 us/op
# Warmup Iteration   4: 911.793 us/op
# Warmup Iteration   5: 911.380 us/op
Iteration   1: 46.970 us/op
Iteration   2: 71.426 us/op
Iteration   3: 47.151 us/op
Iteration   4: 33.321 us/op
Iteration   5: 67.705 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =     48.964 ±(99.9%) 27.642 us/op

  Histogram, us/op:
    [30.000, 35.000) = 3 
    [35.000, 40.000) = 2 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 2 
    [50.000, 55.000) = 0 
    [55.000, 60.000) = 0 
    [60.000, 65.000) = 0 
    [65.000, 70.000) = 1 
    [70.000, 75.000) = 1 
    [75.000, 80.000) = 0 
    [80.000, 85.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     33.023 us/op
     p(50.0000) =     41.996 us/op
     p(90.0000) =     81.421 us/op
     p(95.0000) =     82.532 us/op
     p(99.0000) =     82.532 us/op
     p(99.9000) =     82.532 us/op
     p(99.9900) =     82.532 us/op
     p(99.9990) =     82.532 us/op
     p(99.9999) =     82.532 us/op
    p(100.0000) =     82.532 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.125)

# Run progress: 48.48% complete, ETA 00:23:49
# Fork: 1 of 2
# Warmup Iteration   1: 3454.272 us/op
# Warmup Iteration   2: 1778.580 us/op
# Warmup Iteration   3: 1692.592 us/op
# Warmup Iteration   4: 1337.192 us/op
# Warmup Iteration   5: 1318.082 us/op
Iteration   1: 105.231 us/op
Iteration   2: 143.697 us/op
Iteration   3: 133.015 us/op
Iteration   4: 102.776 us/op
Iteration   5: 94.489 us/op

# Run progress: 48.67% complete, ETA 00:23:44
# Fork: 2 of 2
# Warmup Iteration   1: 3625.433 us/op
# Warmup Iteration   2: 1959.275 us/op
# Warmup Iteration   3: 1400.230 us/op
# Warmup Iteration   4: 1344.575 us/op
# Warmup Iteration   5: 1311.255 us/op
Iteration   1: 94.440 us/op
Iteration   2: 206.332 us/op
Iteration   3: 160.907 us/op
Iteration   4: 108.859 us/op
Iteration   5: 160.838 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    131.058 ±(99.9%) 55.767 us/op

  Histogram, us/op:
    [  0.000,  25.000) = 0 
    [ 25.000,  50.000) = 0 
    [ 50.000,  75.000) = 0 
    [ 75.000, 100.000) = 2 
    [100.000, 125.000) = 3 
    [125.000, 150.000) = 2 
    [150.000, 175.000) = 2 
    [175.000, 200.000) = 0 
    [200.000, 225.000) = 1 
    [225.000, 250.000) = 0 
    [250.000, 275.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     94.440 us/op
     p(50.0000) =    120.937 us/op
     p(90.0000) =    201.790 us/op
     p(95.0000) =    206.332 us/op
     p(99.0000) =    206.332 us/op
     p(99.9000) =    206.332 us/op
     p(99.9900) =    206.332 us/op
     p(99.9990) =    206.332 us/op
     p(99.9999) =    206.332 us/op
    p(100.0000) =    206.332 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.250)

# Run progress: 48.86% complete, ETA 00:23:38
# Fork: 1 of 2
# Warmup Iteration   1: 2030.004 us/op
# Warmup Iteration   2: 1310.479 us/op
# Warmup Iteration   3: 1185.476 us/op
# Warmup Iteration   4: 1245.073 us/op
# Warmup Iteration   5: 963.641 us/op
Iteration   1: 103.680 us/op
Iteration   2: 266.621 us/op
Iteration   3: 154.074 us/op
Iteration   4: 94.429 us/op
Iteration   5: 98.227 us/op

# Run progress: 49.05% complete, ETA 00:23:33
# Fork: 2 of 2
# Warmup Iteration   1: 2449.597 us/op
# Warmup Iteration   2: 1523.801 us/op
# Warmup Iteration   3: 1011.219 us/op
# Warmup Iteration   4: 975.114 us/op
# Warmup Iteration   5: 959.450 us/op
Iteration   1: 94.508 us/op
Iteration   2: 209.849 us/op
Iteration   3: 104.000 us/op
Iteration   4: 106.032 us/op
Iteration   5: 116.339 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    134.776 ±(99.9%) 88.811 us/op

  Histogram, us/op:
    [  0.000,  25.000) = 0 
    [ 25.000,  50.000) = 0 
    [ 50.000,  75.000) = 0 
    [ 75.000, 100.000) = 3 
    [100.000, 125.000) = 4 
    [125.000, 150.000) = 0 
    [150.000, 175.000) = 1 
    [175.000, 200.000) = 0 
    [200.000, 225.000) = 1 
    [225.000, 250.000) = 0 
    [250.000, 275.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     94.429 us/op
     p(50.0000) =    105.016 us/op
     p(90.0000) =    260.944 us/op
     p(95.0000) =    266.621 us/op
     p(99.0000) =    266.621 us/op
     p(99.9000) =    266.621 us/op
     p(99.9900) =    266.621 us/op
     p(99.9990) =    266.621 us/op
     p(99.9999) =    266.621 us/op
    p(100.0000) =    266.621 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.375)

# Run progress: 49.24% complete, ETA 00:23:28
# Fork: 1 of 2
# Warmup Iteration   1: 2030.289 us/op
# Warmup Iteration   2: 1289.657 us/op
# Warmup Iteration   3: 1408.087 us/op
# Warmup Iteration   4: 1008.758 us/op
# Warmup Iteration   5: 941.641 us/op
Iteration   1: 101.753 us/op
Iteration   2: 222.285 us/op
Iteration   3: 101.566 us/op
Iteration   4: 182.202 us/op
Iteration   5: 128.820 us/op

# Run progress: 49.43% complete, ETA 00:23:23
# Fork: 2 of 2
# Warmup Iteration   1: 2246.036 us/op
# Warmup Iteration   2: 1289.633 us/op
# Warmup Iteration   3: 1287.359 us/op
# Warmup Iteration   4: 1212.925 us/op
# Warmup Iteration   5: 964.197 us/op
Iteration   1: 109.804 us/op
Iteration   2: 153.845 us/op
Iteration   3: 124.038 us/op
Iteration   4: 110.460 us/op
Iteration   5: 135.173 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    136.995 ±(99.9%) 59.160 us/op

  Histogram, us/op:
    [100.000, 112.500) = 4 
    [112.500, 125.000) = 1 
    [125.000, 137.500) = 2 
    [137.500, 150.000) = 0 
    [150.000, 162.500) = 1 
    [162.500, 175.000) = 0 
    [175.000, 187.500) = 1 
    [187.500, 200.000) = 0 
    [200.000, 212.500) = 0 
    [212.500, 225.000) = 1 
    [225.000, 237.500) = 0 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    101.566 us/op
     p(50.0000) =    126.429 us/op
     p(90.0000) =    218.277 us/op
     p(95.0000) =    222.285 us/op
     p(99.0000) =    222.285 us/op
     p(99.9000) =    222.285 us/op
     p(99.9900) =    222.285 us/op
     p(99.9990) =    222.285 us/op
     p(99.9999) =    222.285 us/op
    p(100.0000) =    222.285 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.5)

# Run progress: 49.62% complete, ETA 00:23:17
# Fork: 1 of 2
# Warmup Iteration   1: 2556.629 us/op
# Warmup Iteration   2: 1270.223 us/op
# Warmup Iteration   3: 1234.650 us/op
# Warmup Iteration   4: 1413.994 us/op
# Warmup Iteration   5: 1049.008 us/op
Iteration   1: 101.930 us/op
Iteration   2: 172.816 us/op
Iteration   3: 115.861 us/op
Iteration   4: 97.596 us/op
Iteration   5: 102.095 us/op

# Run progress: 49.81% complete, ETA 00:23:12
# Fork: 2 of 2
# Warmup Iteration   1: 2193.703 us/op
# Warmup Iteration   2: 1299.534 us/op
# Warmup Iteration   3: 1200.048 us/op
# Warmup Iteration   4: 994.719 us/op
# Warmup Iteration   5: 978.166 us/op
Iteration   1: 104.115 us/op
Iteration   2: 188.898 us/op
Iteration   3: 105.536 us/op
Iteration   4: 122.293 us/op
Iteration   5: 103.690 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    121.483 ±(99.9%) 48.895 us/op

  Histogram, us/op:
    [ 90.000, 100.000) = 1 
    [100.000, 110.000) = 5 
    [110.000, 120.000) = 1 
    [120.000, 130.000) = 1 
    [130.000, 140.000) = 0 
    [140.000, 150.000) = 0 
    [150.000, 160.000) = 0 
    [160.000, 170.000) = 0 
    [170.000, 180.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     97.596 us/op
     p(50.0000) =    104.826 us/op
     p(90.0000) =    187.290 us/op
     p(95.0000) =    188.898 us/op
     p(99.0000) =    188.898 us/op
     p(99.9000) =    188.898 us/op
     p(99.9900) =    188.898 us/op
     p(99.9990) =    188.898 us/op
     p(99.9999) =    188.898 us/op
    p(100.0000) =    188.898 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.625)

# Run progress: 50.00% complete, ETA 00:23:07
# Fork: 1 of 2
# Warmup Iteration   1: 2080.300 us/op
# Warmup Iteration   2: 1345.670 us/op
# Warmup Iteration   3: 1222.634 us/op
# Warmup Iteration   4: 1340.740 us/op
# Warmup Iteration   5: 974.058 us/op
Iteration   1: 133.782 us/op
Iteration   2: 168.044 us/op
Iteration   3: 117.194 us/op
Iteration   4: 98.879 us/op
Iteration   5: 119.708 us/op

# Run progress: 50.19% complete, ETA 00:23:02
# Fork: 2 of 2
# Warmup Iteration   1: 2055.272 us/op
# Warmup Iteration   2: 1469.126 us/op
# Warmup Iteration   3: 1262.639 us/op
# Warmup Iteration   4: 1267.423 us/op
# Warmup Iteration   5: 952.418 us/op
Iteration   1: 98.823 us/op
Iteration   2: 241.335 us/op
Iteration   3: 113.246 us/op
Iteration   4: 96.974 us/op
Iteration   5: 145.576 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    133.356 ±(99.9%) 66.798 us/op

  Histogram, us/op:
    [  0.000,  25.000) = 0 
    [ 25.000,  50.000) = 0 
    [ 50.000,  75.000) = 0 
    [ 75.000, 100.000) = 3 
    [100.000, 125.000) = 3 
    [125.000, 150.000) = 2 
    [150.000, 175.000) = 1 
    [175.000, 200.000) = 0 
    [200.000, 225.000) = 0 
    [225.000, 250.000) = 1 
    [250.000, 275.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     96.974 us/op
     p(50.0000) =    118.451 us/op
     p(90.0000) =    234.006 us/op
     p(95.0000) =    241.335 us/op
     p(99.0000) =    241.335 us/op
     p(99.9000) =    241.335 us/op
     p(99.9900) =    241.335 us/op
     p(99.9990) =    241.335 us/op
     p(99.9999) =    241.335 us/op
    p(100.0000) =    241.335 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.75)

# Run progress: 50.38% complete, ETA 00:22:56
# Fork: 1 of 2
# Warmup Iteration   1: 2142.017 us/op
# Warmup Iteration   2: 1367.484 us/op
# Warmup Iteration   3: 1255.174 us/op
# Warmup Iteration   4: 1350.354 us/op
# Warmup Iteration   5: 952.091 us/op
Iteration   1: 97.050 us/op
Iteration   2: 154.752 us/op
Iteration   3: 132.720 us/op
Iteration   4: 109.875 us/op
Iteration   5: 132.656 us/op

# Run progress: 50.57% complete, ETA 00:22:51
# Fork: 2 of 2
# Warmup Iteration   1: 2196.296 us/op
# Warmup Iteration   2: 1302.346 us/op
# Warmup Iteration   3: 1206.444 us/op
# Warmup Iteration   4: 1245.492 us/op
# Warmup Iteration   5: 999.200 us/op
Iteration   1: 105.648 us/op
Iteration   2: 115.764 us/op
Iteration   3: 104.826 us/op
Iteration   4: 104.015 us/op
Iteration   5: 106.927 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    116.423 ±(99.9%) 27.193 us/op

  Histogram, us/op:
    [ 90.000,  95.000) = 0 
    [ 95.000, 100.000) = 1 
    [100.000, 105.000) = 2 
    [105.000, 110.000) = 3 
    [110.000, 115.000) = 0 
    [115.000, 120.000) = 1 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 2 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     97.050 us/op
     p(50.0000) =    108.401 us/op
     p(90.0000) =    152.549 us/op
     p(95.0000) =    154.752 us/op
     p(99.0000) =    154.752 us/op
     p(99.9000) =    154.752 us/op
     p(99.9900) =    154.752 us/op
     p(99.9990) =    154.752 us/op
     p(99.9999) =    154.752 us/op
    p(100.0000) =    154.752 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.875)

# Run progress: 50.76% complete, ETA 00:22:46
# Fork: 1 of 2
# Warmup Iteration   1: 2022.318 us/op
# Warmup Iteration   2: 1482.890 us/op
# Warmup Iteration   3: 1207.281 us/op
# Warmup Iteration   4: 1248.949 us/op
# Warmup Iteration   5: 1009.647 us/op
Iteration   1: 96.650 us/op
Iteration   2: 167.113 us/op
Iteration   3: 130.793 us/op
Iteration   4: 110.399 us/op
Iteration   5: 114.978 us/op

# Run progress: 50.95% complete, ETA 00:22:41
# Fork: 2 of 2
# Warmup Iteration   1: 2143.187 us/op
# Warmup Iteration   2: 1552.966 us/op
# Warmup Iteration   3: 993.864 us/op
# Warmup Iteration   4: 1055.604 us/op
# Warmup Iteration   5: 960.883 us/op
Iteration   1: 97.748 us/op
Iteration   2: 197.783 us/op
Iteration   3: 102.969 us/op
Iteration   4: 99.142 us/op
Iteration   5: 126.131 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    124.371 ±(99.9%) 50.686 us/op

  Histogram, us/op:
    [  0.000,  12.500) = 0 
    [ 12.500,  25.000) = 0 
    [ 25.000,  37.500) = 0 
    [ 37.500,  50.000) = 0 
    [ 50.000,  62.500) = 0 
    [ 62.500,  75.000) = 0 
    [ 75.000,  87.500) = 0 
    [ 87.500, 100.000) = 3 
    [100.000, 112.500) = 2 
    [112.500, 125.000) = 1 
    [125.000, 137.500) = 2 
    [137.500, 150.000) = 0 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 1 
    [175.000, 187.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     96.650 us/op
     p(50.0000) =    112.689 us/op
     p(90.0000) =    194.716 us/op
     p(95.0000) =    197.783 us/op
     p(99.0000) =    197.783 us/op
     p(99.9000) =    197.783 us/op
     p(99.9900) =    197.783 us/op
     p(99.9990) =    197.783 us/op
     p(99.9999) =    197.783 us/op
    p(100.0000) =    197.783 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 1)

# Run progress: 51.14% complete, ETA 00:22:35
# Fork: 1 of 2
# Warmup Iteration   1: 2476.585 us/op
# Warmup Iteration   2: 1379.195 us/op
# Warmup Iteration   3: 1268.453 us/op
# Warmup Iteration   4: 950.418 us/op
# Warmup Iteration   5: 948.157 us/op
Iteration   1: 118.736 us/op
Iteration   2: 203.084 us/op
Iteration   3: 117.268 us/op
Iteration   4: 99.498 us/op
Iteration   5: 128.232 us/op

# Run progress: 51.33% complete, ETA 00:22:30
# Fork: 2 of 2
# Warmup Iteration   1: 2101.720 us/op
# Warmup Iteration   2: 1350.731 us/op
# Warmup Iteration   3: 1249.030 us/op
# Warmup Iteration   4: 986.440 us/op
# Warmup Iteration   5: 970.317 us/op
Iteration   1: 96.349 us/op
Iteration   2: 153.390 us/op
Iteration   3: 118.663 us/op
Iteration   4: 100.845 us/op
Iteration   5: 95.857 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    123.192 ±(99.9%) 50.204 us/op

  Histogram, us/op:
    [  0.000,  25.000) = 0 
    [ 25.000,  50.000) = 0 
    [ 50.000,  75.000) = 0 
    [ 75.000, 100.000) = 3 
    [100.000, 125.000) = 4 
    [125.000, 150.000) = 1 
    [150.000, 175.000) = 1 
    [175.000, 200.000) = 0 
    [200.000, 225.000) = 1 
    [225.000, 250.000) = 0 
    [250.000, 275.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     95.857 us/op
     p(50.0000) =    117.965 us/op
     p(90.0000) =    198.115 us/op
     p(95.0000) =    203.084 us/op
     p(99.0000) =    203.084 us/op
     p(99.9000) =    203.084 us/op
     p(99.9900) =    203.084 us/op
     p(99.9990) =    203.084 us/op
     p(99.9999) =    203.084 us/op
    p(100.0000) =    203.084 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.125)

# Run progress: 51.52% complete, ETA 00:22:25
# Fork: 1 of 2
# Warmup Iteration   1: 2183.261 us/op
# Warmup Iteration   2: 1649.935 us/op
# Warmup Iteration   3: 1350.144 us/op
# Warmup Iteration   4: 1043.743 us/op
# Warmup Iteration   5: 1050.976 us/op
Iteration   1: 192.364 us/op
Iteration   2: 190.722 us/op
Iteration   3: 205.724 us/op
Iteration   4: 198.993 us/op
Iteration   5: 193.000 us/op

# Run progress: 51.70% complete, ETA 00:22:20
# Fork: 2 of 2
# Warmup Iteration   1: 2249.703 us/op
# Warmup Iteration   2: 1509.997 us/op
# Warmup Iteration   3: 1447.322 us/op
# Warmup Iteration   4: 1047.381 us/op
# Warmup Iteration   5: 1050.483 us/op
Iteration   1: 194.980 us/op
Iteration   2: 247.956 us/op
Iteration   3: 186.009 us/op
Iteration   4: 186.033 us/op
Iteration   5: 186.812 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    198.259 ±(99.9%) 27.998 us/op

  Histogram, us/op:
    [180.000, 185.000) = 0 
    [185.000, 190.000) = 3 
    [190.000, 195.000) = 4 
    [195.000, 200.000) = 1 
    [200.000, 205.000) = 0 
    [205.000, 210.000) = 1 
    [210.000, 215.000) = 0 
    [215.000, 220.000) = 0 
    [220.000, 225.000) = 0 
    [225.000, 230.000) = 0 
    [230.000, 235.000) = 0 
    [235.000, 240.000) = 0 
    [240.000, 245.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    186.009 us/op
     p(50.0000) =    192.682 us/op
     p(90.0000) =    243.733 us/op
     p(95.0000) =    247.956 us/op
     p(99.0000) =    247.956 us/op
     p(99.9000) =    247.956 us/op
     p(99.9900) =    247.956 us/op
     p(99.9990) =    247.956 us/op
     p(99.9999) =    247.956 us/op
    p(100.0000) =    247.956 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.250)

# Run progress: 51.89% complete, ETA 00:22:14
# Fork: 1 of 2
# Warmup Iteration   1: 2548.633 us/op
# Warmup Iteration   2: 1406.112 us/op
# Warmup Iteration   3: 1211.540 us/op
# Warmup Iteration   4: 1432.250 us/op
# Warmup Iteration   5: 1073.350 us/op
Iteration   1: 183.986 us/op
Iteration   2: 231.286 us/op
Iteration   3: 186.423 us/op
Iteration   4: 206.860 us/op
Iteration   5: 290.004 us/op

# Run progress: 52.08% complete, ETA 00:22:09
# Fork: 2 of 2
# Warmup Iteration   1: 2172.854 us/op
# Warmup Iteration   2: 1400.322 us/op
# Warmup Iteration   3: 1576.023 us/op
# Warmup Iteration   4: 1091.082 us/op
# Warmup Iteration   5: 1062.508 us/op
Iteration   1: 182.093 us/op
Iteration   2: 244.607 us/op
Iteration   3: 193.128 us/op
Iteration   4: 204.391 us/op
Iteration   5: 199.010 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    212.179 ±(99.9%) 51.546 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 0 
    [125.000, 137.500) = 0 
    [137.500, 150.000) = 0 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 0 
    [175.000, 187.500) = 3 
    [187.500, 200.000) = 2 
    [200.000, 212.500) = 2 
    [212.500, 225.000) = 0 
    [225.000, 237.500) = 1 
    [237.500, 250.000) = 1 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    182.093 us/op
     p(50.0000) =    201.700 us/op
     p(90.0000) =    285.464 us/op
     p(95.0000) =    290.004 us/op
     p(99.0000) =    290.004 us/op
     p(99.9000) =    290.004 us/op
     p(99.9900) =    290.004 us/op
     p(99.9990) =    290.004 us/op
     p(99.9999) =    290.004 us/op
    p(100.0000) =    290.004 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.375)

# Run progress: 52.27% complete, ETA 00:22:04
# Fork: 1 of 2
# Warmup Iteration   1: 2155.377 us/op
# Warmup Iteration   2: 1432.576 us/op
# Warmup Iteration   3: 1391.406 us/op
# Warmup Iteration   4: 1325.844 us/op
# Warmup Iteration   5: 1065.636 us/op
Iteration   1: 201.258 us/op
Iteration   2: 249.931 us/op
Iteration   3: 208.162 us/op
Iteration   4: 191.207 us/op
Iteration   5: 202.220 us/op

# Run progress: 52.46% complete, ETA 00:21:58
# Fork: 2 of 2
# Warmup Iteration   1: 2239.067 us/op
# Warmup Iteration   2: 1448.439 us/op
# Warmup Iteration   3: 1286.153 us/op
# Warmup Iteration   4: 1312.092 us/op
# Warmup Iteration   5: 1059.723 us/op
Iteration   1: 180.974 us/op
Iteration   2: 288.586 us/op
Iteration   3: 197.857 us/op
Iteration   4: 198.497 us/op
Iteration   5: 186.540 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    210.523 ±(99.9%) 50.228 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 0 
    [125.000, 137.500) = 0 
    [137.500, 150.000) = 0 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 0 
    [175.000, 187.500) = 2 
    [187.500, 200.000) = 3 
    [200.000, 212.500) = 3 
    [212.500, 225.000) = 0 
    [225.000, 237.500) = 0 
    [237.500, 250.000) = 1 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    180.974 us/op
     p(50.0000) =    199.878 us/op
     p(90.0000) =    284.721 us/op
     p(95.0000) =    288.586 us/op
     p(99.0000) =    288.586 us/op
     p(99.9000) =    288.586 us/op
     p(99.9900) =    288.586 us/op
     p(99.9990) =    288.586 us/op
     p(99.9999) =    288.586 us/op
    p(100.0000) =    288.586 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.5)

# Run progress: 52.65% complete, ETA 00:21:53
# Fork: 1 of 2
# Warmup Iteration   1: 2271.409 us/op
# Warmup Iteration   2: 1476.248 us/op
# Warmup Iteration   3: 1519.796 us/op
# Warmup Iteration   4: 1131.791 us/op
# Warmup Iteration   5: 1104.186 us/op
Iteration   1: 190.279 us/op
Iteration   2: 232.350 us/op
Iteration   3: 198.023 us/op
Iteration   4: 193.037 us/op
Iteration   5: 211.084 us/op

# Run progress: 52.84% complete, ETA 00:21:48
# Fork: 2 of 2
# Warmup Iteration   1: 2083.458 us/op
# Warmup Iteration   2: 1562.990 us/op
# Warmup Iteration   3: 1328.336 us/op
# Warmup Iteration   4: 1047.931 us/op
# Warmup Iteration   5: 1040.644 us/op
Iteration   1: 231.677 us/op
Iteration   2: 236.845 us/op
Iteration   3: 179.181 us/op
Iteration   4: 203.140 us/op
Iteration   5: 214.361 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    208.998 ±(99.9%) 29.887 us/op

  Histogram, us/op:
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 1 
    [180.000, 185.000) = 0 
    [185.000, 190.000) = 0 
    [190.000, 195.000) = 2 
    [195.000, 200.000) = 1 
    [200.000, 205.000) = 1 
    [205.000, 210.000) = 0 
    [210.000, 215.000) = 2 
    [215.000, 220.000) = 0 
    [220.000, 225.000) = 0 
    [225.000, 230.000) = 0 
    [230.000, 235.000) = 2 

  Percentiles, us/op:
      p(0.0000) =    179.181 us/op
     p(50.0000) =    207.112 us/op
     p(90.0000) =    236.396 us/op
     p(95.0000) =    236.845 us/op
     p(99.0000) =    236.845 us/op
     p(99.9000) =    236.845 us/op
     p(99.9900) =    236.845 us/op
     p(99.9990) =    236.845 us/op
     p(99.9999) =    236.845 us/op
    p(100.0000) =    236.845 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.625)

# Run progress: 53.03% complete, ETA 00:21:43
# Fork: 1 of 2
# Warmup Iteration   1: 2168.538 us/op
# Warmup Iteration   2: 1515.641 us/op
# Warmup Iteration   3: 1513.451 us/op
# Warmup Iteration   4: 1093.647 us/op
# Warmup Iteration   5: 1070.707 us/op
Iteration   1: 191.583 us/op
Iteration   2: 257.396 us/op
Iteration   3: 233.365 us/op
Iteration   4: 226.213 us/op
Iteration   5: 208.045 us/op

# Run progress: 53.22% complete, ETA 00:21:37
# Fork: 2 of 2
# Warmup Iteration   1: 2083.113 us/op
# Warmup Iteration   2: 1423.146 us/op
# Warmup Iteration   3: 1271.830 us/op
# Warmup Iteration   4: 1389.722 us/op
# Warmup Iteration   5: 1071.053 us/op
Iteration   1: 190.441 us/op
Iteration   2: 270.827 us/op
Iteration   3: 189.466 us/op
Iteration   4: 185.586 us/op
Iteration   5: 194.692 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    214.761 ±(99.9%) 46.478 us/op

  Histogram, us/op:
    [180.000, 190.000) = 2 
    [190.000, 200.000) = 3 
    [200.000, 210.000) = 1 
    [210.000, 220.000) = 0 
    [220.000, 230.000) = 1 
    [230.000, 240.000) = 1 
    [240.000, 250.000) = 0 
    [250.000, 260.000) = 1 
    [260.000, 270.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    185.586 us/op
     p(50.0000) =    201.368 us/op
     p(90.0000) =    269.484 us/op
     p(95.0000) =    270.827 us/op
     p(99.0000) =    270.827 us/op
     p(99.9000) =    270.827 us/op
     p(99.9900) =    270.827 us/op
     p(99.9990) =    270.827 us/op
     p(99.9999) =    270.827 us/op
    p(100.0000) =    270.827 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.75)

# Run progress: 53.41% complete, ETA 00:21:32
# Fork: 1 of 2
# Warmup Iteration   1: 2063.083 us/op
# Warmup Iteration   2: 1399.727 us/op
# Warmup Iteration   3: 1538.735 us/op
# Warmup Iteration   4: 1093.378 us/op
# Warmup Iteration   5: 1071.287 us/op
Iteration   1: 214.447 us/op
Iteration   2: 240.053 us/op
Iteration   3: 186.709 us/op
Iteration   4: 186.480 us/op
Iteration   5: 187.934 us/op

# Run progress: 53.60% complete, ETA 00:21:27
# Fork: 2 of 2
# Warmup Iteration   1: 2053.775 us/op
# Warmup Iteration   2: 1653.058 us/op
# Warmup Iteration   3: 1304.146 us/op
# Warmup Iteration   4: 1317.590 us/op
# Warmup Iteration   5: 1051.691 us/op
Iteration   1: 179.494 us/op
Iteration   2: 245.535 us/op
Iteration   3: 202.742 us/op
Iteration   4: 182.806 us/op
Iteration   5: 188.413 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    201.461 ±(99.9%) 36.438 us/op

  Histogram, us/op:
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 1 
    [180.000, 185.000) = 1 
    [185.000, 190.000) = 4 
    [190.000, 195.000) = 0 
    [195.000, 200.000) = 0 
    [200.000, 205.000) = 1 
    [205.000, 210.000) = 0 
    [210.000, 215.000) = 1 
    [215.000, 220.000) = 0 
    [220.000, 225.000) = 0 
    [225.000, 230.000) = 0 
    [230.000, 235.000) = 0 
    [235.000, 240.000) = 0 
    [240.000, 245.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    179.494 us/op
     p(50.0000) =    188.174 us/op
     p(90.0000) =    244.987 us/op
     p(95.0000) =    245.535 us/op
     p(99.0000) =    245.535 us/op
     p(99.9000) =    245.535 us/op
     p(99.9900) =    245.535 us/op
     p(99.9990) =    245.535 us/op
     p(99.9999) =    245.535 us/op
    p(100.0000) =    245.535 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.875)

# Run progress: 53.79% complete, ETA 00:21:22
# Fork: 1 of 2
# Warmup Iteration   1: 2297.752 us/op
# Warmup Iteration   2: 1498.198 us/op
# Warmup Iteration   3: 1310.741 us/op
# Warmup Iteration   4: 1329.780 us/op
# Warmup Iteration   5: 1046.252 us/op
Iteration   1: 187.256 us/op
Iteration   2: 265.518 us/op
Iteration   3: 186.844 us/op
Iteration   4: 184.783 us/op
Iteration   5: 223.193 us/op

# Run progress: 53.98% complete, ETA 00:21:16
# Fork: 2 of 2
# Warmup Iteration   1: 2301.599 us/op
# Warmup Iteration   2: 1439.684 us/op
# Warmup Iteration   3: 1597.520 us/op
# Warmup Iteration   4: 1076.443 us/op
# Warmup Iteration   5: 1070.761 us/op
Iteration   1: 192.207 us/op
Iteration   2: 246.880 us/op
Iteration   3: 193.438 us/op
Iteration   4: 225.182 us/op
Iteration   5: 185.456 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    209.076 ±(99.9%) 44.282 us/op

  Histogram, us/op:
    [180.000, 185.000) = 1 
    [185.000, 190.000) = 3 
    [190.000, 195.000) = 2 
    [195.000, 200.000) = 0 
    [200.000, 205.000) = 0 
    [205.000, 210.000) = 0 
    [210.000, 215.000) = 0 
    [215.000, 220.000) = 0 
    [220.000, 225.000) = 1 
    [225.000, 230.000) = 1 
    [230.000, 235.000) = 0 
    [235.000, 240.000) = 0 
    [240.000, 245.000) = 0 
    [245.000, 250.000) = 1 
    [250.000, 255.000) = 0 
    [255.000, 260.000) = 0 
    [260.000, 265.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    184.783 us/op
     p(50.0000) =    192.823 us/op
     p(90.0000) =    263.654 us/op
     p(95.0000) =    265.518 us/op
     p(99.0000) =    265.518 us/op
     p(99.9000) =    265.518 us/op
     p(99.9900) =    265.518 us/op
     p(99.9990) =    265.518 us/op
     p(99.9999) =    265.518 us/op
    p(100.0000) =    265.518 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 1)

# Run progress: 54.17% complete, ETA 00:21:11
# Fork: 1 of 2
# Warmup Iteration   1: 2263.992 us/op
# Warmup Iteration   2: 1443.971 us/op
# Warmup Iteration   3: 1259.840 us/op
# Warmup Iteration   4: 1287.726 us/op
# Warmup Iteration   5: 1071.231 us/op
Iteration   1: 188.395 us/op
Iteration   2: 237.438 us/op
Iteration   3: 188.768 us/op
Iteration   4: 190.328 us/op
Iteration   5: 195.017 us/op

# Run progress: 54.36% complete, ETA 00:21:06
# Fork: 2 of 2
# Warmup Iteration   1: 2328.443 us/op
# Warmup Iteration   2: 1403.027 us/op
# Warmup Iteration   3: 1349.994 us/op
# Warmup Iteration   4: 1401.340 us/op
# Warmup Iteration   5: 1062.101 us/op
Iteration   1: 203.822 us/op
Iteration   2: 280.736 us/op
Iteration   3: 213.975 us/op
Iteration   4: 191.498 us/op
Iteration   5: 239.951 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    212.993 ±(99.9%) 46.433 us/op

  Histogram, us/op:
    [180.000, 190.000) = 2 
    [190.000, 200.000) = 3 
    [200.000, 210.000) = 1 
    [210.000, 220.000) = 1 
    [220.000, 230.000) = 0 
    [230.000, 240.000) = 2 
    [240.000, 250.000) = 0 
    [250.000, 260.000) = 0 
    [260.000, 270.000) = 0 
    [270.000, 280.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    188.395 us/op
     p(50.0000) =    199.420 us/op
     p(90.0000) =    276.658 us/op
     p(95.0000) =    280.736 us/op
     p(99.0000) =    280.736 us/op
     p(99.9000) =    280.736 us/op
     p(99.9900) =    280.736 us/op
     p(99.9990) =    280.736 us/op
     p(99.9999) =    280.736 us/op
    p(100.0000) =    280.736 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.125)

# Run progress: 54.55% complete, ETA 00:21:01
# Fork: 1 of 2
# Warmup Iteration   1: 2778.070 us/op
# Warmup Iteration   2: 2178.823 us/op
# Warmup Iteration   3: 2462.143 us/op
# Warmup Iteration   4: 1766.444 us/op
# Warmup Iteration   5: 1844.865 us/op
Iteration   1: 699.931 us/op
Iteration   2: 740.986 us/op
Iteration   3: 722.816 us/op
Iteration   4: 695.360 us/op
Iteration   5: 723.449 us/op

# Run progress: 54.73% complete, ETA 00:20:55
# Fork: 2 of 2
# Warmup Iteration   1: 2795.088 us/op
# Warmup Iteration   2: 2063.601 us/op
# Warmup Iteration   3: 2570.570 us/op
# Warmup Iteration   4: 1698.593 us/op
# Warmup Iteration   5: 1857.730 us/op
Iteration   1: 701.049 us/op
Iteration   2: 772.376 us/op
Iteration   3: 700.571 us/op
Iteration   4: 708.078 us/op
Iteration   5: 718.019 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    718.264 ±(99.9%) 35.869 us/op

  Histogram, us/op:
    [690.000, 695.000) = 0 
    [695.000, 700.000) = 2 
    [700.000, 705.000) = 2 
    [705.000, 710.000) = 1 
    [710.000, 715.000) = 0 
    [715.000, 720.000) = 1 
    [720.000, 725.000) = 2 
    [725.000, 730.000) = 0 
    [730.000, 735.000) = 0 
    [735.000, 740.000) = 0 
    [740.000, 745.000) = 1 
    [745.000, 750.000) = 0 
    [750.000, 755.000) = 0 
    [755.000, 760.000) = 0 
    [760.000, 765.000) = 0 
    [765.000, 770.000) = 0 
    [770.000, 775.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    695.360 us/op
     p(50.0000) =    713.049 us/op
     p(90.0000) =    769.237 us/op
     p(95.0000) =    772.376 us/op
     p(99.0000) =    772.376 us/op
     p(99.9000) =    772.376 us/op
     p(99.9900) =    772.376 us/op
     p(99.9990) =    772.376 us/op
     p(99.9999) =    772.376 us/op
    p(100.0000) =    772.376 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.250)

# Run progress: 54.92% complete, ETA 00:20:50
# Fork: 1 of 2
# Warmup Iteration   1: 2895.327 us/op
# Warmup Iteration   2: 2185.005 us/op
# Warmup Iteration   3: 2602.098 us/op
# Warmup Iteration   4: 1666.070 us/op
# Warmup Iteration   5: 1770.690 us/op
Iteration   1: 694.809 us/op
Iteration   2: 786.231 us/op
Iteration   3: 810.911 us/op
Iteration   4: 687.001 us/op
Iteration   5: 753.639 us/op

# Run progress: 55.11% complete, ETA 00:20:45
# Fork: 2 of 2
# Warmup Iteration   1: 2873.525 us/op
# Warmup Iteration   2: 2139.262 us/op
# Warmup Iteration   3: 2620.168 us/op
# Warmup Iteration   4: 1699.152 us/op
# Warmup Iteration   5: 1797.951 us/op
Iteration   1: 745.727 us/op
Iteration   2: 801.001 us/op
Iteration   3: 781.399 us/op
Iteration   4: 751.122 us/op
Iteration   5: 726.038 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    753.788 ±(99.9%) 63.921 us/op

  Histogram, us/op:
    [600.000, 625.000) = 0 
    [625.000, 650.000) = 0 
    [650.000, 675.000) = 0 
    [675.000, 700.000) = 2 
    [700.000, 725.000) = 0 
    [725.000, 750.000) = 2 
    [750.000, 775.000) = 2 
    [775.000, 800.000) = 2 
    [800.000, 825.000) = 2 
    [825.000, 850.000) = 0 
    [850.000, 875.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    687.001 us/op
     p(50.0000) =    752.381 us/op
     p(90.0000) =    809.920 us/op
     p(95.0000) =    810.911 us/op
     p(99.0000) =    810.911 us/op
     p(99.9000) =    810.911 us/op
     p(99.9900) =    810.911 us/op
     p(99.9990) =    810.911 us/op
     p(99.9999) =    810.911 us/op
    p(100.0000) =    810.911 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.375)

# Run progress: 55.30% complete, ETA 00:20:40
# Fork: 1 of 2
# Warmup Iteration   1: 3056.692 us/op
# Warmup Iteration   2: 2125.572 us/op
# Warmup Iteration   3: 2577.396 us/op
# Warmup Iteration   4: 1691.591 us/op
# Warmup Iteration   5: 1784.350 us/op
Iteration   1: 688.219 us/op
Iteration   2: 742.903 us/op
Iteration   3: 710.198 us/op
Iteration   4: 698.800 us/op
Iteration   5: 696.650 us/op

# Run progress: 55.49% complete, ETA 00:20:34
# Fork: 2 of 2
# Warmup Iteration   1: 2670.339 us/op
# Warmup Iteration   2: 2370.806 us/op
# Warmup Iteration   3: 2622.734 us/op
# Warmup Iteration   4: 1673.212 us/op
# Warmup Iteration   5: 1798.933 us/op
Iteration   1: 697.095 us/op
Iteration   2: 754.491 us/op
Iteration   3: 695.445 us/op
Iteration   4: 704.593 us/op
Iteration   5: 733.618 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    712.201 ±(99.9%) 34.759 us/op

  Histogram, us/op:
    [680.000, 685.000) = 0 
    [685.000, 690.000) = 1 
    [690.000, 695.000) = 0 
    [695.000, 700.000) = 4 
    [700.000, 705.000) = 1 
    [705.000, 710.000) = 0 
    [710.000, 715.000) = 1 
    [715.000, 720.000) = 0 
    [720.000, 725.000) = 0 
    [725.000, 730.000) = 0 
    [730.000, 735.000) = 1 
    [735.000, 740.000) = 0 
    [740.000, 745.000) = 1 
    [745.000, 750.000) = 0 
    [750.000, 755.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    688.219 us/op
     p(50.0000) =    701.697 us/op
     p(90.0000) =    753.332 us/op
     p(95.0000) =    754.491 us/op
     p(99.0000) =    754.491 us/op
     p(99.9000) =    754.491 us/op
     p(99.9900) =    754.491 us/op
     p(99.9990) =    754.491 us/op
     p(99.9999) =    754.491 us/op
    p(100.0000) =    754.491 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.5)

# Run progress: 55.68% complete, ETA 00:20:29
# Fork: 1 of 2
# Warmup Iteration   1: 3117.059 us/op
# Warmup Iteration   2: 2117.575 us/op
# Warmup Iteration   3: 2475.265 us/op
# Warmup Iteration   4: 1666.239 us/op
# Warmup Iteration   5: 1857.939 us/op
Iteration   1: 708.477 us/op
Iteration   2: 892.863 us/op
Iteration   3: 710.615 us/op
Iteration   4: 723.231 us/op
Iteration   5: 728.057 us/op

# Run progress: 55.87% complete, ETA 00:20:24
# Fork: 2 of 2
# Warmup Iteration   1: 2785.942 us/op
# Warmup Iteration   2: 2107.169 us/op
# Warmup Iteration   3: 2557.350 us/op
# Warmup Iteration   4: 1628.124 us/op
# Warmup Iteration   5: 1803.675 us/op
Iteration   1: 725.700 us/op
Iteration   2: 710.764 us/op
Iteration   3: 678.355 us/op
Iteration   4: 730.189 us/op
Iteration   5: 715.117 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    732.337 ±(99.9%) 88.207 us/op

  Histogram, us/op:
    [600.000, 625.000) = 0 
    [625.000, 650.000) = 0 
    [650.000, 675.000) = 0 
    [675.000, 700.000) = 1 
    [700.000, 725.000) = 5 
    [725.000, 750.000) = 3 
    [750.000, 775.000) = 0 
    [775.000, 800.000) = 0 
    [800.000, 825.000) = 0 
    [825.000, 850.000) = 0 
    [850.000, 875.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    678.355 us/op
     p(50.0000) =    719.174 us/op
     p(90.0000) =    876.596 us/op
     p(95.0000) =    892.863 us/op
     p(99.0000) =    892.863 us/op
     p(99.9000) =    892.863 us/op
     p(99.9900) =    892.863 us/op
     p(99.9990) =    892.863 us/op
     p(99.9999) =    892.863 us/op
    p(100.0000) =    892.863 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.625)

# Run progress: 56.06% complete, ETA 00:20:19
# Fork: 1 of 2
# Warmup Iteration   1: 2942.348 us/op
# Warmup Iteration   2: 2046.168 us/op
# Warmup Iteration   3: 2544.019 us/op
# Warmup Iteration   4: 1666.326 us/op
# Warmup Iteration   5: 1804.425 us/op
Iteration   1: 688.666 us/op
Iteration   2: 768.610 us/op
Iteration   3: 721.574 us/op
Iteration   4: 713.632 us/op
Iteration   5: 709.760 us/op

# Run progress: 56.25% complete, ETA 00:20:13
# Fork: 2 of 2
# Warmup Iteration   1: 2978.257 us/op
# Warmup Iteration   2: 2117.109 us/op
# Warmup Iteration   3: 2844.152 us/op
# Warmup Iteration   4: 1657.306 us/op
# Warmup Iteration   5: 1756.215 us/op
Iteration   1: 679.580 us/op
Iteration   2: 794.077 us/op
Iteration   3: 726.000 us/op
Iteration   4: 716.128 us/op
Iteration   5: 742.076 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    726.010 ±(99.9%) 52.350 us/op

  Histogram, us/op:
    [600.000, 612.500) = 0 
    [612.500, 625.000) = 0 
    [625.000, 637.500) = 0 
    [637.500, 650.000) = 0 
    [650.000, 662.500) = 0 
    [662.500, 675.000) = 0 
    [675.000, 687.500) = 1 
    [687.500, 700.000) = 1 
    [700.000, 712.500) = 1 
    [712.500, 725.000) = 3 
    [725.000, 737.500) = 1 
    [737.500, 750.000) = 1 
    [750.000, 762.500) = 0 
    [762.500, 775.000) = 1 
    [775.000, 787.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    679.580 us/op
     p(50.0000) =    718.851 us/op
     p(90.0000) =    791.530 us/op
     p(95.0000) =    794.077 us/op
     p(99.0000) =    794.077 us/op
     p(99.9000) =    794.077 us/op
     p(99.9900) =    794.077 us/op
     p(99.9990) =    794.077 us/op
     p(99.9999) =    794.077 us/op
    p(100.0000) =    794.077 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.75)

# Run progress: 56.44% complete, ETA 00:20:08
# Fork: 1 of 2
# Warmup Iteration   1: 2774.727 us/op
# Warmup Iteration   2: 2069.753 us/op
# Warmup Iteration   3: 2526.824 us/op
# Warmup Iteration   4: 1664.736 us/op
# Warmup Iteration   5: 1762.887 us/op
Iteration   1: 705.424 us/op
Iteration   2: 808.363 us/op
Iteration   3: 704.257 us/op
Iteration   4: 705.622 us/op
Iteration   5: 715.913 us/op

# Run progress: 56.63% complete, ETA 00:20:03
# Fork: 2 of 2
# Warmup Iteration   1: 2948.545 us/op
# Warmup Iteration   2: 2090.825 us/op
# Warmup Iteration   3: 2398.887 us/op
# Warmup Iteration   4: 1665.912 us/op
# Warmup Iteration   5: 1793.640 us/op
Iteration   1: 750.285 us/op
Iteration   2: 777.446 us/op
Iteration   3: 697.715 us/op
Iteration   4: 707.494 us/op
Iteration   5: 712.461 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    728.498 ±(99.9%) 56.785 us/op

  Histogram, us/op:
    [600.000, 625.000) = 0 
    [625.000, 650.000) = 0 
    [650.000, 675.000) = 0 
    [675.000, 700.000) = 1 
    [700.000, 725.000) = 6 
    [725.000, 750.000) = 0 
    [750.000, 775.000) = 1 
    [775.000, 800.000) = 1 
    [800.000, 825.000) = 1 
    [825.000, 850.000) = 0 
    [850.000, 875.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    697.715 us/op
     p(50.0000) =    709.978 us/op
     p(90.0000) =    805.271 us/op
     p(95.0000) =    808.363 us/op
     p(99.0000) =    808.363 us/op
     p(99.9000) =    808.363 us/op
     p(99.9900) =    808.363 us/op
     p(99.9990) =    808.363 us/op
     p(99.9999) =    808.363 us/op
    p(100.0000) =    808.363 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.875)

# Run progress: 56.82% complete, ETA 00:19:58
# Fork: 1 of 2
# Warmup Iteration   1: 2755.615 us/op
# Warmup Iteration   2: 2119.249 us/op
# Warmup Iteration   3: 2486.190 us/op
# Warmup Iteration   4: 1639.930 us/op
# Warmup Iteration   5: 1865.848 us/op
Iteration   1: 912.434 us/op
Iteration   2: 810.554 us/op
Iteration   3: 726.485 us/op
Iteration   4: 730.683 us/op
Iteration   5: 745.386 us/op

# Run progress: 57.01% complete, ETA 00:19:52
# Fork: 2 of 2
# Warmup Iteration   1: 2838.242 us/op
# Warmup Iteration   2: 2363.717 us/op
# Warmup Iteration   3: 2544.801 us/op
# Warmup Iteration   4: 1688.319 us/op
# Warmup Iteration   5: 1805.298 us/op
Iteration   1: 710.848 us/op
Iteration   2: 762.639 us/op
Iteration   3: 708.656 us/op
Iteration   4: 719.367 us/op
Iteration   5: 720.781 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    754.783 ±(99.9%) 95.571 us/op

  Histogram, us/op:
    [ 700.000,  725.000) = 4 
    [ 725.000,  750.000) = 3 
    [ 750.000,  775.000) = 1 
    [ 775.000,  800.000) = 0 
    [ 800.000,  825.000) = 1 
    [ 825.000,  850.000) = 0 
    [ 850.000,  875.000) = 0 
    [ 875.000,  900.000) = 0 
    [ 900.000,  925.000) = 1 
    [ 925.000,  950.000) = 0 
    [ 950.000,  975.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    708.656 us/op
     p(50.0000) =    728.584 us/op
     p(90.0000) =    902.246 us/op
     p(95.0000) =    912.434 us/op
     p(99.0000) =    912.434 us/op
     p(99.9000) =    912.434 us/op
     p(99.9900) =    912.434 us/op
     p(99.9990) =    912.434 us/op
     p(99.9999) =    912.434 us/op
    p(100.0000) =    912.434 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 1)

# Run progress: 57.20% complete, ETA 00:19:47
# Fork: 1 of 2
# Warmup Iteration   1: 2800.637 us/op
# Warmup Iteration   2: 2178.046 us/op
# Warmup Iteration   3: 2496.346 us/op
# Warmup Iteration   4: 1650.492 us/op
# Warmup Iteration   5: 1750.817 us/op
Iteration   1: 698.176 us/op
Iteration   2: 746.960 us/op
Iteration   3: 705.292 us/op
Iteration   4: 680.139 us/op
Iteration   5: 719.873 us/op

# Run progress: 57.39% complete, ETA 00:19:42
# Fork: 2 of 2
# Warmup Iteration   1: 2711.723 us/op
# Warmup Iteration   2: 2084.154 us/op
# Warmup Iteration   3: 2645.001 us/op
# Warmup Iteration   4: 1686.683 us/op
# Warmup Iteration   5: 1798.749 us/op
Iteration   1: 700.703 us/op
Iteration   2: 718.962 us/op
Iteration   3: 722.966 us/op
Iteration   4: 728.720 us/op
Iteration   5: 733.818 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =    715.561 ±(99.9%) 29.646 us/op

  Histogram, us/op:
    [680.000, 685.000) = 1 
    [685.000, 690.000) = 0 
    [690.000, 695.000) = 0 
    [695.000, 700.000) = 1 
    [700.000, 705.000) = 1 
    [705.000, 710.000) = 1 
    [710.000, 715.000) = 0 
    [715.000, 720.000) = 2 
    [720.000, 725.000) = 1 
    [725.000, 730.000) = 1 
    [730.000, 735.000) = 1 
    [735.000, 740.000) = 0 
    [740.000, 745.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    680.139 us/op
     p(50.0000) =    719.418 us/op
     p(90.0000) =    745.646 us/op
     p(95.0000) =    746.960 us/op
     p(99.0000) =    746.960 us/op
     p(99.9000) =    746.960 us/op
     p(99.9900) =    746.960 us/op
     p(99.9990) =    746.960 us/op
     p(99.9999) =    746.960 us/op
    p(100.0000) =    746.960 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.125)

# Run progress: 57.58% complete, ETA 00:19:37
# Fork: 1 of 2
# Warmup Iteration   1: 3674.537 us/op
# Warmup Iteration   2: 3281.655 us/op
# Warmup Iteration   3: 2940.878 us/op
# Warmup Iteration   4: 2506.987 us/op
# Warmup Iteration   5: 2423.150 us/op
Iteration   1: 1423.738 us/op
Iteration   2: 1394.638 us/op
Iteration   3: 1397.690 us/op
Iteration   4: 1404.062 us/op
Iteration   5: 1417.885 us/op

# Run progress: 57.77% complete, ETA 00:19:31
# Fork: 2 of 2
# Warmup Iteration   1: 3515.581 us/op
# Warmup Iteration   2: 3191.245 us/op
# Warmup Iteration   3: 3004.641 us/op
# Warmup Iteration   4: 2444.643 us/op
# Warmup Iteration   5: 2528.802 us/op
Iteration   1: 1395.577 us/op
Iteration   2: 1476.925 us/op
Iteration   3: 1420.423 us/op
Iteration   4: 1444.133 us/op
Iteration   5: 1419.969 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1419.504 ±(99.9%) 38.481 us/op

  Histogram, us/op:
    [1390.000, 1395.000) = 1 
    [1395.000, 1400.000) = 2 
    [1400.000, 1405.000) = 1 
    [1405.000, 1410.000) = 0 
    [1410.000, 1415.000) = 0 
    [1415.000, 1420.000) = 2 
    [1420.000, 1425.000) = 2 
    [1425.000, 1430.000) = 0 
    [1430.000, 1435.000) = 0 
    [1435.000, 1440.000) = 0 
    [1440.000, 1445.000) = 1 
    [1445.000, 1450.000) = 0 
    [1450.000, 1455.000) = 0 
    [1455.000, 1460.000) = 0 
    [1460.000, 1465.000) = 0 
    [1465.000, 1470.000) = 0 
    [1470.000, 1475.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1394.638 us/op
     p(50.0000) =   1418.927 us/op
     p(90.0000) =   1473.646 us/op
     p(95.0000) =   1476.925 us/op
     p(99.0000) =   1476.925 us/op
     p(99.9000) =   1476.925 us/op
     p(99.9900) =   1476.925 us/op
     p(99.9990) =   1476.925 us/op
     p(99.9999) =   1476.925 us/op
    p(100.0000) =   1476.925 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.250)

# Run progress: 57.95% complete, ETA 00:19:26
# Fork: 1 of 2
# Warmup Iteration   1: 3481.818 us/op
# Warmup Iteration   2: 3452.851 us/op
# Warmup Iteration   3: 2624.876 us/op
# Warmup Iteration   4: 2517.164 us/op
# Warmup Iteration   5: 2403.105 us/op
Iteration   1: 1439.931 us/op
Iteration   2: 1428.786 us/op
Iteration   3: 1377.754 us/op
Iteration   4: 1432.712 us/op
Iteration   5: 1394.737 us/op

# Run progress: 58.14% complete, ETA 00:19:21
# Fork: 2 of 2
# Warmup Iteration   1: 3525.529 us/op
# Warmup Iteration   2: 3302.819 us/op
# Warmup Iteration   3: 3089.079 us/op
# Warmup Iteration   4: 2426.642 us/op
# Warmup Iteration   5: 2430.941 us/op
Iteration   1: 1415.206 us/op
Iteration   2: 1549.655 us/op
Iteration   3: 1456.328 us/op
Iteration   4: 1478.046 us/op
Iteration   5: 1455.789 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1442.894 ±(99.9%) 72.367 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 0 
    [1375.000, 1400.000) = 2 
    [1400.000, 1425.000) = 1 
    [1425.000, 1450.000) = 3 
    [1450.000, 1475.000) = 2 
    [1475.000, 1500.000) = 1 
    [1500.000, 1525.000) = 0 
    [1525.000, 1550.000) = 1 
    [1550.000, 1575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1377.754 us/op
     p(50.0000) =   1436.322 us/op
     p(90.0000) =   1542.494 us/op
     p(95.0000) =   1549.655 us/op
     p(99.0000) =   1549.655 us/op
     p(99.9000) =   1549.655 us/op
     p(99.9900) =   1549.655 us/op
     p(99.9990) =   1549.655 us/op
     p(99.9999) =   1549.655 us/op
    p(100.0000) =   1549.655 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.375)

# Run progress: 58.33% complete, ETA 00:19:16
# Fork: 1 of 2
# Warmup Iteration   1: 3716.010 us/op
# Warmup Iteration   2: 3227.096 us/op
# Warmup Iteration   3: 3063.337 us/op
# Warmup Iteration   4: 2530.958 us/op
# Warmup Iteration   5: 2511.170 us/op
Iteration   1: 1410.740 us/op
Iteration   2: 1442.274 us/op
Iteration   3: 1353.884 us/op
Iteration   4: 1403.880 us/op
Iteration   5: 1392.429 us/op

# Run progress: 58.52% complete, ETA 00:19:10
# Fork: 2 of 2
# Warmup Iteration   1: 3705.248 us/op
# Warmup Iteration   2: 3095.115 us/op
# Warmup Iteration   3: 2974.788 us/op
# Warmup Iteration   4: 2409.585 us/op
# Warmup Iteration   5: 2485.139 us/op
Iteration   1: 1431.838 us/op
Iteration   2: 1423.183 us/op
Iteration   3: 1388.949 us/op
Iteration   4: 1522.206 us/op
Iteration   5: 1416.409 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1418.579 ±(99.9%) 66.717 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 1 
    [1375.000, 1400.000) = 2 
    [1400.000, 1425.000) = 4 
    [1425.000, 1450.000) = 2 
    [1450.000, 1475.000) = 0 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 1 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1353.884 us/op
     p(50.0000) =   1413.575 us/op
     p(90.0000) =   1514.213 us/op
     p(95.0000) =   1522.206 us/op
     p(99.0000) =   1522.206 us/op
     p(99.9000) =   1522.206 us/op
     p(99.9900) =   1522.206 us/op
     p(99.9990) =   1522.206 us/op
     p(99.9999) =   1522.206 us/op
    p(100.0000) =   1522.206 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.5)

# Run progress: 58.71% complete, ETA 00:19:05
# Fork: 1 of 2
# Warmup Iteration   1: 3660.096 us/op
# Warmup Iteration   2: 3146.752 us/op
# Warmup Iteration   3: 3017.579 us/op
# Warmup Iteration   4: 2499.240 us/op
# Warmup Iteration   5: 2387.004 us/op
Iteration   1: 1397.562 us/op
Iteration   2: 1460.825 us/op
Iteration   3: 1419.482 us/op
Iteration   4: 1439.527 us/op
Iteration   5: 1435.378 us/op

# Run progress: 58.90% complete, ETA 00:19:00
# Fork: 2 of 2
# Warmup Iteration   1: 3632.860 us/op
# Warmup Iteration   2: 3143.988 us/op
# Warmup Iteration   3: 3054.600 us/op
# Warmup Iteration   4: 2420.623 us/op
# Warmup Iteration   5: 2432.182 us/op
Iteration   1: 1356.769 us/op
Iteration   2: 1414.778 us/op
Iteration   3: 1361.624 us/op
Iteration   4: 1376.065 us/op
Iteration   5: 1370.449 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1403.246 ±(99.9%) 54.743 us/op

  Histogram, us/op:
    [1300.000, 1312.500) = 0 
    [1312.500, 1325.000) = 0 
    [1325.000, 1337.500) = 0 
    [1337.500, 1350.000) = 0 
    [1350.000, 1362.500) = 2 
    [1362.500, 1375.000) = 1 
    [1375.000, 1387.500) = 1 
    [1387.500, 1400.000) = 1 
    [1400.000, 1412.500) = 0 
    [1412.500, 1425.000) = 2 
    [1425.000, 1437.500) = 1 
    [1437.500, 1450.000) = 1 
    [1450.000, 1462.500) = 1 
    [1462.500, 1475.000) = 0 
    [1475.000, 1487.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1356.769 us/op
     p(50.0000) =   1406.170 us/op
     p(90.0000) =   1458.695 us/op
     p(95.0000) =   1460.825 us/op
     p(99.0000) =   1460.825 us/op
     p(99.9000) =   1460.825 us/op
     p(99.9900) =   1460.825 us/op
     p(99.9990) =   1460.825 us/op
     p(99.9999) =   1460.825 us/op
    p(100.0000) =   1460.825 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.625)

# Run progress: 59.09% complete, ETA 00:18:55
# Fork: 1 of 2
# Warmup Iteration   1: 3577.390 us/op
# Warmup Iteration   2: 3358.170 us/op
# Warmup Iteration   3: 2798.189 us/op
# Warmup Iteration   4: 2386.691 us/op
# Warmup Iteration   5: 2510.519 us/op
Iteration   1: 1372.068 us/op
Iteration   2: 1394.791 us/op
Iteration   3: 1386.704 us/op
Iteration   4: 1343.663 us/op
Iteration   5: 1391.354 us/op

# Run progress: 59.28% complete, ETA 00:18:49
# Fork: 2 of 2
# Warmup Iteration   1: 3698.351 us/op
# Warmup Iteration   2: 3289.563 us/op
# Warmup Iteration   3: 2952.149 us/op
# Warmup Iteration   4: 2468.729 us/op
# Warmup Iteration   5: 2472.190 us/op
Iteration   1: 1468.639 us/op
Iteration   2: 1419.513 us/op
Iteration   3: 1438.849 us/op
Iteration   4: 1421.664 us/op
Iteration   5: 1429.988 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1406.723 ±(99.9%) 54.629 us/op

  Histogram, us/op:
    [1300.000, 1312.500) = 0 
    [1312.500, 1325.000) = 0 
    [1325.000, 1337.500) = 0 
    [1337.500, 1350.000) = 1 
    [1350.000, 1362.500) = 0 
    [1362.500, 1375.000) = 1 
    [1375.000, 1387.500) = 1 
    [1387.500, 1400.000) = 2 
    [1400.000, 1412.500) = 0 
    [1412.500, 1425.000) = 2 
    [1425.000, 1437.500) = 1 
    [1437.500, 1450.000) = 1 
    [1450.000, 1462.500) = 0 
    [1462.500, 1475.000) = 1 
    [1475.000, 1487.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1343.663 us/op
     p(50.0000) =   1407.152 us/op
     p(90.0000) =   1465.660 us/op
     p(95.0000) =   1468.639 us/op
     p(99.0000) =   1468.639 us/op
     p(99.9000) =   1468.639 us/op
     p(99.9900) =   1468.639 us/op
     p(99.9990) =   1468.639 us/op
     p(99.9999) =   1468.639 us/op
    p(100.0000) =   1468.639 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.75)

# Run progress: 59.47% complete, ETA 00:18:44
# Fork: 1 of 2
# Warmup Iteration   1: 3719.938 us/op
# Warmup Iteration   2: 3354.361 us/op
# Warmup Iteration   3: 2584.535 us/op
# Warmup Iteration   4: 2441.268 us/op
# Warmup Iteration   5: 2421.487 us/op
Iteration   1: 1355.688 us/op
Iteration   2: 1423.245 us/op
Iteration   3: 1363.996 us/op
Iteration   4: 1383.346 us/op
Iteration   5: 1389.787 us/op

# Run progress: 59.66% complete, ETA 00:18:39
# Fork: 2 of 2
# Warmup Iteration   1: 3490.128 us/op
# Warmup Iteration   2: 3447.001 us/op
# Warmup Iteration   3: 3086.011 us/op
# Warmup Iteration   4: 2445.535 us/op
# Warmup Iteration   5: 2470.587 us/op
Iteration   1: 1394.534 us/op
Iteration   2: 1416.695 us/op
Iteration   3: 1402.953 us/op
Iteration   4: 1407.020 us/op
Iteration   5: 1400.175 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1393.744 ±(99.9%) 32.493 us/op

  Histogram, us/op:
    [1350.000, 1355.000) = 0 
    [1355.000, 1360.000) = 1 
    [1360.000, 1365.000) = 1 
    [1365.000, 1370.000) = 0 
    [1370.000, 1375.000) = 0 
    [1375.000, 1380.000) = 0 
    [1380.000, 1385.000) = 1 
    [1385.000, 1390.000) = 1 
    [1390.000, 1395.000) = 1 
    [1395.000, 1400.000) = 0 
    [1400.000, 1405.000) = 2 
    [1405.000, 1410.000) = 1 
    [1410.000, 1415.000) = 0 
    [1415.000, 1420.000) = 1 
    [1420.000, 1425.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1355.688 us/op
     p(50.0000) =   1397.355 us/op
     p(90.0000) =   1422.590 us/op
     p(95.0000) =   1423.245 us/op
     p(99.0000) =   1423.245 us/op
     p(99.9000) =   1423.245 us/op
     p(99.9900) =   1423.245 us/op
     p(99.9990) =   1423.245 us/op
     p(99.9999) =   1423.245 us/op
    p(100.0000) =   1423.245 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.875)

# Run progress: 59.85% complete, ETA 00:18:34
# Fork: 1 of 2
# Warmup Iteration   1: 3622.836 us/op
# Warmup Iteration   2: 3147.496 us/op
# Warmup Iteration   3: 3047.884 us/op
# Warmup Iteration   4: 2616.702 us/op
# Warmup Iteration   5: 2462.792 us/op
Iteration   1: 1425.541 us/op
Iteration   2: 1424.943 us/op
Iteration   3: 1395.486 us/op
Iteration   4: 1392.200 us/op
Iteration   5: 1393.890 us/op

# Run progress: 60.04% complete, ETA 00:18:28
# Fork: 2 of 2
# Warmup Iteration   1: 3841.985 us/op
# Warmup Iteration   2: 3355.303 us/op
# Warmup Iteration   3: 3138.423 us/op
# Warmup Iteration   4: 2560.499 us/op
# Warmup Iteration   5: 2674.654 us/op
Iteration   1: 1390.729 us/op
Iteration   2: 1416.031 us/op
Iteration   3: 1387.236 us/op
Iteration   4: 1389.977 us/op
Iteration   5: 1417.353 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1403.339 ±(99.9%) 23.578 us/op

  Histogram, us/op:
    [1380.000, 1385.000) = 0 
    [1385.000, 1390.000) = 2 
    [1390.000, 1395.000) = 3 
    [1395.000, 1400.000) = 1 
    [1400.000, 1405.000) = 0 
    [1405.000, 1410.000) = 0 
    [1410.000, 1415.000) = 0 
    [1415.000, 1420.000) = 2 
    [1420.000, 1425.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1387.236 us/op
     p(50.0000) =   1394.688 us/op
     p(90.0000) =   1425.481 us/op
     p(95.0000) =   1425.541 us/op
     p(99.0000) =   1425.541 us/op
     p(99.9000) =   1425.541 us/op
     p(99.9900) =   1425.541 us/op
     p(99.9990) =   1425.541 us/op
     p(99.9999) =   1425.541 us/op
    p(100.0000) =   1425.541 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 1)

# Run progress: 60.23% complete, ETA 00:18:23
# Fork: 1 of 2
# Warmup Iteration   1: 3650.942 us/op
# Warmup Iteration   2: 3385.746 us/op
# Warmup Iteration   3: 2630.575 us/op
# Warmup Iteration   4: 2417.303 us/op
# Warmup Iteration   5: 2431.821 us/op
Iteration   1: 1399.188 us/op
Iteration   2: 1442.728 us/op
Iteration   3: 1415.891 us/op
Iteration   4: 1398.703 us/op
Iteration   5: 1448.444 us/op

# Run progress: 60.42% complete, ETA 00:18:18
# Fork: 2 of 2
# Warmup Iteration   1: 3526.042 us/op
# Warmup Iteration   2: 3253.931 us/op
# Warmup Iteration   3: 2885.188 us/op
# Warmup Iteration   4: 2380.431 us/op
# Warmup Iteration   5: 2440.025 us/op
Iteration   1: 1416.255 us/op
Iteration   2: 1510.693 us/op
Iteration   3: 1432.839 us/op
Iteration   4: 1423.577 us/op
Iteration   5: 1428.499 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1431.682 ±(99.9%) 48.740 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 0 
    [1375.000, 1400.000) = 2 
    [1400.000, 1425.000) = 3 
    [1425.000, 1450.000) = 4 
    [1450.000, 1475.000) = 0 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 1 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1398.703 us/op
     p(50.0000) =   1426.038 us/op
     p(90.0000) =   1504.468 us/op
     p(95.0000) =   1510.693 us/op
     p(99.0000) =   1510.693 us/op
     p(99.9000) =   1510.693 us/op
     p(99.9900) =   1510.693 us/op
     p(99.9990) =   1510.693 us/op
     p(99.9999) =   1510.693 us/op
    p(100.0000) =   1510.693 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.125)

# Run progress: 60.61% complete, ETA 00:18:13
# Fork: 1 of 2
# Warmup Iteration   1: 3653.193 us/op
# Warmup Iteration   2: 3614.135 us/op
# Warmup Iteration   3: 2679.141 us/op
# Warmup Iteration   4: 2391.124 us/op
# Warmup Iteration   5: 2437.398 us/op
Iteration   1: 1397.906 us/op
Iteration   2: 1445.883 us/op
Iteration   3: 1426.879 us/op
Iteration   4: 1474.886 us/op
Iteration   5: 1465.112 us/op

# Run progress: 60.80% complete, ETA 00:18:07
# Fork: 2 of 2
# Warmup Iteration   1: 3522.601 us/op
# Warmup Iteration   2: 3115.356 us/op
# Warmup Iteration   3: 2830.763 us/op
# Warmup Iteration   4: 2583.934 us/op
# Warmup Iteration   5: 2363.113 us/op
Iteration   1: 1381.335 us/op
Iteration   2: 1431.849 us/op
Iteration   3: 1356.086 us/op
Iteration   4: 1351.887 us/op
Iteration   5: 1356.008 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1408.783 ±(99.9%) 70.282 us/op

  Histogram, us/op:
    [1300.000, 1312.500) = 0 
    [1312.500, 1325.000) = 0 
    [1325.000, 1337.500) = 0 
    [1337.500, 1350.000) = 0 
    [1350.000, 1362.500) = 3 
    [1362.500, 1375.000) = 0 
    [1375.000, 1387.500) = 1 
    [1387.500, 1400.000) = 1 
    [1400.000, 1412.500) = 0 
    [1412.500, 1425.000) = 0 
    [1425.000, 1437.500) = 2 
    [1437.500, 1450.000) = 1 
    [1450.000, 1462.500) = 0 
    [1462.500, 1475.000) = 2 
    [1475.000, 1487.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1351.887 us/op
     p(50.0000) =   1412.393 us/op
     p(90.0000) =   1473.909 us/op
     p(95.0000) =   1474.886 us/op
     p(99.0000) =   1474.886 us/op
     p(99.9000) =   1474.886 us/op
     p(99.9900) =   1474.886 us/op
     p(99.9990) =   1474.886 us/op
     p(99.9999) =   1474.886 us/op
    p(100.0000) =   1474.886 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.250)

# Run progress: 60.98% complete, ETA 00:18:02
# Fork: 1 of 2
# Warmup Iteration   1: 3469.839 us/op
# Warmup Iteration   2: 3098.178 us/op
# Warmup Iteration   3: 2928.948 us/op
# Warmup Iteration   4: 2425.550 us/op
# Warmup Iteration   5: 2466.285 us/op
Iteration   1: 1395.910 us/op
Iteration   2: 1488.192 us/op
Iteration   3: 1425.024 us/op
Iteration   4: 1376.426 us/op
Iteration   5: 1409.273 us/op

# Run progress: 61.17% complete, ETA 00:17:57
# Fork: 2 of 2
# Warmup Iteration   1: 3645.329 us/op
# Warmup Iteration   2: 3288.718 us/op
# Warmup Iteration   3: 2623.738 us/op
# Warmup Iteration   4: 2459.882 us/op
# Warmup Iteration   5: 2437.924 us/op
Iteration   1: 1357.056 us/op
Iteration   2: 1463.400 us/op
Iteration   3: 1402.829 us/op
Iteration   4: 1375.452 us/op
Iteration   5: 1477.126 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1417.069 ±(99.9%) 68.678 us/op

  Histogram, us/op:
    [1300.000, 1312.500) = 0 
    [1312.500, 1325.000) = 0 
    [1325.000, 1337.500) = 0 
    [1337.500, 1350.000) = 0 
    [1350.000, 1362.500) = 1 
    [1362.500, 1375.000) = 0 
    [1375.000, 1387.500) = 2 
    [1387.500, 1400.000) = 1 
    [1400.000, 1412.500) = 2 
    [1412.500, 1425.000) = 0 
    [1425.000, 1437.500) = 1 
    [1437.500, 1450.000) = 0 
    [1450.000, 1462.500) = 0 
    [1462.500, 1475.000) = 1 
    [1475.000, 1487.500) = 1 

  Percentiles, us/op:
      p(0.0000) =   1357.056 us/op
     p(50.0000) =   1406.051 us/op
     p(90.0000) =   1487.085 us/op
     p(95.0000) =   1488.192 us/op
     p(99.0000) =   1488.192 us/op
     p(99.9000) =   1488.192 us/op
     p(99.9900) =   1488.192 us/op
     p(99.9990) =   1488.192 us/op
     p(99.9999) =   1488.192 us/op
    p(100.0000) =   1488.192 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.375)

# Run progress: 61.36% complete, ETA 00:17:52
# Fork: 1 of 2
# Warmup Iteration   1: 3408.335 us/op
# Warmup Iteration   2: 3179.520 us/op
# Warmup Iteration   3: 2968.558 us/op
# Warmup Iteration   4: 2427.457 us/op
# Warmup Iteration   5: 2492.163 us/op
Iteration   1: 1375.613 us/op
Iteration   2: 1430.849 us/op
Iteration   3: 1393.895 us/op
Iteration   4: 1459.976 us/op
Iteration   5: 1436.807 us/op

# Run progress: 61.55% complete, ETA 00:17:46
# Fork: 2 of 2
# Warmup Iteration   1: 3593.042 us/op
# Warmup Iteration   2: 3185.538 us/op
# Warmup Iteration   3: 2997.828 us/op
# Warmup Iteration   4: 2458.785 us/op
# Warmup Iteration   5: 2428.051 us/op
Iteration   1: 1381.447 us/op
Iteration   2: 1439.559 us/op
Iteration   3: 1381.008 us/op
Iteration   4: 1470.530 us/op
Iteration   5: 1458.815 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1422.850 ±(99.9%) 55.246 us/op

  Histogram, us/op:
    [1370.000, 1380.000) = 1 
    [1380.000, 1390.000) = 2 
    [1390.000, 1400.000) = 1 
    [1400.000, 1410.000) = 0 
    [1410.000, 1420.000) = 0 
    [1420.000, 1430.000) = 0 
    [1430.000, 1440.000) = 3 
    [1440.000, 1450.000) = 0 
    [1450.000, 1460.000) = 2 
    [1460.000, 1470.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1375.613 us/op
     p(50.0000) =   1433.828 us/op
     p(90.0000) =   1469.475 us/op
     p(95.0000) =   1470.530 us/op
     p(99.0000) =   1470.530 us/op
     p(99.9000) =   1470.530 us/op
     p(99.9900) =   1470.530 us/op
     p(99.9990) =   1470.530 us/op
     p(99.9999) =   1470.530 us/op
    p(100.0000) =   1470.530 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.5)

# Run progress: 61.74% complete, ETA 00:17:41
# Fork: 1 of 2
# Warmup Iteration   1: 3728.206 us/op
# Warmup Iteration   2: 3222.431 us/op
# Warmup Iteration   3: 2804.278 us/op
# Warmup Iteration   4: 2432.105 us/op
# Warmup Iteration   5: 2399.293 us/op
Iteration   1: 1401.571 us/op
Iteration   2: 1547.835 us/op
Iteration   3: 1378.068 us/op
Iteration   4: 1409.572 us/op
Iteration   5: 1436.303 us/op

# Run progress: 61.93% complete, ETA 00:17:36
# Fork: 2 of 2
# Warmup Iteration   1: 3654.749 us/op
# Warmup Iteration   2: 3426.929 us/op
# Warmup Iteration   3: 2838.795 us/op
# Warmup Iteration   4: 2451.089 us/op
# Warmup Iteration   5: 2385.161 us/op
Iteration   1: 1399.438 us/op
Iteration   2: 1438.169 us/op
Iteration   3: 1390.431 us/op
Iteration   4: 1364.144 us/op
Iteration   5: 1392.606 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1415.814 ±(99.9%) 78.294 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 1 
    [1375.000, 1400.000) = 4 
    [1400.000, 1425.000) = 2 
    [1425.000, 1450.000) = 2 
    [1450.000, 1475.000) = 0 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 0 
    [1525.000, 1550.000) = 1 
    [1550.000, 1575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1364.144 us/op
     p(50.0000) =   1400.505 us/op
     p(90.0000) =   1536.868 us/op
     p(95.0000) =   1547.835 us/op
     p(99.0000) =   1547.835 us/op
     p(99.9000) =   1547.835 us/op
     p(99.9900) =   1547.835 us/op
     p(99.9990) =   1547.835 us/op
     p(99.9999) =   1547.835 us/op
    p(100.0000) =   1547.835 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.625)

# Run progress: 62.12% complete, ETA 00:17:31
# Fork: 1 of 2
# Warmup Iteration   1: 3616.957 us/op
# Warmup Iteration   2: 3164.345 us/op
# Warmup Iteration   3: 2952.452 us/op
# Warmup Iteration   4: 2434.713 us/op
# Warmup Iteration   5: 2389.204 us/op
Iteration   1: 1383.887 us/op
Iteration   2: 1421.722 us/op
Iteration   3: 1372.185 us/op
Iteration   4: 1398.951 us/op
Iteration   5: 1461.562 us/op

# Run progress: 62.31% complete, ETA 00:17:25
# Fork: 2 of 2
# Warmup Iteration   1: 3861.723 us/op
# Warmup Iteration   2: 3210.934 us/op
# Warmup Iteration   3: 2522.583 us/op
# Warmup Iteration   4: 2408.643 us/op
# Warmup Iteration   5: 2429.753 us/op
Iteration   1: 1400.869 us/op
Iteration   2: 1369.931 us/op
Iteration   3: 1372.396 us/op
Iteration   4: 1460.272 us/op
Iteration   5: 1395.016 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1403.679 ±(99.9%) 51.603 us/op

  Histogram, us/op:
    [1360.000, 1370.000) = 1 
    [1370.000, 1380.000) = 2 
    [1380.000, 1390.000) = 1 
    [1390.000, 1400.000) = 2 
    [1400.000, 1410.000) = 1 
    [1410.000, 1420.000) = 0 
    [1420.000, 1430.000) = 1 
    [1430.000, 1440.000) = 0 
    [1440.000, 1450.000) = 0 
    [1450.000, 1460.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1369.931 us/op
     p(50.0000) =   1396.984 us/op
     p(90.0000) =   1461.433 us/op
     p(95.0000) =   1461.562 us/op
     p(99.0000) =   1461.562 us/op
     p(99.9000) =   1461.562 us/op
     p(99.9900) =   1461.562 us/op
     p(99.9990) =   1461.562 us/op
     p(99.9999) =   1461.562 us/op
    p(100.0000) =   1461.562 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.75)

# Run progress: 62.50% complete, ETA 00:17:20
# Fork: 1 of 2
# Warmup Iteration   1: 3570.250 us/op
# Warmup Iteration   2: 4398.186 us/op
# Warmup Iteration   3: 3311.245 us/op
# Warmup Iteration   4: 3509.642 us/op
# Warmup Iteration   5: 2448.057 us/op
Iteration   1: 1392.837 us/op
Iteration   2: 1475.221 us/op
Iteration   3: 1580.603 us/op
Iteration   4: 1389.465 us/op
Iteration   5: 1385.177 us/op

# Run progress: 62.69% complete, ETA 00:17:15
# Fork: 2 of 2
# Warmup Iteration   1: 3534.301 us/op
# Warmup Iteration   2: 3191.051 us/op
# Warmup Iteration   3: 2996.433 us/op
# Warmup Iteration   4: 2473.313 us/op
# Warmup Iteration   5: 2464.163 us/op
Iteration   1: 1406.690 us/op
Iteration   2: 1471.195 us/op
Iteration   3: 1416.083 us/op
Iteration   4: 1411.634 us/op
Iteration   5: 1415.339 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1434.424 ±(99.9%) 90.921 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 0 
    [1375.000, 1400.000) = 3 
    [1400.000, 1425.000) = 4 
    [1425.000, 1450.000) = 0 
    [1450.000, 1475.000) = 1 
    [1475.000, 1500.000) = 1 
    [1500.000, 1525.000) = 0 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1385.177 us/op
     p(50.0000) =   1413.487 us/op
     p(90.0000) =   1570.065 us/op
     p(95.0000) =   1580.603 us/op
     p(99.0000) =   1580.603 us/op
     p(99.9000) =   1580.603 us/op
     p(99.9900) =   1580.603 us/op
     p(99.9990) =   1580.603 us/op
     p(99.9999) =   1580.603 us/op
    p(100.0000) =   1580.603 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.875)

# Run progress: 62.88% complete, ETA 00:17:10
# Fork: 1 of 2
# Warmup Iteration   1: 3505.026 us/op
# Warmup Iteration   2: 3159.174 us/op
# Warmup Iteration   3: 2854.836 us/op
# Warmup Iteration   4: 2458.762 us/op
# Warmup Iteration   5: 2392.262 us/op
Iteration   1: 1429.396 us/op
Iteration   2: 1418.438 us/op
Iteration   3: 1379.884 us/op
Iteration   4: 1410.719 us/op
Iteration   5: 1513.386 us/op

# Run progress: 63.07% complete, ETA 00:17:04
# Fork: 2 of 2
# Warmup Iteration   1: 3662.203 us/op
# Warmup Iteration   2: 3127.630 us/op
# Warmup Iteration   3: 2779.398 us/op
# Warmup Iteration   4: 2434.862 us/op
# Warmup Iteration   5: 2436.039 us/op
Iteration   1: 1452.257 us/op
Iteration   2: 1486.029 us/op
Iteration   3: 1417.693 us/op
Iteration   4: 1348.776 us/op
Iteration   5: 1383.479 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1424.006 ±(99.9%) 75.018 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 1 
    [1350.000, 1375.000) = 0 
    [1375.000, 1400.000) = 2 
    [1400.000, 1425.000) = 3 
    [1425.000, 1450.000) = 1 
    [1450.000, 1475.000) = 1 
    [1475.000, 1500.000) = 1 
    [1500.000, 1525.000) = 1 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1348.776 us/op
     p(50.0000) =   1418.066 us/op
     p(90.0000) =   1510.650 us/op
     p(95.0000) =   1513.386 us/op
     p(99.0000) =   1513.386 us/op
     p(99.9000) =   1513.386 us/op
     p(99.9900) =   1513.386 us/op
     p(99.9990) =   1513.386 us/op
     p(99.9999) =   1513.386 us/op
    p(100.0000) =   1513.386 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 1)

# Run progress: 63.26% complete, ETA 00:16:59
# Fork: 1 of 2
# Warmup Iteration   1: 3503.426 us/op
# Warmup Iteration   2: 3228.132 us/op
# Warmup Iteration   3: 2992.240 us/op
# Warmup Iteration   4: 2467.057 us/op
# Warmup Iteration   5: 2409.627 us/op
Iteration   1: 1429.537 us/op
Iteration   2: 1445.337 us/op
Iteration   3: 1375.707 us/op
Iteration   4: 1557.052 us/op
Iteration   5: 1361.395 us/op

# Run progress: 63.45% complete, ETA 00:16:54
# Fork: 2 of 2
# Warmup Iteration   1: 3528.057 us/op
# Warmup Iteration   2: 3247.928 us/op
# Warmup Iteration   3: 2799.903 us/op
# Warmup Iteration   4: 2401.979 us/op
# Warmup Iteration   5: 2386.595 us/op
Iteration   1: 1397.650 us/op
Iteration   2: 1429.530 us/op
Iteration   3: 1389.747 us/op
Iteration   4: 1388.156 us/op
Iteration   5: 1408.935 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   1418.305 ±(99.9%) 83.610 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 1 
    [1375.000, 1400.000) = 4 
    [1400.000, 1425.000) = 1 
    [1425.000, 1450.000) = 3 
    [1450.000, 1475.000) = 0 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 0 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1361.395 us/op
     p(50.0000) =   1403.293 us/op
     p(90.0000) =   1545.881 us/op
     p(95.0000) =   1557.052 us/op
     p(99.0000) =   1557.052 us/op
     p(99.9000) =   1557.052 us/op
     p(99.9900) =   1557.052 us/op
     p(99.9990) =   1557.052 us/op
     p(99.9999) =   1557.052 us/op
    p(100.0000) =   1557.052 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.125)

# Run progress: 63.64% complete, ETA 00:16:49
# Fork: 1 of 2
# Warmup Iteration   1: 4955.309 us/op
# Warmup Iteration   2: 4841.458 us/op
# Warmup Iteration   3: 4408.017 us/op
# Warmup Iteration   4: 4001.358 us/op
# Warmup Iteration   5: 4014.517 us/op
Iteration   1: 2843.295 us/op
Iteration   2: 2872.764 us/op
Iteration   3: 2830.682 us/op
Iteration   4: 2838.668 us/op
Iteration   5: 2840.370 us/op

# Run progress: 63.83% complete, ETA 00:16:43
# Fork: 2 of 2
# Warmup Iteration   1: 4948.762 us/op
# Warmup Iteration   2: 4994.116 us/op
# Warmup Iteration   3: 3976.576 us/op
# Warmup Iteration   4: 3866.155 us/op
# Warmup Iteration   5: 3968.221 us/op
Iteration   1: 2734.199 us/op
Iteration   2: 2841.711 us/op
Iteration   3: 2840.868 us/op
Iteration   4: 2805.481 us/op
Iteration   5: 2870.117 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2831.815 ±(99.9%) 59.200 us/op

  Histogram, us/op:
    [2700.000, 2712.500) = 0 
    [2712.500, 2725.000) = 0 
    [2725.000, 2737.500) = 1 
    [2737.500, 2750.000) = 0 
    [2750.000, 2762.500) = 0 
    [2762.500, 2775.000) = 0 
    [2775.000, 2787.500) = 0 
    [2787.500, 2800.000) = 0 
    [2800.000, 2812.500) = 1 
    [2812.500, 2825.000) = 0 
    [2825.000, 2837.500) = 1 
    [2837.500, 2850.000) = 5 
    [2850.000, 2862.500) = 0 
    [2862.500, 2875.000) = 2 
    [2875.000, 2887.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   2734.199 us/op
     p(50.0000) =   2840.619 us/op
     p(90.0000) =   2872.499 us/op
     p(95.0000) =   2872.764 us/op
     p(99.0000) =   2872.764 us/op
     p(99.9000) =   2872.764 us/op
     p(99.9900) =   2872.764 us/op
     p(99.9990) =   2872.764 us/op
     p(99.9999) =   2872.764 us/op
    p(100.0000) =   2872.764 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.250)

# Run progress: 64.02% complete, ETA 00:16:38
# Fork: 1 of 2
# Warmup Iteration   1: 5239.070 us/op
# Warmup Iteration   2: 4772.178 us/op
# Warmup Iteration   3: 4511.752 us/op
# Warmup Iteration   4: 4166.243 us/op
# Warmup Iteration   5: 4081.869 us/op
Iteration   1: 2838.308 us/op
Iteration   2: 2779.896 us/op
Iteration   3: 2710.800 us/op
Iteration   4: 2671.727 us/op
Iteration   5: 2826.790 us/op

# Run progress: 64.20% complete, ETA 00:16:33
# Fork: 2 of 2
# Warmup Iteration   1: 5238.555 us/op
# Warmup Iteration   2: 4968.436 us/op
# Warmup Iteration   3: 4053.090 us/op
# Warmup Iteration   4: 3997.192 us/op
# Warmup Iteration   5: 3882.017 us/op
Iteration   1: 2704.973 us/op
Iteration   2: 2884.810 us/op
Iteration   3: 2655.680 us/op
Iteration   4: 2738.247 us/op
Iteration   5: 2723.808 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2753.504 ±(99.9%) 114.975 us/op

  Histogram, us/op:
    [2600.000, 2625.000) = 0 
    [2625.000, 2650.000) = 0 
    [2650.000, 2675.000) = 2 
    [2675.000, 2700.000) = 0 
    [2700.000, 2725.000) = 3 
    [2725.000, 2750.000) = 1 
    [2750.000, 2775.000) = 0 
    [2775.000, 2800.000) = 1 
    [2800.000, 2825.000) = 0 
    [2825.000, 2850.000) = 2 
    [2850.000, 2875.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2655.680 us/op
     p(50.0000) =   2731.028 us/op
     p(90.0000) =   2880.160 us/op
     p(95.0000) =   2884.810 us/op
     p(99.0000) =   2884.810 us/op
     p(99.9000) =   2884.810 us/op
     p(99.9900) =   2884.810 us/op
     p(99.9990) =   2884.810 us/op
     p(99.9999) =   2884.810 us/op
    p(100.0000) =   2884.810 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.375)

# Run progress: 64.39% complete, ETA 00:16:28
# Fork: 1 of 2
# Warmup Iteration   1: 5029.977 us/op
# Warmup Iteration   2: 4850.599 us/op
# Warmup Iteration   3: 4148.782 us/op
# Warmup Iteration   4: 3913.411 us/op
# Warmup Iteration   5: 3997.868 us/op
Iteration   1: 2778.494 us/op
Iteration   2: 2811.809 us/op
Iteration   3: 2746.485 us/op
Iteration   4: 2728.688 us/op
Iteration   5: 2740.003 us/op

# Run progress: 64.58% complete, ETA 00:16:23
# Fork: 2 of 2
# Warmup Iteration   1: 5191.420 us/op
# Warmup Iteration   2: 4973.555 us/op
# Warmup Iteration   3: 4400.452 us/op
# Warmup Iteration   4: 4108.006 us/op
# Warmup Iteration   5: 3980.973 us/op
Iteration   1: 2804.754 us/op
Iteration   2: 2804.101 us/op
Iteration   3: 2777.074 us/op
Iteration   4: 2760.929 us/op
Iteration   5: 2894.754 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2784.709 ±(99.9%) 72.825 us/op

  Histogram, us/op:
    [2700.000, 2712.500) = 0 
    [2712.500, 2725.000) = 0 
    [2725.000, 2737.500) = 1 
    [2737.500, 2750.000) = 2 
    [2750.000, 2762.500) = 1 
    [2762.500, 2775.000) = 0 
    [2775.000, 2787.500) = 2 
    [2787.500, 2800.000) = 0 
    [2800.000, 2812.500) = 3 
    [2812.500, 2825.000) = 0 
    [2825.000, 2837.500) = 0 
    [2837.500, 2850.000) = 0 
    [2850.000, 2862.500) = 0 
    [2862.500, 2875.000) = 0 
    [2875.000, 2887.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   2728.688 us/op
     p(50.0000) =   2777.784 us/op
     p(90.0000) =   2886.460 us/op
     p(95.0000) =   2894.754 us/op
     p(99.0000) =   2894.754 us/op
     p(99.9000) =   2894.754 us/op
     p(99.9900) =   2894.754 us/op
     p(99.9990) =   2894.754 us/op
     p(99.9999) =   2894.754 us/op
    p(100.0000) =   2894.754 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.5)

# Run progress: 64.77% complete, ETA 00:16:17
# Fork: 1 of 2
# Warmup Iteration   1: 5041.865 us/op
# Warmup Iteration   2: 4869.685 us/op
# Warmup Iteration   3: 4464.344 us/op
# Warmup Iteration   4: 3930.380 us/op
# Warmup Iteration   5: 4089.053 us/op
Iteration   1: 2819.433 us/op
Iteration   2: 3031.430 us/op
Iteration   3: 2741.599 us/op
Iteration   4: 2820.569 us/op
Iteration   5: 2849.403 us/op

# Run progress: 64.96% complete, ETA 00:16:12
# Fork: 2 of 2
# Warmup Iteration   1: 5016.990 us/op
# Warmup Iteration   2: 4718.126 us/op
# Warmup Iteration   3: 4355.618 us/op
# Warmup Iteration   4: 3985.921 us/op
# Warmup Iteration   5: 4033.876 us/op
Iteration   1: 2791.879 us/op
Iteration   2: 2814.987 us/op
Iteration   3: 2770.885 us/op
Iteration   4: 2744.222 us/op
Iteration   5: 2765.485 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2814.989 ±(99.9%) 126.898 us/op

  Histogram, us/op:
    [2700.000, 2725.000) = 0 
    [2725.000, 2750.000) = 2 
    [2750.000, 2775.000) = 2 
    [2775.000, 2800.000) = 1 
    [2800.000, 2825.000) = 3 
    [2825.000, 2850.000) = 1 
    [2850.000, 2875.000) = 0 
    [2875.000, 2900.000) = 0 
    [2900.000, 2925.000) = 0 
    [2925.000, 2950.000) = 0 
    [2950.000, 2975.000) = 0 
    [2975.000, 3000.000) = 0 
    [3000.000, 3025.000) = 0 
    [3025.000, 3050.000) = 1 
    [3050.000, 3075.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2741.599 us/op
     p(50.0000) =   2803.433 us/op
     p(90.0000) =   3013.227 us/op
     p(95.0000) =   3031.430 us/op
     p(99.0000) =   3031.430 us/op
     p(99.9000) =   3031.430 us/op
     p(99.9900) =   3031.430 us/op
     p(99.9990) =   3031.430 us/op
     p(99.9999) =   3031.430 us/op
    p(100.0000) =   3031.430 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.625)

# Run progress: 65.15% complete, ETA 00:16:07
# Fork: 1 of 2
# Warmup Iteration   1: 5020.134 us/op
# Warmup Iteration   2: 4671.643 us/op
# Warmup Iteration   3: 4349.657 us/op
# Warmup Iteration   4: 4031.675 us/op
# Warmup Iteration   5: 3851.397 us/op
Iteration   1: 2703.526 us/op
Iteration   2: 2751.811 us/op
Iteration   3: 2744.182 us/op
Iteration   4: 2696.815 us/op
Iteration   5: 2830.048 us/op

# Run progress: 65.34% complete, ETA 00:16:02
# Fork: 2 of 2
# Warmup Iteration   1: 4935.817 us/op
# Warmup Iteration   2: 5027.548 us/op
# Warmup Iteration   3: 4138.920 us/op
# Warmup Iteration   4: 3985.999 us/op
# Warmup Iteration   5: 3956.256 us/op
Iteration   1: 2730.653 us/op
Iteration   2: 2988.512 us/op
Iteration   3: 2957.986 us/op
Iteration   4: 2929.026 us/op
Iteration   5: 2947.284 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2827.984 ±(99.9%) 176.102 us/op

  Histogram, us/op:
    [2600.000, 2625.000) = 0 
    [2625.000, 2650.000) = 0 
    [2650.000, 2675.000) = 0 
    [2675.000, 2700.000) = 1 
    [2700.000, 2725.000) = 1 
    [2725.000, 2750.000) = 2 
    [2750.000, 2775.000) = 1 
    [2775.000, 2800.000) = 0 
    [2800.000, 2825.000) = 0 
    [2825.000, 2850.000) = 1 
    [2850.000, 2875.000) = 0 
    [2875.000, 2900.000) = 0 
    [2900.000, 2925.000) = 0 
    [2925.000, 2950.000) = 2 
    [2950.000, 2975.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2696.815 us/op
     p(50.0000) =   2790.930 us/op
     p(90.0000) =   2985.459 us/op
     p(95.0000) =   2988.512 us/op
     p(99.0000) =   2988.512 us/op
     p(99.9000) =   2988.512 us/op
     p(99.9900) =   2988.512 us/op
     p(99.9990) =   2988.512 us/op
     p(99.9999) =   2988.512 us/op
    p(100.0000) =   2988.512 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.75)

# Run progress: 65.53% complete, ETA 00:15:56
# Fork: 1 of 2
# Warmup Iteration   1: 4927.210 us/op
# Warmup Iteration   2: 4736.073 us/op
# Warmup Iteration   3: 4583.853 us/op
# Warmup Iteration   4: 3915.931 us/op
# Warmup Iteration   5: 3950.456 us/op
Iteration   1: 2698.055 us/op
Iteration   2: 2723.402 us/op
Iteration   3: 2733.152 us/op
Iteration   4: 2671.481 us/op
Iteration   5: 2821.620 us/op

# Run progress: 65.72% complete, ETA 00:15:51
# Fork: 2 of 2
# Warmup Iteration   1: 5302.588 us/op
# Warmup Iteration   2: 4584.405 us/op
# Warmup Iteration   3: 4429.076 us/op
# Warmup Iteration   4: 3965.112 us/op
# Warmup Iteration   5: 3823.254 us/op
Iteration   1: 2692.846 us/op
Iteration   2: 2708.348 us/op
Iteration   3: 2767.041 us/op
Iteration   4: 2733.668 us/op
Iteration   5: 2978.253 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2752.787 ±(99.9%) 135.754 us/op

  Histogram, us/op:
    [2600.000, 2625.000) = 0 
    [2625.000, 2650.000) = 0 
    [2650.000, 2675.000) = 1 
    [2675.000, 2700.000) = 2 
    [2700.000, 2725.000) = 2 
    [2725.000, 2750.000) = 2 
    [2750.000, 2775.000) = 1 
    [2775.000, 2800.000) = 0 
    [2800.000, 2825.000) = 1 
    [2825.000, 2850.000) = 0 
    [2850.000, 2875.000) = 0 
    [2875.000, 2900.000) = 0 
    [2900.000, 2925.000) = 0 
    [2925.000, 2950.000) = 0 
    [2950.000, 2975.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2671.481 us/op
     p(50.0000) =   2728.277 us/op
     p(90.0000) =   2962.590 us/op
     p(95.0000) =   2978.253 us/op
     p(99.0000) =   2978.253 us/op
     p(99.9000) =   2978.253 us/op
     p(99.9900) =   2978.253 us/op
     p(99.9990) =   2978.253 us/op
     p(99.9999) =   2978.253 us/op
    p(100.0000) =   2978.253 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.875)

# Run progress: 65.91% complete, ETA 00:15:46
# Fork: 1 of 2
# Warmup Iteration   1: 5114.467 us/op
# Warmup Iteration   2: 4862.163 us/op
# Warmup Iteration   3: 4049.218 us/op
# Warmup Iteration   4: 3958.838 us/op
# Warmup Iteration   5: 4062.676 us/op
Iteration   1: 2803.509 us/op
Iteration   2: 2924.036 us/op
Iteration   3: 2821.292 us/op
Iteration   4: 2705.074 us/op
Iteration   5: 2732.232 us/op

# Run progress: 66.10% complete, ETA 00:15:41
# Fork: 2 of 2
# Warmup Iteration   1: 5292.104 us/op
# Warmup Iteration   2: 4871.975 us/op
# Warmup Iteration   3: 4479.547 us/op
# Warmup Iteration   4: 4010.874 us/op
# Warmup Iteration   5: 4024.366 us/op
Iteration   1: 2698.919 us/op
Iteration   2: 2782.339 us/op
Iteration   3: 2714.988 us/op
Iteration   4: 2696.280 us/op
Iteration   5: 2924.238 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2780.291 ±(99.9%) 132.874 us/op

  Histogram, us/op:
    [2600.000, 2625.000) = 0 
    [2625.000, 2650.000) = 0 
    [2650.000, 2675.000) = 0 
    [2675.000, 2700.000) = 2 
    [2700.000, 2725.000) = 2 
    [2725.000, 2750.000) = 1 
    [2750.000, 2775.000) = 0 
    [2775.000, 2800.000) = 1 
    [2800.000, 2825.000) = 2 
    [2825.000, 2850.000) = 0 
    [2850.000, 2875.000) = 0 
    [2875.000, 2900.000) = 0 
    [2900.000, 2925.000) = 2 
    [2925.000, 2950.000) = 0 
    [2950.000, 2975.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2696.280 us/op
     p(50.0000) =   2757.286 us/op
     p(90.0000) =   2924.218 us/op
     p(95.0000) =   2924.238 us/op
     p(99.0000) =   2924.238 us/op
     p(99.9000) =   2924.238 us/op
     p(99.9900) =   2924.238 us/op
     p(99.9990) =   2924.238 us/op
     p(99.9999) =   2924.238 us/op
    p(100.0000) =   2924.238 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 1)

# Run progress: 66.29% complete, ETA 00:15:35
# Fork: 1 of 2
# Warmup Iteration   1: 5042.391 us/op
# Warmup Iteration   2: 4679.006 us/op
# Warmup Iteration   3: 4384.945 us/op
# Warmup Iteration   4: 3924.647 us/op
# Warmup Iteration   5: 4016.519 us/op
Iteration   1: 2777.664 us/op
Iteration   2: 2862.128 us/op
Iteration   3: 2838.157 us/op
Iteration   4: 2735.880 us/op
Iteration   5: 2788.048 us/op

# Run progress: 66.48% complete, ETA 00:15:30
# Fork: 2 of 2
# Warmup Iteration   1: 5026.267 us/op
# Warmup Iteration   2: 5238.481 us/op
# Warmup Iteration   3: 4030.907 us/op
# Warmup Iteration   4: 3972.455 us/op
# Warmup Iteration   5: 3928.469 us/op
Iteration   1: 2787.534 us/op
Iteration   2: 2870.491 us/op
Iteration   3: 2796.422 us/op
Iteration   4: 2740.641 us/op
Iteration   5: 2740.701 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putPoorHashCode":
  N = 10
  mean =   2793.767 ±(99.9%) 74.506 us/op

  Histogram, us/op:
    [2700.000, 2712.500) = 0 
    [2712.500, 2725.000) = 0 
    [2725.000, 2737.500) = 1 
    [2737.500, 2750.000) = 2 
    [2750.000, 2762.500) = 0 
    [2762.500, 2775.000) = 0 
    [2775.000, 2787.500) = 1 
    [2787.500, 2800.000) = 3 
    [2800.000, 2812.500) = 0 
    [2812.500, 2825.000) = 0 
    [2825.000, 2837.500) = 0 
    [2837.500, 2850.000) = 1 
    [2850.000, 2862.500) = 1 
    [2862.500, 2875.000) = 1 
    [2875.000, 2887.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   2735.880 us/op
     p(50.0000) =   2787.791 us/op
     p(90.0000) =   2869.655 us/op
     p(95.0000) =   2870.491 us/op
     p(99.0000) =   2870.491 us/op
     p(99.9000) =   2870.491 us/op
     p(99.9900) =   2870.491 us/op
     p(99.9990) =   2870.491 us/op
     p(99.9999) =   2870.491 us/op
    p(100.0000) =   2870.491 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.125)

# Run progress: 66.67% complete, ETA 00:15:25
# Fork: 1 of 2
# Warmup Iteration   1: 3316.736 us/op
# Warmup Iteration   2: 2327.952 us/op
# Warmup Iteration   3: 2043.414 us/op
# Warmup Iteration   4: 1742.533 us/op
# Warmup Iteration   5: 1691.598 us/op
Iteration   1: 20.158 us/op
Iteration   2: 26.170 us/op
Iteration   3: 19.673 us/op
Iteration   4: 21.319 us/op
Iteration   5: 48.868 us/op

# Run progress: 66.86% complete, ETA 00:15:20
# Fork: 2 of 2
# Warmup Iteration   1: 3185.487 us/op
# Warmup Iteration   2: 2426.743 us/op
# Warmup Iteration   3: 2045.735 us/op
# Warmup Iteration   4: 1785.061 us/op
# Warmup Iteration   5: 1706.363 us/op
Iteration   1: 34.496 us/op
Iteration   2: 43.148 us/op
Iteration   3: 25.589 us/op
Iteration   4: 21.796 us/op
Iteration   5: 15.826 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     27.704 ±(99.9%) 16.543 us/op

  Histogram, us/op:
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 1 
    [17.500, 20.000) = 1 
    [20.000, 22.500) = 3 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 2 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 1 
    [35.000, 37.500) = 0 
    [37.500, 40.000) = 0 
    [40.000, 42.500) = 0 
    [42.500, 45.000) = 1 
    [45.000, 47.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     15.826 us/op
     p(50.0000) =     23.693 us/op
     p(90.0000) =     48.296 us/op
     p(95.0000) =     48.868 us/op
     p(99.0000) =     48.868 us/op
     p(99.9000) =     48.868 us/op
     p(99.9900) =     48.868 us/op
     p(99.9990) =     48.868 us/op
     p(99.9999) =     48.868 us/op
    p(100.0000) =     48.868 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.250)

# Run progress: 67.05% complete, ETA 00:15:14
# Fork: 1 of 2
# Warmup Iteration   1: 2952.808 us/op
# Warmup Iteration   2: 2026.009 us/op
# Warmup Iteration   3: 1767.452 us/op
# Warmup Iteration   4: 1503.579 us/op
# Warmup Iteration   5: 1528.348 us/op
Iteration   1: 17.340 us/op
Iteration   2: 38.926 us/op
Iteration   3: 30.767 us/op
Iteration   4: 17.606 us/op
Iteration   5: 18.692 us/op

# Run progress: 67.23% complete, ETA 00:15:09
# Fork: 2 of 2
# Warmup Iteration   1: 3202.455 us/op
# Warmup Iteration   2: 2130.560 us/op
# Warmup Iteration   3: 1734.453 us/op
# Warmup Iteration   4: 1497.487 us/op
# Warmup Iteration   5: 1521.721 us/op
Iteration   1: 47.958 us/op
Iteration   2: 18.625 us/op
Iteration   3: 32.156 us/op
Iteration   4: 16.125 us/op
Iteration   5: 31.323 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     26.952 ±(99.9%) 16.561 us/op

  Histogram, us/op:
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 2 
    [17.500, 20.000) = 3 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 3 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 0 
    [37.500, 40.000) = 1 
    [40.000, 42.500) = 0 
    [42.500, 45.000) = 0 
    [45.000, 47.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     16.125 us/op
     p(50.0000) =     24.730 us/op
     p(90.0000) =     47.055 us/op
     p(95.0000) =     47.958 us/op
     p(99.0000) =     47.958 us/op
     p(99.9000) =     47.958 us/op
     p(99.9900) =     47.958 us/op
     p(99.9990) =     47.958 us/op
     p(99.9999) =     47.958 us/op
    p(100.0000) =     47.958 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.375)

# Run progress: 67.42% complete, ETA 00:15:04
# Fork: 1 of 2
# Warmup Iteration   1: 2936.724 us/op
# Warmup Iteration   2: 1696.607 us/op
# Warmup Iteration   3: 1819.309 us/op
# Warmup Iteration   4: 1369.293 us/op
# Warmup Iteration   5: 1251.626 us/op
Iteration   1: 17.647 us/op
Iteration   2: 45.027 us/op
Iteration   3: 19.158 us/op
Iteration   4: 19.093 us/op
Iteration   5: 32.889 us/op

# Run progress: 67.61% complete, ETA 00:14:59
# Fork: 2 of 2
# Warmup Iteration   1: 2648.204 us/op
# Warmup Iteration   2: 1667.306 us/op
# Warmup Iteration   3: 1633.957 us/op
# Warmup Iteration   4: 1407.565 us/op
# Warmup Iteration   5: 1437.448 us/op
Iteration   1: 17.655 us/op
Iteration   2: 43.503 us/op
Iteration   3: 51.292 us/op
Iteration   4: 19.156 us/op
Iteration   5: 31.257 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     29.668 ±(99.9%) 19.708 us/op

  Histogram, us/op:
    [10.000, 15.000) = 0 
    [15.000, 20.000) = 5 
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 0 
    [30.000, 35.000) = 2 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 1 
    [45.000, 50.000) = 1 
    [50.000, 55.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     17.647 us/op
     p(50.0000) =     25.208 us/op
     p(90.0000) =     50.666 us/op
     p(95.0000) =     51.292 us/op
     p(99.0000) =     51.292 us/op
     p(99.9000) =     51.292 us/op
     p(99.9900) =     51.292 us/op
     p(99.9990) =     51.292 us/op
     p(99.9999) =     51.292 us/op
    p(100.0000) =     51.292 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.5)

# Run progress: 67.80% complete, ETA 00:14:53
# Fork: 1 of 2
# Warmup Iteration   1: 2837.729 us/op
# Warmup Iteration   2: 1861.600 us/op
# Warmup Iteration   3: 1742.898 us/op
# Warmup Iteration   4: 1402.027 us/op
# Warmup Iteration   5: 1360.059 us/op
Iteration   1: 14.532 us/op
Iteration   2: 34.826 us/op
Iteration   3: 38.732 us/op
Iteration   4: 16.391 us/op
Iteration   5: 16.375 us/op

# Run progress: 67.99% complete, ETA 00:14:48
# Fork: 2 of 2
# Warmup Iteration   1: 2692.294 us/op
# Warmup Iteration   2: 1879.242 us/op
# Warmup Iteration   3: 1839.794 us/op
# Warmup Iteration   4: 1484.413 us/op
# Warmup Iteration   5: 1388.260 us/op
Iteration   1: 13.747 us/op
Iteration   2: 41.370 us/op
Iteration   3: 14.213 us/op
Iteration   4: 16.489 us/op
Iteration   5: 15.167 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     22.184 ±(99.9%) 17.045 us/op

  Histogram, us/op:
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 3 
    [15.000, 17.500) = 4 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 1 
    [35.000, 37.500) = 0 
    [37.500, 40.000) = 1 
    [40.000, 42.500) = 1 
    [42.500, 45.000) = 0 
    [45.000, 47.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     13.747 us/op
     p(50.0000) =     16.383 us/op
     p(90.0000) =     41.106 us/op
     p(95.0000) =     41.370 us/op
     p(99.0000) =     41.370 us/op
     p(99.9000) =     41.370 us/op
     p(99.9900) =     41.370 us/op
     p(99.9990) =     41.370 us/op
     p(99.9999) =     41.370 us/op
    p(100.0000) =     41.370 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.625)

# Run progress: 68.18% complete, ETA 00:14:43
# Fork: 1 of 2
# Warmup Iteration   1: 2753.659 us/op
# Warmup Iteration   2: 1562.291 us/op
# Warmup Iteration   3: 1427.220 us/op
# Warmup Iteration   4: 1458.189 us/op
# Warmup Iteration   5: 1187.888 us/op
Iteration   1: 16.290 us/op
Iteration   2: 44.126 us/op
Iteration   3: 16.654 us/op
Iteration   4: 18.088 us/op
Iteration   5: 30.754 us/op

# Run progress: 68.37% complete, ETA 00:14:38
# Fork: 2 of 2
# Warmup Iteration   1: 2640.990 us/op
# Warmup Iteration   2: 1571.472 us/op
# Warmup Iteration   3: 1560.432 us/op
# Warmup Iteration   4: 1197.433 us/op
# Warmup Iteration   5: 1264.310 us/op
Iteration   1: 31.448 us/op
Iteration   2: 47.423 us/op
Iteration   3: 28.960 us/op
Iteration   4: 15.722 us/op
Iteration   5: 17.445 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     26.691 ±(99.9%) 17.937 us/op

  Histogram, us/op:
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 4 
    [17.500, 20.000) = 1 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 1 
    [30.000, 32.500) = 2 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 0 
    [37.500, 40.000) = 0 
    [40.000, 42.500) = 0 
    [42.500, 45.000) = 1 
    [45.000, 47.500) = 1 

  Percentiles, us/op:
      p(0.0000) =     15.722 us/op
     p(50.0000) =     23.524 us/op
     p(90.0000) =     47.093 us/op
     p(95.0000) =     47.423 us/op
     p(99.0000) =     47.423 us/op
     p(99.9000) =     47.423 us/op
     p(99.9900) =     47.423 us/op
     p(99.9990) =     47.423 us/op
     p(99.9999) =     47.423 us/op
    p(100.0000) =     47.423 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.75)

# Run progress: 68.56% complete, ETA 00:14:32
# Fork: 1 of 2
# Warmup Iteration   1: 2710.203 us/op
# Warmup Iteration   2: 1615.429 us/op
# Warmup Iteration   3: 1444.300 us/op
# Warmup Iteration   4: 1533.009 us/op
# Warmup Iteration   5: 1224.252 us/op
Iteration   1: 28.458 us/op
Iteration   2: 38.566 us/op
Iteration   3: 15.151 us/op
Iteration   4: 18.865 us/op
Iteration   5: 36.932 us/op

# Run progress: 68.75% complete, ETA 00:14:27
# Fork: 2 of 2
# Warmup Iteration   1: 2746.648 us/op
# Warmup Iteration   2: 1741.187 us/op
# Warmup Iteration   3: 1353.409 us/op
# Warmup Iteration   4: 1232.145 us/op
# Warmup Iteration   5: 1219.891 us/op
Iteration   1: 15.320 us/op
Iteration   2: 18.223 us/op
Iteration   3: 17.051 us/op
Iteration   4: 18.265 us/op
Iteration   5: 16.657 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     22.349 ±(99.9%) 13.527 us/op

  Histogram, us/op:
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 4 
    [17.500, 20.000) = 3 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 1 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 1 

  Percentiles, us/op:
      p(0.0000) =     15.151 us/op
     p(50.0000) =     18.244 us/op
     p(90.0000) =     38.403 us/op
     p(95.0000) =     38.566 us/op
     p(99.0000) =     38.566 us/op
     p(99.9000) =     38.566 us/op
     p(99.9900) =     38.566 us/op
     p(99.9990) =     38.566 us/op
     p(99.9999) =     38.566 us/op
    p(100.0000) =     38.566 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 0.875)

# Run progress: 68.94% complete, ETA 00:14:22
# Fork: 1 of 2
# Warmup Iteration   1: 3005.069 us/op
# Warmup Iteration   2: 1681.742 us/op
# Warmup Iteration   3: 1590.281 us/op
# Warmup Iteration   4: 1608.732 us/op
# Warmup Iteration   5: 1286.177 us/op
Iteration   1: 28.483 us/op
Iteration   2: 14.685 us/op
Iteration   3: 29.143 us/op
Iteration   4: 15.444 us/op
Iteration   5: 14.608 us/op

# Run progress: 69.13% complete, ETA 00:14:16
# Fork: 2 of 2
# Warmup Iteration   1: 3222.626 us/op
# Warmup Iteration   2: 1775.841 us/op
# Warmup Iteration   3: 1292.971 us/op
# Warmup Iteration   4: 1289.968 us/op
# Warmup Iteration   5: 1297.780 us/op
Iteration   1: 15.218 us/op
Iteration   2: 39.964 us/op
Iteration   3: 15.383 us/op
Iteration   4: 15.549 us/op
Iteration   5: 13.965 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     20.244 ±(99.9%) 13.635 us/op

  Histogram, us/op:
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 3 
    [15.000, 17.500) = 4 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 2 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     13.965 us/op
     p(50.0000) =     15.413 us/op
     p(90.0000) =     38.882 us/op
     p(95.0000) =     39.964 us/op
     p(99.0000) =     39.964 us/op
     p(99.9000) =     39.964 us/op
     p(99.9900) =     39.964 us/op
     p(99.9990) =     39.964 us/op
     p(99.9999) =     39.964 us/op
    p(100.0000) =     39.964 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 16, loadFactor = 1)

# Run progress: 69.32% complete, ETA 00:14:11
# Fork: 1 of 2
# Warmup Iteration   1: 2923.465 us/op
# Warmup Iteration   2: 1755.185 us/op
# Warmup Iteration   3: 1587.605 us/op
# Warmup Iteration   4: 1661.915 us/op
# Warmup Iteration   5: 1472.289 us/op
Iteration   1: 16.109 us/op
Iteration   2: 16.088 us/op
Iteration   3: 28.394 us/op
Iteration   4: 16.493 us/op
Iteration   5: 14.667 us/op

# Run progress: 69.51% complete, ETA 00:14:06
# Fork: 2 of 2
# Warmup Iteration   1: 2710.261 us/op
# Warmup Iteration   2: 1711.240 us/op
# Warmup Iteration   3: 1577.685 us/op
# Warmup Iteration   4: 1644.679 us/op
# Warmup Iteration   5: 1390.550 us/op
Iteration   1: 16.331 us/op
Iteration   2: 49.017 us/op
Iteration   3: 32.702 us/op
Iteration   4: 16.325 us/op
Iteration   5: 29.133 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     23.526 ±(99.9%) 16.948 us/op

  Histogram, us/op:
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 1 
    [15.000, 17.500) = 5 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 2 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 1 
    [35.000, 37.500) = 0 
    [37.500, 40.000) = 0 
    [40.000, 42.500) = 0 
    [42.500, 45.000) = 0 
    [45.000, 47.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     14.667 us/op
     p(50.0000) =     16.412 us/op
     p(90.0000) =     47.386 us/op
     p(95.0000) =     49.017 us/op
     p(99.0000) =     49.017 us/op
     p(99.9000) =     49.017 us/op
     p(99.9900) =     49.017 us/op
     p(99.9990) =     49.017 us/op
     p(99.9999) =     49.017 us/op
    p(100.0000) =     49.017 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.125)

# Run progress: 69.70% complete, ETA 00:14:01
# Fork: 1 of 2
# Warmup Iteration   1: 3450.166 us/op
# Warmup Iteration   2: 2421.101 us/op
# Warmup Iteration   3: 2379.947 us/op
# Warmup Iteration   4: 1911.309 us/op
# Warmup Iteration   5: 2025.262 us/op
Iteration   1: 17.208 us/op
Iteration   2: 17.172 us/op
Iteration   3: 20.243 us/op
Iteration   4: 109.276 us/op
Iteration   5: 20.473 us/op

# Run progress: 69.89% complete, ETA 00:13:55
# Fork: 2 of 2
# Warmup Iteration   1: 3368.625 us/op
# Warmup Iteration   2: 2431.145 us/op
# Warmup Iteration   3: 2269.140 us/op
# Warmup Iteration   4: 2262.124 us/op
# Warmup Iteration   5: 2471.187 us/op
Iteration   1: 17.186 us/op
Iteration   2: 38.115 us/op
Iteration   3: 20.276 us/op
Iteration   4: 33.140 us/op
Iteration   5: 21.120 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     31.421 ±(99.9%) 42.738 us/op

  Histogram, us/op:
    [ 10.000,  20.000) = 3 
    [ 20.000,  30.000) = 4 
    [ 30.000,  40.000) = 2 
    [ 40.000,  50.000) = 0 
    [ 50.000,  60.000) = 0 
    [ 60.000,  70.000) = 0 
    [ 70.000,  80.000) = 0 
    [ 80.000,  90.000) = 0 
    [ 90.000, 100.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     17.172 us/op
     p(50.0000) =     20.374 us/op
     p(90.0000) =    102.160 us/op
     p(95.0000) =    109.276 us/op
     p(99.0000) =    109.276 us/op
     p(99.9000) =    109.276 us/op
     p(99.9900) =    109.276 us/op
     p(99.9990) =    109.276 us/op
     p(99.9999) =    109.276 us/op
    p(100.0000) =    109.276 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.250)

# Run progress: 70.08% complete, ETA 00:13:50
# Fork: 1 of 2
# Warmup Iteration   1: 3252.505 us/op
# Warmup Iteration   2: 2077.566 us/op
# Warmup Iteration   3: 1593.091 us/op
# Warmup Iteration   4: 1492.523 us/op
# Warmup Iteration   5: 1576.105 us/op
Iteration   1: 17.116 us/op
Iteration   2: 14.009 us/op
Iteration   3: 17.414 us/op
Iteration   4: 30.276 us/op
Iteration   5: 16.593 us/op

# Run progress: 70.27% complete, ETA 00:13:45
# Fork: 2 of 2
# Warmup Iteration   1: 3052.726 us/op
# Warmup Iteration   2: 2039.796 us/op
# Warmup Iteration   3: 1560.919 us/op
# Warmup Iteration   4: 1533.581 us/op
# Warmup Iteration   5: 1557.186 us/op
Iteration   1: 16.997 us/op
Iteration   2: 59.940 us/op
Iteration   3: 17.635 us/op
Iteration   4: 15.913 us/op
Iteration   5: 16.327 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     22.222 ±(99.9%) 21.134 us/op

  Histogram, us/op:
    [10.000, 15.000) = 1 
    [15.000, 20.000) = 7 
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 0 
    [30.000, 35.000) = 1 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     14.009 us/op
     p(50.0000) =     17.057 us/op
     p(90.0000) =     56.974 us/op
     p(95.0000) =     59.940 us/op
     p(99.0000) =     59.940 us/op
     p(99.9000) =     59.940 us/op
     p(99.9900) =     59.940 us/op
     p(99.9990) =     59.940 us/op
     p(99.9999) =     59.940 us/op
    p(100.0000) =     59.940 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.375)

# Run progress: 70.45% complete, ETA 00:13:40
# Fork: 1 of 2
# Warmup Iteration   1: 2843.207 us/op
# Warmup Iteration   2: 1831.190 us/op
# Warmup Iteration   3: 1703.188 us/op
# Warmup Iteration   4: 1369.454 us/op
# Warmup Iteration   5: 1296.563 us/op
Iteration   1: 16.815 us/op
Iteration   2: 45.529 us/op
Iteration   3: 17.541 us/op
Iteration   4: 18.035 us/op
Iteration   5: 26.236 us/op

# Run progress: 70.64% complete, ETA 00:13:34
# Fork: 2 of 2
# Warmup Iteration   1: 2901.945 us/op
# Warmup Iteration   2: 1841.235 us/op
# Warmup Iteration   3: 1656.101 us/op
# Warmup Iteration   4: 1358.781 us/op
# Warmup Iteration   5: 1245.700 us/op
Iteration   1: 29.266 us/op
Iteration   2: 17.522 us/op
Iteration   3: 37.661 us/op
Iteration   4: 33.152 us/op
Iteration   5: 42.736 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     28.449 ±(99.9%) 16.642 us/op

  Histogram, us/op:
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 1 
    [17.500, 20.000) = 3 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 1 
    [27.500, 30.000) = 1 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 1 
    [35.000, 37.500) = 0 
    [37.500, 40.000) = 1 
    [40.000, 42.500) = 0 
    [42.500, 45.000) = 1 
    [45.000, 47.500) = 1 

  Percentiles, us/op:
      p(0.0000) =     16.815 us/op
     p(50.0000) =     27.751 us/op
     p(90.0000) =     45.250 us/op
     p(95.0000) =     45.529 us/op
     p(99.0000) =     45.529 us/op
     p(99.9000) =     45.529 us/op
     p(99.9900) =     45.529 us/op
     p(99.9990) =     45.529 us/op
     p(99.9999) =     45.529 us/op
    p(100.0000) =     45.529 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.5)

# Run progress: 70.83% complete, ETA 00:13:29
# Fork: 1 of 2
# Warmup Iteration   1: 3193.921 us/op
# Warmup Iteration   2: 1743.206 us/op
# Warmup Iteration   3: 1765.189 us/op
# Warmup Iteration   4: 1384.099 us/op
# Warmup Iteration   5: 1387.613 us/op
Iteration   1: 12.353 us/op
Iteration   2: 19.243 us/op
Iteration   3: 14.507 us/op
Iteration   4: 13.685 us/op
Iteration   5: 14.733 us/op

# Run progress: 71.02% complete, ETA 00:13:24
# Fork: 2 of 2
# Warmup Iteration   1: 2886.567 us/op
# Warmup Iteration   2: 1942.320 us/op
# Warmup Iteration   3: 1755.412 us/op
# Warmup Iteration   4: 1445.802 us/op
# Warmup Iteration   5: 1329.267 us/op
Iteration   1: 11.688 us/op
Iteration   2: 33.566 us/op
Iteration   3: 14.623 us/op
Iteration   4: 28.777 us/op
Iteration   5: 14.458 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     17.763 ±(99.9%) 11.230 us/op

  Histogram, us/op:
    [10.000, 12.500) = 2 
    [12.500, 15.000) = 5 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 1 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 1 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 1 
    [35.000, 37.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     11.688 us/op
     p(50.0000) =     14.565 us/op
     p(90.0000) =     33.087 us/op
     p(95.0000) =     33.566 us/op
     p(99.0000) =     33.566 us/op
     p(99.9000) =     33.566 us/op
     p(99.9900) =     33.566 us/op
     p(99.9990) =     33.566 us/op
     p(99.9999) =     33.566 us/op
    p(100.0000) =     33.566 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.625)

# Run progress: 71.21% complete, ETA 00:13:19
# Fork: 1 of 2
# Warmup Iteration   1: 2680.964 us/op
# Warmup Iteration   2: 1591.551 us/op
# Warmup Iteration   3: 1727.834 us/op
# Warmup Iteration   4: 1190.813 us/op
# Warmup Iteration   5: 1217.402 us/op
Iteration   1: 12.409 us/op
Iteration   2: 35.082 us/op
Iteration   3: 14.603 us/op
Iteration   4: 10.627 us/op
Iteration   5: 15.258 us/op

# Run progress: 71.40% complete, ETA 00:13:13
# Fork: 2 of 2
# Warmup Iteration   1: 2776.182 us/op
# Warmup Iteration   2: 1788.281 us/op
# Warmup Iteration   3: 1405.848 us/op
# Warmup Iteration   4: 1194.100 us/op
# Warmup Iteration   5: 1197.208 us/op
Iteration   1: 28.979 us/op
Iteration   2: 14.394 us/op
Iteration   3: 34.089 us/op
Iteration   4: 25.792 us/op
Iteration   5: 35.137 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     22.637 ±(99.9%) 15.354 us/op

  Histogram, us/op:
    [10.000, 12.500) = 2 
    [12.500, 15.000) = 2 
    [15.000, 17.500) = 1 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 1 
    [27.500, 30.000) = 1 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 1 
    [35.000, 37.500) = 2 

  Percentiles, us/op:
      p(0.0000) =     10.627 us/op
     p(50.0000) =     20.525 us/op
     p(90.0000) =     35.132 us/op
     p(95.0000) =     35.137 us/op
     p(99.0000) =     35.137 us/op
     p(99.9000) =     35.137 us/op
     p(99.9900) =     35.137 us/op
     p(99.9990) =     35.137 us/op
     p(99.9999) =     35.137 us/op
    p(100.0000) =     35.137 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.75)

# Run progress: 71.59% complete, ETA 00:13:08
# Fork: 1 of 2
# Warmup Iteration   1: 2954.134 us/op
# Warmup Iteration   2: 1663.114 us/op
# Warmup Iteration   3: 1718.592 us/op
# Warmup Iteration   4: 1281.635 us/op
# Warmup Iteration   5: 1255.723 us/op
Iteration   1: 15.360 us/op
Iteration   2: 37.985 us/op
Iteration   3: 15.981 us/op
Iteration   4: 30.204 us/op
Iteration   5: 15.404 us/op

# Run progress: 71.78% complete, ETA 00:13:03
# Fork: 2 of 2
# Warmup Iteration   1: 2951.907 us/op
# Warmup Iteration   2: 1600.320 us/op
# Warmup Iteration   3: 1649.546 us/op
# Warmup Iteration   4: 1254.221 us/op
# Warmup Iteration   5: 1203.064 us/op
Iteration   1: 12.556 us/op
Iteration   2: 31.885 us/op
Iteration   3: 15.578 us/op
Iteration   4: 28.794 us/op
Iteration   5: 35.564 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     23.931 ±(99.9%) 14.844 us/op

  Histogram, us/op:
    [10.000, 12.500) = 0 
    [12.500, 15.000) = 1 
    [15.000, 17.500) = 4 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 1 
    [30.000, 32.500) = 2 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 1 

  Percentiles, us/op:
      p(0.0000) =     12.556 us/op
     p(50.0000) =     22.388 us/op
     p(90.0000) =     37.743 us/op
     p(95.0000) =     37.985 us/op
     p(99.0000) =     37.985 us/op
     p(99.9000) =     37.985 us/op
     p(99.9900) =     37.985 us/op
     p(99.9990) =     37.985 us/op
     p(99.9999) =     37.985 us/op
    p(100.0000) =     37.985 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 0.875)

# Run progress: 71.97% complete, ETA 00:12:58
# Fork: 1 of 2
# Warmup Iteration   1: 2855.125 us/op
# Warmup Iteration   2: 1726.753 us/op
# Warmup Iteration   3: 1560.009 us/op
# Warmup Iteration   4: 1649.796 us/op
# Warmup Iteration   5: 1267.015 us/op
Iteration   1: 11.979 us/op
Iteration   2: 12.707 us/op
Iteration   3: 12.897 us/op
Iteration   4: 11.018 us/op
Iteration   5: 10.458 us/op

# Run progress: 72.16% complete, ETA 00:12:52
# Fork: 2 of 2
# Warmup Iteration   1: 3092.650 us/op
# Warmup Iteration   2: 1654.563 us/op
# Warmup Iteration   3: 1833.314 us/op
# Warmup Iteration   4: 1323.697 us/op
# Warmup Iteration   5: 1334.381 us/op
Iteration   1: 12.212 us/op
Iteration   2: 54.147 us/op
Iteration   3: 28.931 us/op
Iteration   4: 12.093 us/op
Iteration   5: 11.136 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     17.758 ±(99.9%) 21.003 us/op

  Histogram, us/op:
    [10.000, 15.000) = 8 
    [15.000, 20.000) = 0 
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 1 
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     10.458 us/op
     p(50.0000) =     12.153 us/op
     p(90.0000) =     51.625 us/op
     p(95.0000) =     54.147 us/op
     p(99.0000) =     54.147 us/op
     p(99.9000) =     54.147 us/op
     p(99.9900) =     54.147 us/op
     p(99.9990) =     54.147 us/op
     p(99.9999) =     54.147 us/op
    p(100.0000) =     54.147 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100, loadFactor = 1)

# Run progress: 72.35% complete, ETA 00:12:47
# Fork: 1 of 2
# Warmup Iteration   1: 2586.736 us/op
# Warmup Iteration   2: 1710.662 us/op
# Warmup Iteration   3: 1836.217 us/op
# Warmup Iteration   4: 1370.374 us/op
# Warmup Iteration   5: 1330.786 us/op
Iteration   1: 9.174 us/op
Iteration   2: 12.429 us/op
Iteration   3: 12.085 us/op
Iteration   4: 12.283 us/op
Iteration   5: 26.561 us/op

# Run progress: 72.54% complete, ETA 00:12:42
# Fork: 2 of 2
# Warmup Iteration   1: 2887.389 us/op
# Warmup Iteration   2: 1920.942 us/op
# Warmup Iteration   3: 1414.838 us/op
# Warmup Iteration   4: 1354.421 us/op
# Warmup Iteration   5: 1343.374 us/op
Iteration   1: 11.394 us/op
Iteration   2: 33.710 us/op
Iteration   3: 11.421 us/op
Iteration   4: 12.945 us/op
Iteration   5: 33.372 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     17.537 ±(99.9%) 14.635 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 0 
    [ 5.000,  7.500) = 0 
    [ 7.500, 10.000) = 1 
    [10.000, 12.500) = 5 
    [12.500, 15.000) = 1 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 1 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 2 
    [35.000, 37.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      9.174 us/op
     p(50.0000) =     12.356 us/op
     p(90.0000) =     33.676 us/op
     p(95.0000) =     33.710 us/op
     p(99.0000) =     33.710 us/op
     p(99.9000) =     33.710 us/op
     p(99.9900) =     33.710 us/op
     p(99.9990) =     33.710 us/op
     p(99.9999) =     33.710 us/op
    p(100.0000) =     33.710 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.125)

# Run progress: 72.73% complete, ETA 00:12:37
# Fork: 1 of 2
# Warmup Iteration   1: 3308.561 us/op
# Warmup Iteration   2: 2561.803 us/op
# Warmup Iteration   3: 1963.650 us/op
# Warmup Iteration   4: 1715.085 us/op
# Warmup Iteration   5: 1647.185 us/op
Iteration   1: 15.887 us/op
Iteration   2: 36.998 us/op
Iteration   3: 25.769 us/op
Iteration   4: 31.497 us/op
Iteration   5: 16.574 us/op

# Run progress: 72.92% complete, ETA 00:12:31
# Fork: 2 of 2
# Warmup Iteration   1: 3123.178 us/op
# Warmup Iteration   2: 2330.238 us/op
# Warmup Iteration   3: 1956.030 us/op
# Warmup Iteration   4: 1765.257 us/op
# Warmup Iteration   5: 1695.224 us/op
Iteration   1: 13.306 us/op
Iteration   2: 11.156 us/op
Iteration   3: 18.246 us/op
Iteration   4: 18.616 us/op
Iteration   5: 27.030 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     21.508 ±(99.9%) 12.727 us/op

  Histogram, us/op:
    [10.000, 12.500) = 1 
    [12.500, 15.000) = 1 
    [15.000, 17.500) = 2 
    [17.500, 20.000) = 2 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 2 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 1 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 1 

  Percentiles, us/op:
      p(0.0000) =     11.156 us/op
     p(50.0000) =     18.431 us/op
     p(90.0000) =     36.448 us/op
     p(95.0000) =     36.998 us/op
     p(99.0000) =     36.998 us/op
     p(99.9000) =     36.998 us/op
     p(99.9900) =     36.998 us/op
     p(99.9990) =     36.998 us/op
     p(99.9999) =     36.998 us/op
    p(100.0000) =     36.998 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.250)

# Run progress: 73.11% complete, ETA 00:12:26
# Fork: 1 of 2
# Warmup Iteration   1: 3000.389 us/op
# Warmup Iteration   2: 1841.955 us/op
# Warmup Iteration   3: 1795.936 us/op
# Warmup Iteration   4: 1456.882 us/op
# Warmup Iteration   5: 1501.010 us/op
Iteration   1: 11.542 us/op
Iteration   2: 11.398 us/op
Iteration   3: 13.256 us/op
Iteration   4: 32.199 us/op
Iteration   5: 10.571 us/op

# Run progress: 73.30% complete, ETA 00:12:21
# Fork: 2 of 2
# Warmup Iteration   1: 3010.487 us/op
# Warmup Iteration   2: 1956.320 us/op
# Warmup Iteration   3: 1978.641 us/op
# Warmup Iteration   4: 1532.177 us/op
# Warmup Iteration   5: 1550.673 us/op
Iteration   1: 55.774 us/op
Iteration   2: 33.802 us/op
Iteration   3: 13.680 us/op
Iteration   4: 13.712 us/op
Iteration   5: 12.580 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     20.851 ±(99.9%) 22.685 us/op

  Histogram, us/op:
    [10.000, 15.000) = 7 
    [15.000, 20.000) = 0 
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 0 
    [30.000, 35.000) = 2 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     10.571 us/op
     p(50.0000) =     13.468 us/op
     p(90.0000) =     53.577 us/op
     p(95.0000) =     55.774 us/op
     p(99.0000) =     55.774 us/op
     p(99.9000) =     55.774 us/op
     p(99.9900) =     55.774 us/op
     p(99.9990) =     55.774 us/op
     p(99.9999) =     55.774 us/op
    p(100.0000) =     55.774 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.375)

# Run progress: 73.48% complete, ETA 00:12:16
# Fork: 1 of 2
# Warmup Iteration   1: 2842.368 us/op
# Warmup Iteration   2: 1661.545 us/op
# Warmup Iteration   3: 1592.578 us/op
# Warmup Iteration   4: 1301.321 us/op
# Warmup Iteration   5: 1284.631 us/op
Iteration   1: 24.894 us/op
Iteration   2: 12.412 us/op
Iteration   3: 12.193 us/op
Iteration   4: 27.005 us/op
Iteration   5: 13.795 us/op

# Run progress: 73.67% complete, ETA 00:12:10
# Fork: 2 of 2
# Warmup Iteration   1: 2909.360 us/op
# Warmup Iteration   2: 1752.111 us/op
# Warmup Iteration   3: 1688.878 us/op
# Warmup Iteration   4: 1334.216 us/op
# Warmup Iteration   5: 1276.659 us/op
Iteration   1: 13.096 us/op
Iteration   2: 10.326 us/op
Iteration   3: 11.212 us/op
Iteration   4: 13.033 us/op
Iteration   5: 12.644 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     15.061 ±(99.9%) 8.833 us/op

  Histogram, us/op:
    [10.000, 11.250) = 2 
    [11.250, 12.500) = 2 
    [12.500, 13.750) = 3 
    [13.750, 15.000) = 1 
    [15.000, 16.250) = 0 
    [16.250, 17.500) = 0 
    [17.500, 18.750) = 0 
    [18.750, 20.000) = 0 
    [20.000, 21.250) = 0 
    [21.250, 22.500) = 0 
    [22.500, 23.750) = 0 
    [23.750, 25.000) = 1 
    [25.000, 26.250) = 0 
    [26.250, 27.500) = 1 
    [27.500, 28.750) = 0 

  Percentiles, us/op:
      p(0.0000) =     10.326 us/op
     p(50.0000) =     12.839 us/op
     p(90.0000) =     26.794 us/op
     p(95.0000) =     27.005 us/op
     p(99.0000) =     27.005 us/op
     p(99.9000) =     27.005 us/op
     p(99.9900) =     27.005 us/op
     p(99.9990) =     27.005 us/op
     p(99.9999) =     27.005 us/op
    p(100.0000) =     27.005 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.5)

# Run progress: 73.86% complete, ETA 00:12:05
# Fork: 1 of 2
# Warmup Iteration   1: 3127.028 us/op
# Warmup Iteration   2: 1759.282 us/op
# Warmup Iteration   3: 1789.364 us/op
# Warmup Iteration   4: 1379.837 us/op
# Warmup Iteration   5: 1330.645 us/op
Iteration   1: 13.057 us/op
Iteration   2: 12.346 us/op
Iteration   3: 12.269 us/op
Iteration   4: 12.472 us/op
Iteration   5: 12.163 us/op

# Run progress: 74.05% complete, ETA 00:12:00
# Fork: 2 of 2
# Warmup Iteration   1: 2769.180 us/op
# Warmup Iteration   2: 1774.310 us/op
# Warmup Iteration   3: 1728.556 us/op
# Warmup Iteration   4: 1379.789 us/op
# Warmup Iteration   5: 1364.053 us/op
Iteration   1: 13.781 us/op
Iteration   2: 13.763 us/op
Iteration   3: 12.340 us/op
Iteration   4: 11.536 us/op
Iteration   5: 11.146 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     12.487 ±(99.9%) 1.287 us/op

  Histogram, us/op:
    [11.000, 11.250) = 1 
    [11.250, 11.500) = 0 
    [11.500, 11.750) = 1 
    [11.750, 12.000) = 0 
    [12.000, 12.250) = 1 
    [12.250, 12.500) = 4 
    [12.500, 12.750) = 0 
    [12.750, 13.000) = 0 
    [13.000, 13.250) = 1 
    [13.250, 13.500) = 0 
    [13.500, 13.750) = 0 

  Percentiles, us/op:
      p(0.0000) =     11.146 us/op
     p(50.0000) =     12.343 us/op
     p(90.0000) =     13.779 us/op
     p(95.0000) =     13.781 us/op
     p(99.0000) =     13.781 us/op
     p(99.9000) =     13.781 us/op
     p(99.9900) =     13.781 us/op
     p(99.9990) =     13.781 us/op
     p(99.9999) =     13.781 us/op
    p(100.0000) =     13.781 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.625)

# Run progress: 74.24% complete, ETA 00:11:54
# Fork: 1 of 2
# Warmup Iteration   1: 2643.078 us/op
# Warmup Iteration   2: 1605.054 us/op
# Warmup Iteration   3: 1584.582 us/op
# Warmup Iteration   4: 1158.461 us/op
# Warmup Iteration   5: 1185.663 us/op
Iteration   1: 10.159 us/op
Iteration   2: 35.131 us/op
Iteration   3: 38.185 us/op
Iteration   4: 12.570 us/op
Iteration   5: 12.192 us/op

# Run progress: 74.43% complete, ETA 00:11:49
# Fork: 2 of 2
# Warmup Iteration   1: 2684.859 us/op
# Warmup Iteration   2: 1525.313 us/op
# Warmup Iteration   3: 1616.166 us/op
# Warmup Iteration   4: 1194.445 us/op
# Warmup Iteration   5: 1138.300 us/op
Iteration   1: 9.704 us/op
Iteration   2: 33.946 us/op
Iteration   3: 26.658 us/op
Iteration   4: 12.885 us/op
Iteration   5: 12.225 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     20.366 ±(99.9%) 17.654 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 0 
    [ 5.000,  7.500) = 0 
    [ 7.500, 10.000) = 1 
    [10.000, 12.500) = 3 
    [12.500, 15.000) = 2 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 1 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 1 
    [35.000, 37.500) = 1 

  Percentiles, us/op:
      p(0.0000) =      9.704 us/op
     p(50.0000) =     12.728 us/op
     p(90.0000) =     37.880 us/op
     p(95.0000) =     38.185 us/op
     p(99.0000) =     38.185 us/op
     p(99.9000) =     38.185 us/op
     p(99.9900) =     38.185 us/op
     p(99.9990) =     38.185 us/op
     p(99.9999) =     38.185 us/op
    p(100.0000) =     38.185 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.75)

# Run progress: 74.62% complete, ETA 00:11:44
# Fork: 1 of 2
# Warmup Iteration   1: 3104.913 us/op
# Warmup Iteration   2: 1616.527 us/op
# Warmup Iteration   3: 1688.229 us/op
# Warmup Iteration   4: 1226.202 us/op
# Warmup Iteration   5: 1248.469 us/op
Iteration   1: 9.716 us/op
Iteration   2: 34.925 us/op
Iteration   3: 11.923 us/op
Iteration   4: 10.964 us/op
Iteration   5: 10.482 us/op

# Run progress: 74.81% complete, ETA 00:11:39
# Fork: 2 of 2
# Warmup Iteration   1: 2916.586 us/op
# Warmup Iteration   2: 1871.481 us/op
# Warmup Iteration   3: 1508.946 us/op
# Warmup Iteration   4: 1581.246 us/op
# Warmup Iteration   5: 1193.945 us/op
Iteration   1: 10.589 us/op
Iteration   2: 11.244 us/op
Iteration   3: 13.125 us/op
Iteration   4: 23.828 us/op
Iteration   5: 9.454 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     14.625 ±(99.9%) 12.502 us/op

  Histogram, us/op:
    [ 0.000,  2.500) = 0 
    [ 2.500,  5.000) = 0 
    [ 5.000,  7.500) = 0 
    [ 7.500, 10.000) = 2 
    [10.000, 12.500) = 5 
    [12.500, 15.000) = 1 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 1 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 1 
    [35.000, 37.500) = 0 

  Percentiles, us/op:
      p(0.0000) =      9.454 us/op
     p(50.0000) =     11.104 us/op
     p(90.0000) =     33.815 us/op
     p(95.0000) =     34.925 us/op
     p(99.0000) =     34.925 us/op
     p(99.9000) =     34.925 us/op
     p(99.9900) =     34.925 us/op
     p(99.9990) =     34.925 us/op
     p(99.9999) =     34.925 us/op
    p(100.0000) =     34.925 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 0.875)

# Run progress: 75.00% complete, ETA 00:11:33
# Fork: 1 of 2
# Warmup Iteration   1: 2964.397 us/op
# Warmup Iteration   2: 1645.040 us/op
# Warmup Iteration   3: 1486.154 us/op
# Warmup Iteration   4: 1633.862 us/op
# Warmup Iteration   5: 1269.886 us/op
Iteration   1: 24.191 us/op
Iteration   2: 10.144 us/op
Iteration   3: 13.899 us/op
Iteration   4: 12.205 us/op
Iteration   5: 32.687 us/op

# Run progress: 75.19% complete, ETA 00:11:28
# Fork: 2 of 2
# Warmup Iteration   1: 2795.349 us/op
# Warmup Iteration   2: 1597.875 us/op
# Warmup Iteration   3: 1497.975 us/op
# Warmup Iteration   4: 1615.551 us/op
# Warmup Iteration   5: 1238.877 us/op
Iteration   1: 12.474 us/op
Iteration   2: 10.992 us/op
Iteration   3: 28.345 us/op
Iteration   4: 15.000 us/op
Iteration   5: 12.235 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     17.217 ±(99.9%) 12.230 us/op

  Histogram, us/op:
    [10.000, 12.500) = 5 
    [12.500, 15.000) = 1 
    [15.000, 17.500) = 1 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 1 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 1 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 1 
    [35.000, 37.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     10.144 us/op
     p(50.0000) =     13.186 us/op
     p(90.0000) =     32.253 us/op
     p(95.0000) =     32.687 us/op
     p(99.0000) =     32.687 us/op
     p(99.9000) =     32.687 us/op
     p(99.9900) =     32.687 us/op
     p(99.9990) =     32.687 us/op
     p(99.9999) =     32.687 us/op
    p(100.0000) =     32.687 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1024, loadFactor = 1)

# Run progress: 75.38% complete, ETA 00:11:23
# Fork: 1 of 2
# Warmup Iteration   1: 2920.076 us/op
# Warmup Iteration   2: 1703.718 us/op
# Warmup Iteration   3: 1602.904 us/op
# Warmup Iteration   4: 1611.727 us/op
# Warmup Iteration   5: 1364.282 us/op
Iteration   1: 11.124 us/op
Iteration   2: 10.178 us/op
Iteration   3: 55.322 us/op
Iteration   4: 11.984 us/op
Iteration   5: 11.970 us/op

# Run progress: 75.57% complete, ETA 00:11:18
# Fork: 2 of 2
# Warmup Iteration   1: 2593.824 us/op
# Warmup Iteration   2: 1794.993 us/op
# Warmup Iteration   3: 1813.017 us/op
# Warmup Iteration   4: 1322.510 us/op
# Warmup Iteration   5: 1295.676 us/op
Iteration   1: 11.565 us/op
Iteration   2: 9.784 us/op
Iteration   3: 13.526 us/op
Iteration   4: 10.400 us/op
Iteration   5: 11.505 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     15.736 ±(99.9%) 21.091 us/op

  Histogram, us/op:
    [ 0.000,  5.000) = 0 
    [ 5.000, 10.000) = 1 
    [10.000, 15.000) = 8 
    [15.000, 20.000) = 0 
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 0 
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 0 

  Percentiles, us/op:
      p(0.0000) =      9.784 us/op
     p(50.0000) =     11.535 us/op
     p(90.0000) =     51.142 us/op
     p(95.0000) =     55.322 us/op
     p(99.0000) =     55.322 us/op
     p(99.9000) =     55.322 us/op
     p(99.9900) =     55.322 us/op
     p(99.9990) =     55.322 us/op
     p(99.9999) =     55.322 us/op
    p(100.0000) =     55.322 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.125)

# Run progress: 75.76% complete, ETA 00:11:12
# Fork: 1 of 2
# Warmup Iteration   1: 3237.465 us/op
# Warmup Iteration   2: 2617.115 us/op
# Warmup Iteration   3: 1679.079 us/op
# Warmup Iteration   4: 1686.618 us/op
# Warmup Iteration   5: 1672.739 us/op
Iteration   1: 12.145 us/op
Iteration   2: 19.611 us/op
Iteration   3: 16.744 us/op
Iteration   4: 32.513 us/op
Iteration   5: 18.387 us/op

# Run progress: 75.95% complete, ETA 00:11:07
# Fork: 2 of 2
# Warmup Iteration   1: 3759.043 us/op
# Warmup Iteration   2: 2547.083 us/op
# Warmup Iteration   3: 1697.818 us/op
# Warmup Iteration   4: 1744.629 us/op
# Warmup Iteration   5: 1652.123 us/op
Iteration   1: 12.112 us/op
Iteration   2: 13.111 us/op
Iteration   3: 18.026 us/op
Iteration   4: 17.268 us/op
Iteration   5: 25.948 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     18.587 ±(99.9%) 9.668 us/op

  Histogram, us/op:
    [10.000, 12.500) = 2 
    [12.500, 15.000) = 1 
    [15.000, 17.500) = 2 
    [17.500, 20.000) = 3 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 1 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 1 
    [35.000, 37.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     12.112 us/op
     p(50.0000) =     17.647 us/op
     p(90.0000) =     31.857 us/op
     p(95.0000) =     32.513 us/op
     p(99.0000) =     32.513 us/op
     p(99.9000) =     32.513 us/op
     p(99.9900) =     32.513 us/op
     p(99.9990) =     32.513 us/op
     p(99.9999) =     32.513 us/op
    p(100.0000) =     32.513 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.250)

# Run progress: 76.14% complete, ETA 00:11:02
# Fork: 1 of 2
# Warmup Iteration   1: 2987.595 us/op
# Warmup Iteration   2: 1949.834 us/op
# Warmup Iteration   3: 1798.587 us/op
# Warmup Iteration   4: 1452.217 us/op
# Warmup Iteration   5: 1501.247 us/op
Iteration   1: 12.046 us/op
Iteration   2: 52.330 us/op
Iteration   3: 13.614 us/op
Iteration   4: 12.422 us/op
Iteration   5: 12.760 us/op

# Run progress: 76.33% complete, ETA 00:10:57
# Fork: 2 of 2
# Warmup Iteration   1: 2782.100 us/op
# Warmup Iteration   2: 2119.971 us/op
# Warmup Iteration   3: 1621.669 us/op
# Warmup Iteration   4: 1468.659 us/op
# Warmup Iteration   5: 1526.015 us/op
Iteration   1: 12.717 us/op
Iteration   2: 34.589 us/op
Iteration   3: 29.676 us/op
Iteration   4: 13.651 us/op
Iteration   5: 39.971 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     23.378 ±(99.9%) 22.218 us/op

  Histogram, us/op:
    [10.000, 15.000) = 6 
    [15.000, 20.000) = 0 
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 1 
    [30.000, 35.000) = 1 
    [35.000, 40.000) = 1 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     12.046 us/op
     p(50.0000) =     13.633 us/op
     p(90.0000) =     51.094 us/op
     p(95.0000) =     52.330 us/op
     p(99.0000) =     52.330 us/op
     p(99.9000) =     52.330 us/op
     p(99.9900) =     52.330 us/op
     p(99.9990) =     52.330 us/op
     p(99.9999) =     52.330 us/op
    p(100.0000) =     52.330 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.375)

# Run progress: 76.52% complete, ETA 00:10:51
# Fork: 1 of 2
# Warmup Iteration   1: 3019.787 us/op
# Warmup Iteration   2: 1654.222 us/op
# Warmup Iteration   3: 1739.917 us/op
# Warmup Iteration   4: 1286.518 us/op
# Warmup Iteration   5: 1226.335 us/op
Iteration   1: 13.197 us/op
Iteration   2: 10.097 us/op
Iteration   3: 28.440 us/op
Iteration   4: 34.499 us/op
Iteration   5: 42.045 us/op

# Run progress: 76.70% complete, ETA 00:10:46
# Fork: 2 of 2
# Warmup Iteration   1: 2942.044 us/op
# Warmup Iteration   2: 1700.828 us/op
# Warmup Iteration   3: 1625.511 us/op
# Warmup Iteration   4: 1309.698 us/op
# Warmup Iteration   5: 1326.921 us/op
Iteration   1: 12.811 us/op
Iteration   2: 11.098 us/op
Iteration   3: 12.061 us/op
Iteration   4: 13.219 us/op
Iteration   5: 14.087 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     19.155 ±(99.9%) 17.308 us/op

  Histogram, us/op:
    [10.000, 12.500) = 3 
    [12.500, 15.000) = 4 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 1 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 1 
    [35.000, 37.500) = 0 
    [37.500, 40.000) = 0 
    [40.000, 42.500) = 1 
    [42.500, 45.000) = 0 
    [45.000, 47.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     10.097 us/op
     p(50.0000) =     13.208 us/op
     p(90.0000) =     41.290 us/op
     p(95.0000) =     42.045 us/op
     p(99.0000) =     42.045 us/op
     p(99.9000) =     42.045 us/op
     p(99.9900) =     42.045 us/op
     p(99.9990) =     42.045 us/op
     p(99.9999) =     42.045 us/op
    p(100.0000) =     42.045 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.5)

# Run progress: 76.89% complete, ETA 00:10:41
# Fork: 1 of 2
# Warmup Iteration   1: 2679.356 us/op
# Warmup Iteration   2: 1753.663 us/op
# Warmup Iteration   3: 1719.628 us/op
# Warmup Iteration   4: 1403.644 us/op
# Warmup Iteration   5: 1348.306 us/op
Iteration   1: 12.424 us/op
Iteration   2: 55.664 us/op
Iteration   3: 11.868 us/op
Iteration   4: 11.897 us/op
Iteration   5: 25.517 us/op

# Run progress: 77.08% complete, ETA 00:10:36
# Fork: 2 of 2
# Warmup Iteration   1: 2926.497 us/op
# Warmup Iteration   2: 1846.926 us/op
# Warmup Iteration   3: 1613.075 us/op
# Warmup Iteration   4: 1375.371 us/op
# Warmup Iteration   5: 1352.018 us/op
Iteration   1: 11.429 us/op
Iteration   2: 12.685 us/op
Iteration   3: 12.216 us/op
Iteration   4: 12.648 us/op
Iteration   5: 11.531 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     17.788 ±(99.9%) 21.118 us/op

  Histogram, us/op:
    [10.000, 15.000) = 8 
    [15.000, 20.000) = 0 
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 1 
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 0 
    [50.000, 55.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     11.429 us/op
     p(50.0000) =     12.320 us/op
     p(90.0000) =     52.649 us/op
     p(95.0000) =     55.664 us/op
     p(99.0000) =     55.664 us/op
     p(99.9000) =     55.664 us/op
     p(99.9900) =     55.664 us/op
     p(99.9990) =     55.664 us/op
     p(99.9999) =     55.664 us/op
    p(100.0000) =     55.664 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.625)

# Run progress: 77.27% complete, ETA 00:10:30
# Fork: 1 of 2
# Warmup Iteration   1: 2384.158 us/op
# Warmup Iteration   2: 1526.104 us/op
# Warmup Iteration   3: 1697.617 us/op
# Warmup Iteration   4: 1167.081 us/op
# Warmup Iteration   5: 1132.026 us/op
Iteration   1: 10.053 us/op
Iteration   2: 35.994 us/op
Iteration   3: 26.826 us/op
Iteration   4: 31.519 us/op
Iteration   5: 12.071 us/op

# Run progress: 77.46% complete, ETA 00:10:25
# Fork: 2 of 2
# Warmup Iteration   1: 2802.207 us/op
# Warmup Iteration   2: 1688.756 us/op
# Warmup Iteration   3: 1668.316 us/op
# Warmup Iteration   4: 1338.417 us/op
# Warmup Iteration   5: 1165.093 us/op
Iteration   1: 25.474 us/op
Iteration   2: 11.670 us/op
Iteration   3: 13.340 us/op
Iteration   4: 15.117 us/op
Iteration   5: 26.196 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     20.826 ±(99.9%) 14.218 us/op

  Histogram, us/op:
    [10.000, 12.500) = 3 
    [12.500, 15.000) = 1 
    [15.000, 17.500) = 1 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 3 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 1 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 1 

  Percentiles, us/op:
      p(0.0000) =     10.053 us/op
     p(50.0000) =     20.296 us/op
     p(90.0000) =     35.547 us/op
     p(95.0000) =     35.994 us/op
     p(99.0000) =     35.994 us/op
     p(99.9000) =     35.994 us/op
     p(99.9900) =     35.994 us/op
     p(99.9990) =     35.994 us/op
     p(99.9999) =     35.994 us/op
    p(100.0000) =     35.994 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.75)

# Run progress: 77.65% complete, ETA 00:10:20
# Fork: 1 of 2
# Warmup Iteration   1: 2947.782 us/op
# Warmup Iteration   2: 1648.940 us/op
# Warmup Iteration   3: 1711.354 us/op
# Warmup Iteration   4: 1197.976 us/op
# Warmup Iteration   5: 1186.199 us/op
Iteration   1: 10.189 us/op
Iteration   2: 41.442 us/op
Iteration   3: 13.404 us/op
Iteration   4: 10.926 us/op
Iteration   5: 11.844 us/op

# Run progress: 77.84% complete, ETA 00:10:15
# Fork: 2 of 2
# Warmup Iteration   1: 2735.334 us/op
# Warmup Iteration   2: 1568.083 us/op
# Warmup Iteration   3: 1589.405 us/op
# Warmup Iteration   4: 1471.570 us/op
# Warmup Iteration   5: 1220.986 us/op
Iteration   1: 32.973 us/op
Iteration   2: 35.292 us/op
Iteration   3: 12.152 us/op
Iteration   4: 26.998 us/op
Iteration   5: 41.031 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     23.625 ±(99.9%) 19.981 us/op

  Histogram, us/op:
    [10.000, 12.500) = 4 
    [12.500, 15.000) = 1 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 1 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 1 
    [35.000, 37.500) = 1 
    [37.500, 40.000) = 0 
    [40.000, 42.500) = 2 
    [42.500, 45.000) = 0 
    [45.000, 47.500) = 0 

  Percentiles, us/op:
      p(0.0000) =     10.189 us/op
     p(50.0000) =     20.201 us/op
     p(90.0000) =     41.401 us/op
     p(95.0000) =     41.442 us/op
     p(99.0000) =     41.442 us/op
     p(99.9000) =     41.442 us/op
     p(99.9900) =     41.442 us/op
     p(99.9990) =     41.442 us/op
     p(99.9999) =     41.442 us/op
    p(100.0000) =     41.442 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 0.875)

# Run progress: 78.03% complete, ETA 00:10:09
# Fork: 1 of 2
# Warmup Iteration   1: 2642.909 us/op
# Warmup Iteration   2: 1984.982 us/op
# Warmup Iteration   3: 1378.506 us/op
# Warmup Iteration   4: 1330.601 us/op
# Warmup Iteration   5: 1275.484 us/op
Iteration   1: 11.810 us/op
Iteration   2: 26.869 us/op
Iteration   3: 28.977 us/op
Iteration   4: 13.556 us/op
Iteration   5: 11.436 us/op

# Run progress: 78.22% complete, ETA 00:10:04
# Fork: 2 of 2
# Warmup Iteration   1: 2845.704 us/op
# Warmup Iteration   2: 1668.022 us/op
# Warmup Iteration   3: 1511.710 us/op
# Warmup Iteration   4: 1648.405 us/op
# Warmup Iteration   5: 1282.265 us/op
Iteration   1: 10.165 us/op
Iteration   2: 10.195 us/op
Iteration   3: 13.260 us/op
Iteration   4: 13.316 us/op
Iteration   5: 24.351 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     16.393 ±(99.9%) 11.059 us/op

  Histogram, us/op:
    [10.000, 11.250) = 2 
    [11.250, 12.500) = 2 
    [12.500, 13.750) = 3 
    [13.750, 15.000) = 0 
    [15.000, 16.250) = 0 
    [16.250, 17.500) = 0 
    [17.500, 18.750) = 0 
    [18.750, 20.000) = 0 
    [20.000, 21.250) = 0 
    [21.250, 22.500) = 0 
    [22.500, 23.750) = 0 
    [23.750, 25.000) = 1 
    [25.000, 26.250) = 0 
    [26.250, 27.500) = 1 
    [27.500, 28.750) = 0 

  Percentiles, us/op:
      p(0.0000) =     10.165 us/op
     p(50.0000) =     13.288 us/op
     p(90.0000) =     28.766 us/op
     p(95.0000) =     28.977 us/op
     p(99.0000) =     28.977 us/op
     p(99.9000) =     28.977 us/op
     p(99.9900) =     28.977 us/op
     p(99.9990) =     28.977 us/op
     p(99.9999) =     28.977 us/op
    p(100.0000) =     28.977 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000, loadFactor = 1)

# Run progress: 78.41% complete, ETA 00:09:59
# Fork: 1 of 2
# Warmup Iteration   1: 2515.254 us/op
# Warmup Iteration   2: 1691.468 us/op
# Warmup Iteration   3: 1572.779 us/op
# Warmup Iteration   4: 1673.619 us/op
# Warmup Iteration   5: 1290.672 us/op
Iteration   1: 11.456 us/op
Iteration   2: 37.956 us/op
Iteration   3: 11.957 us/op
Iteration   4: 46.388 us/op
Iteration   5: 12.004 us/op

# Run progress: 78.60% complete, ETA 00:09:54
# Fork: 2 of 2
# Warmup Iteration   1: 2616.900 us/op
# Warmup Iteration   2: 1731.223 us/op
# Warmup Iteration   3: 1712.509 us/op
# Warmup Iteration   4: 1347.145 us/op
# Warmup Iteration   5: 1327.833 us/op
Iteration   1: 10.506 us/op
Iteration   2: 10.970 us/op
Iteration   3: 12.360 us/op
Iteration   4: 12.261 us/op
Iteration   5: 26.393 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     19.225 ±(99.9%) 19.810 us/op

  Histogram, us/op:
    [10.000, 12.500) = 7 
    [12.500, 15.000) = 0 
    [15.000, 17.500) = 0 
    [17.500, 20.000) = 0 
    [20.000, 22.500) = 0 
    [22.500, 25.000) = 0 
    [25.000, 27.500) = 1 
    [27.500, 30.000) = 0 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 0 
    [37.500, 40.000) = 1 
    [40.000, 42.500) = 0 
    [42.500, 45.000) = 0 
    [45.000, 47.500) = 1 

  Percentiles, us/op:
      p(0.0000) =     10.506 us/op
     p(50.0000) =     12.133 us/op
     p(90.0000) =     45.545 us/op
     p(95.0000) =     46.388 us/op
     p(99.0000) =     46.388 us/op
     p(99.9000) =     46.388 us/op
     p(99.9900) =     46.388 us/op
     p(99.9990) =     46.388 us/op
     p(99.9999) =     46.388 us/op
    p(100.0000) =     46.388 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.125)

# Run progress: 78.79% complete, ETA 00:09:48
# Fork: 1 of 2
# Warmup Iteration   1: 3581.539 us/op
# Warmup Iteration   2: 2165.480 us/op
# Warmup Iteration   3: 1858.113 us/op
# Warmup Iteration   4: 1603.591 us/op
# Warmup Iteration   5: 1529.660 us/op
Iteration   1: 32.654 us/op
Iteration   2: 53.268 us/op
Iteration   3: 82.681 us/op
Iteration   4: 45.343 us/op
Iteration   5: 55.952 us/op

# Run progress: 78.98% complete, ETA 00:09:43
# Fork: 2 of 2
# Warmup Iteration   1: 3530.142 us/op
# Warmup Iteration   2: 2427.449 us/op
# Warmup Iteration   3: 1911.087 us/op
# Warmup Iteration   4: 1696.652 us/op
# Warmup Iteration   5: 1609.752 us/op
Iteration   1: 39.377 us/op
Iteration   2: 91.594 us/op
Iteration   3: 73.476 us/op
Iteration   4: 51.980 us/op
Iteration   5: 36.531 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     56.286 ±(99.9%) 30.325 us/op

  Histogram, us/op:
    [ 30.000,  35.000) = 1 
    [ 35.000,  40.000) = 2 
    [ 40.000,  45.000) = 0 
    [ 45.000,  50.000) = 1 
    [ 50.000,  55.000) = 2 
    [ 55.000,  60.000) = 1 
    [ 60.000,  65.000) = 0 
    [ 65.000,  70.000) = 0 
    [ 70.000,  75.000) = 1 
    [ 75.000,  80.000) = 0 
    [ 80.000,  85.000) = 1 
    [ 85.000,  90.000) = 0 
    [ 90.000,  95.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     32.654 us/op
     p(50.0000) =     52.624 us/op
     p(90.0000) =     90.703 us/op
     p(95.0000) =     91.594 us/op
     p(99.0000) =     91.594 us/op
     p(99.9000) =     91.594 us/op
     p(99.9900) =     91.594 us/op
     p(99.9990) =     91.594 us/op
     p(99.9999) =     91.594 us/op
    p(100.0000) =     91.594 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.250)

# Run progress: 79.17% complete, ETA 00:09:38
# Fork: 1 of 2
# Warmup Iteration   1: 3429.305 us/op
# Warmup Iteration   2: 1701.967 us/op
# Warmup Iteration   3: 1657.071 us/op
# Warmup Iteration   4: 1399.263 us/op
# Warmup Iteration   5: 1488.232 us/op
Iteration   1: 29.833 us/op
Iteration   2: 60.046 us/op
Iteration   3: 49.210 us/op
Iteration   4: 64.497 us/op
Iteration   5: 49.512 us/op

# Run progress: 79.36% complete, ETA 00:09:33
# Fork: 2 of 2
# Warmup Iteration   1: 3238.214 us/op
# Warmup Iteration   2: 1816.767 us/op
# Warmup Iteration   3: 1832.953 us/op
# Warmup Iteration   4: 1337.304 us/op
# Warmup Iteration   5: 1373.773 us/op
Iteration   1: 61.260 us/op
Iteration   2: 67.820 us/op
Iteration   3: 33.746 us/op
Iteration   4: 33.327 us/op
Iteration   5: 40.633 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     48.988 ±(99.9%) 21.278 us/op

  Histogram, us/op:
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 1 
    [30.000, 35.000) = 2 
    [35.000, 40.000) = 0 
    [40.000, 45.000) = 1 
    [45.000, 50.000) = 2 
    [50.000, 55.000) = 0 
    [55.000, 60.000) = 0 
    [60.000, 65.000) = 3 

  Percentiles, us/op:
      p(0.0000) =     29.833 us/op
     p(50.0000) =     49.361 us/op
     p(90.0000) =     67.488 us/op
     p(95.0000) =     67.820 us/op
     p(99.0000) =     67.820 us/op
     p(99.9000) =     67.820 us/op
     p(99.9900) =     67.820 us/op
     p(99.9990) =     67.820 us/op
     p(99.9999) =     67.820 us/op
    p(100.0000) =     67.820 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.375)

# Run progress: 79.55% complete, ETA 00:09:27
# Fork: 1 of 2
# Warmup Iteration   1: 2524.329 us/op
# Warmup Iteration   2: 1390.229 us/op
# Warmup Iteration   3: 1452.311 us/op
# Warmup Iteration   4: 1112.919 us/op
# Warmup Iteration   5: 1113.204 us/op
Iteration   1: 47.294 us/op
Iteration   2: 65.981 us/op
Iteration   3: 36.584 us/op
Iteration   4: 36.276 us/op
Iteration   5: 76.059 us/op

# Run progress: 79.73% complete, ETA 00:09:22
# Fork: 2 of 2
# Warmup Iteration   1: 2536.928 us/op
# Warmup Iteration   2: 1460.632 us/op
# Warmup Iteration   3: 1613.566 us/op
# Warmup Iteration   4: 1131.209 us/op
# Warmup Iteration   5: 1075.696 us/op
Iteration   1: 57.406 us/op
Iteration   2: 66.599 us/op
Iteration   3: 52.459 us/op
Iteration   4: 48.499 us/op
Iteration   5: 46.741 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     53.390 ±(99.9%) 19.805 us/op

  Histogram, us/op:
    [30.000, 35.000) = 0 
    [35.000, 40.000) = 2 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 3 
    [50.000, 55.000) = 1 
    [55.000, 60.000) = 1 
    [60.000, 65.000) = 0 
    [65.000, 70.000) = 2 
    [70.000, 75.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     36.276 us/op
     p(50.0000) =     50.479 us/op
     p(90.0000) =     75.113 us/op
     p(95.0000) =     76.059 us/op
     p(99.0000) =     76.059 us/op
     p(99.9000) =     76.059 us/op
     p(99.9900) =     76.059 us/op
     p(99.9990) =     76.059 us/op
     p(99.9999) =     76.059 us/op
    p(100.0000) =     76.059 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.5)

# Run progress: 79.92% complete, ETA 00:09:17
# Fork: 1 of 2
# Warmup Iteration   1: 2735.779 us/op
# Warmup Iteration   2: 1401.856 us/op
# Warmup Iteration   3: 1620.411 us/op
# Warmup Iteration   4: 1125.250 us/op
# Warmup Iteration   5: 1125.570 us/op
Iteration   1: 45.034 us/op
Iteration   2: 54.822 us/op
Iteration   3: 72.009 us/op
Iteration   4: 40.190 us/op
Iteration   5: 35.289 us/op

# Run progress: 80.11% complete, ETA 00:09:11
# Fork: 2 of 2
# Warmup Iteration   1: 2645.177 us/op
# Warmup Iteration   2: 1540.532 us/op
# Warmup Iteration   3: 1621.355 us/op
# Warmup Iteration   4: 1157.549 us/op
# Warmup Iteration   5: 1148.474 us/op
Iteration   1: 29.648 us/op
Iteration   2: 53.761 us/op
Iteration   3: 48.112 us/op
Iteration   4: 34.327 us/op
Iteration   5: 49.450 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     46.264 ±(99.9%) 18.743 us/op

  Histogram, us/op:
    [20.000, 25.000) = 0 
    [25.000, 30.000) = 1 
    [30.000, 35.000) = 1 
    [35.000, 40.000) = 1 
    [40.000, 45.000) = 1 
    [45.000, 50.000) = 3 
    [50.000, 55.000) = 2 
    [55.000, 60.000) = 0 
    [60.000, 65.000) = 0 
    [65.000, 70.000) = 0 
    [70.000, 75.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     29.648 us/op
     p(50.0000) =     46.573 us/op
     p(90.0000) =     70.290 us/op
     p(95.0000) =     72.009 us/op
     p(99.0000) =     72.009 us/op
     p(99.9000) =     72.009 us/op
     p(99.9900) =     72.009 us/op
     p(99.9990) =     72.009 us/op
     p(99.9999) =     72.009 us/op
    p(100.0000) =     72.009 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.625)

# Run progress: 80.30% complete, ETA 00:09:06
# Fork: 1 of 2
# Warmup Iteration   1: 2042.558 us/op
# Warmup Iteration   2: 1259.784 us/op
# Warmup Iteration   3: 1357.425 us/op
# Warmup Iteration   4: 899.123 us/op
# Warmup Iteration   5: 889.865 us/op
Iteration   1: 32.189 us/op
Iteration   2: 91.277 us/op
Iteration   3: 51.887 us/op
Iteration   4: 33.748 us/op
Iteration   5: 32.392 us/op

# Run progress: 80.49% complete, ETA 00:09:01
# Fork: 2 of 2
# Warmup Iteration   1: 2078.991 us/op
# Warmup Iteration   2: 1295.535 us/op
# Warmup Iteration   3: 1058.873 us/op
# Warmup Iteration   4: 1163.788 us/op
# Warmup Iteration   5: 894.387 us/op
Iteration   1: 67.953 us/op
Iteration   2: 89.645 us/op
Iteration   3: 53.544 us/op
Iteration   4: 33.068 us/op
Iteration   5: 63.253 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     54.896 ±(99.9%) 34.652 us/op

  Histogram, us/op:
    [ 30.000,  35.000) = 4 
    [ 35.000,  40.000) = 0 
    [ 40.000,  45.000) = 0 
    [ 45.000,  50.000) = 0 
    [ 50.000,  55.000) = 2 
    [ 55.000,  60.000) = 0 
    [ 60.000,  65.000) = 1 
    [ 65.000,  70.000) = 1 
    [ 70.000,  75.000) = 0 
    [ 75.000,  80.000) = 0 
    [ 80.000,  85.000) = 0 
    [ 85.000,  90.000) = 1 
    [ 90.000,  95.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     32.189 us/op
     p(50.0000) =     52.716 us/op
     p(90.0000) =     91.114 us/op
     p(95.0000) =     91.277 us/op
     p(99.0000) =     91.277 us/op
     p(99.9000) =     91.277 us/op
     p(99.9900) =     91.277 us/op
     p(99.9990) =     91.277 us/op
     p(99.9999) =     91.277 us/op
    p(100.0000) =     91.277 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.75)

# Run progress: 80.68% complete, ETA 00:08:56
# Fork: 1 of 2
# Warmup Iteration   1: 2009.781 us/op
# Warmup Iteration   2: 1265.870 us/op
# Warmup Iteration   3: 1139.547 us/op
# Warmup Iteration   4: 1155.899 us/op
# Warmup Iteration   5: 913.878 us/op
Iteration   1: 30.002 us/op
Iteration   2: 64.919 us/op
Iteration   3: 34.246 us/op
Iteration   4: 30.964 us/op
Iteration   5: 51.000 us/op

# Run progress: 80.87% complete, ETA 00:08:50
# Fork: 2 of 2
# Warmup Iteration   1: 2019.481 us/op
# Warmup Iteration   2: 1249.566 us/op
# Warmup Iteration   3: 1130.666 us/op
# Warmup Iteration   4: 1155.321 us/op
# Warmup Iteration   5: 887.444 us/op
Iteration   1: 30.840 us/op
Iteration   2: 114.331 us/op
Iteration   3: 82.422 us/op
Iteration   4: 32.888 us/op
Iteration   5: 45.794 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     51.741 ±(99.9%) 42.377 us/op

  Histogram, us/op:
    [ 30.000,  35.000) = 5 
    [ 35.000,  40.000) = 0 
    [ 40.000,  45.000) = 0 
    [ 45.000,  50.000) = 1 
    [ 50.000,  55.000) = 1 
    [ 55.000,  60.000) = 0 
    [ 60.000,  65.000) = 1 
    [ 65.000,  70.000) = 0 
    [ 70.000,  75.000) = 0 
    [ 75.000,  80.000) = 0 
    [ 80.000,  85.000) = 1 
    [ 85.000,  90.000) = 0 
    [ 90.000,  95.000) = 0 
    [ 95.000, 100.000) = 0 
    [100.000, 105.000) = 0 
    [105.000, 110.000) = 0 
    [110.000, 115.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     30.002 us/op
     p(50.0000) =     40.020 us/op
     p(90.0000) =    111.140 us/op
     p(95.0000) =    114.331 us/op
     p(99.0000) =    114.331 us/op
     p(99.9000) =    114.331 us/op
     p(99.9900) =    114.331 us/op
     p(99.9990) =    114.331 us/op
     p(99.9999) =    114.331 us/op
    p(100.0000) =    114.331 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 0.875)

# Run progress: 81.06% complete, ETA 00:08:45
# Fork: 1 of 2
# Warmup Iteration   1: 1998.020 us/op
# Warmup Iteration   2: 1241.888 us/op
# Warmup Iteration   3: 1160.003 us/op
# Warmup Iteration   4: 917.202 us/op
# Warmup Iteration   5: 917.533 us/op
Iteration   1: 30.728 us/op
Iteration   2: 97.523 us/op
Iteration   3: 35.267 us/op
Iteration   4: 32.744 us/op
Iteration   5: 46.996 us/op

# Run progress: 81.25% complete, ETA 00:08:40
# Fork: 2 of 2
# Warmup Iteration   1: 2013.264 us/op
# Warmup Iteration   2: 1253.736 us/op
# Warmup Iteration   3: 1210.370 us/op
# Warmup Iteration   4: 899.386 us/op
# Warmup Iteration   5: 892.677 us/op
Iteration   1: 47.088 us/op
Iteration   2: 74.102 us/op
Iteration   3: 47.920 us/op
Iteration   4: 32.997 us/op
Iteration   5: 32.844 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     47.821 ±(99.9%) 32.982 us/op

  Histogram, us/op:
    [ 30.000,  35.000) = 4 
    [ 35.000,  40.000) = 1 
    [ 40.000,  45.000) = 0 
    [ 45.000,  50.000) = 3 
    [ 50.000,  55.000) = 0 
    [ 55.000,  60.000) = 0 
    [ 60.000,  65.000) = 0 
    [ 65.000,  70.000) = 0 
    [ 70.000,  75.000) = 1 
    [ 75.000,  80.000) = 0 
    [ 80.000,  85.000) = 0 
    [ 85.000,  90.000) = 0 
    [ 90.000,  95.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     30.728 us/op
     p(50.0000) =     41.132 us/op
     p(90.0000) =     95.181 us/op
     p(95.0000) =     97.523 us/op
     p(99.0000) =     97.523 us/op
     p(99.9000) =     97.523 us/op
     p(99.9900) =     97.523 us/op
     p(99.9990) =     97.523 us/op
     p(99.9999) =     97.523 us/op
    p(100.0000) =     97.523 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 10000, loadFactor = 1)

# Run progress: 81.44% complete, ETA 00:08:35
# Fork: 1 of 2
# Warmup Iteration   1: 2143.930 us/op
# Warmup Iteration   2: 1283.052 us/op
# Warmup Iteration   3: 1135.796 us/op
# Warmup Iteration   4: 1166.634 us/op
# Warmup Iteration   5: 902.714 us/op
Iteration   1: 36.726 us/op
Iteration   2: 105.415 us/op
Iteration   3: 50.865 us/op
Iteration   4: 37.307 us/op
Iteration   5: 50.101 us/op

# Run progress: 81.63% complete, ETA 00:08:29
# Fork: 2 of 2
# Warmup Iteration   1: 2065.536 us/op
# Warmup Iteration   2: 1209.146 us/op
# Warmup Iteration   3: 1072.151 us/op
# Warmup Iteration   4: 1107.383 us/op
# Warmup Iteration   5: 884.179 us/op
Iteration   1: 30.869 us/op
Iteration   2: 61.857 us/op
Iteration   3: 51.683 us/op
Iteration   4: 46.430 us/op
Iteration   5: 47.992 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =     51.925 ±(99.9%) 31.464 us/op

  Histogram, us/op:
    [ 30.000,  35.000) = 1 
    [ 35.000,  40.000) = 2 
    [ 40.000,  45.000) = 0 
    [ 45.000,  50.000) = 2 
    [ 50.000,  55.000) = 3 
    [ 55.000,  60.000) = 0 
    [ 60.000,  65.000) = 1 
    [ 65.000,  70.000) = 0 
    [ 70.000,  75.000) = 0 
    [ 75.000,  80.000) = 0 
    [ 80.000,  85.000) = 0 
    [ 85.000,  90.000) = 0 
    [ 90.000,  95.000) = 0 
    [ 95.000, 100.000) = 0 
    [100.000, 105.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     30.869 us/op
     p(50.0000) =     49.046 us/op
     p(90.0000) =    101.059 us/op
     p(95.0000) =    105.415 us/op
     p(99.0000) =    105.415 us/op
     p(99.9000) =    105.415 us/op
     p(99.9900) =    105.415 us/op
     p(99.9990) =    105.415 us/op
     p(99.9999) =    105.415 us/op
    p(100.0000) =    105.415 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.125)

# Run progress: 81.82% complete, ETA 00:08:24
# Fork: 1 of 2
# Warmup Iteration   1: 3944.187 us/op
# Warmup Iteration   2: 1867.693 us/op
# Warmup Iteration   3: 1417.686 us/op
# Warmup Iteration   4: 1346.143 us/op
# Warmup Iteration   5: 1312.833 us/op
Iteration   1: 109.882 us/op
Iteration   2: 206.555 us/op
Iteration   3: 110.413 us/op
Iteration   4: 102.006 us/op
Iteration   5: 103.525 us/op

# Run progress: 82.01% complete, ETA 00:08:19
# Fork: 2 of 2
# Warmup Iteration   1: 3360.544 us/op
# Warmup Iteration   2: 1996.801 us/op
# Warmup Iteration   3: 1452.598 us/op
# Warmup Iteration   4: 1392.246 us/op
# Warmup Iteration   5: 1352.572 us/op
Iteration   1: 110.028 us/op
Iteration   2: 183.730 us/op
Iteration   3: 102.906 us/op
Iteration   4: 104.472 us/op
Iteration   5: 108.079 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    124.160 ±(99.9%) 57.337 us/op

  Histogram, us/op:
    [100.000, 112.500) = 8 
    [112.500, 125.000) = 0 
    [125.000, 137.500) = 0 
    [137.500, 150.000) = 0 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 0 
    [175.000, 187.500) = 1 
    [187.500, 200.000) = 0 
    [200.000, 212.500) = 1 
    [212.500, 225.000) = 0 
    [225.000, 237.500) = 0 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    102.006 us/op
     p(50.0000) =    108.981 us/op
     p(90.0000) =    204.273 us/op
     p(95.0000) =    206.555 us/op
     p(99.0000) =    206.555 us/op
     p(99.9000) =    206.555 us/op
     p(99.9900) =    206.555 us/op
     p(99.9990) =    206.555 us/op
     p(99.9999) =    206.555 us/op
    p(100.0000) =    206.555 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.250)

# Run progress: 82.20% complete, ETA 00:08:14
# Fork: 1 of 2
# Warmup Iteration   1: 2123.156 us/op
# Warmup Iteration   2: 1247.823 us/op
# Warmup Iteration   3: 1141.249 us/op
# Warmup Iteration   4: 1178.102 us/op
# Warmup Iteration   5: 928.153 us/op
Iteration   1: 97.301 us/op
Iteration   2: 153.674 us/op
Iteration   3: 151.027 us/op
Iteration   4: 105.736 us/op
Iteration   5: 98.302 us/op

# Run progress: 82.39% complete, ETA 00:08:08
# Fork: 2 of 2
# Warmup Iteration   1: 2154.778 us/op
# Warmup Iteration   2: 1292.803 us/op
# Warmup Iteration   3: 1275.057 us/op
# Warmup Iteration   4: 963.322 us/op
# Warmup Iteration   5: 943.015 us/op
Iteration   1: 95.626 us/op
Iteration   2: 148.197 us/op
Iteration   3: 102.840 us/op
Iteration   4: 129.816 us/op
Iteration   5: 110.868 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    119.339 ±(99.9%) 36.148 us/op

  Histogram, us/op:
    [ 90.000,  95.000) = 0 
    [ 95.000, 100.000) = 3 
    [100.000, 105.000) = 1 
    [105.000, 110.000) = 1 
    [110.000, 115.000) = 1 
    [115.000, 120.000) = 0 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 1 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 1 
    [150.000, 155.000) = 2 

  Percentiles, us/op:
      p(0.0000) =     95.626 us/op
     p(50.0000) =    108.302 us/op
     p(90.0000) =    153.409 us/op
     p(95.0000) =    153.674 us/op
     p(99.0000) =    153.674 us/op
     p(99.9000) =    153.674 us/op
     p(99.9900) =    153.674 us/op
     p(99.9990) =    153.674 us/op
     p(99.9999) =    153.674 us/op
    p(100.0000) =    153.674 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.375)

# Run progress: 82.58% complete, ETA 00:08:03
# Fork: 1 of 2
# Warmup Iteration   1: 2030.202 us/op
# Warmup Iteration   2: 1315.668 us/op
# Warmup Iteration   3: 1491.281 us/op
# Warmup Iteration   4: 921.307 us/op
# Warmup Iteration   5: 915.386 us/op
Iteration   1: 101.407 us/op
Iteration   2: 126.249 us/op
Iteration   3: 111.876 us/op
Iteration   4: 101.526 us/op
Iteration   5: 126.227 us/op

# Run progress: 82.77% complete, ETA 00:07:58
# Fork: 2 of 2
# Warmup Iteration   1: 2134.591 us/op
# Warmup Iteration   2: 1477.151 us/op
# Warmup Iteration   3: 958.087 us/op
# Warmup Iteration   4: 959.441 us/op
# Warmup Iteration   5: 951.337 us/op
Iteration   1: 101.506 us/op
Iteration   2: 157.757 us/op
Iteration   3: 120.935 us/op
Iteration   4: 115.152 us/op
Iteration   5: 101.983 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    116.462 ±(99.9%) 26.772 us/op

  Histogram, us/op:
    [100.000, 105.000) = 4 
    [105.000, 110.000) = 0 
    [110.000, 115.000) = 1 
    [115.000, 120.000) = 1 
    [120.000, 125.000) = 1 
    [125.000, 130.000) = 2 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    101.407 us/op
     p(50.0000) =    113.514 us/op
     p(90.0000) =    154.606 us/op
     p(95.0000) =    157.757 us/op
     p(99.0000) =    157.757 us/op
     p(99.9000) =    157.757 us/op
     p(99.9900) =    157.757 us/op
     p(99.9990) =    157.757 us/op
     p(99.9999) =    157.757 us/op
    p(100.0000) =    157.757 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.5)

# Run progress: 82.95% complete, ETA 00:07:53
# Fork: 1 of 2
# Warmup Iteration   1: 2071.982 us/op
# Warmup Iteration   2: 1374.615 us/op
# Warmup Iteration   3: 1181.261 us/op
# Warmup Iteration   4: 1292.556 us/op
# Warmup Iteration   5: 966.541 us/op
Iteration   1: 100.318 us/op
Iteration   2: 218.478 us/op
Iteration   3: 150.491 us/op
Iteration   4: 103.363 us/op
Iteration   5: 96.424 us/op

# Run progress: 83.14% complete, ETA 00:07:47
# Fork: 2 of 2
# Warmup Iteration   1: 1927.301 us/op
# Warmup Iteration   2: 1329.551 us/op
# Warmup Iteration   3: 1200.813 us/op
# Warmup Iteration   4: 1193.994 us/op
# Warmup Iteration   5: 939.174 us/op
Iteration   1: 97.046 us/op
Iteration   2: 159.418 us/op
Iteration   3: 100.685 us/op
Iteration   4: 108.128 us/op
Iteration   5: 100.440 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    123.479 ±(99.9%) 61.109 us/op

  Histogram, us/op:
    [  0.000,  25.000) = 0 
    [ 25.000,  50.000) = 0 
    [ 50.000,  75.000) = 0 
    [ 75.000, 100.000) = 2 
    [100.000, 125.000) = 5 
    [125.000, 150.000) = 0 
    [150.000, 175.000) = 2 
    [175.000, 200.000) = 0 
    [200.000, 225.000) = 1 
    [225.000, 250.000) = 0 
    [250.000, 275.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     96.424 us/op
     p(50.0000) =    102.024 us/op
     p(90.0000) =    212.572 us/op
     p(95.0000) =    218.478 us/op
     p(99.0000) =    218.478 us/op
     p(99.9000) =    218.478 us/op
     p(99.9900) =    218.478 us/op
     p(99.9990) =    218.478 us/op
     p(99.9999) =    218.478 us/op
    p(100.0000) =    218.478 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.625)

# Run progress: 83.33% complete, ETA 00:07:42
# Fork: 1 of 2
# Warmup Iteration   1: 2035.479 us/op
# Warmup Iteration   2: 1384.722 us/op
# Warmup Iteration   3: 1412.542 us/op
# Warmup Iteration   4: 973.797 us/op
# Warmup Iteration   5: 910.054 us/op
Iteration   1: 102.055 us/op
Iteration   2: 158.038 us/op
Iteration   3: 132.181 us/op
Iteration   4: 113.280 us/op
Iteration   5: 164.216 us/op

# Run progress: 83.52% complete, ETA 00:07:37
# Fork: 2 of 2
# Warmup Iteration   1: 2142.685 us/op
# Warmup Iteration   2: 1301.881 us/op
# Warmup Iteration   3: 1215.063 us/op
# Warmup Iteration   4: 1188.005 us/op
# Warmup Iteration   5: 908.929 us/op
Iteration   1: 99.569 us/op
Iteration   2: 125.420 us/op
Iteration   3: 115.140 us/op
Iteration   4: 104.287 us/op
Iteration   5: 110.196 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    122.438 ±(99.9%) 34.444 us/op

  Histogram, us/op:
    [ 90.000,  95.000) = 0 
    [ 95.000, 100.000) = 1 
    [100.000, 105.000) = 2 
    [105.000, 110.000) = 0 
    [110.000, 115.000) = 2 
    [115.000, 120.000) = 1 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 1 
    [130.000, 135.000) = 1 
    [135.000, 140.000) = 0 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 0 
    [150.000, 155.000) = 0 
    [155.000, 160.000) = 1 
    [160.000, 165.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     99.569 us/op
     p(50.0000) =    114.210 us/op
     p(90.0000) =    163.598 us/op
     p(95.0000) =    164.216 us/op
     p(99.0000) =    164.216 us/op
     p(99.9000) =    164.216 us/op
     p(99.9900) =    164.216 us/op
     p(99.9990) =    164.216 us/op
     p(99.9999) =    164.216 us/op
    p(100.0000) =    164.216 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.75)

# Run progress: 83.71% complete, ETA 00:07:32
# Fork: 1 of 2
# Warmup Iteration   1: 1895.396 us/op
# Warmup Iteration   2: 1289.254 us/op
# Warmup Iteration   3: 1413.910 us/op
# Warmup Iteration   4: 945.421 us/op
# Warmup Iteration   5: 915.473 us/op
Iteration   1: 107.844 us/op
Iteration   2: 167.920 us/op
Iteration   3: 141.703 us/op
Iteration   4: 107.885 us/op
Iteration   5: 215.852 us/op

# Run progress: 83.90% complete, ETA 00:07:26
# Fork: 2 of 2
# Warmup Iteration   1: 2119.804 us/op
# Warmup Iteration   2: 1262.016 us/op
# Warmup Iteration   3: 1136.512 us/op
# Warmup Iteration   4: 1335.306 us/op
# Warmup Iteration   5: 944.991 us/op
Iteration   1: 111.445 us/op
Iteration   2: 179.001 us/op
Iteration   3: 98.643 us/op
Iteration   4: 122.438 us/op
Iteration   5: 97.647 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    135.038 ±(99.9%) 60.693 us/op

  Histogram, us/op:
    [  0.000,  25.000) = 0 
    [ 25.000,  50.000) = 0 
    [ 50.000,  75.000) = 0 
    [ 75.000, 100.000) = 2 
    [100.000, 125.000) = 4 
    [125.000, 150.000) = 1 
    [150.000, 175.000) = 1 
    [175.000, 200.000) = 1 
    [200.000, 225.000) = 1 
    [225.000, 250.000) = 0 
    [250.000, 275.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     97.647 us/op
     p(50.0000) =    116.941 us/op
     p(90.0000) =    212.167 us/op
     p(95.0000) =    215.852 us/op
     p(99.0000) =    215.852 us/op
     p(99.9000) =    215.852 us/op
     p(99.9900) =    215.852 us/op
     p(99.9990) =    215.852 us/op
     p(99.9999) =    215.852 us/op
    p(100.0000) =    215.852 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 0.875)

# Run progress: 84.09% complete, ETA 00:07:21
# Fork: 1 of 2
# Warmup Iteration   1: 2096.916 us/op
# Warmup Iteration   2: 1311.561 us/op
# Warmup Iteration   3: 1207.938 us/op
# Warmup Iteration   4: 1243.787 us/op
# Warmup Iteration   5: 933.332 us/op
Iteration   1: 107.887 us/op
Iteration   2: 158.537 us/op
Iteration   3: 118.624 us/op
Iteration   4: 139.546 us/op
Iteration   5: 146.491 us/op

# Run progress: 84.28% complete, ETA 00:07:16
# Fork: 2 of 2
# Warmup Iteration   1: 1949.607 us/op
# Warmup Iteration   2: 1230.016 us/op
# Warmup Iteration   3: 1181.896 us/op
# Warmup Iteration   4: 1214.697 us/op
# Warmup Iteration   5: 944.277 us/op
Iteration   1: 100.254 us/op
Iteration   2: 138.763 us/op
Iteration   3: 98.001 us/op
Iteration   4: 108.938 us/op
Iteration   5: 116.944 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    123.399 ±(99.9%) 31.712 us/op

  Histogram, us/op:
    [ 90.000,  95.000) = 0 
    [ 95.000, 100.000) = 1 
    [100.000, 105.000) = 1 
    [105.000, 110.000) = 2 
    [110.000, 115.000) = 0 
    [115.000, 120.000) = 2 
    [120.000, 125.000) = 0 
    [125.000, 130.000) = 0 
    [130.000, 135.000) = 0 
    [135.000, 140.000) = 2 
    [140.000, 145.000) = 0 
    [145.000, 150.000) = 1 
    [150.000, 155.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     98.001 us/op
     p(50.0000) =    117.784 us/op
     p(90.0000) =    157.332 us/op
     p(95.0000) =    158.537 us/op
     p(99.0000) =    158.537 us/op
     p(99.9000) =    158.537 us/op
     p(99.9900) =    158.537 us/op
     p(99.9990) =    158.537 us/op
     p(99.9999) =    158.537 us/op
    p(100.0000) =    158.537 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 65536, loadFactor = 1)

# Run progress: 84.47% complete, ETA 00:07:11
# Fork: 1 of 2
# Warmup Iteration   1: 2476.671 us/op
# Warmup Iteration   2: 1290.938 us/op
# Warmup Iteration   3: 1363.936 us/op
# Warmup Iteration   4: 989.291 us/op
# Warmup Iteration   5: 922.676 us/op
Iteration   1: 102.370 us/op
Iteration   2: 212.713 us/op
Iteration   3: 112.571 us/op
Iteration   4: 109.955 us/op
Iteration   5: 150.706 us/op

# Run progress: 84.66% complete, ETA 00:07:05
# Fork: 2 of 2
# Warmup Iteration   1: 1984.798 us/op
# Warmup Iteration   2: 1553.902 us/op
# Warmup Iteration   3: 1156.014 us/op
# Warmup Iteration   4: 1185.692 us/op
# Warmup Iteration   5: 950.581 us/op
Iteration   1: 101.527 us/op
Iteration   2: 142.765 us/op
Iteration   3: 107.707 us/op
Iteration   4: 129.919 us/op
Iteration   5: 112.812 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    128.305 ±(99.9%) 51.582 us/op

  Histogram, us/op:
    [100.000, 112.500) = 4 
    [112.500, 125.000) = 2 
    [125.000, 137.500) = 1 
    [137.500, 150.000) = 1 
    [150.000, 162.500) = 1 
    [162.500, 175.000) = 0 
    [175.000, 187.500) = 0 
    [187.500, 200.000) = 0 
    [200.000, 212.500) = 0 
    [212.500, 225.000) = 1 
    [225.000, 237.500) = 0 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    101.527 us/op
     p(50.0000) =    112.691 us/op
     p(90.0000) =    206.512 us/op
     p(95.0000) =    212.713 us/op
     p(99.0000) =    212.713 us/op
     p(99.9000) =    212.713 us/op
     p(99.9900) =    212.713 us/op
     p(99.9990) =    212.713 us/op
     p(99.9999) =    212.713 us/op
    p(100.0000) =    212.713 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.125)

# Run progress: 84.85% complete, ETA 00:07:00
# Fork: 1 of 2
# Warmup Iteration   1: 2252.561 us/op
# Warmup Iteration   2: 1496.110 us/op
# Warmup Iteration   3: 1317.955 us/op
# Warmup Iteration   4: 1019.604 us/op
# Warmup Iteration   5: 1036.553 us/op
Iteration   1: 241.949 us/op
Iteration   2: 299.070 us/op
Iteration   3: 184.074 us/op
Iteration   4: 185.109 us/op
Iteration   5: 190.284 us/op

# Run progress: 85.04% complete, ETA 00:06:55
# Fork: 2 of 2
# Warmup Iteration   1: 2034.204 us/op
# Warmup Iteration   2: 1354.101 us/op
# Warmup Iteration   3: 1396.893 us/op
# Warmup Iteration   4: 1098.287 us/op
# Warmup Iteration   5: 1022.164 us/op
Iteration   1: 176.643 us/op
Iteration   2: 240.935 us/op
Iteration   3: 205.247 us/op
Iteration   4: 203.020 us/op
Iteration   5: 177.865 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    210.420 ±(99.9%) 59.215 us/op

  Histogram, us/op:
    [100.000, 112.500) = 0 
    [112.500, 125.000) = 0 
    [125.000, 137.500) = 0 
    [137.500, 150.000) = 0 
    [150.000, 162.500) = 0 
    [162.500, 175.000) = 0 
    [175.000, 187.500) = 4 
    [187.500, 200.000) = 1 
    [200.000, 212.500) = 2 
    [212.500, 225.000) = 0 
    [225.000, 237.500) = 0 
    [237.500, 250.000) = 2 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    176.643 us/op
     p(50.0000) =    196.652 us/op
     p(90.0000) =    293.358 us/op
     p(95.0000) =    299.070 us/op
     p(99.0000) =    299.070 us/op
     p(99.9000) =    299.070 us/op
     p(99.9900) =    299.070 us/op
     p(99.9990) =    299.070 us/op
     p(99.9999) =    299.070 us/op
    p(100.0000) =    299.070 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.250)

# Run progress: 85.23% complete, ETA 00:06:50
# Fork: 1 of 2
# Warmup Iteration   1: 2179.048 us/op
# Warmup Iteration   2: 1505.763 us/op
# Warmup Iteration   3: 1539.055 us/op
# Warmup Iteration   4: 1063.325 us/op
# Warmup Iteration   5: 1047.865 us/op
Iteration   1: 195.585 us/op
Iteration   2: 283.296 us/op
Iteration   3: 207.037 us/op
Iteration   4: 191.991 us/op
Iteration   5: 187.522 us/op

# Run progress: 85.42% complete, ETA 00:06:44
# Fork: 2 of 2
# Warmup Iteration   1: 2045.244 us/op
# Warmup Iteration   2: 1376.186 us/op
# Warmup Iteration   3: 1389.356 us/op
# Warmup Iteration   4: 1048.672 us/op
# Warmup Iteration   5: 1048.731 us/op
Iteration   1: 200.634 us/op
Iteration   2: 243.163 us/op
Iteration   3: 192.911 us/op
Iteration   4: 189.331 us/op
Iteration   5: 191.314 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    208.278 ±(99.9%) 46.856 us/op

  Histogram, us/op:
    [180.000, 190.000) = 2 
    [190.000, 200.000) = 4 
    [200.000, 210.000) = 2 
    [210.000, 220.000) = 0 
    [220.000, 230.000) = 0 
    [230.000, 240.000) = 0 
    [240.000, 250.000) = 1 
    [250.000, 260.000) = 0 
    [260.000, 270.000) = 0 
    [270.000, 280.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    187.522 us/op
     p(50.0000) =    194.248 us/op
     p(90.0000) =    279.283 us/op
     p(95.0000) =    283.296 us/op
     p(99.0000) =    283.296 us/op
     p(99.9000) =    283.296 us/op
     p(99.9900) =    283.296 us/op
     p(99.9990) =    283.296 us/op
     p(99.9999) =    283.296 us/op
    p(100.0000) =    283.296 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.375)

# Run progress: 85.61% complete, ETA 00:06:39
# Fork: 1 of 2
# Warmup Iteration   1: 2120.787 us/op
# Warmup Iteration   2: 1373.461 us/op
# Warmup Iteration   3: 1271.024 us/op
# Warmup Iteration   4: 1338.814 us/op
# Warmup Iteration   5: 1060.852 us/op
Iteration   1: 195.060 us/op
Iteration   2: 271.731 us/op
Iteration   3: 197.816 us/op
Iteration   4: 215.988 us/op
Iteration   5: 187.540 us/op

# Run progress: 85.80% complete, ETA 00:06:34
# Fork: 2 of 2
# Warmup Iteration   1: 2237.097 us/op
# Warmup Iteration   2: 1407.577 us/op
# Warmup Iteration   3: 1448.314 us/op
# Warmup Iteration   4: 1263.799 us/op
# Warmup Iteration   5: 1064.106 us/op
Iteration   1: 187.421 us/op
Iteration   2: 250.177 us/op
Iteration   3: 179.368 us/op
Iteration   4: 197.977 us/op
Iteration   5: 179.501 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    206.258 ±(99.9%) 47.059 us/op

  Histogram, us/op:
    [170.000, 180.000) = 2 
    [180.000, 190.000) = 2 
    [190.000, 200.000) = 3 
    [200.000, 210.000) = 0 
    [210.000, 220.000) = 1 
    [220.000, 230.000) = 0 
    [230.000, 240.000) = 0 
    [240.000, 250.000) = 0 
    [250.000, 260.000) = 1 
    [260.000, 270.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    179.368 us/op
     p(50.0000) =    196.438 us/op
     p(90.0000) =    269.576 us/op
     p(95.0000) =    271.731 us/op
     p(99.0000) =    271.731 us/op
     p(99.9000) =    271.731 us/op
     p(99.9900) =    271.731 us/op
     p(99.9990) =    271.731 us/op
     p(99.9999) =    271.731 us/op
    p(100.0000) =    271.731 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.5)

# Run progress: 85.98% complete, ETA 00:06:28
# Fork: 1 of 2
# Warmup Iteration   1: 2212.097 us/op
# Warmup Iteration   2: 1393.452 us/op
# Warmup Iteration   3: 1239.858 us/op
# Warmup Iteration   4: 1250.423 us/op
# Warmup Iteration   5: 1035.258 us/op
Iteration   1: 180.986 us/op
Iteration   2: 248.882 us/op
Iteration   3: 184.056 us/op
Iteration   4: 225.281 us/op
Iteration   5: 178.856 us/op

# Run progress: 86.17% complete, ETA 00:06:23
# Fork: 2 of 2
# Warmup Iteration   1: 2087.100 us/op
# Warmup Iteration   2: 1440.523 us/op
# Warmup Iteration   3: 1344.654 us/op
# Warmup Iteration   4: 1344.382 us/op
# Warmup Iteration   5: 1025.550 us/op
Iteration   1: 216.856 us/op
Iteration   2: 243.484 us/op
Iteration   3: 194.328 us/op
Iteration   4: 184.769 us/op
Iteration   5: 179.350 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    203.685 ±(99.9%) 41.622 us/op

  Histogram, us/op:
    [170.000, 175.000) = 0 
    [175.000, 180.000) = 2 
    [180.000, 185.000) = 3 
    [185.000, 190.000) = 0 
    [190.000, 195.000) = 1 
    [195.000, 200.000) = 0 
    [200.000, 205.000) = 0 
    [205.000, 210.000) = 0 
    [210.000, 215.000) = 0 
    [215.000, 220.000) = 1 
    [220.000, 225.000) = 0 
    [225.000, 230.000) = 1 
    [230.000, 235.000) = 0 
    [235.000, 240.000) = 0 
    [240.000, 245.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    178.856 us/op
     p(50.0000) =    189.549 us/op
     p(90.0000) =    248.342 us/op
     p(95.0000) =    248.882 us/op
     p(99.0000) =    248.882 us/op
     p(99.9000) =    248.882 us/op
     p(99.9900) =    248.882 us/op
     p(99.9990) =    248.882 us/op
     p(99.9999) =    248.882 us/op
    p(100.0000) =    248.882 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.625)

# Run progress: 86.36% complete, ETA 00:06:18
# Fork: 1 of 2
# Warmup Iteration   1: 2272.781 us/op
# Warmup Iteration   2: 1399.428 us/op
# Warmup Iteration   3: 1206.717 us/op
# Warmup Iteration   4: 1287.550 us/op
# Warmup Iteration   5: 1050.303 us/op
Iteration   1: 181.392 us/op
Iteration   2: 242.075 us/op
Iteration   3: 187.852 us/op
Iteration   4: 213.717 us/op
Iteration   5: 180.396 us/op

# Run progress: 86.55% complete, ETA 00:06:13
# Fork: 2 of 2
# Warmup Iteration   1: 2217.201 us/op
# Warmup Iteration   2: 1430.298 us/op
# Warmup Iteration   3: 1390.625 us/op
# Warmup Iteration   4: 1020.708 us/op
# Warmup Iteration   5: 1014.948 us/op
Iteration   1: 180.380 us/op
Iteration   2: 245.957 us/op
Iteration   3: 202.367 us/op
Iteration   4: 196.642 us/op
Iteration   5: 183.735 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    201.451 ±(99.9%) 37.692 us/op

  Histogram, us/op:
    [180.000, 185.000) = 4 
    [185.000, 190.000) = 1 
    [190.000, 195.000) = 0 
    [195.000, 200.000) = 1 
    [200.000, 205.000) = 1 
    [205.000, 210.000) = 0 
    [210.000, 215.000) = 1 
    [215.000, 220.000) = 0 
    [220.000, 225.000) = 0 
    [225.000, 230.000) = 0 
    [230.000, 235.000) = 0 
    [235.000, 240.000) = 0 
    [240.000, 245.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    180.380 us/op
     p(50.0000) =    192.247 us/op
     p(90.0000) =    245.569 us/op
     p(95.0000) =    245.957 us/op
     p(99.0000) =    245.957 us/op
     p(99.9000) =    245.957 us/op
     p(99.9900) =    245.957 us/op
     p(99.9990) =    245.957 us/op
     p(99.9999) =    245.957 us/op
    p(100.0000) =    245.957 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.75)

# Run progress: 86.74% complete, ETA 00:06:07
# Fork: 1 of 2
# Warmup Iteration   1: 2150.020 us/op
# Warmup Iteration   2: 1477.943 us/op
# Warmup Iteration   3: 1497.062 us/op
# Warmup Iteration   4: 1066.969 us/op
# Warmup Iteration   5: 1089.413 us/op
Iteration   1: 189.566 us/op
Iteration   2: 253.334 us/op
Iteration   3: 195.197 us/op
Iteration   4: 195.958 us/op
Iteration   5: 195.873 us/op

# Run progress: 86.93% complete, ETA 00:06:02
# Fork: 2 of 2
# Warmup Iteration   1: 2285.448 us/op
# Warmup Iteration   2: 1426.324 us/op
# Warmup Iteration   3: 1225.249 us/op
# Warmup Iteration   4: 1308.489 us/op
# Warmup Iteration   5: 1031.214 us/op
Iteration   1: 194.077 us/op
Iteration   2: 239.134 us/op
Iteration   3: 184.833 us/op
Iteration   4: 188.979 us/op
Iteration   5: 210.391 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    204.734 ±(99.9%) 34.957 us/op

  Histogram, us/op:
    [180.000, 185.000) = 1 
    [185.000, 190.000) = 2 
    [190.000, 195.000) = 1 
    [195.000, 200.000) = 3 
    [200.000, 205.000) = 0 
    [205.000, 210.000) = 0 
    [210.000, 215.000) = 1 
    [215.000, 220.000) = 0 
    [220.000, 225.000) = 0 
    [225.000, 230.000) = 0 
    [230.000, 235.000) = 0 
    [235.000, 240.000) = 1 
    [240.000, 245.000) = 0 
    [245.000, 250.000) = 0 
    [250.000, 255.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    184.833 us/op
     p(50.0000) =    195.535 us/op
     p(90.0000) =    251.914 us/op
     p(95.0000) =    253.334 us/op
     p(99.0000) =    253.334 us/op
     p(99.9000) =    253.334 us/op
     p(99.9900) =    253.334 us/op
     p(99.9990) =    253.334 us/op
     p(99.9999) =    253.334 us/op
    p(100.0000) =    253.334 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 0.875)

# Run progress: 87.12% complete, ETA 00:05:57
# Fork: 1 of 2
# Warmup Iteration   1: 2006.401 us/op
# Warmup Iteration   2: 1446.183 us/op
# Warmup Iteration   3: 1266.110 us/op
# Warmup Iteration   4: 1291.290 us/op
# Warmup Iteration   5: 1060.612 us/op
Iteration   1: 189.572 us/op
Iteration   2: 233.502 us/op
Iteration   3: 195.945 us/op
Iteration   4: 193.701 us/op
Iteration   5: 189.065 us/op

# Run progress: 87.31% complete, ETA 00:05:52
# Fork: 2 of 2
# Warmup Iteration   1: 2304.410 us/op
# Warmup Iteration   2: 1401.954 us/op
# Warmup Iteration   3: 1226.475 us/op
# Warmup Iteration   4: 1291.349 us/op
# Warmup Iteration   5: 1042.597 us/op
Iteration   1: 193.273 us/op
Iteration   2: 304.618 us/op
Iteration   3: 220.248 us/op
Iteration   4: 226.299 us/op
Iteration   5: 239.444 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    218.567 ±(99.9%) 54.294 us/op

  Histogram, us/op:
    [100.000, 125.000) = 0 
    [125.000, 150.000) = 0 
    [150.000, 175.000) = 0 
    [175.000, 200.000) = 5 
    [200.000, 225.000) = 1 
    [225.000, 250.000) = 3 
    [250.000, 275.000) = 0 
    [275.000, 300.000) = 0 
    [300.000, 325.000) = 1 
    [325.000, 350.000) = 0 
    [350.000, 375.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    189.065 us/op
     p(50.0000) =    208.097 us/op
     p(90.0000) =    298.101 us/op
     p(95.0000) =    304.618 us/op
     p(99.0000) =    304.618 us/op
     p(99.9000) =    304.618 us/op
     p(99.9900) =    304.618 us/op
     p(99.9990) =    304.618 us/op
     p(99.9999) =    304.618 us/op
    p(100.0000) =    304.618 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 100000, loadFactor = 1)

# Run progress: 87.50% complete, ETA 00:05:46
# Fork: 1 of 2
# Warmup Iteration   1: 2053.719 us/op
# Warmup Iteration   2: 1370.526 us/op
# Warmup Iteration   3: 1228.279 us/op
# Warmup Iteration   4: 1273.378 us/op
# Warmup Iteration   5: 1054.671 us/op
Iteration   1: 192.231 us/op
Iteration   2: 268.739 us/op
Iteration   3: 228.576 us/op
Iteration   4: 189.000 us/op
Iteration   5: 207.384 us/op

# Run progress: 87.69% complete, ETA 00:05:41
# Fork: 2 of 2
# Warmup Iteration   1: 2095.388 us/op
# Warmup Iteration   2: 1425.516 us/op
# Warmup Iteration   3: 1314.506 us/op
# Warmup Iteration   4: 1056.874 us/op
# Warmup Iteration   5: 1020.204 us/op
Iteration   1: 207.187 us/op
Iteration   2: 244.717 us/op
Iteration   3: 217.575 us/op
Iteration   4: 185.916 us/op
Iteration   5: 255.864 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    219.719 ±(99.9%) 43.842 us/op

  Histogram, us/op:
    [180.000, 185.000) = 0 
    [185.000, 190.000) = 2 
    [190.000, 195.000) = 1 
    [195.000, 200.000) = 0 
    [200.000, 205.000) = 0 
    [205.000, 210.000) = 2 
    [210.000, 215.000) = 0 
    [215.000, 220.000) = 1 
    [220.000, 225.000) = 0 
    [225.000, 230.000) = 1 
    [230.000, 235.000) = 0 
    [235.000, 240.000) = 0 
    [240.000, 245.000) = 1 
    [245.000, 250.000) = 0 
    [250.000, 255.000) = 0 
    [255.000, 260.000) = 1 
    [260.000, 265.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    185.916 us/op
     p(50.0000) =    212.479 us/op
     p(90.0000) =    267.452 us/op
     p(95.0000) =    268.739 us/op
     p(99.0000) =    268.739 us/op
     p(99.9000) =    268.739 us/op
     p(99.9900) =    268.739 us/op
     p(99.9990) =    268.739 us/op
     p(99.9999) =    268.739 us/op
    p(100.0000) =    268.739 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.125)

# Run progress: 87.88% complete, ETA 00:05:36
# Fork: 1 of 2
# Warmup Iteration   1: 2733.878 us/op
# Warmup Iteration   2: 2074.255 us/op
# Warmup Iteration   3: 2471.152 us/op
# Warmup Iteration   4: 1619.219 us/op
# Warmup Iteration   5: 1910.588 us/op
Iteration   1: 718.222 us/op
Iteration   2: 791.651 us/op
Iteration   3: 700.128 us/op
Iteration   4: 722.167 us/op
Iteration   5: 754.626 us/op

# Run progress: 88.07% complete, ETA 00:05:31
# Fork: 2 of 2
# Warmup Iteration   1: 2755.034 us/op
# Warmup Iteration   2: 2154.984 us/op
# Warmup Iteration   3: 2477.586 us/op
# Warmup Iteration   4: 1732.486 us/op
# Warmup Iteration   5: 1771.042 us/op
Iteration   1: 755.529 us/op
Iteration   2: 760.086 us/op
Iteration   3: 678.897 us/op
Iteration   4: 862.808 us/op
Iteration   5: 717.766 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    746.188 ±(99.9%) 79.419 us/op

  Histogram, us/op:
    [600.000, 625.000) = 0 
    [625.000, 650.000) = 0 
    [650.000, 675.000) = 0 
    [675.000, 700.000) = 1 
    [700.000, 725.000) = 4 
    [725.000, 750.000) = 0 
    [750.000, 775.000) = 3 
    [775.000, 800.000) = 1 
    [800.000, 825.000) = 0 
    [825.000, 850.000) = 0 
    [850.000, 875.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    678.897 us/op
     p(50.0000) =    738.397 us/op
     p(90.0000) =    855.692 us/op
     p(95.0000) =    862.808 us/op
     p(99.0000) =    862.808 us/op
     p(99.9000) =    862.808 us/op
     p(99.9900) =    862.808 us/op
     p(99.9990) =    862.808 us/op
     p(99.9999) =    862.808 us/op
    p(100.0000) =    862.808 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.250)

# Run progress: 88.26% complete, ETA 00:05:25
# Fork: 1 of 2
# Warmup Iteration   1: 2817.909 us/op
# Warmup Iteration   2: 2079.755 us/op
# Warmup Iteration   3: 2408.526 us/op
# Warmup Iteration   4: 1686.224 us/op
# Warmup Iteration   5: 1882.652 us/op
Iteration   1: 705.372 us/op
Iteration   2: 799.425 us/op
Iteration   3: 721.633 us/op
Iteration   4: 715.519 us/op
Iteration   5: 718.441 us/op

# Run progress: 88.45% complete, ETA 00:05:20
# Fork: 2 of 2
# Warmup Iteration   1: 2903.710 us/op
# Warmup Iteration   2: 2046.472 us/op
# Warmup Iteration   3: 2459.043 us/op
# Warmup Iteration   4: 1612.330 us/op
# Warmup Iteration   5: 1775.423 us/op
Iteration   1: 708.152 us/op
Iteration   2: 712.196 us/op
Iteration   3: 716.274 us/op
Iteration   4: 710.034 us/op
Iteration   5: 742.588 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    724.963 ±(99.9%) 42.541 us/op

  Histogram, us/op:
    [700.000, 710.000) = 2 
    [710.000, 720.000) = 5 
    [720.000, 730.000) = 1 
    [730.000, 740.000) = 0 
    [740.000, 750.000) = 1 
    [750.000, 760.000) = 0 
    [760.000, 770.000) = 0 
    [770.000, 780.000) = 0 
    [780.000, 790.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    705.372 us/op
     p(50.0000) =    715.897 us/op
     p(90.0000) =    793.741 us/op
     p(95.0000) =    799.425 us/op
     p(99.0000) =    799.425 us/op
     p(99.9000) =    799.425 us/op
     p(99.9900) =    799.425 us/op
     p(99.9990) =    799.425 us/op
     p(99.9999) =    799.425 us/op
    p(100.0000) =    799.425 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.375)

# Run progress: 88.64% complete, ETA 00:05:15
# Fork: 1 of 2
# Warmup Iteration   1: 2942.336 us/op
# Warmup Iteration   2: 2059.473 us/op
# Warmup Iteration   3: 2594.552 us/op
# Warmup Iteration   4: 1637.684 us/op
# Warmup Iteration   5: 1821.195 us/op
Iteration   1: 700.465 us/op
Iteration   2: 750.837 us/op
Iteration   3: 690.342 us/op
Iteration   4: 731.744 us/op
Iteration   5: 771.007 us/op

# Run progress: 88.83% complete, ETA 00:05:10
# Fork: 2 of 2
# Warmup Iteration   1: 2728.365 us/op
# Warmup Iteration   2: 2077.221 us/op
# Warmup Iteration   3: 2520.448 us/op
# Warmup Iteration   4: 1638.053 us/op
# Warmup Iteration   5: 1852.575 us/op
Iteration   1: 707.168 us/op
Iteration   2: 765.064 us/op
Iteration   3: 705.997 us/op
Iteration   4: 799.297 us/op
Iteration   5: 711.863 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    733.378 ±(99.9%) 54.992 us/op

  Histogram, us/op:
    [600.000, 612.500) = 0 
    [612.500, 625.000) = 0 
    [625.000, 637.500) = 0 
    [637.500, 650.000) = 0 
    [650.000, 662.500) = 0 
    [662.500, 675.000) = 0 
    [675.000, 687.500) = 0 
    [687.500, 700.000) = 1 
    [700.000, 712.500) = 4 
    [712.500, 725.000) = 0 
    [725.000, 737.500) = 1 
    [737.500, 750.000) = 0 
    [750.000, 762.500) = 1 
    [762.500, 775.000) = 2 
    [775.000, 787.500) = 0 

  Percentiles, us/op:
      p(0.0000) =    690.342 us/op
     p(50.0000) =    721.804 us/op
     p(90.0000) =    796.468 us/op
     p(95.0000) =    799.297 us/op
     p(99.0000) =    799.297 us/op
     p(99.9000) =    799.297 us/op
     p(99.9900) =    799.297 us/op
     p(99.9990) =    799.297 us/op
     p(99.9999) =    799.297 us/op
    p(100.0000) =    799.297 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.5)

# Run progress: 89.02% complete, ETA 00:05:04
# Fork: 1 of 2
# Warmup Iteration   1: 2808.924 us/op
# Warmup Iteration   2: 2139.687 us/op
# Warmup Iteration   3: 2415.487 us/op
# Warmup Iteration   4: 1665.061 us/op
# Warmup Iteration   5: 1891.203 us/op
Iteration   1: 691.476 us/op
Iteration   2: 783.907 us/op
Iteration   3: 706.086 us/op
Iteration   4: 780.081 us/op
Iteration   5: 707.566 us/op

# Run progress: 89.20% complete, ETA 00:04:59
# Fork: 2 of 2
# Warmup Iteration   1: 2635.476 us/op
# Warmup Iteration   2: 2087.572 us/op
# Warmup Iteration   3: 2616.600 us/op
# Warmup Iteration   4: 1642.998 us/op
# Warmup Iteration   5: 1732.272 us/op
Iteration   1: 703.469 us/op
Iteration   2: 785.346 us/op
Iteration   3: 708.581 us/op
Iteration   4: 704.010 us/op
Iteration   5: 715.284 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    728.581 ±(99.9%) 57.616 us/op

  Histogram, us/op:
    [690.000, 700.000) = 1 
    [700.000, 710.000) = 5 
    [710.000, 720.000) = 1 
    [720.000, 730.000) = 0 
    [730.000, 740.000) = 0 
    [740.000, 750.000) = 0 
    [750.000, 760.000) = 0 
    [760.000, 770.000) = 0 
    [770.000, 780.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    691.476 us/op
     p(50.0000) =    708.074 us/op
     p(90.0000) =    785.202 us/op
     p(95.0000) =    785.346 us/op
     p(99.0000) =    785.346 us/op
     p(99.9000) =    785.346 us/op
     p(99.9900) =    785.346 us/op
     p(99.9990) =    785.346 us/op
     p(99.9999) =    785.346 us/op
    p(100.0000) =    785.346 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.625)

# Run progress: 89.39% complete, ETA 00:04:54
# Fork: 1 of 2
# Warmup Iteration   1: 2907.416 us/op
# Warmup Iteration   2: 2083.736 us/op
# Warmup Iteration   3: 2410.205 us/op
# Warmup Iteration   4: 1681.531 us/op
# Warmup Iteration   5: 1792.261 us/op
Iteration   1: 696.334 us/op
Iteration   2: 775.364 us/op
Iteration   3: 720.587 us/op
Iteration   4: 700.451 us/op
Iteration   5: 714.954 us/op

# Run progress: 89.58% complete, ETA 00:04:49
# Fork: 2 of 2
# Warmup Iteration   1: 2919.852 us/op
# Warmup Iteration   2: 2095.211 us/op
# Warmup Iteration   3: 2490.991 us/op
# Warmup Iteration   4: 1628.160 us/op
# Warmup Iteration   5: 1803.464 us/op
Iteration   1: 699.789 us/op
Iteration   2: 838.146 us/op
Iteration   3: 844.699 us/op
Iteration   4: 708.064 us/op
Iteration   5: 723.107 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    742.149 ±(99.9%) 86.110 us/op

  Histogram, us/op:
    [600.000, 625.000) = 0 
    [625.000, 650.000) = 0 
    [650.000, 675.000) = 0 
    [675.000, 700.000) = 2 
    [700.000, 725.000) = 5 
    [725.000, 750.000) = 0 
    [750.000, 775.000) = 0 
    [775.000, 800.000) = 1 
    [800.000, 825.000) = 0 
    [825.000, 850.000) = 2 
    [850.000, 875.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    696.334 us/op
     p(50.0000) =    717.771 us/op
     p(90.0000) =    844.044 us/op
     p(95.0000) =    844.699 us/op
     p(99.0000) =    844.699 us/op
     p(99.9000) =    844.699 us/op
     p(99.9900) =    844.699 us/op
     p(99.9990) =    844.699 us/op
     p(99.9999) =    844.699 us/op
    p(100.0000) =    844.699 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.75)

# Run progress: 89.77% complete, ETA 00:04:43
# Fork: 1 of 2
# Warmup Iteration   1: 2629.596 us/op
# Warmup Iteration   2: 2137.157 us/op
# Warmup Iteration   3: 2856.488 us/op
# Warmup Iteration   4: 1683.550 us/op
# Warmup Iteration   5: 1890.673 us/op
Iteration   1: 1199.202 us/op
Iteration   2: 1233.454 us/op
Iteration   3: 765.961 us/op
Iteration   4: 759.696 us/op
Iteration   5: 776.614 us/op

# Run progress: 89.96% complete, ETA 00:04:38
# Fork: 2 of 2
# Warmup Iteration   1: 3034.529 us/op
# Warmup Iteration   2: 2328.493 us/op
# Warmup Iteration   3: 2454.336 us/op
# Warmup Iteration   4: 1663.661 us/op
# Warmup Iteration   5: 1755.112 us/op
Iteration   1: 701.742 us/op
Iteration   2: 837.289 us/op
Iteration   3: 722.272 us/op
Iteration   4: 772.980 us/op
Iteration   5: 744.627 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    851.384 ±(99.9%) 296.029 us/op

  Histogram, us/op:
    [ 700.000,  750.000) = 3 
    [ 750.000,  800.000) = 4 
    [ 800.000,  850.000) = 1 
    [ 850.000,  900.000) = 0 
    [ 900.000,  950.000) = 0 
    [ 950.000, 1000.000) = 0 
    [1000.000, 1050.000) = 0 
    [1050.000, 1100.000) = 0 
    [1100.000, 1150.000) = 0 
    [1150.000, 1200.000) = 1 
    [1200.000, 1250.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    701.742 us/op
     p(50.0000) =    769.471 us/op
     p(90.0000) =   1230.029 us/op
     p(95.0000) =   1233.454 us/op
     p(99.0000) =   1233.454 us/op
     p(99.9000) =   1233.454 us/op
     p(99.9900) =   1233.454 us/op
     p(99.9990) =   1233.454 us/op
     p(99.9999) =   1233.454 us/op
    p(100.0000) =   1233.454 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 0.875)

# Run progress: 90.15% complete, ETA 00:04:33
# Fork: 1 of 2
# Warmup Iteration   1: 2703.021 us/op
# Warmup Iteration   2: 2214.433 us/op
# Warmup Iteration   3: 2428.201 us/op
# Warmup Iteration   4: 1652.751 us/op
# Warmup Iteration   5: 1839.971 us/op
Iteration   1: 713.442 us/op
Iteration   2: 804.511 us/op
Iteration   3: 704.388 us/op
Iteration   4: 706.535 us/op
Iteration   5: 737.456 us/op

# Run progress: 90.34% complete, ETA 00:04:28
# Fork: 2 of 2
# Warmup Iteration   1: 2815.570 us/op
# Warmup Iteration   2: 2235.355 us/op
# Warmup Iteration   3: 2475.117 us/op
# Warmup Iteration   4: 1752.593 us/op
# Warmup Iteration   5: 1804.410 us/op
Iteration   1: 705.237 us/op
Iteration   2: 800.466 us/op
Iteration   3: 697.391 us/op
Iteration   4: 728.075 us/op
Iteration   5: 752.625 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    735.013 ±(99.9%) 59.617 us/op

  Histogram, us/op:
    [600.000, 625.000) = 0 
    [625.000, 650.000) = 0 
    [650.000, 675.000) = 0 
    [675.000, 700.000) = 1 
    [700.000, 725.000) = 4 
    [725.000, 750.000) = 2 
    [750.000, 775.000) = 1 
    [775.000, 800.000) = 0 
    [800.000, 825.000) = 2 
    [825.000, 850.000) = 0 
    [850.000, 875.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    697.391 us/op
     p(50.0000) =    720.759 us/op
     p(90.0000) =    804.107 us/op
     p(95.0000) =    804.511 us/op
     p(99.0000) =    804.511 us/op
     p(99.9000) =    804.511 us/op
     p(99.9900) =    804.511 us/op
     p(99.9990) =    804.511 us/op
     p(99.9999) =    804.511 us/op
    p(100.0000) =    804.511 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 524288, loadFactor = 1)

# Run progress: 90.53% complete, ETA 00:04:22
# Fork: 1 of 2
# Warmup Iteration   1: 2792.699 us/op
# Warmup Iteration   2: 2036.925 us/op
# Warmup Iteration   3: 2304.711 us/op
# Warmup Iteration   4: 1638.443 us/op
# Warmup Iteration   5: 1813.705 us/op
Iteration   1: 716.320 us/op
Iteration   2: 763.131 us/op
Iteration   3: 717.273 us/op
Iteration   4: 698.090 us/op
Iteration   5: 702.639 us/op

# Run progress: 90.72% complete, ETA 00:04:17
# Fork: 2 of 2
# Warmup Iteration   1: 2731.428 us/op
# Warmup Iteration   2: 2143.963 us/op
# Warmup Iteration   3: 2401.182 us/op
# Warmup Iteration   4: 1662.722 us/op
# Warmup Iteration   5: 1786.467 us/op
Iteration   1: 718.466 us/op
Iteration   2: 756.437 us/op
Iteration   3: 726.463 us/op
Iteration   4: 708.008 us/op
Iteration   5: 734.450 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =    724.128 ±(99.9%) 32.725 us/op

  Histogram, us/op:
    [690.000, 695.000) = 0 
    [695.000, 700.000) = 1 
    [700.000, 705.000) = 1 
    [705.000, 710.000) = 1 
    [710.000, 715.000) = 0 
    [715.000, 720.000) = 3 
    [720.000, 725.000) = 0 
    [725.000, 730.000) = 1 
    [730.000, 735.000) = 1 
    [735.000, 740.000) = 0 
    [740.000, 745.000) = 0 
    [745.000, 750.000) = 0 
    [750.000, 755.000) = 0 
    [755.000, 760.000) = 1 
    [760.000, 765.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    698.090 us/op
     p(50.0000) =    717.870 us/op
     p(90.0000) =    762.462 us/op
     p(95.0000) =    763.131 us/op
     p(99.0000) =    763.131 us/op
     p(99.9000) =    763.131 us/op
     p(99.9900) =    763.131 us/op
     p(99.9990) =    763.131 us/op
     p(99.9999) =    763.131 us/op
    p(100.0000) =    763.131 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.125)

# Run progress: 90.91% complete, ETA 00:04:12
# Fork: 1 of 2
# Warmup Iteration   1: 3548.798 us/op
# Warmup Iteration   2: 3438.676 us/op
# Warmup Iteration   3: 2603.259 us/op
# Warmup Iteration   4: 2415.792 us/op
# Warmup Iteration   5: 2502.049 us/op
Iteration   1: 1469.395 us/op
Iteration   2: 1468.880 us/op
Iteration   3: 1458.996 us/op
Iteration   4: 1428.642 us/op
Iteration   5: 1431.028 us/op

# Run progress: 91.10% complete, ETA 00:04:07
# Fork: 2 of 2
# Warmup Iteration   1: 3623.978 us/op
# Warmup Iteration   2: 3457.947 us/op
# Warmup Iteration   3: 2615.571 us/op
# Warmup Iteration   4: 2397.620 us/op
# Warmup Iteration   5: 2455.965 us/op
Iteration   1: 1412.069 us/op
Iteration   2: 1486.361 us/op
Iteration   3: 1373.360 us/op
Iteration   4: 1348.010 us/op
Iteration   5: 1401.182 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1427.792 ±(99.9%) 67.833 us/op

  Histogram, us/op:
    [1300.000, 1312.500) = 0 
    [1312.500, 1325.000) = 0 
    [1325.000, 1337.500) = 0 
    [1337.500, 1350.000) = 1 
    [1350.000, 1362.500) = 0 
    [1362.500, 1375.000) = 1 
    [1375.000, 1387.500) = 0 
    [1387.500, 1400.000) = 0 
    [1400.000, 1412.500) = 2 
    [1412.500, 1425.000) = 0 
    [1425.000, 1437.500) = 2 
    [1437.500, 1450.000) = 0 
    [1450.000, 1462.500) = 1 
    [1462.500, 1475.000) = 2 
    [1475.000, 1487.500) = 1 

  Percentiles, us/op:
      p(0.0000) =   1348.010 us/op
     p(50.0000) =   1429.835 us/op
     p(90.0000) =   1484.664 us/op
     p(95.0000) =   1486.361 us/op
     p(99.0000) =   1486.361 us/op
     p(99.9000) =   1486.361 us/op
     p(99.9900) =   1486.361 us/op
     p(99.9990) =   1486.361 us/op
     p(99.9999) =   1486.361 us/op
    p(100.0000) =   1486.361 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.250)

# Run progress: 91.29% complete, ETA 00:04:01
# Fork: 1 of 2
# Warmup Iteration   1: 3684.523 us/op
# Warmup Iteration   2: 3109.434 us/op
# Warmup Iteration   3: 3124.766 us/op
# Warmup Iteration   4: 2401.567 us/op
# Warmup Iteration   5: 2406.146 us/op
Iteration   1: 1393.212 us/op
Iteration   2: 1464.334 us/op
Iteration   3: 1447.595 us/op
Iteration   4: 1413.035 us/op
Iteration   5: 1465.597 us/op

# Run progress: 91.48% complete, ETA 00:03:56
# Fork: 2 of 2
# Warmup Iteration   1: 3904.311 us/op
# Warmup Iteration   2: 3102.337 us/op
# Warmup Iteration   3: 3037.117 us/op
# Warmup Iteration   4: 2438.016 us/op
# Warmup Iteration   5: 2357.010 us/op
Iteration   1: 1357.445 us/op
Iteration   2: 1423.070 us/op
Iteration   3: 1388.074 us/op
Iteration   4: 1347.080 us/op
Iteration   5: 1356.850 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1405.629 ±(99.9%) 67.149 us/op

  Histogram, us/op:
    [1300.000, 1312.500) = 0 
    [1312.500, 1325.000) = 0 
    [1325.000, 1337.500) = 0 
    [1337.500, 1350.000) = 1 
    [1350.000, 1362.500) = 2 
    [1362.500, 1375.000) = 0 
    [1375.000, 1387.500) = 0 
    [1387.500, 1400.000) = 2 
    [1400.000, 1412.500) = 0 
    [1412.500, 1425.000) = 2 
    [1425.000, 1437.500) = 0 
    [1437.500, 1450.000) = 1 
    [1450.000, 1462.500) = 0 
    [1462.500, 1475.000) = 2 
    [1475.000, 1487.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1347.080 us/op
     p(50.0000) =   1403.124 us/op
     p(90.0000) =   1465.471 us/op
     p(95.0000) =   1465.597 us/op
     p(99.0000) =   1465.597 us/op
     p(99.9000) =   1465.597 us/op
     p(99.9900) =   1465.597 us/op
     p(99.9990) =   1465.597 us/op
     p(99.9999) =   1465.597 us/op
    p(100.0000) =   1465.597 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.375)

# Run progress: 91.67% complete, ETA 00:03:51
# Fork: 1 of 2
# Warmup Iteration   1: 3414.402 us/op
# Warmup Iteration   2: 3140.747 us/op
# Warmup Iteration   3: 3060.571 us/op
# Warmup Iteration   4: 2515.471 us/op
# Warmup Iteration   5: 2469.019 us/op
Iteration   1: 1401.397 us/op
Iteration   2: 1431.792 us/op
Iteration   3: 1406.341 us/op
Iteration   4: 1383.765 us/op
Iteration   5: 1398.935 us/op

# Run progress: 91.86% complete, ETA 00:03:46
# Fork: 2 of 2
# Warmup Iteration   1: 3664.023 us/op
# Warmup Iteration   2: 3389.582 us/op
# Warmup Iteration   3: 2554.685 us/op
# Warmup Iteration   4: 2501.262 us/op
# Warmup Iteration   5: 2448.917 us/op
Iteration   1: 1402.206 us/op
Iteration   2: 1445.819 us/op
Iteration   3: 1378.678 us/op
Iteration   4: 1383.422 us/op
Iteration   5: 1408.255 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1404.061 ±(99.9%) 32.089 us/op

  Histogram, us/op:
    [1370.000, 1375.000) = 0 
    [1375.000, 1380.000) = 1 
    [1380.000, 1385.000) = 2 
    [1385.000, 1390.000) = 0 
    [1390.000, 1395.000) = 0 
    [1395.000, 1400.000) = 1 
    [1400.000, 1405.000) = 2 
    [1405.000, 1410.000) = 2 
    [1410.000, 1415.000) = 0 
    [1415.000, 1420.000) = 0 
    [1420.000, 1425.000) = 0 
    [1425.000, 1430.000) = 0 
    [1430.000, 1435.000) = 1 
    [1435.000, 1440.000) = 0 
    [1440.000, 1445.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1378.678 us/op
     p(50.0000) =   1401.802 us/op
     p(90.0000) =   1444.416 us/op
     p(95.0000) =   1445.819 us/op
     p(99.0000) =   1445.819 us/op
     p(99.9000) =   1445.819 us/op
     p(99.9900) =   1445.819 us/op
     p(99.9990) =   1445.819 us/op
     p(99.9999) =   1445.819 us/op
    p(100.0000) =   1445.819 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.5)

# Run progress: 92.05% complete, ETA 00:03:40
# Fork: 1 of 2
# Warmup Iteration   1: 3582.061 us/op
# Warmup Iteration   2: 3348.301 us/op
# Warmup Iteration   3: 2712.102 us/op
# Warmup Iteration   4: 2513.097 us/op
# Warmup Iteration   5: 2394.358 us/op
Iteration   1: 1508.347 us/op
Iteration   2: 1466.307 us/op
Iteration   3: 1414.338 us/op
Iteration   4: 1456.918 us/op
Iteration   5: 1434.785 us/op

# Run progress: 92.23% complete, ETA 00:03:35
# Fork: 2 of 2
# Warmup Iteration   1: 3548.527 us/op
# Warmup Iteration   2: 3108.095 us/op
# Warmup Iteration   3: 2941.968 us/op
# Warmup Iteration   4: 2441.553 us/op
# Warmup Iteration   5: 2391.711 us/op
Iteration   1: 1385.957 us/op
Iteration   2: 1423.072 us/op
Iteration   3: 1366.145 us/op
Iteration   4: 1371.283 us/op
Iteration   5: 1402.022 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1422.917 ±(99.9%) 68.068 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 2 
    [1375.000, 1400.000) = 1 
    [1400.000, 1425.000) = 3 
    [1425.000, 1450.000) = 1 
    [1450.000, 1475.000) = 2 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 1 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1366.145 us/op
     p(50.0000) =   1418.705 us/op
     p(90.0000) =   1504.143 us/op
     p(95.0000) =   1508.347 us/op
     p(99.0000) =   1508.347 us/op
     p(99.9000) =   1508.347 us/op
     p(99.9900) =   1508.347 us/op
     p(99.9990) =   1508.347 us/op
     p(99.9999) =   1508.347 us/op
    p(100.0000) =   1508.347 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.625)

# Run progress: 92.42% complete, ETA 00:03:30
# Fork: 1 of 2
# Warmup Iteration   1: 3522.556 us/op
# Warmup Iteration   2: 3359.782 us/op
# Warmup Iteration   3: 2506.984 us/op
# Warmup Iteration   4: 2463.441 us/op
# Warmup Iteration   5: 2447.708 us/op
Iteration   1: 1392.794 us/op
Iteration   2: 1464.014 us/op
Iteration   3: 1423.923 us/op
Iteration   4: 1411.724 us/op
Iteration   5: 1428.246 us/op

# Run progress: 92.61% complete, ETA 00:03:25
# Fork: 2 of 2
# Warmup Iteration   1: 3459.516 us/op
# Warmup Iteration   2: 3527.838 us/op
# Warmup Iteration   3: 2826.575 us/op
# Warmup Iteration   4: 2446.038 us/op
# Warmup Iteration   5: 2449.529 us/op
Iteration   1: 1540.448 us/op
Iteration   2: 1464.086 us/op
Iteration   3: 1461.071 us/op
Iteration   4: 1417.744 us/op
Iteration   5: 1406.993 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1441.104 ±(99.9%) 65.101 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 0 
    [1375.000, 1400.000) = 1 
    [1400.000, 1425.000) = 4 
    [1425.000, 1450.000) = 1 
    [1450.000, 1475.000) = 3 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 0 
    [1525.000, 1550.000) = 1 
    [1550.000, 1575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1392.794 us/op
     p(50.0000) =   1426.085 us/op
     p(90.0000) =   1532.812 us/op
     p(95.0000) =   1540.448 us/op
     p(99.0000) =   1540.448 us/op
     p(99.9000) =   1540.448 us/op
     p(99.9900) =   1540.448 us/op
     p(99.9990) =   1540.448 us/op
     p(99.9999) =   1540.448 us/op
    p(100.0000) =   1540.448 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.75)

# Run progress: 92.80% complete, ETA 00:03:19
# Fork: 1 of 2
# Warmup Iteration   1: 3557.952 us/op
# Warmup Iteration   2: 3126.440 us/op
# Warmup Iteration   3: 2962.331 us/op
# Warmup Iteration   4: 2393.655 us/op
# Warmup Iteration   5: 2435.237 us/op
Iteration   1: 1437.470 us/op
Iteration   2: 1454.712 us/op
Iteration   3: 1405.050 us/op
Iteration   4: 1391.711 us/op
Iteration   5: 1401.748 us/op

# Run progress: 92.99% complete, ETA 00:03:14
# Fork: 2 of 2
# Warmup Iteration   1: 3677.267 us/op
# Warmup Iteration   2: 3163.643 us/op
# Warmup Iteration   3: 3160.776 us/op
# Warmup Iteration   4: 2499.621 us/op
# Warmup Iteration   5: 2480.221 us/op
Iteration   1: 1480.509 us/op
Iteration   2: 1520.985 us/op
Iteration   3: 1473.865 us/op
Iteration   4: 1439.126 us/op
Iteration   5: 1471.044 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1447.622 ±(99.9%) 61.658 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 0 
    [1375.000, 1400.000) = 1 
    [1400.000, 1425.000) = 2 
    [1425.000, 1450.000) = 2 
    [1450.000, 1475.000) = 3 
    [1475.000, 1500.000) = 1 
    [1500.000, 1525.000) = 1 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1391.711 us/op
     p(50.0000) =   1446.919 us/op
     p(90.0000) =   1516.937 us/op
     p(95.0000) =   1520.985 us/op
     p(99.0000) =   1520.985 us/op
     p(99.9000) =   1520.985 us/op
     p(99.9900) =   1520.985 us/op
     p(99.9990) =   1520.985 us/op
     p(99.9999) =   1520.985 us/op
    p(100.0000) =   1520.985 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 0.875)

# Run progress: 93.18% complete, ETA 00:03:09
# Fork: 1 of 2
# Warmup Iteration   1: 3562.814 us/op
# Warmup Iteration   2: 3527.957 us/op
# Warmup Iteration   3: 2562.742 us/op
# Warmup Iteration   4: 2495.143 us/op
# Warmup Iteration   5: 2353.473 us/op
Iteration   1: 1382.701 us/op
Iteration   2: 1423.326 us/op
Iteration   3: 1405.138 us/op
Iteration   4: 1413.815 us/op
Iteration   5: 1419.317 us/op

# Run progress: 93.37% complete, ETA 00:03:03
# Fork: 2 of 2
# Warmup Iteration   1: 3401.667 us/op
# Warmup Iteration   2: 3453.756 us/op
# Warmup Iteration   3: 2557.392 us/op
# Warmup Iteration   4: 2474.005 us/op
# Warmup Iteration   5: 2350.720 us/op
Iteration   1: 1453.807 us/op
Iteration   2: 1430.373 us/op
Iteration   3: 1380.094 us/op
Iteration   4: 1384.765 us/op
Iteration   5: 1392.097 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1408.543 ±(99.9%) 36.384 us/op

  Histogram, us/op:
    [1380.000, 1385.000) = 3 
    [1385.000, 1390.000) = 0 
    [1390.000, 1395.000) = 1 
    [1395.000, 1400.000) = 0 
    [1400.000, 1405.000) = 0 
    [1405.000, 1410.000) = 1 
    [1410.000, 1415.000) = 1 
    [1415.000, 1420.000) = 1 
    [1420.000, 1425.000) = 1 
    [1425.000, 1430.000) = 0 
    [1430.000, 1435.000) = 1 
    [1435.000, 1440.000) = 0 
    [1440.000, 1445.000) = 0 
    [1445.000, 1450.000) = 0 
    [1450.000, 1455.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1380.094 us/op
     p(50.0000) =   1409.477 us/op
     p(90.0000) =   1451.464 us/op
     p(95.0000) =   1453.807 us/op
     p(99.0000) =   1453.807 us/op
     p(99.9000) =   1453.807 us/op
     p(99.9900) =   1453.807 us/op
     p(99.9990) =   1453.807 us/op
     p(99.9999) =   1453.807 us/op
    p(100.0000) =   1453.807 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1000000, loadFactor = 1)

# Run progress: 93.56% complete, ETA 00:02:58
# Fork: 1 of 2
# Warmup Iteration   1: 3574.264 us/op
# Warmup Iteration   2: 3113.748 us/op
# Warmup Iteration   3: 3053.278 us/op
# Warmup Iteration   4: 2450.434 us/op
# Warmup Iteration   5: 2386.464 us/op
Iteration   1: 1383.901 us/op
Iteration   2: 1466.204 us/op
Iteration   3: 1409.348 us/op
Iteration   4: 1421.849 us/op
Iteration   5: 1408.899 us/op

# Run progress: 93.75% complete, ETA 00:02:53
# Fork: 2 of 2
# Warmup Iteration   1: 3534.120 us/op
# Warmup Iteration   2: 3289.970 us/op
# Warmup Iteration   3: 2604.309 us/op
# Warmup Iteration   4: 2485.682 us/op
# Warmup Iteration   5: 2422.872 us/op
Iteration   1: 1399.594 us/op
Iteration   2: 1428.967 us/op
Iteration   3: 1344.378 us/op
Iteration   4: 1340.643 us/op
Iteration   5: 1363.709 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1396.749 ±(99.9%) 59.530 us/op

  Histogram, us/op:
    [1300.000, 1312.500) = 0 
    [1312.500, 1325.000) = 0 
    [1325.000, 1337.500) = 0 
    [1337.500, 1350.000) = 2 
    [1350.000, 1362.500) = 0 
    [1362.500, 1375.000) = 1 
    [1375.000, 1387.500) = 1 
    [1387.500, 1400.000) = 1 
    [1400.000, 1412.500) = 2 
    [1412.500, 1425.000) = 1 
    [1425.000, 1437.500) = 1 
    [1437.500, 1450.000) = 0 
    [1450.000, 1462.500) = 0 
    [1462.500, 1475.000) = 1 
    [1475.000, 1487.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1340.643 us/op
     p(50.0000) =   1404.247 us/op
     p(90.0000) =   1462.480 us/op
     p(95.0000) =   1466.204 us/op
     p(99.0000) =   1466.204 us/op
     p(99.9000) =   1466.204 us/op
     p(99.9900) =   1466.204 us/op
     p(99.9990) =   1466.204 us/op
     p(99.9999) =   1466.204 us/op
    p(100.0000) =   1466.204 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.125)

# Run progress: 93.94% complete, ETA 00:02:48
# Fork: 1 of 2
# Warmup Iteration   1: 3383.270 us/op
# Warmup Iteration   2: 3110.343 us/op
# Warmup Iteration   3: 3013.955 us/op
# Warmup Iteration   4: 2371.215 us/op
# Warmup Iteration   5: 2354.666 us/op
Iteration   1: 1344.988 us/op
Iteration   2: 1436.851 us/op
Iteration   3: 1388.212 us/op
Iteration   4: 1453.404 us/op
Iteration   5: 1412.349 us/op

# Run progress: 94.13% complete, ETA 00:02:42
# Fork: 2 of 2
# Warmup Iteration   1: 3423.772 us/op
# Warmup Iteration   2: 3361.231 us/op
# Warmup Iteration   3: 2548.854 us/op
# Warmup Iteration   4: 2512.735 us/op
# Warmup Iteration   5: 2472.465 us/op
Iteration   1: 1401.924 us/op
Iteration   2: 1456.117 us/op
Iteration   3: 1415.063 us/op
Iteration   4: 1448.720 us/op
Iteration   5: 1424.601 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1418.223 ±(99.9%) 51.801 us/op

  Histogram, us/op:
    [1300.000, 1312.500) = 0 
    [1312.500, 1325.000) = 0 
    [1325.000, 1337.500) = 0 
    [1337.500, 1350.000) = 1 
    [1350.000, 1362.500) = 0 
    [1362.500, 1375.000) = 0 
    [1375.000, 1387.500) = 0 
    [1387.500, 1400.000) = 1 
    [1400.000, 1412.500) = 2 
    [1412.500, 1425.000) = 2 
    [1425.000, 1437.500) = 1 
    [1437.500, 1450.000) = 1 
    [1450.000, 1462.500) = 2 
    [1462.500, 1475.000) = 0 
    [1475.000, 1487.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   1344.988 us/op
     p(50.0000) =   1419.832 us/op
     p(90.0000) =   1455.846 us/op
     p(95.0000) =   1456.117 us/op
     p(99.0000) =   1456.117 us/op
     p(99.9000) =   1456.117 us/op
     p(99.9900) =   1456.117 us/op
     p(99.9990) =   1456.117 us/op
     p(99.9999) =   1456.117 us/op
    p(100.0000) =   1456.117 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.250)

# Run progress: 94.32% complete, ETA 00:02:37
# Fork: 1 of 2
# Warmup Iteration   1: 3751.426 us/op
# Warmup Iteration   2: 3544.087 us/op
# Warmup Iteration   3: 2528.827 us/op
# Warmup Iteration   4: 2402.447 us/op
# Warmup Iteration   5: 2438.796 us/op
Iteration   1: 1359.947 us/op
Iteration   2: 1372.650 us/op
Iteration   3: 1351.255 us/op
Iteration   4: 1344.146 us/op
Iteration   5: 1486.169 us/op

# Run progress: 94.51% complete, ETA 00:02:32
# Fork: 2 of 2
# Warmup Iteration   1: 3430.858 us/op
# Warmup Iteration   2: 3370.738 us/op
# Warmup Iteration   3: 2980.189 us/op
# Warmup Iteration   4: 2460.243 us/op
# Warmup Iteration   5: 2458.834 us/op
Iteration   1: 1410.459 us/op
Iteration   2: 1467.501 us/op
Iteration   3: 1411.132 us/op
Iteration   4: 1402.999 us/op
Iteration   5: 1430.054 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1403.631 ±(99.9%) 72.756 us/op

  Histogram, us/op:
    [1300.000, 1312.500) = 0 
    [1312.500, 1325.000) = 0 
    [1325.000, 1337.500) = 0 
    [1337.500, 1350.000) = 1 
    [1350.000, 1362.500) = 2 
    [1362.500, 1375.000) = 1 
    [1375.000, 1387.500) = 0 
    [1387.500, 1400.000) = 0 
    [1400.000, 1412.500) = 3 
    [1412.500, 1425.000) = 0 
    [1425.000, 1437.500) = 1 
    [1437.500, 1450.000) = 0 
    [1450.000, 1462.500) = 0 
    [1462.500, 1475.000) = 1 
    [1475.000, 1487.500) = 1 

  Percentiles, us/op:
      p(0.0000) =   1344.146 us/op
     p(50.0000) =   1406.729 us/op
     p(90.0000) =   1484.302 us/op
     p(95.0000) =   1486.169 us/op
     p(99.0000) =   1486.169 us/op
     p(99.9000) =   1486.169 us/op
     p(99.9900) =   1486.169 us/op
     p(99.9990) =   1486.169 us/op
     p(99.9999) =   1486.169 us/op
    p(100.0000) =   1486.169 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.375)

# Run progress: 94.70% complete, ETA 00:02:27
# Fork: 1 of 2
# Warmup Iteration   1: 3526.076 us/op
# Warmup Iteration   2: 3023.875 us/op
# Warmup Iteration   3: 3140.818 us/op
# Warmup Iteration   4: 2430.893 us/op
# Warmup Iteration   5: 2463.218 us/op
Iteration   1: 1421.145 us/op
Iteration   2: 1484.581 us/op
Iteration   3: 1393.930 us/op
Iteration   4: 1424.047 us/op
Iteration   5: 1425.454 us/op

# Run progress: 94.89% complete, ETA 00:02:21
# Fork: 2 of 2
# Warmup Iteration   1: 3444.201 us/op
# Warmup Iteration   2: 3214.296 us/op
# Warmup Iteration   3: 3059.064 us/op
# Warmup Iteration   4: 2355.040 us/op
# Warmup Iteration   5: 2404.498 us/op
Iteration   1: 1441.434 us/op
Iteration   2: 1438.815 us/op
Iteration   3: 1404.117 us/op
Iteration   4: 1392.413 us/op
Iteration   5: 1455.336 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1428.127 ±(99.9%) 43.095 us/op

  Histogram, us/op:
    [1390.000, 1400.000) = 2 
    [1400.000, 1410.000) = 1 
    [1410.000, 1420.000) = 0 
    [1420.000, 1430.000) = 3 
    [1430.000, 1440.000) = 1 
    [1440.000, 1450.000) = 1 
    [1450.000, 1460.000) = 1 
    [1460.000, 1470.000) = 0 
    [1470.000, 1480.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1392.413 us/op
     p(50.0000) =   1424.751 us/op
     p(90.0000) =   1481.656 us/op
     p(95.0000) =   1484.581 us/op
     p(99.0000) =   1484.581 us/op
     p(99.9000) =   1484.581 us/op
     p(99.9900) =   1484.581 us/op
     p(99.9990) =   1484.581 us/op
     p(99.9999) =   1484.581 us/op
    p(100.0000) =   1484.581 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.5)

# Run progress: 95.08% complete, ETA 00:02:16
# Fork: 1 of 2
# Warmup Iteration   1: 3509.828 us/op
# Warmup Iteration   2: 3187.719 us/op
# Warmup Iteration   3: 3033.129 us/op
# Warmup Iteration   4: 2471.240 us/op
# Warmup Iteration   5: 2438.785 us/op
Iteration   1: 1387.874 us/op
Iteration   2: 1474.652 us/op
Iteration   3: 1426.563 us/op
Iteration   4: 1402.914 us/op
Iteration   5: 1444.487 us/op

# Run progress: 95.27% complete, ETA 00:02:11
# Fork: 2 of 2
# Warmup Iteration   1: 3425.759 us/op
# Warmup Iteration   2: 3175.452 us/op
# Warmup Iteration   3: 2869.974 us/op
# Warmup Iteration   4: 2450.175 us/op
# Warmup Iteration   5: 2448.437 us/op
Iteration   1: 1419.053 us/op
Iteration   2: 1417.767 us/op
Iteration   3: 1426.235 us/op
Iteration   4: 1413.004 us/op
Iteration   5: 1473.084 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1428.563 ±(99.9%) 42.559 us/op

  Histogram, us/op:
    [1380.000, 1390.000) = 1 
    [1390.000, 1400.000) = 0 
    [1400.000, 1410.000) = 1 
    [1410.000, 1420.000) = 3 
    [1420.000, 1430.000) = 2 
    [1430.000, 1440.000) = 0 
    [1440.000, 1450.000) = 1 
    [1450.000, 1460.000) = 0 
    [1460.000, 1470.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1387.874 us/op
     p(50.0000) =   1422.644 us/op
     p(90.0000) =   1474.495 us/op
     p(95.0000) =   1474.652 us/op
     p(99.0000) =   1474.652 us/op
     p(99.9000) =   1474.652 us/op
     p(99.9900) =   1474.652 us/op
     p(99.9990) =   1474.652 us/op
     p(99.9999) =   1474.652 us/op
    p(100.0000) =   1474.652 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.625)

# Run progress: 95.45% complete, ETA 00:02:06
# Fork: 1 of 2
# Warmup Iteration   1: 3410.515 us/op
# Warmup Iteration   2: 3094.879 us/op
# Warmup Iteration   3: 2998.459 us/op
# Warmup Iteration   4: 2442.291 us/op
# Warmup Iteration   5: 2436.629 us/op
Iteration   1: 1376.973 us/op
Iteration   2: 1463.121 us/op
Iteration   3: 1392.081 us/op
Iteration   4: 1379.106 us/op
Iteration   5: 1453.504 us/op

# Run progress: 95.64% complete, ETA 00:02:00
# Fork: 2 of 2
# Warmup Iteration   1: 3438.586 us/op
# Warmup Iteration   2: 3160.731 us/op
# Warmup Iteration   3: 3098.654 us/op
# Warmup Iteration   4: 2354.947 us/op
# Warmup Iteration   5: 2367.810 us/op
Iteration   1: 1389.751 us/op
Iteration   2: 1447.908 us/op
Iteration   3: 1415.687 us/op
Iteration   4: 1390.713 us/op
Iteration   5: 1396.403 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1410.525 ±(99.9%) 49.156 us/op

  Histogram, us/op:
    [1370.000, 1380.000) = 2 
    [1380.000, 1390.000) = 1 
    [1390.000, 1400.000) = 3 
    [1400.000, 1410.000) = 0 
    [1410.000, 1420.000) = 1 
    [1420.000, 1430.000) = 0 
    [1430.000, 1440.000) = 0 
    [1440.000, 1450.000) = 1 
    [1450.000, 1460.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1376.973 us/op
     p(50.0000) =   1394.242 us/op
     p(90.0000) =   1462.159 us/op
     p(95.0000) =   1463.121 us/op
     p(99.0000) =   1463.121 us/op
     p(99.9000) =   1463.121 us/op
     p(99.9900) =   1463.121 us/op
     p(99.9990) =   1463.121 us/op
     p(99.9999) =   1463.121 us/op
    p(100.0000) =   1463.121 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.75)

# Run progress: 95.83% complete, ETA 00:01:55
# Fork: 1 of 2
# Warmup Iteration   1: 3467.546 us/op
# Warmup Iteration   2: 3345.676 us/op
# Warmup Iteration   3: 2553.715 us/op
# Warmup Iteration   4: 2533.147 us/op
# Warmup Iteration   5: 2449.673 us/op
Iteration   1: 1436.922 us/op
Iteration   2: 1471.014 us/op
Iteration   3: 1413.848 us/op
Iteration   4: 1423.379 us/op
Iteration   5: 1474.785 us/op

# Run progress: 96.02% complete, ETA 00:01:50
# Fork: 2 of 2
# Warmup Iteration   1: 3633.134 us/op
# Warmup Iteration   2: 3138.786 us/op
# Warmup Iteration   3: 2969.826 us/op
# Warmup Iteration   4: 2342.979 us/op
# Warmup Iteration   5: 2446.226 us/op
Iteration   1: 1584.571 us/op
Iteration   2: 1444.218 us/op
Iteration   3: 1390.338 us/op
Iteration   4: 1478.418 us/op
Iteration   5: 1471.042 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1458.854 ±(99.9%) 80.335 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 0 
    [1375.000, 1400.000) = 1 
    [1400.000, 1425.000) = 2 
    [1425.000, 1450.000) = 2 
    [1450.000, 1475.000) = 3 
    [1475.000, 1500.000) = 1 
    [1500.000, 1525.000) = 0 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1390.338 us/op
     p(50.0000) =   1457.616 us/op
     p(90.0000) =   1573.956 us/op
     p(95.0000) =   1584.571 us/op
     p(99.0000) =   1584.571 us/op
     p(99.9000) =   1584.571 us/op
     p(99.9900) =   1584.571 us/op
     p(99.9990) =   1584.571 us/op
     p(99.9999) =   1584.571 us/op
    p(100.0000) =   1584.571 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 0.875)

# Run progress: 96.21% complete, ETA 00:01:45
# Fork: 1 of 2
# Warmup Iteration   1: 3570.833 us/op
# Warmup Iteration   2: 3161.907 us/op
# Warmup Iteration   3: 2951.438 us/op
# Warmup Iteration   4: 2403.042 us/op
# Warmup Iteration   5: 2359.262 us/op
Iteration   1: 1395.818 us/op
Iteration   2: 1415.213 us/op
Iteration   3: 1352.105 us/op
Iteration   4: 1370.882 us/op
Iteration   5: 1505.991 us/op

# Run progress: 96.40% complete, ETA 00:01:39
# Fork: 2 of 2
# Warmup Iteration   1: 3640.669 us/op
# Warmup Iteration   2: 3057.447 us/op
# Warmup Iteration   3: 2869.174 us/op
# Warmup Iteration   4: 2489.896 us/op
# Warmup Iteration   5: 2414.616 us/op
Iteration   1: 1412.611 us/op
Iteration   2: 1457.931 us/op
Iteration   3: 1446.332 us/op
Iteration   4: 1430.677 us/op
Iteration   5: 1406.871 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1419.443 ±(99.9%) 66.656 us/op

  Histogram, us/op:
    [1300.000, 1325.000) = 0 
    [1325.000, 1350.000) = 0 
    [1350.000, 1375.000) = 2 
    [1375.000, 1400.000) = 1 
    [1400.000, 1425.000) = 3 
    [1425.000, 1450.000) = 2 
    [1450.000, 1475.000) = 1 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 1 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1352.105 us/op
     p(50.0000) =   1413.912 us/op
     p(90.0000) =   1501.185 us/op
     p(95.0000) =   1505.991 us/op
     p(99.0000) =   1505.991 us/op
     p(99.9000) =   1505.991 us/op
     p(99.9900) =   1505.991 us/op
     p(99.9990) =   1505.991 us/op
     p(99.9999) =   1505.991 us/op
    p(100.0000) =   1505.991 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 1048576, loadFactor = 1)

# Run progress: 96.59% complete, ETA 00:01:34
# Fork: 1 of 2
# Warmup Iteration   1: 3758.838 us/op
# Warmup Iteration   2: 3061.100 us/op
# Warmup Iteration   3: 2843.596 us/op
# Warmup Iteration   4: 2398.550 us/op
# Warmup Iteration   5: 2409.386 us/op
Iteration   1: 1400.047 us/op
Iteration   2: 1443.101 us/op
Iteration   3: 1409.887 us/op
Iteration   4: 1420.258 us/op
Iteration   5: 1417.108 us/op

# Run progress: 96.78% complete, ETA 00:01:29
# Fork: 2 of 2
# Warmup Iteration   1: 3604.058 us/op
# Warmup Iteration   2: 3139.524 us/op
# Warmup Iteration   3: 2717.508 us/op
# Warmup Iteration   4: 2439.629 us/op
# Warmup Iteration   5: 2440.117 us/op
Iteration   1: 1619.338 us/op
Iteration   2: 1444.789 us/op
Iteration   3: 1401.326 us/op
Iteration   4: 1435.837 us/op
Iteration   5: 1404.063 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   1439.575 ±(99.9%) 98.772 us/op

  Histogram, us/op:
    [1400.000, 1425.000) = 6 
    [1425.000, 1450.000) = 3 
    [1450.000, 1475.000) = 0 
    [1475.000, 1500.000) = 0 
    [1500.000, 1525.000) = 0 
    [1525.000, 1550.000) = 0 
    [1550.000, 1575.000) = 0 
    [1575.000, 1600.000) = 0 
    [1600.000, 1625.000) = 1 
    [1625.000, 1650.000) = 0 
    [1650.000, 1675.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1400.047 us/op
     p(50.0000) =   1418.683 us/op
     p(90.0000) =   1601.883 us/op
     p(95.0000) =   1619.338 us/op
     p(99.0000) =   1619.338 us/op
     p(99.9000) =   1619.338 us/op
     p(99.9900) =   1619.338 us/op
     p(99.9990) =   1619.338 us/op
     p(99.9999) =   1619.338 us/op
    p(100.0000) =   1619.338 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.125)

# Run progress: 96.97% complete, ETA 00:01:24
# Fork: 1 of 2
# Warmup Iteration   1: 4931.943 us/op
# Warmup Iteration   2: 4871.386 us/op
# Warmup Iteration   3: 4407.170 us/op
# Warmup Iteration   4: 4000.895 us/op
# Warmup Iteration   5: 3911.278 us/op
Iteration   1: 2757.673 us/op
Iteration   2: 2856.090 us/op
Iteration   3: 2769.048 us/op
Iteration   4: 2815.223 us/op
Iteration   5: 2808.354 us/op

# Run progress: 97.16% complete, ETA 00:01:18
# Fork: 2 of 2
# Warmup Iteration   1: 4948.943 us/op
# Warmup Iteration   2: 4633.708 us/op
# Warmup Iteration   3: 4340.072 us/op
# Warmup Iteration   4: 3997.075 us/op
# Warmup Iteration   5: 3995.023 us/op
Iteration   1: 2740.756 us/op
Iteration   2: 2798.603 us/op
Iteration   3: 2759.668 us/op
Iteration   4: 2830.919 us/op
Iteration   5: 2814.453 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2795.079 ±(99.9%) 55.796 us/op

  Histogram, us/op:
    [2700.000, 2712.500) = 0 
    [2712.500, 2725.000) = 0 
    [2725.000, 2737.500) = 0 
    [2737.500, 2750.000) = 1 
    [2750.000, 2762.500) = 2 
    [2762.500, 2775.000) = 1 
    [2775.000, 2787.500) = 0 
    [2787.500, 2800.000) = 1 
    [2800.000, 2812.500) = 1 
    [2812.500, 2825.000) = 2 
    [2825.000, 2837.500) = 1 
    [2837.500, 2850.000) = 0 
    [2850.000, 2862.500) = 1 
    [2862.500, 2875.000) = 0 
    [2875.000, 2887.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   2740.756 us/op
     p(50.0000) =   2803.479 us/op
     p(90.0000) =   2853.573 us/op
     p(95.0000) =   2856.090 us/op
     p(99.0000) =   2856.090 us/op
     p(99.9000) =   2856.090 us/op
     p(99.9900) =   2856.090 us/op
     p(99.9990) =   2856.090 us/op
     p(99.9999) =   2856.090 us/op
    p(100.0000) =   2856.090 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.250)

# Run progress: 97.35% complete, ETA 00:01:13
# Fork: 1 of 2
# Warmup Iteration   1: 4970.286 us/op
# Warmup Iteration   2: 4984.678 us/op
# Warmup Iteration   3: 4141.407 us/op
# Warmup Iteration   4: 4108.823 us/op
# Warmup Iteration   5: 4030.125 us/op
Iteration   1: 2846.808 us/op
Iteration   2: 2861.964 us/op
Iteration   3: 2896.863 us/op
Iteration   4: 2916.776 us/op
Iteration   5: 2909.427 us/op

# Run progress: 97.54% complete, ETA 00:01:08
# Fork: 2 of 2
# Warmup Iteration   1: 5090.931 us/op
# Warmup Iteration   2: 4833.996 us/op
# Warmup Iteration   3: 4355.819 us/op
# Warmup Iteration   4: 3951.917 us/op
# Warmup Iteration   5: 3845.274 us/op
Iteration   1: 2824.639 us/op
Iteration   2: 2889.508 us/op
Iteration   3: 2867.789 us/op
Iteration   4: 2817.164 us/op
Iteration   5: 2804.724 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2863.566 ±(99.9%) 59.943 us/op

  Histogram, us/op:
    [2800.000, 2812.500) = 1 
    [2812.500, 2825.000) = 2 
    [2825.000, 2837.500) = 0 
    [2837.500, 2850.000) = 1 
    [2850.000, 2862.500) = 1 
    [2862.500, 2875.000) = 1 
    [2875.000, 2887.500) = 0 
    [2887.500, 2900.000) = 2 
    [2900.000, 2912.500) = 1 
    [2912.500, 2925.000) = 1 
    [2925.000, 2937.500) = 0 
    [2937.500, 2950.000) = 0 
    [2950.000, 2962.500) = 0 
    [2962.500, 2975.000) = 0 
    [2975.000, 2987.500) = 0 

  Percentiles, us/op:
      p(0.0000) =   2804.724 us/op
     p(50.0000) =   2864.877 us/op
     p(90.0000) =   2916.041 us/op
     p(95.0000) =   2916.776 us/op
     p(99.0000) =   2916.776 us/op
     p(99.9000) =   2916.776 us/op
     p(99.9900) =   2916.776 us/op
     p(99.9990) =   2916.776 us/op
     p(99.9999) =   2916.776 us/op
    p(100.0000) =   2916.776 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.375)

# Run progress: 97.73% complete, ETA 00:01:03
# Fork: 1 of 2
# Warmup Iteration   1: 5286.412 us/op
# Warmup Iteration   2: 4924.442 us/op
# Warmup Iteration   3: 4190.358 us/op
# Warmup Iteration   4: 4021.650 us/op
# Warmup Iteration   5: 4169.764 us/op
Iteration   1: 2886.482 us/op
Iteration   2: 2880.991 us/op
Iteration   3: 2746.652 us/op
Iteration   4: 2706.501 us/op
Iteration   5: 2717.186 us/op

# Run progress: 97.92% complete, ETA 00:00:57
# Fork: 2 of 2
# Warmup Iteration   1: 5147.730 us/op
# Warmup Iteration   2: 5030.146 us/op
# Warmup Iteration   3: 4121.137 us/op
# Warmup Iteration   4: 3856.072 us/op
# Warmup Iteration   5: 3989.320 us/op
Iteration   1: 2783.688 us/op
Iteration   2: 2996.566 us/op
Iteration   3: 3103.663 us/op
Iteration   4: 2949.331 us/op
Iteration   5: 2757.970 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2852.903 ±(99.9%) 201.379 us/op

  Histogram, us/op:
    [2700.000, 2750.000) = 3 
    [2750.000, 2800.000) = 2 
    [2800.000, 2850.000) = 0 
    [2850.000, 2900.000) = 2 
    [2900.000, 2950.000) = 1 
    [2950.000, 3000.000) = 1 
    [3000.000, 3050.000) = 0 
    [3050.000, 3100.000) = 0 
    [3100.000, 3150.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2706.501 us/op
     p(50.0000) =   2832.340 us/op
     p(90.0000) =   3092.953 us/op
     p(95.0000) =   3103.663 us/op
     p(99.0000) =   3103.663 us/op
     p(99.9000) =   3103.663 us/op
     p(99.9900) =   3103.663 us/op
     p(99.9990) =   3103.663 us/op
     p(99.9999) =   3103.663 us/op
    p(100.0000) =   3103.663 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.5)

# Run progress: 98.11% complete, ETA 00:00:52
# Fork: 1 of 2
# Warmup Iteration   1: 5070.258 us/op
# Warmup Iteration   2: 4984.599 us/op
# Warmup Iteration   3: 4110.841 us/op
# Warmup Iteration   4: 3994.703 us/op
# Warmup Iteration   5: 4029.232 us/op
Iteration   1: 2808.201 us/op
Iteration   2: 2908.281 us/op
Iteration   3: 2768.208 us/op
Iteration   4: 2938.346 us/op
Iteration   5: 2806.269 us/op

# Run progress: 98.30% complete, ETA 00:00:47
# Fork: 2 of 2
# Warmup Iteration   1: 5021.505 us/op
# Warmup Iteration   2: 5075.731 us/op
# Warmup Iteration   3: 4153.088 us/op
# Warmup Iteration   4: 3858.602 us/op
# Warmup Iteration   5: 3932.058 us/op
Iteration   1: 2831.672 us/op
Iteration   2: 2803.707 us/op
Iteration   3: 2743.084 us/op
Iteration   4: 2782.963 us/op
Iteration   5: 2796.138 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2818.687 ±(99.9%) 91.618 us/op

  Histogram, us/op:
    [2700.000, 2725.000) = 0 
    [2725.000, 2750.000) = 1 
    [2750.000, 2775.000) = 1 
    [2775.000, 2800.000) = 2 
    [2800.000, 2825.000) = 3 
    [2825.000, 2850.000) = 1 
    [2850.000, 2875.000) = 0 
    [2875.000, 2900.000) = 0 
    [2900.000, 2925.000) = 1 
    [2925.000, 2950.000) = 1 
    [2950.000, 2975.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2743.084 us/op
     p(50.0000) =   2804.988 us/op
     p(90.0000) =   2935.340 us/op
     p(95.0000) =   2938.346 us/op
     p(99.0000) =   2938.346 us/op
     p(99.9000) =   2938.346 us/op
     p(99.9900) =   2938.346 us/op
     p(99.9990) =   2938.346 us/op
     p(99.9999) =   2938.346 us/op
    p(100.0000) =   2938.346 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.625)

# Run progress: 98.48% complete, ETA 00:00:42
# Fork: 1 of 2
# Warmup Iteration   1: 5065.804 us/op
# Warmup Iteration   2: 5461.182 us/op
# Warmup Iteration   3: 4981.836 us/op
# Warmup Iteration   4: 4204.067 us/op
# Warmup Iteration   5: 4027.121 us/op
Iteration   1: 2786.216 us/op
Iteration   2: 2869.786 us/op
Iteration   3: 3055.391 us/op
Iteration   4: 2813.189 us/op
Iteration   5: 2849.244 us/op

# Run progress: 98.67% complete, ETA 00:00:36
# Fork: 2 of 2
# Warmup Iteration   1: 4918.302 us/op
# Warmup Iteration   2: 4875.416 us/op
# Warmup Iteration   3: 4081.299 us/op
# Warmup Iteration   4: 3927.224 us/op
# Warmup Iteration   5: 4009.444 us/op
Iteration   1: 2753.976 us/op
Iteration   2: 2785.969 us/op
Iteration   3: 2723.859 us/op
Iteration   4: 2865.772 us/op
Iteration   5: 2758.085 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2826.149 ±(99.9%) 142.754 us/op

  Histogram, us/op:
    [2700.000, 2725.000) = 1 
    [2725.000, 2750.000) = 0 
    [2750.000, 2775.000) = 2 
    [2775.000, 2800.000) = 2 
    [2800.000, 2825.000) = 1 
    [2825.000, 2850.000) = 1 
    [2850.000, 2875.000) = 2 
    [2875.000, 2900.000) = 0 
    [2900.000, 2925.000) = 0 
    [2925.000, 2950.000) = 0 
    [2950.000, 2975.000) = 0 
    [2975.000, 3000.000) = 0 
    [3000.000, 3025.000) = 0 
    [3025.000, 3050.000) = 0 
    [3050.000, 3075.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2723.859 us/op
     p(50.0000) =   2799.703 us/op
     p(90.0000) =   3036.831 us/op
     p(95.0000) =   3055.391 us/op
     p(99.0000) =   3055.391 us/op
     p(99.9000) =   3055.391 us/op
     p(99.9900) =   3055.391 us/op
     p(99.9990) =   3055.391 us/op
     p(99.9999) =   3055.391 us/op
    p(100.0000) =   3055.391 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.75)

# Run progress: 98.86% complete, ETA 00:00:31
# Fork: 1 of 2
# Warmup Iteration   1: 5080.431 us/op
# Warmup Iteration   2: 5114.569 us/op
# Warmup Iteration   3: 3983.993 us/op
# Warmup Iteration   4: 4019.461 us/op
# Warmup Iteration   5: 3920.310 us/op
Iteration   1: 2715.414 us/op
Iteration   2: 2876.203 us/op
Iteration   3: 2754.213 us/op
Iteration   4: 2749.098 us/op
Iteration   5: 2831.162 us/op

# Run progress: 99.05% complete, ETA 00:00:26
# Fork: 2 of 2
# Warmup Iteration   1: 5031.261 us/op
# Warmup Iteration   2: 4776.161 us/op
# Warmup Iteration   3: 4421.274 us/op
# Warmup Iteration   4: 3849.535 us/op
# Warmup Iteration   5: 3853.002 us/op
Iteration   1: 2747.767 us/op
Iteration   2: 2768.199 us/op
Iteration   3: 2730.875 us/op
Iteration   4: 2705.204 us/op
Iteration   5: 2750.493 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2762.863 ±(99.9%) 79.336 us/op

  Histogram, us/op:
    [2700.000, 2712.500) = 1 
    [2712.500, 2725.000) = 1 
    [2725.000, 2737.500) = 1 
    [2737.500, 2750.000) = 2 
    [2750.000, 2762.500) = 2 
    [2762.500, 2775.000) = 1 
    [2775.000, 2787.500) = 0 
    [2787.500, 2800.000) = 0 
    [2800.000, 2812.500) = 0 
    [2812.500, 2825.000) = 0 
    [2825.000, 2837.500) = 1 
    [2837.500, 2850.000) = 0 
    [2850.000, 2862.500) = 0 
    [2862.500, 2875.000) = 0 
    [2875.000, 2887.500) = 1 

  Percentiles, us/op:
      p(0.0000) =   2705.204 us/op
     p(50.0000) =   2749.796 us/op
     p(90.0000) =   2871.699 us/op
     p(95.0000) =   2876.203 us/op
     p(99.0000) =   2876.203 us/op
     p(99.9000) =   2876.203 us/op
     p(99.9900) =   2876.203 us/op
     p(99.9990) =   2876.203 us/op
     p(99.9999) =   2876.203 us/op
    p(100.0000) =   2876.203 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 0.875)

# Run progress: 99.24% complete, ETA 00:00:21
# Fork: 1 of 2
# Warmup Iteration   1: 4898.646 us/op
# Warmup Iteration   2: 4950.487 us/op
# Warmup Iteration   3: 4071.247 us/op
# Warmup Iteration   4: 3952.023 us/op
# Warmup Iteration   5: 3891.587 us/op
Iteration   1: 2716.288 us/op
Iteration   2: 2777.974 us/op
Iteration   3: 2729.469 us/op
Iteration   4: 2685.401 us/op
Iteration   5: 2769.120 us/op

# Run progress: 99.43% complete, ETA 00:00:15
# Fork: 2 of 2
# Warmup Iteration   1: 4870.673 us/op
# Warmup Iteration   2: 4955.871 us/op
# Warmup Iteration   3: 4198.040 us/op
# Warmup Iteration   4: 3952.536 us/op
# Warmup Iteration   5: 3939.127 us/op
Iteration   1: 2767.367 us/op
Iteration   2: 2795.467 us/op
Iteration   3: 2798.881 us/op
Iteration   4: 2737.205 us/op
Iteration   5: 2850.114 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2762.729 ±(99.9%) 71.632 us/op

  Histogram, us/op:
    [2600.000, 2625.000) = 0 
    [2625.000, 2650.000) = 0 
    [2650.000, 2675.000) = 0 
    [2675.000, 2700.000) = 1 
    [2700.000, 2725.000) = 1 
    [2725.000, 2750.000) = 2 
    [2750.000, 2775.000) = 2 
    [2775.000, 2800.000) = 3 
    [2800.000, 2825.000) = 0 
    [2825.000, 2850.000) = 0 
    [2850.000, 2875.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   2685.401 us/op
     p(50.0000) =   2768.244 us/op
     p(90.0000) =   2844.991 us/op
     p(95.0000) =   2850.114 us/op
     p(99.0000) =   2850.114 us/op
     p(99.9000) =   2850.114 us/op
     p(99.9900) =   2850.114 us/op
     p(99.9990) =   2850.114 us/op
     p(99.9999) =   2850.114 us/op
    p(100.0000) =   2850.114 us/op


# JMH version: 1.37
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /Users/alanbyrne/Library/Java/JavaVirtualMachines/openjdk-17.0.2/Contents/Home/bin/java
# VM options: -ea -Xms512m -Xmx5000m
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, single-shot each, 10000 calls per op
# Measurement: 5 iterations, single-shot each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode
# Parameters: (initialCapacity = 2097152, loadFactor = 1)

# Run progress: 99.62% complete, ETA 00:00:10
# Fork: 1 of 2
# Warmup Iteration   1: 5154.243 us/op
# Warmup Iteration   2: 4952.707 us/op
# Warmup Iteration   3: 4032.260 us/op
# Warmup Iteration   4: 4033.477 us/op
# Warmup Iteration   5: 3989.825 us/op
Iteration   1: 2845.220 us/op
Iteration   2: 2829.381 us/op
Iteration   3: 2911.508 us/op
Iteration   4: 2891.076 us/op
Iteration   5: 2894.868 us/op

# Run progress: 99.81% complete, ETA 00:00:05
# Fork: 2 of 2
# Warmup Iteration   1: 4983.857 us/op
# Warmup Iteration   2: 4992.821 us/op
# Warmup Iteration   3: 4119.153 us/op
# Warmup Iteration   4: 3964.152 us/op
# Warmup Iteration   5: 3888.573 us/op
Iteration   1: 2755.759 us/op
Iteration   2: 2774.197 us/op
Iteration   3: 2822.577 us/op
Iteration   4: 2782.632 us/op
Iteration   5: 2815.416 us/op


Result "com.abyrne133.benchmarking.JavaHashMapBenchMarkPut.putTerribleHashCode":
  N = 10
  mean =   2832.263 ±(99.9%) 81.103 us/op

  Histogram, us/op:
    [2700.000, 2725.000) = 0 
    [2725.000, 2750.000) = 0 
    [2750.000, 2775.000) = 2 
    [2775.000, 2800.000) = 1 
    [2800.000, 2825.000) = 2 
    [2825.000, 2850.000) = 2 
    [2850.000, 2875.000) = 0 
    [2875.000, 2900.000) = 2 
    [2900.000, 2925.000) = 1 
    [2925.000, 2950.000) = 0 
    [2950.000, 2975.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2755.759 us/op
     p(50.0000) =   2825.979 us/op
     p(90.0000) =   2909.844 us/op
     p(95.0000) =   2911.508 us/op
     p(99.0000) =   2911.508 us/op
     p(99.9000) =   2911.508 us/op
     p(99.9900) =   2911.508 us/op
     p(99.9990) =   2911.508 us/op
     p(99.9999) =   2911.508 us/op
    p(100.0000) =   2911.508 us/op


# Run complete. Total time: 00:46:16

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                    (initialCapacity)  (loadFactor)  Mode  Cnt     Score     Error  Units
JavaHashMapBenchMarkPut.put                                 16         0.125    ss   10    33.963 ±  25.357  us/op
JavaHashMapBenchMarkPut.put                                 16         0.250    ss   10    30.646 ±  30.676  us/op
JavaHashMapBenchMarkPut.put                                 16         0.375    ss   10    31.280 ±  24.546  us/op
JavaHashMapBenchMarkPut.put                                 16           0.5    ss   10    24.057 ±  17.987  us/op
JavaHashMapBenchMarkPut.put                                 16         0.625    ss   10    19.466 ±  10.149  us/op
JavaHashMapBenchMarkPut.put                                 16          0.75    ss   10    20.562 ±   9.067  us/op
JavaHashMapBenchMarkPut.put                                 16         0.875    ss   10    19.545 ±  14.951  us/op
JavaHashMapBenchMarkPut.put                                 16             1    ss   10    24.526 ±  23.506  us/op
JavaHashMapBenchMarkPut.put                                100         0.125    ss   10    40.396 ±  62.725  us/op
JavaHashMapBenchMarkPut.put                                100         0.250    ss   10    25.256 ±  14.040  us/op
JavaHashMapBenchMarkPut.put                                100         0.375    ss   10    26.565 ±  19.605  us/op
JavaHashMapBenchMarkPut.put                                100           0.5    ss   10    27.900 ±  37.177  us/op
JavaHashMapBenchMarkPut.put                                100         0.625    ss   10    23.048 ±  21.066  us/op
JavaHashMapBenchMarkPut.put                                100          0.75    ss   10    25.942 ±  19.040  us/op
JavaHashMapBenchMarkPut.put                                100         0.875    ss   10    18.218 ±  16.699  us/op
JavaHashMapBenchMarkPut.put                                100             1    ss   10    20.898 ±  17.262  us/op
JavaHashMapBenchMarkPut.put                               1024         0.125    ss   10    25.378 ±  19.907  us/op
JavaHashMapBenchMarkPut.put                               1024         0.250    ss   10    17.820 ±  13.162  us/op
JavaHashMapBenchMarkPut.put                               1024         0.375    ss   10    26.814 ±  26.508  us/op
JavaHashMapBenchMarkPut.put                               1024           0.5    ss   10    20.480 ±  14.172  us/op
JavaHashMapBenchMarkPut.put                               1024         0.625    ss   10    22.039 ±  19.223  us/op
JavaHashMapBenchMarkPut.put                               1024          0.75    ss   10    20.394 ±  15.916  us/op
JavaHashMapBenchMarkPut.put                               1024         0.875    ss   10    19.854 ±  17.347  us/op
JavaHashMapBenchMarkPut.put                               1024             1    ss   10    14.923 ±   9.613  us/op
JavaHashMapBenchMarkPut.put                               1000         0.125    ss   10    15.538 ±   8.728  us/op
JavaHashMapBenchMarkPut.put                               1000         0.250    ss   10    22.677 ±  15.969  us/op
JavaHashMapBenchMarkPut.put                               1000         0.375    ss   10    21.992 ±  24.828  us/op
JavaHashMapBenchMarkPut.put                               1000           0.5    ss   10    18.587 ±  15.541  us/op
JavaHashMapBenchMarkPut.put                               1000         0.625    ss   10    23.134 ±  23.174  us/op
JavaHashMapBenchMarkPut.put                               1000          0.75    ss   10    24.529 ±  13.908  us/op
JavaHashMapBenchMarkPut.put                               1000         0.875    ss   10    20.445 ±  15.097  us/op
JavaHashMapBenchMarkPut.put                               1000             1    ss   10    21.466 ±  12.852  us/op
JavaHashMapBenchMarkPut.put                              10000         0.125    ss   10    52.112 ±  28.086  us/op
JavaHashMapBenchMarkPut.put                              10000         0.250    ss   10    54.937 ±  41.422  us/op
JavaHashMapBenchMarkPut.put                              10000         0.375    ss   10    53.898 ±  23.995  us/op
JavaHashMapBenchMarkPut.put                              10000           0.5    ss   10    60.662 ±  22.778  us/op
JavaHashMapBenchMarkPut.put                              10000         0.625    ss   10    46.404 ±  30.826  us/op
JavaHashMapBenchMarkPut.put                              10000          0.75    ss   10    56.921 ±  36.420  us/op
JavaHashMapBenchMarkPut.put                              10000         0.875    ss   10    61.895 ±  30.052  us/op
JavaHashMapBenchMarkPut.put                              10000             1    ss   10    58.831 ±  29.432  us/op
JavaHashMapBenchMarkPut.put                              65536         0.125    ss   10   135.935 ±  29.373  us/op
JavaHashMapBenchMarkPut.put                              65536         0.250    ss   10   134.343 ±  65.420  us/op
JavaHashMapBenchMarkPut.put                              65536         0.375    ss   10   116.143 ±  34.245  us/op
JavaHashMapBenchMarkPut.put                              65536           0.5    ss   10   123.340 ±  39.761  us/op
JavaHashMapBenchMarkPut.put                              65536         0.625    ss   10   126.482 ±  42.919  us/op
JavaHashMapBenchMarkPut.put                              65536          0.75    ss   10   119.292 ±  37.525  us/op
JavaHashMapBenchMarkPut.put                              65536         0.875    ss   10   116.121 ±  28.415  us/op
JavaHashMapBenchMarkPut.put                              65536             1    ss   10   136.067 ±  61.601  us/op
JavaHashMapBenchMarkPut.put                             100000         0.125    ss   10   222.285 ±  47.611  us/op
JavaHashMapBenchMarkPut.put                             100000         0.250    ss   10   216.744 ±  38.481  us/op
JavaHashMapBenchMarkPut.put                             100000         0.375    ss   10   215.745 ±  40.462  us/op
JavaHashMapBenchMarkPut.put                             100000           0.5    ss   10   215.936 ±  42.532  us/op
JavaHashMapBenchMarkPut.put                             100000         0.625    ss   10   213.604 ±  45.304  us/op
JavaHashMapBenchMarkPut.put                             100000          0.75    ss   10   201.263 ±  33.725  us/op
JavaHashMapBenchMarkPut.put                             100000         0.875    ss   10   208.227 ±  38.032  us/op
JavaHashMapBenchMarkPut.put                             100000             1    ss   10   207.842 ±  33.287  us/op
JavaHashMapBenchMarkPut.put                             524288         0.125    ss   10   723.345 ±  28.995  us/op
JavaHashMapBenchMarkPut.put                             524288         0.250    ss   10   744.068 ±  90.419  us/op
JavaHashMapBenchMarkPut.put                             524288         0.375    ss   10   722.741 ±  58.067  us/op
JavaHashMapBenchMarkPut.put                             524288           0.5    ss   10   729.165 ±  49.053  us/op
JavaHashMapBenchMarkPut.put                             524288         0.625    ss   10   743.095 ±  60.310  us/op
JavaHashMapBenchMarkPut.put                             524288          0.75    ss   10   746.170 ±  72.579  us/op
JavaHashMapBenchMarkPut.put                             524288         0.875    ss   10   744.296 ±  57.196  us/op
JavaHashMapBenchMarkPut.put                             524288             1    ss   10   739.344 ±  37.836  us/op
JavaHashMapBenchMarkPut.put                            1000000         0.125    ss   10  1410.294 ±  53.775  us/op
JavaHashMapBenchMarkPut.put                            1000000         0.250    ss   10  1403.910 ±  39.524  us/op
JavaHashMapBenchMarkPut.put                            1000000         0.375    ss   10  1480.864 ±  92.856  us/op
JavaHashMapBenchMarkPut.put                            1000000           0.5    ss   10  1423.916 ±  75.671  us/op
JavaHashMapBenchMarkPut.put                            1000000         0.625    ss   10  1400.960 ±  46.056  us/op
JavaHashMapBenchMarkPut.put                            1000000          0.75    ss   10  1421.307 ±  72.627  us/op
JavaHashMapBenchMarkPut.put                            1000000         0.875    ss   10  1383.445 ±  46.846  us/op
JavaHashMapBenchMarkPut.put                            1000000             1    ss   10  1418.008 ±  61.837  us/op
JavaHashMapBenchMarkPut.put                            1048576         0.125    ss   10  1435.961 ±  45.460  us/op
JavaHashMapBenchMarkPut.put                            1048576         0.250    ss   10  1433.655 ± 101.465  us/op
JavaHashMapBenchMarkPut.put                            1048576         0.375    ss   10  1411.556 ±  46.019  us/op
JavaHashMapBenchMarkPut.put                            1048576           0.5    ss   10  1470.310 ±  76.850  us/op
JavaHashMapBenchMarkPut.put                            1048576         0.625    ss   10  1427.700 ±  62.114  us/op
JavaHashMapBenchMarkPut.put                            1048576          0.75    ss   10  1428.732 ±  68.374  us/op
JavaHashMapBenchMarkPut.put                            1048576         0.875    ss   10  1399.058 ±  45.677  us/op
JavaHashMapBenchMarkPut.put                            1048576             1    ss   10  1412.762 ±  53.534  us/op
JavaHashMapBenchMarkPut.put                            2097152         0.125    ss   10  2843.786 ± 111.800  us/op
JavaHashMapBenchMarkPut.put                            2097152         0.250    ss   10  2779.381 ±  71.101  us/op
JavaHashMapBenchMarkPut.put                            2097152         0.375    ss   10  2788.577 ± 116.872  us/op
JavaHashMapBenchMarkPut.put                            2097152           0.5    ss   10  2816.200 ±  67.504  us/op
JavaHashMapBenchMarkPut.put                            2097152         0.625    ss   10  2777.696 ±  67.808  us/op
JavaHashMapBenchMarkPut.put                            2097152          0.75    ss   10  2771.080 ±  33.961  us/op
JavaHashMapBenchMarkPut.put                            2097152         0.875    ss   10  2792.512 ±  78.988  us/op
JavaHashMapBenchMarkPut.put                            2097152             1    ss   10  2872.571 ±  83.092  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16         0.125    ss   10    30.324 ±  23.806  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16         0.250    ss   10    21.194 ±   9.195  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16         0.375    ss   10    24.335 ±  14.399  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16           0.5    ss   10    29.624 ±  22.635  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16         0.625    ss   10    24.817 ±  14.123  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16          0.75    ss   10    30.576 ±  22.777  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16         0.875    ss   10    27.738 ±  24.967  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                     16             1    ss   10    26.594 ±  25.233  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100         0.125    ss   10    46.656 ±  61.668  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100         0.250    ss   10    25.395 ±  16.942  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100         0.375    ss   10    31.476 ±  30.550  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100           0.5    ss   10    22.093 ±  15.737  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100         0.625    ss   10    21.226 ±  13.038  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100          0.75    ss   10    20.829 ±  13.595  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100         0.875    ss   10    15.816 ±  11.843  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                    100             1    ss   10    23.572 ±  19.271  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024         0.125    ss   10    15.406 ±   9.731  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024         0.250    ss   10    21.935 ±  20.242  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024         0.375    ss   10    24.915 ±  18.407  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024           0.5    ss   10    21.907 ±  21.614  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024         0.625    ss   10    22.589 ±  19.460  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024          0.75    ss   10    17.815 ±  13.417  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024         0.875    ss   10    18.998 ±  15.525  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1024             1    ss   10    23.962 ±  12.780  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000         0.125    ss   10    27.913 ±  23.758  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000         0.250    ss   10    18.078 ±  17.150  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000         0.375    ss   10    19.901 ±  18.926  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000           0.5    ss   10    15.082 ±  11.859  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000         0.625    ss   10    18.976 ±  14.246  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000          0.75    ss   10    24.316 ±  26.560  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000         0.875    ss   10    15.086 ±   9.892  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                   1000             1    ss   10    22.707 ±  15.529  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000         0.125    ss   10    62.064 ±  32.041  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000         0.250    ss   10    50.983 ±  32.024  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000         0.375    ss   10    47.929 ±  30.336  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000           0.5    ss   10    43.193 ±  22.085  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000         0.625    ss   10    54.976 ±  25.977  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000          0.75    ss   10    55.231 ±  26.500  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000         0.875    ss   10    50.881 ±  29.757  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  10000             1    ss   10    48.964 ±  27.642  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536         0.125    ss   10   131.058 ±  55.767  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536         0.250    ss   10   134.776 ±  88.811  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536         0.375    ss   10   136.995 ±  59.160  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536           0.5    ss   10   121.483 ±  48.895  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536         0.625    ss   10   133.356 ±  66.798  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536          0.75    ss   10   116.423 ±  27.193  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536         0.875    ss   10   124.371 ±  50.686  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                  65536             1    ss   10   123.192 ±  50.204  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000         0.125    ss   10   198.259 ±  27.998  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000         0.250    ss   10   212.179 ±  51.546  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000         0.375    ss   10   210.523 ±  50.228  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000           0.5    ss   10   208.998 ±  29.887  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000         0.625    ss   10   214.761 ±  46.478  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000          0.75    ss   10   201.461 ±  36.438  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000         0.875    ss   10   209.076 ±  44.282  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 100000             1    ss   10   212.993 ±  46.433  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288         0.125    ss   10   718.264 ±  35.869  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288         0.250    ss   10   753.788 ±  63.921  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288         0.375    ss   10   712.201 ±  34.759  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288           0.5    ss   10   732.337 ±  88.207  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288         0.625    ss   10   726.010 ±  52.350  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288          0.75    ss   10   728.498 ±  56.785  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288         0.875    ss   10   754.783 ±  95.571  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                 524288             1    ss   10   715.561 ±  29.646  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000         0.125    ss   10  1419.504 ±  38.481  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000         0.250    ss   10  1442.894 ±  72.367  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000         0.375    ss   10  1418.579 ±  66.717  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000           0.5    ss   10  1403.246 ±  54.743  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000         0.625    ss   10  1406.723 ±  54.629  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000          0.75    ss   10  1393.744 ±  32.493  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000         0.875    ss   10  1403.339 ±  23.578  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1000000             1    ss   10  1431.682 ±  48.740  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576         0.125    ss   10  1408.783 ±  70.282  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576         0.250    ss   10  1417.069 ±  68.678  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576         0.375    ss   10  1422.850 ±  55.246  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576           0.5    ss   10  1415.814 ±  78.294  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576         0.625    ss   10  1403.679 ±  51.603  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576          0.75    ss   10  1434.424 ±  90.921  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576         0.875    ss   10  1424.006 ±  75.018  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                1048576             1    ss   10  1418.305 ±  83.610  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152         0.125    ss   10  2831.815 ±  59.200  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152         0.250    ss   10  2753.504 ± 114.975  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152         0.375    ss   10  2784.709 ±  72.825  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152           0.5    ss   10  2814.989 ± 126.898  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152         0.625    ss   10  2827.984 ± 176.102  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152          0.75    ss   10  2752.787 ± 135.754  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152         0.875    ss   10  2780.291 ± 132.874  us/op
JavaHashMapBenchMarkPut.putPoorHashCode                2097152             1    ss   10  2793.767 ±  74.506  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16         0.125    ss   10    27.704 ±  16.543  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16         0.250    ss   10    26.952 ±  16.561  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16         0.375    ss   10    29.668 ±  19.708  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16           0.5    ss   10    22.184 ±  17.045  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16         0.625    ss   10    26.691 ±  17.937  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16          0.75    ss   10    22.349 ±  13.527  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16         0.875    ss   10    20.244 ±  13.635  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                 16             1    ss   10    23.526 ±  16.948  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100         0.125    ss   10    31.421 ±  42.738  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100         0.250    ss   10    22.222 ±  21.134  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100         0.375    ss   10    28.449 ±  16.642  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100           0.5    ss   10    17.763 ±  11.230  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100         0.625    ss   10    22.637 ±  15.354  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100          0.75    ss   10    23.931 ±  14.844  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100         0.875    ss   10    17.758 ±  21.003  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode                100             1    ss   10    17.537 ±  14.635  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024         0.125    ss   10    21.508 ±  12.727  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024         0.250    ss   10    20.851 ±  22.685  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024         0.375    ss   10    15.061 ±   8.833  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024           0.5    ss   10    12.487 ±   1.287  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024         0.625    ss   10    20.366 ±  17.654  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024          0.75    ss   10    14.625 ±  12.502  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024         0.875    ss   10    17.217 ±  12.230  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1024             1    ss   10    15.736 ±  21.091  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000         0.125    ss   10    18.587 ±   9.668  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000         0.250    ss   10    23.378 ±  22.218  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000         0.375    ss   10    19.155 ±  17.308  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000           0.5    ss   10    17.788 ±  21.118  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000         0.625    ss   10    20.826 ±  14.218  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000          0.75    ss   10    23.625 ±  19.981  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000         0.875    ss   10    16.393 ±  11.059  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode               1000             1    ss   10    19.225 ±  19.810  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000         0.125    ss   10    56.286 ±  30.325  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000         0.250    ss   10    48.988 ±  21.278  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000         0.375    ss   10    53.390 ±  19.805  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000           0.5    ss   10    46.264 ±  18.743  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000         0.625    ss   10    54.896 ±  34.652  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000          0.75    ss   10    51.741 ±  42.377  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000         0.875    ss   10    47.821 ±  32.982  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              10000             1    ss   10    51.925 ±  31.464  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536         0.125    ss   10   124.160 ±  57.337  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536         0.250    ss   10   119.339 ±  36.148  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536         0.375    ss   10   116.462 ±  26.772  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536           0.5    ss   10   123.479 ±  61.109  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536         0.625    ss   10   122.438 ±  34.444  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536          0.75    ss   10   135.038 ±  60.693  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536         0.875    ss   10   123.399 ±  31.712  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode              65536             1    ss   10   128.305 ±  51.582  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000         0.125    ss   10   210.420 ±  59.215  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000         0.250    ss   10   208.278 ±  46.856  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000         0.375    ss   10   206.258 ±  47.059  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000           0.5    ss   10   203.685 ±  41.622  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000         0.625    ss   10   201.451 ±  37.692  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000          0.75    ss   10   204.734 ±  34.957  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000         0.875    ss   10   218.567 ±  54.294  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             100000             1    ss   10   219.719 ±  43.842  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288         0.125    ss   10   746.188 ±  79.419  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288         0.250    ss   10   724.963 ±  42.541  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288         0.375    ss   10   733.378 ±  54.992  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288           0.5    ss   10   728.581 ±  57.616  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288         0.625    ss   10   742.149 ±  86.110  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288          0.75    ss   10   851.384 ± 296.029  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288         0.875    ss   10   735.013 ±  59.617  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode             524288             1    ss   10   724.128 ±  32.725  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000         0.125    ss   10  1427.792 ±  67.833  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000         0.250    ss   10  1405.629 ±  67.149  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000         0.375    ss   10  1404.061 ±  32.089  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000           0.5    ss   10  1422.917 ±  68.068  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000         0.625    ss   10  1441.104 ±  65.101  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000          0.75    ss   10  1447.622 ±  61.658  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000         0.875    ss   10  1408.543 ±  36.384  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1000000             1    ss   10  1396.749 ±  59.530  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576         0.125    ss   10  1418.223 ±  51.801  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576         0.250    ss   10  1403.631 ±  72.756  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576         0.375    ss   10  1428.127 ±  43.095  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576           0.5    ss   10  1428.563 ±  42.559  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576         0.625    ss   10  1410.525 ±  49.156  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576          0.75    ss   10  1458.854 ±  80.335  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576         0.875    ss   10  1419.443 ±  66.656  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            1048576             1    ss   10  1439.575 ±  98.772  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152         0.125    ss   10  2795.079 ±  55.796  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152         0.250    ss   10  2863.566 ±  59.943  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152         0.375    ss   10  2852.903 ± 201.379  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152           0.5    ss   10  2818.687 ±  91.618  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152         0.625    ss   10  2826.149 ± 142.754  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152          0.75    ss   10  2762.863 ±  79.336  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152         0.875    ss   10  2762.729 ±  71.632  us/op
JavaHashMapBenchMarkPut.putTerribleHashCode            2097152             1    ss   10  2832.263 ±  81.103  us/op

Benchmark result is saved to results/machine_out_100.csv
